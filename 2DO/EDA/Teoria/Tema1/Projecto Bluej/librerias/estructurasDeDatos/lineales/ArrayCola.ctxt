#BlueJ class context
comment0.target=ArrayCola
comment0.text=\ Implementaci\uFFFDn\ de\ Cola\ utilizando\ un\ array\ circular\r\n\ \ @param\ <E>,\ el\ tipo\ delos\ datos\ de\ la\ Cola\r\n
comment1.params=
comment1.target=ArrayCola()
comment1.text=crea\ una\ Cola\ vacia
comment2.params=e
comment2.target=void\ encolar(java.lang.Object)
comment2.text=inserta\ el\ Elemento\ e\ en\ una\ Cola,\ o\ lo\ situa\ en\ su\ final
comment3.params=
comment3.target=void\ duplicarArrayCircular()
comment4.params=indice
comment4.target=int\ incrementar(int)
comment5.params=
comment5.target=java.lang.Object\ desencolar()
comment5.text=\ SII\ \!esVacia()\r\nobtiene\ y\ elimina\ el\ dato\ que\ ocupa\ su\ principio
comment6.params=
comment6.target=java.lang.Object\ primero()
comment6.text=\ SII\ \!esVacia()\r\n\ \ obtiene\ el\ dato\ que\ ocupa\ el\ principio\ de\ una\ \ \ \r\nCola,\ el\ primero\ en\ orden\ de\ insercion
comment7.params=
comment7.target=boolean\ esVacia()
comment7.text=comprueba\ si\ una\ Cola\ esta\ vacia
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\ devuelve\ un\ String\ con\ los\ datos\ en\ orden\ FIFO,\ o\ de\ insercion,\r\n\ \ y\ con\ el\ formato\ que\ se\ usa\ en\ el\ estandar\ de\ Java.\ \r\n\ \ Por\ ejemplo,\ si\ se\ tiene\ una\ Cola\ con\ los\ Integer\ del\ 1\ al\ 4,\ \r\n\ \ en\ orden\ FIFO,\ toString\ devuelve\ [1,\ 2,\ 3,\ 4];\ \r\n\ \ si\ la\ Cola\ esta\ vacia,\ entonces\ devuelve\ []\ \r\n
numComments=9
