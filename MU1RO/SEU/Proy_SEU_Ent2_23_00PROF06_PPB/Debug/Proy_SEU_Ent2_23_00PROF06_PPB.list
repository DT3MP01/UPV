
Proy_SEU_Ent2_23_00PROF06_PPB.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000103f4  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000a30  08010598  08010598  00020598  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08010fc8  08010fc8  000309d4  2**0
                  CONTENTS
  4 .ARM          00000008  08010fc8  08010fc8  00020fc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08010fd0  08010fd0  000309d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08010fd0  08010fd0  00020fd0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08010fd8  08010fd8  00020fd8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000009d4  20000000  08010fdc  00030000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00017100  200009d8  080119b0  000309d8  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20017ad8  080119b0  00037ad8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000309d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001d785  00000000  00000000  00030a04  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000045b3  00000000  00000000  0004e189  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001598  00000000  00000000  00052740  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001478  00000000  00000000  00053cd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00007e1a  00000000  00000000  00055150  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00019cf6  00000000  00000000  0005cf6a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000a0ea6  00000000  00000000  00076c60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00117b06  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00007128  00000000  00000000  00117b58  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200009d8 	.word	0x200009d8
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0801057c 	.word	0x0801057c

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200009dc 	.word	0x200009dc
 80001dc:	0801057c 	.word	0x0801057c

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2uiz>:
 8000bb8:	004a      	lsls	r2, r1, #1
 8000bba:	d211      	bcs.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bbc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bc0:	d211      	bcs.n	8000be6 <__aeabi_d2uiz+0x2e>
 8000bc2:	d50d      	bpl.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bc4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bc8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bcc:	d40e      	bmi.n	8000bec <__aeabi_d2uiz+0x34>
 8000bce:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bd6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bda:	fa23 f002 	lsr.w	r0, r3, r2
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bea:	d102      	bne.n	8000bf2 <__aeabi_d2uiz+0x3a>
 8000bec:	f04f 30ff 	mov.w	r0, #4294967295
 8000bf0:	4770      	bx	lr
 8000bf2:	f04f 0000 	mov.w	r0, #0
 8000bf6:	4770      	bx	lr

08000bf8 <__aeabi_d2f>:
 8000bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c00:	bf24      	itt	cs
 8000c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c0a:	d90d      	bls.n	8000c28 <__aeabi_d2f+0x30>
 8000c0c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c18:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c20:	bf08      	it	eq
 8000c22:	f020 0001 	biceq.w	r0, r0, #1
 8000c26:	4770      	bx	lr
 8000c28:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c2c:	d121      	bne.n	8000c72 <__aeabi_d2f+0x7a>
 8000c2e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c32:	bfbc      	itt	lt
 8000c34:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c38:	4770      	bxlt	lr
 8000c3a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c42:	f1c2 0218 	rsb	r2, r2, #24
 8000c46:	f1c2 0c20 	rsb	ip, r2, #32
 8000c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c52:	bf18      	it	ne
 8000c54:	f040 0001 	orrne.w	r0, r0, #1
 8000c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c64:	ea40 000c 	orr.w	r0, r0, ip
 8000c68:	fa23 f302 	lsr.w	r3, r3, r2
 8000c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c70:	e7cc      	b.n	8000c0c <__aeabi_d2f+0x14>
 8000c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c76:	d107      	bne.n	8000c88 <__aeabi_d2f+0x90>
 8000c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c7c:	bf1e      	ittt	ne
 8000c7e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c82:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c86:	4770      	bxne	lr
 8000c88:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c94:	4770      	bx	lr
 8000c96:	bf00      	nop

08000c98 <__aeabi_uldivmod>:
 8000c98:	b953      	cbnz	r3, 8000cb0 <__aeabi_uldivmod+0x18>
 8000c9a:	b94a      	cbnz	r2, 8000cb0 <__aeabi_uldivmod+0x18>
 8000c9c:	2900      	cmp	r1, #0
 8000c9e:	bf08      	it	eq
 8000ca0:	2800      	cmpeq	r0, #0
 8000ca2:	bf1c      	itt	ne
 8000ca4:	f04f 31ff 	movne.w	r1, #4294967295
 8000ca8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cac:	f000 b9aa 	b.w	8001004 <__aeabi_idiv0>
 8000cb0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000cb4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000cb8:	f000 f83c 	bl	8000d34 <__udivmoddi4>
 8000cbc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cc0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cc4:	b004      	add	sp, #16
 8000cc6:	4770      	bx	lr

08000cc8 <__aeabi_d2lz>:
 8000cc8:	b538      	push	{r3, r4, r5, lr}
 8000cca:	2200      	movs	r2, #0
 8000ccc:	2300      	movs	r3, #0
 8000cce:	4604      	mov	r4, r0
 8000cd0:	460d      	mov	r5, r1
 8000cd2:	f7ff ff0b 	bl	8000aec <__aeabi_dcmplt>
 8000cd6:	b928      	cbnz	r0, 8000ce4 <__aeabi_d2lz+0x1c>
 8000cd8:	4620      	mov	r0, r4
 8000cda:	4629      	mov	r1, r5
 8000cdc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ce0:	f000 b80a 	b.w	8000cf8 <__aeabi_d2ulz>
 8000ce4:	4620      	mov	r0, r4
 8000ce6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000cea:	f000 f805 	bl	8000cf8 <__aeabi_d2ulz>
 8000cee:	4240      	negs	r0, r0
 8000cf0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cf4:	bd38      	pop	{r3, r4, r5, pc}
 8000cf6:	bf00      	nop

08000cf8 <__aeabi_d2ulz>:
 8000cf8:	b5d0      	push	{r4, r6, r7, lr}
 8000cfa:	4b0c      	ldr	r3, [pc, #48]	; (8000d2c <__aeabi_d2ulz+0x34>)
 8000cfc:	2200      	movs	r2, #0
 8000cfe:	4606      	mov	r6, r0
 8000d00:	460f      	mov	r7, r1
 8000d02:	f7ff fc81 	bl	8000608 <__aeabi_dmul>
 8000d06:	f7ff ff57 	bl	8000bb8 <__aeabi_d2uiz>
 8000d0a:	4604      	mov	r4, r0
 8000d0c:	f7ff fc02 	bl	8000514 <__aeabi_ui2d>
 8000d10:	4b07      	ldr	r3, [pc, #28]	; (8000d30 <__aeabi_d2ulz+0x38>)
 8000d12:	2200      	movs	r2, #0
 8000d14:	f7ff fc78 	bl	8000608 <__aeabi_dmul>
 8000d18:	4602      	mov	r2, r0
 8000d1a:	460b      	mov	r3, r1
 8000d1c:	4630      	mov	r0, r6
 8000d1e:	4639      	mov	r1, r7
 8000d20:	f7ff faba 	bl	8000298 <__aeabi_dsub>
 8000d24:	f7ff ff48 	bl	8000bb8 <__aeabi_d2uiz>
 8000d28:	4621      	mov	r1, r4
 8000d2a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d2c:	3df00000 	.word	0x3df00000
 8000d30:	41f00000 	.word	0x41f00000

08000d34 <__udivmoddi4>:
 8000d34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d38:	9d08      	ldr	r5, [sp, #32]
 8000d3a:	4604      	mov	r4, r0
 8000d3c:	468e      	mov	lr, r1
 8000d3e:	2b00      	cmp	r3, #0
 8000d40:	d14d      	bne.n	8000dde <__udivmoddi4+0xaa>
 8000d42:	428a      	cmp	r2, r1
 8000d44:	4694      	mov	ip, r2
 8000d46:	d969      	bls.n	8000e1c <__udivmoddi4+0xe8>
 8000d48:	fab2 f282 	clz	r2, r2
 8000d4c:	b152      	cbz	r2, 8000d64 <__udivmoddi4+0x30>
 8000d4e:	fa01 f302 	lsl.w	r3, r1, r2
 8000d52:	f1c2 0120 	rsb	r1, r2, #32
 8000d56:	fa20 f101 	lsr.w	r1, r0, r1
 8000d5a:	fa0c fc02 	lsl.w	ip, ip, r2
 8000d5e:	ea41 0e03 	orr.w	lr, r1, r3
 8000d62:	4094      	lsls	r4, r2
 8000d64:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d68:	0c21      	lsrs	r1, r4, #16
 8000d6a:	fbbe f6f8 	udiv	r6, lr, r8
 8000d6e:	fa1f f78c 	uxth.w	r7, ip
 8000d72:	fb08 e316 	mls	r3, r8, r6, lr
 8000d76:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000d7a:	fb06 f107 	mul.w	r1, r6, r7
 8000d7e:	4299      	cmp	r1, r3
 8000d80:	d90a      	bls.n	8000d98 <__udivmoddi4+0x64>
 8000d82:	eb1c 0303 	adds.w	r3, ip, r3
 8000d86:	f106 30ff 	add.w	r0, r6, #4294967295
 8000d8a:	f080 811f 	bcs.w	8000fcc <__udivmoddi4+0x298>
 8000d8e:	4299      	cmp	r1, r3
 8000d90:	f240 811c 	bls.w	8000fcc <__udivmoddi4+0x298>
 8000d94:	3e02      	subs	r6, #2
 8000d96:	4463      	add	r3, ip
 8000d98:	1a5b      	subs	r3, r3, r1
 8000d9a:	b2a4      	uxth	r4, r4
 8000d9c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000da0:	fb08 3310 	mls	r3, r8, r0, r3
 8000da4:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000da8:	fb00 f707 	mul.w	r7, r0, r7
 8000dac:	42a7      	cmp	r7, r4
 8000dae:	d90a      	bls.n	8000dc6 <__udivmoddi4+0x92>
 8000db0:	eb1c 0404 	adds.w	r4, ip, r4
 8000db4:	f100 33ff 	add.w	r3, r0, #4294967295
 8000db8:	f080 810a 	bcs.w	8000fd0 <__udivmoddi4+0x29c>
 8000dbc:	42a7      	cmp	r7, r4
 8000dbe:	f240 8107 	bls.w	8000fd0 <__udivmoddi4+0x29c>
 8000dc2:	4464      	add	r4, ip
 8000dc4:	3802      	subs	r0, #2
 8000dc6:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000dca:	1be4      	subs	r4, r4, r7
 8000dcc:	2600      	movs	r6, #0
 8000dce:	b11d      	cbz	r5, 8000dd8 <__udivmoddi4+0xa4>
 8000dd0:	40d4      	lsrs	r4, r2
 8000dd2:	2300      	movs	r3, #0
 8000dd4:	e9c5 4300 	strd	r4, r3, [r5]
 8000dd8:	4631      	mov	r1, r6
 8000dda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dde:	428b      	cmp	r3, r1
 8000de0:	d909      	bls.n	8000df6 <__udivmoddi4+0xc2>
 8000de2:	2d00      	cmp	r5, #0
 8000de4:	f000 80ef 	beq.w	8000fc6 <__udivmoddi4+0x292>
 8000de8:	2600      	movs	r6, #0
 8000dea:	e9c5 0100 	strd	r0, r1, [r5]
 8000dee:	4630      	mov	r0, r6
 8000df0:	4631      	mov	r1, r6
 8000df2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000df6:	fab3 f683 	clz	r6, r3
 8000dfa:	2e00      	cmp	r6, #0
 8000dfc:	d14a      	bne.n	8000e94 <__udivmoddi4+0x160>
 8000dfe:	428b      	cmp	r3, r1
 8000e00:	d302      	bcc.n	8000e08 <__udivmoddi4+0xd4>
 8000e02:	4282      	cmp	r2, r0
 8000e04:	f200 80f9 	bhi.w	8000ffa <__udivmoddi4+0x2c6>
 8000e08:	1a84      	subs	r4, r0, r2
 8000e0a:	eb61 0303 	sbc.w	r3, r1, r3
 8000e0e:	2001      	movs	r0, #1
 8000e10:	469e      	mov	lr, r3
 8000e12:	2d00      	cmp	r5, #0
 8000e14:	d0e0      	beq.n	8000dd8 <__udivmoddi4+0xa4>
 8000e16:	e9c5 4e00 	strd	r4, lr, [r5]
 8000e1a:	e7dd      	b.n	8000dd8 <__udivmoddi4+0xa4>
 8000e1c:	b902      	cbnz	r2, 8000e20 <__udivmoddi4+0xec>
 8000e1e:	deff      	udf	#255	; 0xff
 8000e20:	fab2 f282 	clz	r2, r2
 8000e24:	2a00      	cmp	r2, #0
 8000e26:	f040 8092 	bne.w	8000f4e <__udivmoddi4+0x21a>
 8000e2a:	eba1 010c 	sub.w	r1, r1, ip
 8000e2e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e32:	fa1f fe8c 	uxth.w	lr, ip
 8000e36:	2601      	movs	r6, #1
 8000e38:	0c20      	lsrs	r0, r4, #16
 8000e3a:	fbb1 f3f7 	udiv	r3, r1, r7
 8000e3e:	fb07 1113 	mls	r1, r7, r3, r1
 8000e42:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e46:	fb0e f003 	mul.w	r0, lr, r3
 8000e4a:	4288      	cmp	r0, r1
 8000e4c:	d908      	bls.n	8000e60 <__udivmoddi4+0x12c>
 8000e4e:	eb1c 0101 	adds.w	r1, ip, r1
 8000e52:	f103 38ff 	add.w	r8, r3, #4294967295
 8000e56:	d202      	bcs.n	8000e5e <__udivmoddi4+0x12a>
 8000e58:	4288      	cmp	r0, r1
 8000e5a:	f200 80cb 	bhi.w	8000ff4 <__udivmoddi4+0x2c0>
 8000e5e:	4643      	mov	r3, r8
 8000e60:	1a09      	subs	r1, r1, r0
 8000e62:	b2a4      	uxth	r4, r4
 8000e64:	fbb1 f0f7 	udiv	r0, r1, r7
 8000e68:	fb07 1110 	mls	r1, r7, r0, r1
 8000e6c:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000e70:	fb0e fe00 	mul.w	lr, lr, r0
 8000e74:	45a6      	cmp	lr, r4
 8000e76:	d908      	bls.n	8000e8a <__udivmoddi4+0x156>
 8000e78:	eb1c 0404 	adds.w	r4, ip, r4
 8000e7c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000e80:	d202      	bcs.n	8000e88 <__udivmoddi4+0x154>
 8000e82:	45a6      	cmp	lr, r4
 8000e84:	f200 80bb 	bhi.w	8000ffe <__udivmoddi4+0x2ca>
 8000e88:	4608      	mov	r0, r1
 8000e8a:	eba4 040e 	sub.w	r4, r4, lr
 8000e8e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000e92:	e79c      	b.n	8000dce <__udivmoddi4+0x9a>
 8000e94:	f1c6 0720 	rsb	r7, r6, #32
 8000e98:	40b3      	lsls	r3, r6
 8000e9a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e9e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000ea2:	fa20 f407 	lsr.w	r4, r0, r7
 8000ea6:	fa01 f306 	lsl.w	r3, r1, r6
 8000eaa:	431c      	orrs	r4, r3
 8000eac:	40f9      	lsrs	r1, r7
 8000eae:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000eb2:	fa00 f306 	lsl.w	r3, r0, r6
 8000eb6:	fbb1 f8f9 	udiv	r8, r1, r9
 8000eba:	0c20      	lsrs	r0, r4, #16
 8000ebc:	fa1f fe8c 	uxth.w	lr, ip
 8000ec0:	fb09 1118 	mls	r1, r9, r8, r1
 8000ec4:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000ec8:	fb08 f00e 	mul.w	r0, r8, lr
 8000ecc:	4288      	cmp	r0, r1
 8000ece:	fa02 f206 	lsl.w	r2, r2, r6
 8000ed2:	d90b      	bls.n	8000eec <__udivmoddi4+0x1b8>
 8000ed4:	eb1c 0101 	adds.w	r1, ip, r1
 8000ed8:	f108 3aff 	add.w	sl, r8, #4294967295
 8000edc:	f080 8088 	bcs.w	8000ff0 <__udivmoddi4+0x2bc>
 8000ee0:	4288      	cmp	r0, r1
 8000ee2:	f240 8085 	bls.w	8000ff0 <__udivmoddi4+0x2bc>
 8000ee6:	f1a8 0802 	sub.w	r8, r8, #2
 8000eea:	4461      	add	r1, ip
 8000eec:	1a09      	subs	r1, r1, r0
 8000eee:	b2a4      	uxth	r4, r4
 8000ef0:	fbb1 f0f9 	udiv	r0, r1, r9
 8000ef4:	fb09 1110 	mls	r1, r9, r0, r1
 8000ef8:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000efc:	fb00 fe0e 	mul.w	lr, r0, lr
 8000f00:	458e      	cmp	lr, r1
 8000f02:	d908      	bls.n	8000f16 <__udivmoddi4+0x1e2>
 8000f04:	eb1c 0101 	adds.w	r1, ip, r1
 8000f08:	f100 34ff 	add.w	r4, r0, #4294967295
 8000f0c:	d26c      	bcs.n	8000fe8 <__udivmoddi4+0x2b4>
 8000f0e:	458e      	cmp	lr, r1
 8000f10:	d96a      	bls.n	8000fe8 <__udivmoddi4+0x2b4>
 8000f12:	3802      	subs	r0, #2
 8000f14:	4461      	add	r1, ip
 8000f16:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000f1a:	fba0 9402 	umull	r9, r4, r0, r2
 8000f1e:	eba1 010e 	sub.w	r1, r1, lr
 8000f22:	42a1      	cmp	r1, r4
 8000f24:	46c8      	mov	r8, r9
 8000f26:	46a6      	mov	lr, r4
 8000f28:	d356      	bcc.n	8000fd8 <__udivmoddi4+0x2a4>
 8000f2a:	d053      	beq.n	8000fd4 <__udivmoddi4+0x2a0>
 8000f2c:	b15d      	cbz	r5, 8000f46 <__udivmoddi4+0x212>
 8000f2e:	ebb3 0208 	subs.w	r2, r3, r8
 8000f32:	eb61 010e 	sbc.w	r1, r1, lr
 8000f36:	fa01 f707 	lsl.w	r7, r1, r7
 8000f3a:	fa22 f306 	lsr.w	r3, r2, r6
 8000f3e:	40f1      	lsrs	r1, r6
 8000f40:	431f      	orrs	r7, r3
 8000f42:	e9c5 7100 	strd	r7, r1, [r5]
 8000f46:	2600      	movs	r6, #0
 8000f48:	4631      	mov	r1, r6
 8000f4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f4e:	f1c2 0320 	rsb	r3, r2, #32
 8000f52:	40d8      	lsrs	r0, r3
 8000f54:	fa0c fc02 	lsl.w	ip, ip, r2
 8000f58:	fa21 f303 	lsr.w	r3, r1, r3
 8000f5c:	4091      	lsls	r1, r2
 8000f5e:	4301      	orrs	r1, r0
 8000f60:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000f64:	fa1f fe8c 	uxth.w	lr, ip
 8000f68:	fbb3 f0f7 	udiv	r0, r3, r7
 8000f6c:	fb07 3610 	mls	r6, r7, r0, r3
 8000f70:	0c0b      	lsrs	r3, r1, #16
 8000f72:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000f76:	fb00 f60e 	mul.w	r6, r0, lr
 8000f7a:	429e      	cmp	r6, r3
 8000f7c:	fa04 f402 	lsl.w	r4, r4, r2
 8000f80:	d908      	bls.n	8000f94 <__udivmoddi4+0x260>
 8000f82:	eb1c 0303 	adds.w	r3, ip, r3
 8000f86:	f100 38ff 	add.w	r8, r0, #4294967295
 8000f8a:	d22f      	bcs.n	8000fec <__udivmoddi4+0x2b8>
 8000f8c:	429e      	cmp	r6, r3
 8000f8e:	d92d      	bls.n	8000fec <__udivmoddi4+0x2b8>
 8000f90:	3802      	subs	r0, #2
 8000f92:	4463      	add	r3, ip
 8000f94:	1b9b      	subs	r3, r3, r6
 8000f96:	b289      	uxth	r1, r1
 8000f98:	fbb3 f6f7 	udiv	r6, r3, r7
 8000f9c:	fb07 3316 	mls	r3, r7, r6, r3
 8000fa0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000fa4:	fb06 f30e 	mul.w	r3, r6, lr
 8000fa8:	428b      	cmp	r3, r1
 8000faa:	d908      	bls.n	8000fbe <__udivmoddi4+0x28a>
 8000fac:	eb1c 0101 	adds.w	r1, ip, r1
 8000fb0:	f106 38ff 	add.w	r8, r6, #4294967295
 8000fb4:	d216      	bcs.n	8000fe4 <__udivmoddi4+0x2b0>
 8000fb6:	428b      	cmp	r3, r1
 8000fb8:	d914      	bls.n	8000fe4 <__udivmoddi4+0x2b0>
 8000fba:	3e02      	subs	r6, #2
 8000fbc:	4461      	add	r1, ip
 8000fbe:	1ac9      	subs	r1, r1, r3
 8000fc0:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000fc4:	e738      	b.n	8000e38 <__udivmoddi4+0x104>
 8000fc6:	462e      	mov	r6, r5
 8000fc8:	4628      	mov	r0, r5
 8000fca:	e705      	b.n	8000dd8 <__udivmoddi4+0xa4>
 8000fcc:	4606      	mov	r6, r0
 8000fce:	e6e3      	b.n	8000d98 <__udivmoddi4+0x64>
 8000fd0:	4618      	mov	r0, r3
 8000fd2:	e6f8      	b.n	8000dc6 <__udivmoddi4+0x92>
 8000fd4:	454b      	cmp	r3, r9
 8000fd6:	d2a9      	bcs.n	8000f2c <__udivmoddi4+0x1f8>
 8000fd8:	ebb9 0802 	subs.w	r8, r9, r2
 8000fdc:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000fe0:	3801      	subs	r0, #1
 8000fe2:	e7a3      	b.n	8000f2c <__udivmoddi4+0x1f8>
 8000fe4:	4646      	mov	r6, r8
 8000fe6:	e7ea      	b.n	8000fbe <__udivmoddi4+0x28a>
 8000fe8:	4620      	mov	r0, r4
 8000fea:	e794      	b.n	8000f16 <__udivmoddi4+0x1e2>
 8000fec:	4640      	mov	r0, r8
 8000fee:	e7d1      	b.n	8000f94 <__udivmoddi4+0x260>
 8000ff0:	46d0      	mov	r8, sl
 8000ff2:	e77b      	b.n	8000eec <__udivmoddi4+0x1b8>
 8000ff4:	3b02      	subs	r3, #2
 8000ff6:	4461      	add	r1, ip
 8000ff8:	e732      	b.n	8000e60 <__udivmoddi4+0x12c>
 8000ffa:	4630      	mov	r0, r6
 8000ffc:	e709      	b.n	8000e12 <__udivmoddi4+0xde>
 8000ffe:	4464      	add	r4, ip
 8001000:	3802      	subs	r0, #2
 8001002:	e742      	b.n	8000e8a <__udivmoddi4+0x156>

08001004 <__aeabi_idiv0>:
 8001004:	4770      	bx	lr
 8001006:	bf00      	nop

08001008 <cJSON_New_Item>:
    }
}

/* Internal constructor. */
static cJSON *cJSON_New_Item(const internal_hooks * const hooks)
{
 8001008:	b580      	push	{r7, lr}
 800100a:	b084      	sub	sp, #16
 800100c:	af00      	add	r7, sp, #0
 800100e:	6078      	str	r0, [r7, #4]
    cJSON* node = (cJSON*)hooks->allocate(sizeof(cJSON));
 8001010:	687b      	ldr	r3, [r7, #4]
 8001012:	681b      	ldr	r3, [r3, #0]
 8001014:	2028      	movs	r0, #40	; 0x28
 8001016:	4798      	blx	r3
 8001018:	60f8      	str	r0, [r7, #12]
    if (node)
 800101a:	68fb      	ldr	r3, [r7, #12]
 800101c:	2b00      	cmp	r3, #0
 800101e:	d004      	beq.n	800102a <cJSON_New_Item+0x22>
    {
        memset(node, '\0', sizeof(cJSON));
 8001020:	2228      	movs	r2, #40	; 0x28
 8001022:	2100      	movs	r1, #0
 8001024:	68f8      	ldr	r0, [r7, #12]
 8001026:	f009 fc1b 	bl	800a860 <memset>
    }

    return node;
 800102a:	68fb      	ldr	r3, [r7, #12]
}
 800102c:	4618      	mov	r0, r3
 800102e:	3710      	adds	r7, #16
 8001030:	46bd      	mov	sp, r7
 8001032:	bd80      	pop	{r7, pc}

08001034 <cJSON_Delete>:

/* Delete a cJSON structure. */
CJSON_PUBLIC(void) cJSON_Delete(cJSON *item)
{
 8001034:	b580      	push	{r7, lr}
 8001036:	b084      	sub	sp, #16
 8001038:	af00      	add	r7, sp, #0
 800103a:	6078      	str	r0, [r7, #4]
    cJSON *next = NULL;
 800103c:	2300      	movs	r3, #0
 800103e:	60fb      	str	r3, [r7, #12]
    while (item != NULL)
 8001040:	e037      	b.n	80010b2 <cJSON_Delete+0x7e>
    {
        next = item->next;
 8001042:	687b      	ldr	r3, [r7, #4]
 8001044:	681b      	ldr	r3, [r3, #0]
 8001046:	60fb      	str	r3, [r7, #12]
        if (!(item->type & cJSON_IsReference) && (item->child != NULL))
 8001048:	687b      	ldr	r3, [r7, #4]
 800104a:	68db      	ldr	r3, [r3, #12]
 800104c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001050:	2b00      	cmp	r3, #0
 8001052:	d108      	bne.n	8001066 <cJSON_Delete+0x32>
 8001054:	687b      	ldr	r3, [r7, #4]
 8001056:	689b      	ldr	r3, [r3, #8]
 8001058:	2b00      	cmp	r3, #0
 800105a:	d004      	beq.n	8001066 <cJSON_Delete+0x32>
        {
            cJSON_Delete(item->child);
 800105c:	687b      	ldr	r3, [r7, #4]
 800105e:	689b      	ldr	r3, [r3, #8]
 8001060:	4618      	mov	r0, r3
 8001062:	f7ff ffe7 	bl	8001034 <cJSON_Delete>
        }
        if (!(item->type & cJSON_IsReference) && (item->valuestring != NULL))
 8001066:	687b      	ldr	r3, [r7, #4]
 8001068:	68db      	ldr	r3, [r3, #12]
 800106a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800106e:	2b00      	cmp	r3, #0
 8001070:	d109      	bne.n	8001086 <cJSON_Delete+0x52>
 8001072:	687b      	ldr	r3, [r7, #4]
 8001074:	691b      	ldr	r3, [r3, #16]
 8001076:	2b00      	cmp	r3, #0
 8001078:	d005      	beq.n	8001086 <cJSON_Delete+0x52>
        {
            global_hooks.deallocate(item->valuestring);
 800107a:	4b12      	ldr	r3, [pc, #72]	; (80010c4 <cJSON_Delete+0x90>)
 800107c:	685b      	ldr	r3, [r3, #4]
 800107e:	687a      	ldr	r2, [r7, #4]
 8001080:	6912      	ldr	r2, [r2, #16]
 8001082:	4610      	mov	r0, r2
 8001084:	4798      	blx	r3
        }
        if (!(item->type & cJSON_StringIsConst) && (item->string != NULL))
 8001086:	687b      	ldr	r3, [r7, #4]
 8001088:	68db      	ldr	r3, [r3, #12]
 800108a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800108e:	2b00      	cmp	r3, #0
 8001090:	d109      	bne.n	80010a6 <cJSON_Delete+0x72>
 8001092:	687b      	ldr	r3, [r7, #4]
 8001094:	6a1b      	ldr	r3, [r3, #32]
 8001096:	2b00      	cmp	r3, #0
 8001098:	d005      	beq.n	80010a6 <cJSON_Delete+0x72>
        {
            global_hooks.deallocate(item->string);
 800109a:	4b0a      	ldr	r3, [pc, #40]	; (80010c4 <cJSON_Delete+0x90>)
 800109c:	685b      	ldr	r3, [r3, #4]
 800109e:	687a      	ldr	r2, [r7, #4]
 80010a0:	6a12      	ldr	r2, [r2, #32]
 80010a2:	4610      	mov	r0, r2
 80010a4:	4798      	blx	r3
        }
        global_hooks.deallocate(item);
 80010a6:	4b07      	ldr	r3, [pc, #28]	; (80010c4 <cJSON_Delete+0x90>)
 80010a8:	685b      	ldr	r3, [r3, #4]
 80010aa:	6878      	ldr	r0, [r7, #4]
 80010ac:	4798      	blx	r3
        item = next;
 80010ae:	68fb      	ldr	r3, [r7, #12]
 80010b0:	607b      	str	r3, [r7, #4]
    while (item != NULL)
 80010b2:	687b      	ldr	r3, [r7, #4]
 80010b4:	2b00      	cmp	r3, #0
 80010b6:	d1c4      	bne.n	8001042 <cJSON_Delete+0xe>
    }
}
 80010b8:	bf00      	nop
 80010ba:	bf00      	nop
 80010bc:	3710      	adds	r7, #16
 80010be:	46bd      	mov	sp, r7
 80010c0:	bd80      	pop	{r7, pc}
 80010c2:	bf00      	nop
 80010c4:	20000000 	.word	0x20000000

080010c8 <get_decimal_point>:

/* get the decimal point character of the current locale */
static unsigned char get_decimal_point(void)
{
 80010c8:	b480      	push	{r7}
 80010ca:	af00      	add	r7, sp, #0
#ifdef ENABLE_LOCALES
    struct lconv *lconv = localeconv();
    return (unsigned char) lconv->decimal_point[0];
#else
    return '.';
 80010cc:	232e      	movs	r3, #46	; 0x2e
#endif
}
 80010ce:	4618      	mov	r0, r3
 80010d0:	46bd      	mov	sp, r7
 80010d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010d6:	4770      	bx	lr

080010d8 <parse_number>:
/* get a pointer to the buffer at the position */
#define buffer_at_offset(buffer) ((buffer)->content + (buffer)->offset)

/* Parse the input text to generate a number, and populate the result into item. */
static cJSON_bool parse_number(cJSON * const item, parse_buffer * const input_buffer)
{
 80010d8:	b580      	push	{r7, lr}
 80010da:	b098      	sub	sp, #96	; 0x60
 80010dc:	af00      	add	r7, sp, #0
 80010de:	6078      	str	r0, [r7, #4]
 80010e0:	6039      	str	r1, [r7, #0]
    double number = 0;
 80010e2:	f04f 0200 	mov.w	r2, #0
 80010e6:	f04f 0300 	mov.w	r3, #0
 80010ea:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
    unsigned char *after_end = NULL;
 80010ee:	2300      	movs	r3, #0
 80010f0:	64bb      	str	r3, [r7, #72]	; 0x48
    unsigned char number_c_string[64];
    unsigned char decimal_point = get_decimal_point();
 80010f2:	f7ff ffe9 	bl	80010c8 <get_decimal_point>
 80010f6:	4603      	mov	r3, r0
 80010f8:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
    size_t i = 0;
 80010fc:	2300      	movs	r3, #0
 80010fe:	65fb      	str	r3, [r7, #92]	; 0x5c

    if ((input_buffer == NULL) || (input_buffer->content == NULL))
 8001100:	683b      	ldr	r3, [r7, #0]
 8001102:	2b00      	cmp	r3, #0
 8001104:	d003      	beq.n	800110e <parse_number+0x36>
 8001106:	683b      	ldr	r3, [r7, #0]
 8001108:	681b      	ldr	r3, [r3, #0]
 800110a:	2b00      	cmp	r3, #0
 800110c:	d101      	bne.n	8001112 <parse_number+0x3a>
    {
        return false;
 800110e:	2300      	movs	r3, #0
 8001110:	e0c6      	b.n	80012a0 <parse_number+0x1c8>
    }

    /* copy the number into a temporary buffer and replace '.' with the decimal point
     * of the current locale (for strtod)
     * This also takes care of '\0' not necessarily being available for marking the end of the input */
    for (i = 0; (i < (sizeof(number_c_string) - 1)) && can_access_at_index(input_buffer, i); i++)
 8001112:	2300      	movs	r3, #0
 8001114:	65fb      	str	r3, [r7, #92]	; 0x5c
 8001116:	e063      	b.n	80011e0 <parse_number+0x108>
    {
        switch (buffer_at_offset(input_buffer)[i])
 8001118:	683b      	ldr	r3, [r7, #0]
 800111a:	681a      	ldr	r2, [r3, #0]
 800111c:	683b      	ldr	r3, [r7, #0]
 800111e:	6899      	ldr	r1, [r3, #8]
 8001120:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8001122:	440b      	add	r3, r1
 8001124:	4413      	add	r3, r2
 8001126:	781b      	ldrb	r3, [r3, #0]
 8001128:	2b45      	cmp	r3, #69	; 0x45
 800112a:	dc3d      	bgt.n	80011a8 <parse_number+0xd0>
 800112c:	2b2b      	cmp	r3, #43	; 0x2b
 800112e:	db66      	blt.n	80011fe <parse_number+0x126>
 8001130:	3b2b      	subs	r3, #43	; 0x2b
 8001132:	2b1a      	cmp	r3, #26
 8001134:	d863      	bhi.n	80011fe <parse_number+0x126>
 8001136:	a201      	add	r2, pc, #4	; (adr r2, 800113c <parse_number+0x64>)
 8001138:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800113c:	080011ad 	.word	0x080011ad
 8001140:	080011ff 	.word	0x080011ff
 8001144:	080011ad 	.word	0x080011ad
 8001148:	080011cb 	.word	0x080011cb
 800114c:	080011ff 	.word	0x080011ff
 8001150:	080011ad 	.word	0x080011ad
 8001154:	080011ad 	.word	0x080011ad
 8001158:	080011ad 	.word	0x080011ad
 800115c:	080011ad 	.word	0x080011ad
 8001160:	080011ad 	.word	0x080011ad
 8001164:	080011ad 	.word	0x080011ad
 8001168:	080011ad 	.word	0x080011ad
 800116c:	080011ad 	.word	0x080011ad
 8001170:	080011ad 	.word	0x080011ad
 8001174:	080011ad 	.word	0x080011ad
 8001178:	080011ff 	.word	0x080011ff
 800117c:	080011ff 	.word	0x080011ff
 8001180:	080011ff 	.word	0x080011ff
 8001184:	080011ff 	.word	0x080011ff
 8001188:	080011ff 	.word	0x080011ff
 800118c:	080011ff 	.word	0x080011ff
 8001190:	080011ff 	.word	0x080011ff
 8001194:	080011ff 	.word	0x080011ff
 8001198:	080011ff 	.word	0x080011ff
 800119c:	080011ff 	.word	0x080011ff
 80011a0:	080011ff 	.word	0x080011ff
 80011a4:	080011ad 	.word	0x080011ad
 80011a8:	2b65      	cmp	r3, #101	; 0x65
 80011aa:	d128      	bne.n	80011fe <parse_number+0x126>
            case '9':
            case '+':
            case '-':
            case 'e':
            case 'E':
                number_c_string[i] = buffer_at_offset(input_buffer)[i];
 80011ac:	683b      	ldr	r3, [r7, #0]
 80011ae:	681a      	ldr	r2, [r3, #0]
 80011b0:	683b      	ldr	r3, [r7, #0]
 80011b2:	6899      	ldr	r1, [r3, #8]
 80011b4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80011b6:	440b      	add	r3, r1
 80011b8:	4413      	add	r3, r2
 80011ba:	7819      	ldrb	r1, [r3, #0]
 80011bc:	f107 0208 	add.w	r2, r7, #8
 80011c0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80011c2:	4413      	add	r3, r2
 80011c4:	460a      	mov	r2, r1
 80011c6:	701a      	strb	r2, [r3, #0]
                break;
 80011c8:	e007      	b.n	80011da <parse_number+0x102>

            case '.':
                number_c_string[i] = decimal_point;
 80011ca:	f107 0208 	add.w	r2, r7, #8
 80011ce:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80011d0:	4413      	add	r3, r2
 80011d2:	f897 204f 	ldrb.w	r2, [r7, #79]	; 0x4f
 80011d6:	701a      	strb	r2, [r3, #0]
                break;
 80011d8:	bf00      	nop
    for (i = 0; (i < (sizeof(number_c_string) - 1)) && can_access_at_index(input_buffer, i); i++)
 80011da:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80011dc:	3301      	adds	r3, #1
 80011de:	65fb      	str	r3, [r7, #92]	; 0x5c
 80011e0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80011e2:	2b3e      	cmp	r3, #62	; 0x3e
 80011e4:	d80d      	bhi.n	8001202 <parse_number+0x12a>
 80011e6:	683b      	ldr	r3, [r7, #0]
 80011e8:	2b00      	cmp	r3, #0
 80011ea:	d00a      	beq.n	8001202 <parse_number+0x12a>
 80011ec:	683b      	ldr	r3, [r7, #0]
 80011ee:	689a      	ldr	r2, [r3, #8]
 80011f0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80011f2:	441a      	add	r2, r3
 80011f4:	683b      	ldr	r3, [r7, #0]
 80011f6:	685b      	ldr	r3, [r3, #4]
 80011f8:	429a      	cmp	r2, r3
 80011fa:	d38d      	bcc.n	8001118 <parse_number+0x40>

            default:
                goto loop_end;
        }
    }
loop_end:
 80011fc:	e001      	b.n	8001202 <parse_number+0x12a>
                goto loop_end;
 80011fe:	bf00      	nop
 8001200:	e000      	b.n	8001204 <parse_number+0x12c>
loop_end:
 8001202:	bf00      	nop
    number_c_string[i] = '\0';
 8001204:	f107 0208 	add.w	r2, r7, #8
 8001208:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800120a:	4413      	add	r3, r2
 800120c:	2200      	movs	r2, #0
 800120e:	701a      	strb	r2, [r3, #0]

    number = strtod((const char*)number_c_string, (char**)&after_end);
 8001210:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8001214:	f107 0308 	add.w	r3, r7, #8
 8001218:	4611      	mov	r1, r2
 800121a:	4618      	mov	r0, r3
 800121c:	f00a fc4e 	bl	800babc <strtod>
 8001220:	ed87 0b14 	vstr	d0, [r7, #80]	; 0x50
    if (number_c_string == after_end)
 8001224:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8001226:	f107 0308 	add.w	r3, r7, #8
 800122a:	429a      	cmp	r2, r3
 800122c:	d101      	bne.n	8001232 <parse_number+0x15a>
    {
        return false; /* parse_error */
 800122e:	2300      	movs	r3, #0
 8001230:	e036      	b.n	80012a0 <parse_number+0x1c8>
    }

    item->valuedouble = number;
 8001232:	6879      	ldr	r1, [r7, #4]
 8001234:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8001238:	e9c1 2306 	strd	r2, r3, [r1, #24]

    /* use saturation in case of overflow */
    if (number >= INT_MAX)
 800123c:	a31b      	add	r3, pc, #108	; (adr r3, 80012ac <parse_number+0x1d4>)
 800123e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001242:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8001246:	f7ff fc65 	bl	8000b14 <__aeabi_dcmpge>
 800124a:	4603      	mov	r3, r0
 800124c:	2b00      	cmp	r3, #0
 800124e:	d004      	beq.n	800125a <parse_number+0x182>
    {
        item->valueint = INT_MAX;
 8001250:	687b      	ldr	r3, [r7, #4]
 8001252:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 8001256:	615a      	str	r2, [r3, #20]
 8001258:	e015      	b.n	8001286 <parse_number+0x1ae>
    }
    else if (number <= (double)INT_MIN)
 800125a:	f04f 0200 	mov.w	r2, #0
 800125e:	4b12      	ldr	r3, [pc, #72]	; (80012a8 <parse_number+0x1d0>)
 8001260:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8001264:	f7ff fc4c 	bl	8000b00 <__aeabi_dcmple>
 8001268:	4603      	mov	r3, r0
 800126a:	2b00      	cmp	r3, #0
 800126c:	d004      	beq.n	8001278 <parse_number+0x1a0>
    {
        item->valueint = INT_MIN;
 800126e:	687b      	ldr	r3, [r7, #4]
 8001270:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8001274:	615a      	str	r2, [r3, #20]
 8001276:	e006      	b.n	8001286 <parse_number+0x1ae>
    }
    else
    {
        item->valueint = (int)number;
 8001278:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 800127c:	f7ff fc74 	bl	8000b68 <__aeabi_d2iz>
 8001280:	4602      	mov	r2, r0
 8001282:	687b      	ldr	r3, [r7, #4]
 8001284:	615a      	str	r2, [r3, #20]
    }

    item->type = cJSON_Number;
 8001286:	687b      	ldr	r3, [r7, #4]
 8001288:	2208      	movs	r2, #8
 800128a:	60da      	str	r2, [r3, #12]

    input_buffer->offset += (size_t)(after_end - number_c_string);
 800128c:	683b      	ldr	r3, [r7, #0]
 800128e:	689b      	ldr	r3, [r3, #8]
 8001290:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8001292:	f107 0208 	add.w	r2, r7, #8
 8001296:	1a8a      	subs	r2, r1, r2
 8001298:	441a      	add	r2, r3
 800129a:	683b      	ldr	r3, [r7, #0]
 800129c:	609a      	str	r2, [r3, #8]
    return true;
 800129e:	2301      	movs	r3, #1
}
 80012a0:	4618      	mov	r0, r3
 80012a2:	3760      	adds	r7, #96	; 0x60
 80012a4:	46bd      	mov	sp, r7
 80012a6:	bd80      	pop	{r7, pc}
 80012a8:	c1e00000 	.word	0xc1e00000
 80012ac:	ffc00000 	.word	0xffc00000
 80012b0:	41dfffff 	.word	0x41dfffff

080012b4 <parse_hex4>:
    return true;
}

/* parse 4 digit hexadecimal number */
static unsigned parse_hex4(const unsigned char * const input)
{
 80012b4:	b480      	push	{r7}
 80012b6:	b085      	sub	sp, #20
 80012b8:	af00      	add	r7, sp, #0
 80012ba:	6078      	str	r0, [r7, #4]
    unsigned int h = 0;
 80012bc:	2300      	movs	r3, #0
 80012be:	60fb      	str	r3, [r7, #12]
    size_t i = 0;
 80012c0:	2300      	movs	r3, #0
 80012c2:	60bb      	str	r3, [r7, #8]

    for (i = 0; i < 4; i++)
 80012c4:	2300      	movs	r3, #0
 80012c6:	60bb      	str	r3, [r7, #8]
 80012c8:	e04c      	b.n	8001364 <parse_hex4+0xb0>
    {
        /* parse digit */
        if ((input[i] >= '0') && (input[i] <= '9'))
 80012ca:	687a      	ldr	r2, [r7, #4]
 80012cc:	68bb      	ldr	r3, [r7, #8]
 80012ce:	4413      	add	r3, r2
 80012d0:	781b      	ldrb	r3, [r3, #0]
 80012d2:	2b2f      	cmp	r3, #47	; 0x2f
 80012d4:	d90f      	bls.n	80012f6 <parse_hex4+0x42>
 80012d6:	687a      	ldr	r2, [r7, #4]
 80012d8:	68bb      	ldr	r3, [r7, #8]
 80012da:	4413      	add	r3, r2
 80012dc:	781b      	ldrb	r3, [r3, #0]
 80012de:	2b39      	cmp	r3, #57	; 0x39
 80012e0:	d809      	bhi.n	80012f6 <parse_hex4+0x42>
        {
            h += (unsigned int) input[i] - '0';
 80012e2:	687a      	ldr	r2, [r7, #4]
 80012e4:	68bb      	ldr	r3, [r7, #8]
 80012e6:	4413      	add	r3, r2
 80012e8:	781b      	ldrb	r3, [r3, #0]
 80012ea:	461a      	mov	r2, r3
 80012ec:	68fb      	ldr	r3, [r7, #12]
 80012ee:	4413      	add	r3, r2
 80012f0:	3b30      	subs	r3, #48	; 0x30
 80012f2:	60fb      	str	r3, [r7, #12]
 80012f4:	e02d      	b.n	8001352 <parse_hex4+0x9e>
        }
        else if ((input[i] >= 'A') && (input[i] <= 'F'))
 80012f6:	687a      	ldr	r2, [r7, #4]
 80012f8:	68bb      	ldr	r3, [r7, #8]
 80012fa:	4413      	add	r3, r2
 80012fc:	781b      	ldrb	r3, [r3, #0]
 80012fe:	2b40      	cmp	r3, #64	; 0x40
 8001300:	d90f      	bls.n	8001322 <parse_hex4+0x6e>
 8001302:	687a      	ldr	r2, [r7, #4]
 8001304:	68bb      	ldr	r3, [r7, #8]
 8001306:	4413      	add	r3, r2
 8001308:	781b      	ldrb	r3, [r3, #0]
 800130a:	2b46      	cmp	r3, #70	; 0x46
 800130c:	d809      	bhi.n	8001322 <parse_hex4+0x6e>
        {
            h += (unsigned int) 10 + input[i] - 'A';
 800130e:	687a      	ldr	r2, [r7, #4]
 8001310:	68bb      	ldr	r3, [r7, #8]
 8001312:	4413      	add	r3, r2
 8001314:	781b      	ldrb	r3, [r3, #0]
 8001316:	461a      	mov	r2, r3
 8001318:	68fb      	ldr	r3, [r7, #12]
 800131a:	4413      	add	r3, r2
 800131c:	3b37      	subs	r3, #55	; 0x37
 800131e:	60fb      	str	r3, [r7, #12]
 8001320:	e017      	b.n	8001352 <parse_hex4+0x9e>
        }
        else if ((input[i] >= 'a') && (input[i] <= 'f'))
 8001322:	687a      	ldr	r2, [r7, #4]
 8001324:	68bb      	ldr	r3, [r7, #8]
 8001326:	4413      	add	r3, r2
 8001328:	781b      	ldrb	r3, [r3, #0]
 800132a:	2b60      	cmp	r3, #96	; 0x60
 800132c:	d90f      	bls.n	800134e <parse_hex4+0x9a>
 800132e:	687a      	ldr	r2, [r7, #4]
 8001330:	68bb      	ldr	r3, [r7, #8]
 8001332:	4413      	add	r3, r2
 8001334:	781b      	ldrb	r3, [r3, #0]
 8001336:	2b66      	cmp	r3, #102	; 0x66
 8001338:	d809      	bhi.n	800134e <parse_hex4+0x9a>
        {
            h += (unsigned int) 10 + input[i] - 'a';
 800133a:	687a      	ldr	r2, [r7, #4]
 800133c:	68bb      	ldr	r3, [r7, #8]
 800133e:	4413      	add	r3, r2
 8001340:	781b      	ldrb	r3, [r3, #0]
 8001342:	461a      	mov	r2, r3
 8001344:	68fb      	ldr	r3, [r7, #12]
 8001346:	4413      	add	r3, r2
 8001348:	3b57      	subs	r3, #87	; 0x57
 800134a:	60fb      	str	r3, [r7, #12]
 800134c:	e001      	b.n	8001352 <parse_hex4+0x9e>
        }
        else /* invalid */
        {
            return 0;
 800134e:	2300      	movs	r3, #0
 8001350:	e00c      	b.n	800136c <parse_hex4+0xb8>
        }

        if (i < 3)
 8001352:	68bb      	ldr	r3, [r7, #8]
 8001354:	2b02      	cmp	r3, #2
 8001356:	d802      	bhi.n	800135e <parse_hex4+0xaa>
        {
            /* shift left to make place for the next nibble */
            h = h << 4;
 8001358:	68fb      	ldr	r3, [r7, #12]
 800135a:	011b      	lsls	r3, r3, #4
 800135c:	60fb      	str	r3, [r7, #12]
    for (i = 0; i < 4; i++)
 800135e:	68bb      	ldr	r3, [r7, #8]
 8001360:	3301      	adds	r3, #1
 8001362:	60bb      	str	r3, [r7, #8]
 8001364:	68bb      	ldr	r3, [r7, #8]
 8001366:	2b03      	cmp	r3, #3
 8001368:	d9af      	bls.n	80012ca <parse_hex4+0x16>
        }
    }

    return h;
 800136a:	68fb      	ldr	r3, [r7, #12]
}
 800136c:	4618      	mov	r0, r3
 800136e:	3714      	adds	r7, #20
 8001370:	46bd      	mov	sp, r7
 8001372:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001376:	4770      	bx	lr

08001378 <utf16_literal_to_utf8>:

/* converts a UTF-16 literal to UTF-8
 * A literal can be one or two sequences of the form \uXXXX */
static unsigned char utf16_literal_to_utf8(const unsigned char * const input_pointer, const unsigned char * const input_end, unsigned char **output_pointer)
{
 8001378:	b580      	push	{r7, lr}
 800137a:	b08a      	sub	sp, #40	; 0x28
 800137c:	af00      	add	r7, sp, #0
 800137e:	60f8      	str	r0, [r7, #12]
 8001380:	60b9      	str	r1, [r7, #8]
 8001382:	607a      	str	r2, [r7, #4]
    long unsigned int codepoint = 0;
 8001384:	2300      	movs	r3, #0
 8001386:	627b      	str	r3, [r7, #36]	; 0x24
    unsigned int first_code = 0;
 8001388:	2300      	movs	r3, #0
 800138a:	61fb      	str	r3, [r7, #28]
    const unsigned char *first_sequence = input_pointer;
 800138c:	68fb      	ldr	r3, [r7, #12]
 800138e:	61bb      	str	r3, [r7, #24]
    unsigned char utf8_length = 0;
 8001390:	2300      	movs	r3, #0
 8001392:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
    unsigned char utf8_position = 0;
 8001396:	2300      	movs	r3, #0
 8001398:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
    unsigned char sequence_length = 0;
 800139c:	2300      	movs	r3, #0
 800139e:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
    unsigned char first_byte_mark = 0;
 80013a2:	2300      	movs	r3, #0
 80013a4:	f887 3020 	strb.w	r3, [r7, #32]

    if ((input_end - first_sequence) < 6)
 80013a8:	68ba      	ldr	r2, [r7, #8]
 80013aa:	69bb      	ldr	r3, [r7, #24]
 80013ac:	1ad3      	subs	r3, r2, r3
 80013ae:	2b05      	cmp	r3, #5
 80013b0:	f340 80b7 	ble.w	8001522 <utf16_literal_to_utf8+0x1aa>
        /* input ends unexpectedly */
        goto fail;
    }

    /* get the first utf16 sequence */
    first_code = parse_hex4(first_sequence + 2);
 80013b4:	69bb      	ldr	r3, [r7, #24]
 80013b6:	3302      	adds	r3, #2
 80013b8:	4618      	mov	r0, r3
 80013ba:	f7ff ff7b 	bl	80012b4 <parse_hex4>
 80013be:	61f8      	str	r0, [r7, #28]

    /* check that the code is valid */
    if (((first_code >= 0xDC00) && (first_code <= 0xDFFF)))
 80013c0:	69fb      	ldr	r3, [r7, #28]
 80013c2:	f5b3 4f5c 	cmp.w	r3, #56320	; 0xdc00
 80013c6:	d304      	bcc.n	80013d2 <utf16_literal_to_utf8+0x5a>
 80013c8:	69fb      	ldr	r3, [r7, #28]
 80013ca:	f5b3 4f60 	cmp.w	r3, #57344	; 0xe000
 80013ce:	f0c0 80aa 	bcc.w	8001526 <utf16_literal_to_utf8+0x1ae>
    {
        goto fail;
    }

    /* UTF16 surrogate pair */
    if ((first_code >= 0xD800) && (first_code <= 0xDBFF))
 80013d2:	69fb      	ldr	r3, [r7, #28]
 80013d4:	f5b3 4f58 	cmp.w	r3, #55296	; 0xd800
 80013d8:	d337      	bcc.n	800144a <utf16_literal_to_utf8+0xd2>
 80013da:	69fb      	ldr	r3, [r7, #28]
 80013dc:	f5b3 4f5c 	cmp.w	r3, #56320	; 0xdc00
 80013e0:	d233      	bcs.n	800144a <utf16_literal_to_utf8+0xd2>
    {
        const unsigned char *second_sequence = first_sequence + 6;
 80013e2:	69bb      	ldr	r3, [r7, #24]
 80013e4:	3306      	adds	r3, #6
 80013e6:	617b      	str	r3, [r7, #20]
        unsigned int second_code = 0;
 80013e8:	2300      	movs	r3, #0
 80013ea:	613b      	str	r3, [r7, #16]
        sequence_length = 12; /* \uXXXX\uXXXX */
 80013ec:	230c      	movs	r3, #12
 80013ee:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21

        if ((input_end - second_sequence) < 6)
 80013f2:	68ba      	ldr	r2, [r7, #8]
 80013f4:	697b      	ldr	r3, [r7, #20]
 80013f6:	1ad3      	subs	r3, r2, r3
 80013f8:	2b05      	cmp	r3, #5
 80013fa:	f340 8096 	ble.w	800152a <utf16_literal_to_utf8+0x1b2>
        {
            /* input ends unexpectedly */
            goto fail;
        }

        if ((second_sequence[0] != '\\') || (second_sequence[1] != 'u'))
 80013fe:	697b      	ldr	r3, [r7, #20]
 8001400:	781b      	ldrb	r3, [r3, #0]
 8001402:	2b5c      	cmp	r3, #92	; 0x5c
 8001404:	f040 8093 	bne.w	800152e <utf16_literal_to_utf8+0x1b6>
 8001408:	697b      	ldr	r3, [r7, #20]
 800140a:	3301      	adds	r3, #1
 800140c:	781b      	ldrb	r3, [r3, #0]
 800140e:	2b75      	cmp	r3, #117	; 0x75
 8001410:	f040 808d 	bne.w	800152e <utf16_literal_to_utf8+0x1b6>
            /* missing second half of the surrogate pair */
            goto fail;
        }

        /* get the second utf16 sequence */
        second_code = parse_hex4(second_sequence + 2);
 8001414:	697b      	ldr	r3, [r7, #20]
 8001416:	3302      	adds	r3, #2
 8001418:	4618      	mov	r0, r3
 800141a:	f7ff ff4b 	bl	80012b4 <parse_hex4>
 800141e:	6138      	str	r0, [r7, #16]
        /* check that the code is valid */
        if ((second_code < 0xDC00) || (second_code > 0xDFFF))
 8001420:	693b      	ldr	r3, [r7, #16]
 8001422:	f5b3 4f5c 	cmp.w	r3, #56320	; 0xdc00
 8001426:	f0c0 8084 	bcc.w	8001532 <utf16_literal_to_utf8+0x1ba>
 800142a:	693b      	ldr	r3, [r7, #16]
 800142c:	f5b3 4f60 	cmp.w	r3, #57344	; 0xe000
 8001430:	d27f      	bcs.n	8001532 <utf16_literal_to_utf8+0x1ba>
            goto fail;
        }


        /* calculate the unicode codepoint from the surrogate pair */
        codepoint = 0x10000 + (((first_code & 0x3FF) << 10) | (second_code & 0x3FF));
 8001432:	69fb      	ldr	r3, [r7, #28]
 8001434:	029a      	lsls	r2, r3, #10
 8001436:	4b43      	ldr	r3, [pc, #268]	; (8001544 <utf16_literal_to_utf8+0x1cc>)
 8001438:	4013      	ands	r3, r2
 800143a:	693a      	ldr	r2, [r7, #16]
 800143c:	f3c2 0209 	ubfx	r2, r2, #0, #10
 8001440:	4313      	orrs	r3, r2
 8001442:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 8001446:	627b      	str	r3, [r7, #36]	; 0x24
    {
 8001448:	e004      	b.n	8001454 <utf16_literal_to_utf8+0xdc>
    }
    else
    {
        sequence_length = 6; /* \uXXXX */
 800144a:	2306      	movs	r3, #6
 800144c:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
        codepoint = first_code;
 8001450:	69fb      	ldr	r3, [r7, #28]
 8001452:	627b      	str	r3, [r7, #36]	; 0x24
    }

    /* encode as UTF-8
     * takes at maximum 4 bytes to encode:
     * 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx */
    if (codepoint < 0x80)
 8001454:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001456:	2b7f      	cmp	r3, #127	; 0x7f
 8001458:	d803      	bhi.n	8001462 <utf16_literal_to_utf8+0xea>
    {
        /* normal ascii, encoding 0xxxxxxx */
        utf8_length = 1;
 800145a:	2301      	movs	r3, #1
 800145c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8001460:	e01f      	b.n	80014a2 <utf16_literal_to_utf8+0x12a>
    }
    else if (codepoint < 0x800)
 8001462:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001464:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8001468:	d206      	bcs.n	8001478 <utf16_literal_to_utf8+0x100>
    {
        /* two bytes, encoding 110xxxxx 10xxxxxx */
        utf8_length = 2;
 800146a:	2302      	movs	r3, #2
 800146c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
        first_byte_mark = 0xC0; /* 11000000 */
 8001470:	23c0      	movs	r3, #192	; 0xc0
 8001472:	f887 3020 	strb.w	r3, [r7, #32]
 8001476:	e014      	b.n	80014a2 <utf16_literal_to_utf8+0x12a>
    }
    else if (codepoint < 0x10000)
 8001478:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800147a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800147e:	d206      	bcs.n	800148e <utf16_literal_to_utf8+0x116>
    {
        /* three bytes, encoding 1110xxxx 10xxxxxx 10xxxxxx */
        utf8_length = 3;
 8001480:	2303      	movs	r3, #3
 8001482:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
        first_byte_mark = 0xE0; /* 11100000 */
 8001486:	23e0      	movs	r3, #224	; 0xe0
 8001488:	f887 3020 	strb.w	r3, [r7, #32]
 800148c:	e009      	b.n	80014a2 <utf16_literal_to_utf8+0x12a>
    }
    else if (codepoint <= 0x10FFFF)
 800148e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001490:	f5b3 1f88 	cmp.w	r3, #1114112	; 0x110000
 8001494:	d24f      	bcs.n	8001536 <utf16_literal_to_utf8+0x1be>
    {
        /* four bytes, encoding 1110xxxx 10xxxxxx 10xxxxxx 10xxxxxx */
        utf8_length = 4;
 8001496:	2304      	movs	r3, #4
 8001498:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
        first_byte_mark = 0xF0; /* 11110000 */
 800149c:	23f0      	movs	r3, #240	; 0xf0
 800149e:	f887 3020 	strb.w	r3, [r7, #32]
        /* invalid unicode codepoint */
        goto fail;
    }

    /* encode as utf8 */
    for (utf8_position = (unsigned char)(utf8_length - 1); utf8_position > 0; utf8_position--)
 80014a2:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80014a6:	3b01      	subs	r3, #1
 80014a8:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 80014ac:	e015      	b.n	80014da <utf16_literal_to_utf8+0x162>
    {
        /* 10xxxxxx */
        (*output_pointer)[utf8_position] = (unsigned char)((codepoint | 0x80) & 0xBF);
 80014ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014b0:	b2db      	uxtb	r3, r3
 80014b2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80014b6:	b2da      	uxtb	r2, r3
 80014b8:	687b      	ldr	r3, [r7, #4]
 80014ba:	6819      	ldr	r1, [r3, #0]
 80014bc:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 80014c0:	440b      	add	r3, r1
 80014c2:	f062 027f 	orn	r2, r2, #127	; 0x7f
 80014c6:	b2d2      	uxtb	r2, r2
 80014c8:	701a      	strb	r2, [r3, #0]
        codepoint >>= 6;
 80014ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014cc:	099b      	lsrs	r3, r3, #6
 80014ce:	627b      	str	r3, [r7, #36]	; 0x24
    for (utf8_position = (unsigned char)(utf8_length - 1); utf8_position > 0; utf8_position--)
 80014d0:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 80014d4:	3b01      	subs	r3, #1
 80014d6:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 80014da:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 80014de:	2b00      	cmp	r3, #0
 80014e0:	d1e5      	bne.n	80014ae <utf16_literal_to_utf8+0x136>
    }
    /* encode first byte */
    if (utf8_length > 1)
 80014e2:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80014e6:	2b01      	cmp	r3, #1
 80014e8:	d909      	bls.n	80014fe <utf16_literal_to_utf8+0x186>
    {
        (*output_pointer)[0] = (unsigned char)((codepoint | first_byte_mark) & 0xFF);
 80014ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014ec:	b2d9      	uxtb	r1, r3
 80014ee:	687b      	ldr	r3, [r7, #4]
 80014f0:	681b      	ldr	r3, [r3, #0]
 80014f2:	f897 2020 	ldrb.w	r2, [r7, #32]
 80014f6:	430a      	orrs	r2, r1
 80014f8:	b2d2      	uxtb	r2, r2
 80014fa:	701a      	strb	r2, [r3, #0]
 80014fc:	e007      	b.n	800150e <utf16_literal_to_utf8+0x196>
    }
    else
    {
        (*output_pointer)[0] = (unsigned char)(codepoint & 0x7F);
 80014fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001500:	b2da      	uxtb	r2, r3
 8001502:	687b      	ldr	r3, [r7, #4]
 8001504:	681b      	ldr	r3, [r3, #0]
 8001506:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 800150a:	b2d2      	uxtb	r2, r2
 800150c:	701a      	strb	r2, [r3, #0]
    }

    *output_pointer += utf8_length;
 800150e:	687b      	ldr	r3, [r7, #4]
 8001510:	681a      	ldr	r2, [r3, #0]
 8001512:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8001516:	441a      	add	r2, r3
 8001518:	687b      	ldr	r3, [r7, #4]
 800151a:	601a      	str	r2, [r3, #0]

    return sequence_length;
 800151c:	f897 3021 	ldrb.w	r3, [r7, #33]	; 0x21
 8001520:	e00b      	b.n	800153a <utf16_literal_to_utf8+0x1c2>
        goto fail;
 8001522:	bf00      	nop
 8001524:	e008      	b.n	8001538 <utf16_literal_to_utf8+0x1c0>
        goto fail;
 8001526:	bf00      	nop
 8001528:	e006      	b.n	8001538 <utf16_literal_to_utf8+0x1c0>
            goto fail;
 800152a:	bf00      	nop
 800152c:	e004      	b.n	8001538 <utf16_literal_to_utf8+0x1c0>
            goto fail;
 800152e:	bf00      	nop
 8001530:	e002      	b.n	8001538 <utf16_literal_to_utf8+0x1c0>
            goto fail;
 8001532:	bf00      	nop
 8001534:	e000      	b.n	8001538 <utf16_literal_to_utf8+0x1c0>
        goto fail;
 8001536:	bf00      	nop

fail:
    return 0;
 8001538:	2300      	movs	r3, #0
}
 800153a:	4618      	mov	r0, r3
 800153c:	3728      	adds	r7, #40	; 0x28
 800153e:	46bd      	mov	sp, r7
 8001540:	bd80      	pop	{r7, pc}
 8001542:	bf00      	nop
 8001544:	000ffc00 	.word	0x000ffc00

08001548 <parse_string>:

/* Parse the input text into an unescaped cinput, and populate item. */
static cJSON_bool parse_string(cJSON * const item, parse_buffer * const input_buffer)
{
 8001548:	b580      	push	{r7, lr}
 800154a:	b08a      	sub	sp, #40	; 0x28
 800154c:	af00      	add	r7, sp, #0
 800154e:	6078      	str	r0, [r7, #4]
 8001550:	6039      	str	r1, [r7, #0]
    const unsigned char *input_pointer = buffer_at_offset(input_buffer) + 1;
 8001552:	683b      	ldr	r3, [r7, #0]
 8001554:	681a      	ldr	r2, [r3, #0]
 8001556:	683b      	ldr	r3, [r7, #0]
 8001558:	689b      	ldr	r3, [r3, #8]
 800155a:	3301      	adds	r3, #1
 800155c:	4413      	add	r3, r2
 800155e:	627b      	str	r3, [r7, #36]	; 0x24
    const unsigned char *input_end = buffer_at_offset(input_buffer) + 1;
 8001560:	683b      	ldr	r3, [r7, #0]
 8001562:	681a      	ldr	r2, [r3, #0]
 8001564:	683b      	ldr	r3, [r7, #0]
 8001566:	689b      	ldr	r3, [r3, #8]
 8001568:	3301      	adds	r3, #1
 800156a:	4413      	add	r3, r2
 800156c:	623b      	str	r3, [r7, #32]
    unsigned char *output_pointer = NULL;
 800156e:	2300      	movs	r3, #0
 8001570:	60fb      	str	r3, [r7, #12]
    unsigned char *output = NULL;
 8001572:	2300      	movs	r3, #0
 8001574:	61fb      	str	r3, [r7, #28]

    /* not a string */
    if (buffer_at_offset(input_buffer)[0] != '\"')
 8001576:	683b      	ldr	r3, [r7, #0]
 8001578:	681a      	ldr	r2, [r3, #0]
 800157a:	683b      	ldr	r3, [r7, #0]
 800157c:	689b      	ldr	r3, [r3, #8]
 800157e:	4413      	add	r3, r2
 8001580:	781b      	ldrb	r3, [r3, #0]
 8001582:	2b22      	cmp	r3, #34	; 0x22
 8001584:	f040 8102 	bne.w	800178c <parse_string+0x244>
        goto fail;
    }

    {
        /* calculate approximate size of the output (overestimate) */
        size_t allocation_length = 0;
 8001588:	2300      	movs	r3, #0
 800158a:	613b      	str	r3, [r7, #16]
        size_t skipped_bytes = 0;
 800158c:	2300      	movs	r3, #0
 800158e:	61bb      	str	r3, [r7, #24]
        while (((size_t)(input_end - input_buffer->content) < input_buffer->length) && (*input_end != '\"'))
 8001590:	e017      	b.n	80015c2 <parse_string+0x7a>
        {
            /* is escape sequence */
            if (input_end[0] == '\\')
 8001592:	6a3b      	ldr	r3, [r7, #32]
 8001594:	781b      	ldrb	r3, [r3, #0]
 8001596:	2b5c      	cmp	r3, #92	; 0x5c
 8001598:	d110      	bne.n	80015bc <parse_string+0x74>
            {
                if ((size_t)(input_end + 1 - input_buffer->content) >= input_buffer->length)
 800159a:	6a3b      	ldr	r3, [r7, #32]
 800159c:	1c5a      	adds	r2, r3, #1
 800159e:	683b      	ldr	r3, [r7, #0]
 80015a0:	681b      	ldr	r3, [r3, #0]
 80015a2:	1ad3      	subs	r3, r2, r3
 80015a4:	461a      	mov	r2, r3
 80015a6:	683b      	ldr	r3, [r7, #0]
 80015a8:	685b      	ldr	r3, [r3, #4]
 80015aa:	429a      	cmp	r2, r3
 80015ac:	f080 80f0 	bcs.w	8001790 <parse_string+0x248>
                {
                    /* prevent buffer overflow when last input character is a backslash */
                    goto fail;
                }
                skipped_bytes++;
 80015b0:	69bb      	ldr	r3, [r7, #24]
 80015b2:	3301      	adds	r3, #1
 80015b4:	61bb      	str	r3, [r7, #24]
                input_end++;
 80015b6:	6a3b      	ldr	r3, [r7, #32]
 80015b8:	3301      	adds	r3, #1
 80015ba:	623b      	str	r3, [r7, #32]
            }
            input_end++;
 80015bc:	6a3b      	ldr	r3, [r7, #32]
 80015be:	3301      	adds	r3, #1
 80015c0:	623b      	str	r3, [r7, #32]
        while (((size_t)(input_end - input_buffer->content) < input_buffer->length) && (*input_end != '\"'))
 80015c2:	683b      	ldr	r3, [r7, #0]
 80015c4:	681b      	ldr	r3, [r3, #0]
 80015c6:	6a3a      	ldr	r2, [r7, #32]
 80015c8:	1ad3      	subs	r3, r2, r3
 80015ca:	461a      	mov	r2, r3
 80015cc:	683b      	ldr	r3, [r7, #0]
 80015ce:	685b      	ldr	r3, [r3, #4]
 80015d0:	429a      	cmp	r2, r3
 80015d2:	d203      	bcs.n	80015dc <parse_string+0x94>
 80015d4:	6a3b      	ldr	r3, [r7, #32]
 80015d6:	781b      	ldrb	r3, [r3, #0]
 80015d8:	2b22      	cmp	r3, #34	; 0x22
 80015da:	d1da      	bne.n	8001592 <parse_string+0x4a>
        }
        if (((size_t)(input_end - input_buffer->content) >= input_buffer->length) || (*input_end != '\"'))
 80015dc:	683b      	ldr	r3, [r7, #0]
 80015de:	681b      	ldr	r3, [r3, #0]
 80015e0:	6a3a      	ldr	r2, [r7, #32]
 80015e2:	1ad3      	subs	r3, r2, r3
 80015e4:	461a      	mov	r2, r3
 80015e6:	683b      	ldr	r3, [r7, #0]
 80015e8:	685b      	ldr	r3, [r3, #4]
 80015ea:	429a      	cmp	r2, r3
 80015ec:	f080 80d2 	bcs.w	8001794 <parse_string+0x24c>
 80015f0:	6a3b      	ldr	r3, [r7, #32]
 80015f2:	781b      	ldrb	r3, [r3, #0]
 80015f4:	2b22      	cmp	r3, #34	; 0x22
 80015f6:	f040 80cd 	bne.w	8001794 <parse_string+0x24c>
        {
            goto fail; /* string ended unexpectedly */
        }

        /* This is at most how much we need for the output */
        allocation_length = (size_t) (input_end - buffer_at_offset(input_buffer)) - skipped_bytes;
 80015fa:	683b      	ldr	r3, [r7, #0]
 80015fc:	681a      	ldr	r2, [r3, #0]
 80015fe:	683b      	ldr	r3, [r7, #0]
 8001600:	689b      	ldr	r3, [r3, #8]
 8001602:	4413      	add	r3, r2
 8001604:	6a3a      	ldr	r2, [r7, #32]
 8001606:	1ad3      	subs	r3, r2, r3
 8001608:	461a      	mov	r2, r3
 800160a:	69bb      	ldr	r3, [r7, #24]
 800160c:	1ad3      	subs	r3, r2, r3
 800160e:	613b      	str	r3, [r7, #16]
        output = (unsigned char*)input_buffer->hooks.allocate(allocation_length + sizeof(""));
 8001610:	683b      	ldr	r3, [r7, #0]
 8001612:	691b      	ldr	r3, [r3, #16]
 8001614:	693a      	ldr	r2, [r7, #16]
 8001616:	3201      	adds	r2, #1
 8001618:	4610      	mov	r0, r2
 800161a:	4798      	blx	r3
 800161c:	61f8      	str	r0, [r7, #28]
        if (output == NULL)
 800161e:	69fb      	ldr	r3, [r7, #28]
 8001620:	2b00      	cmp	r3, #0
 8001622:	f000 80b9 	beq.w	8001798 <parse_string+0x250>
        {
            goto fail; /* allocation failure */
        }
    }

    output_pointer = output;
 8001626:	69fb      	ldr	r3, [r7, #28]
 8001628:	60fb      	str	r3, [r7, #12]
    /* loop through the string literal */
    while (input_pointer < input_end)
 800162a:	e093      	b.n	8001754 <parse_string+0x20c>
    {
        if (*input_pointer != '\\')
 800162c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800162e:	781b      	ldrb	r3, [r3, #0]
 8001630:	2b5c      	cmp	r3, #92	; 0x5c
 8001632:	d008      	beq.n	8001646 <parse_string+0xfe>
        {
            *output_pointer++ = *input_pointer++;
 8001634:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001636:	1c53      	adds	r3, r2, #1
 8001638:	627b      	str	r3, [r7, #36]	; 0x24
 800163a:	68fb      	ldr	r3, [r7, #12]
 800163c:	1c59      	adds	r1, r3, #1
 800163e:	60f9      	str	r1, [r7, #12]
 8001640:	7812      	ldrb	r2, [r2, #0]
 8001642:	701a      	strb	r2, [r3, #0]
 8001644:	e086      	b.n	8001754 <parse_string+0x20c>
        }
        /* escape sequence */
        else
        {
            unsigned char sequence_length = 2;
 8001646:	2302      	movs	r3, #2
 8001648:	75fb      	strb	r3, [r7, #23]
            if ((input_end - input_pointer) < 1)
 800164a:	6a3a      	ldr	r2, [r7, #32]
 800164c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800164e:	1ad3      	subs	r3, r2, r3
 8001650:	2b00      	cmp	r3, #0
 8001652:	f340 80a3 	ble.w	800179c <parse_string+0x254>
            {
                goto fail;
            }

            switch (input_pointer[1])
 8001656:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001658:	3301      	adds	r3, #1
 800165a:	781b      	ldrb	r3, [r3, #0]
 800165c:	2b75      	cmp	r3, #117	; 0x75
 800165e:	f300 809f 	bgt.w	80017a0 <parse_string+0x258>
 8001662:	2b5c      	cmp	r3, #92	; 0x5c
 8001664:	da04      	bge.n	8001670 <parse_string+0x128>
 8001666:	2b22      	cmp	r3, #34	; 0x22
 8001668:	d05c      	beq.n	8001724 <parse_string+0x1dc>
 800166a:	2b2f      	cmp	r3, #47	; 0x2f
 800166c:	d05a      	beq.n	8001724 <parse_string+0x1dc>
                        goto fail;
                    }
                    break;

                default:
                    goto fail;
 800166e:	e097      	b.n	80017a0 <parse_string+0x258>
            switch (input_pointer[1])
 8001670:	3b5c      	subs	r3, #92	; 0x5c
 8001672:	2b19      	cmp	r3, #25
 8001674:	f200 8094 	bhi.w	80017a0 <parse_string+0x258>
 8001678:	a201      	add	r2, pc, #4	; (adr r2, 8001680 <parse_string+0x138>)
 800167a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800167e:	bf00      	nop
 8001680:	08001725 	.word	0x08001725
 8001684:	080017a1 	.word	0x080017a1
 8001688:	080017a1 	.word	0x080017a1
 800168c:	080017a1 	.word	0x080017a1
 8001690:	080017a1 	.word	0x080017a1
 8001694:	080017a1 	.word	0x080017a1
 8001698:	080016e9 	.word	0x080016e9
 800169c:	080017a1 	.word	0x080017a1
 80016a0:	080017a1 	.word	0x080017a1
 80016a4:	080017a1 	.word	0x080017a1
 80016a8:	080016f5 	.word	0x080016f5
 80016ac:	080017a1 	.word	0x080017a1
 80016b0:	080017a1 	.word	0x080017a1
 80016b4:	080017a1 	.word	0x080017a1
 80016b8:	080017a1 	.word	0x080017a1
 80016bc:	080017a1 	.word	0x080017a1
 80016c0:	080017a1 	.word	0x080017a1
 80016c4:	080017a1 	.word	0x080017a1
 80016c8:	08001701 	.word	0x08001701
 80016cc:	080017a1 	.word	0x080017a1
 80016d0:	080017a1 	.word	0x080017a1
 80016d4:	080017a1 	.word	0x080017a1
 80016d8:	0800170d 	.word	0x0800170d
 80016dc:	080017a1 	.word	0x080017a1
 80016e0:	08001719 	.word	0x08001719
 80016e4:	08001733 	.word	0x08001733
                    *output_pointer++ = '\b';
 80016e8:	68fb      	ldr	r3, [r7, #12]
 80016ea:	1c5a      	adds	r2, r3, #1
 80016ec:	60fa      	str	r2, [r7, #12]
 80016ee:	2208      	movs	r2, #8
 80016f0:	701a      	strb	r2, [r3, #0]
                    break;
 80016f2:	e02b      	b.n	800174c <parse_string+0x204>
                    *output_pointer++ = '\f';
 80016f4:	68fb      	ldr	r3, [r7, #12]
 80016f6:	1c5a      	adds	r2, r3, #1
 80016f8:	60fa      	str	r2, [r7, #12]
 80016fa:	220c      	movs	r2, #12
 80016fc:	701a      	strb	r2, [r3, #0]
                    break;
 80016fe:	e025      	b.n	800174c <parse_string+0x204>
                    *output_pointer++ = '\n';
 8001700:	68fb      	ldr	r3, [r7, #12]
 8001702:	1c5a      	adds	r2, r3, #1
 8001704:	60fa      	str	r2, [r7, #12]
 8001706:	220a      	movs	r2, #10
 8001708:	701a      	strb	r2, [r3, #0]
                    break;
 800170a:	e01f      	b.n	800174c <parse_string+0x204>
                    *output_pointer++ = '\r';
 800170c:	68fb      	ldr	r3, [r7, #12]
 800170e:	1c5a      	adds	r2, r3, #1
 8001710:	60fa      	str	r2, [r7, #12]
 8001712:	220d      	movs	r2, #13
 8001714:	701a      	strb	r2, [r3, #0]
                    break;
 8001716:	e019      	b.n	800174c <parse_string+0x204>
                    *output_pointer++ = '\t';
 8001718:	68fb      	ldr	r3, [r7, #12]
 800171a:	1c5a      	adds	r2, r3, #1
 800171c:	60fa      	str	r2, [r7, #12]
 800171e:	2209      	movs	r2, #9
 8001720:	701a      	strb	r2, [r3, #0]
                    break;
 8001722:	e013      	b.n	800174c <parse_string+0x204>
                    *output_pointer++ = input_pointer[1];
 8001724:	68fb      	ldr	r3, [r7, #12]
 8001726:	1c5a      	adds	r2, r3, #1
 8001728:	60fa      	str	r2, [r7, #12]
 800172a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800172c:	7852      	ldrb	r2, [r2, #1]
 800172e:	701a      	strb	r2, [r3, #0]
                    break;
 8001730:	e00c      	b.n	800174c <parse_string+0x204>
                    sequence_length = utf16_literal_to_utf8(input_pointer, input_end, &output_pointer);
 8001732:	f107 030c 	add.w	r3, r7, #12
 8001736:	461a      	mov	r2, r3
 8001738:	6a39      	ldr	r1, [r7, #32]
 800173a:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800173c:	f7ff fe1c 	bl	8001378 <utf16_literal_to_utf8>
 8001740:	4603      	mov	r3, r0
 8001742:	75fb      	strb	r3, [r7, #23]
                    if (sequence_length == 0)
 8001744:	7dfb      	ldrb	r3, [r7, #23]
 8001746:	2b00      	cmp	r3, #0
 8001748:	d02c      	beq.n	80017a4 <parse_string+0x25c>
                    break;
 800174a:	bf00      	nop
            }
            input_pointer += sequence_length;
 800174c:	7dfb      	ldrb	r3, [r7, #23]
 800174e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001750:	4413      	add	r3, r2
 8001752:	627b      	str	r3, [r7, #36]	; 0x24
    while (input_pointer < input_end)
 8001754:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001756:	6a3b      	ldr	r3, [r7, #32]
 8001758:	429a      	cmp	r2, r3
 800175a:	f4ff af67 	bcc.w	800162c <parse_string+0xe4>
        }
    }

    /* zero terminate the output */
    *output_pointer = '\0';
 800175e:	68fb      	ldr	r3, [r7, #12]
 8001760:	2200      	movs	r2, #0
 8001762:	701a      	strb	r2, [r3, #0]

    item->type = cJSON_String;
 8001764:	687b      	ldr	r3, [r7, #4]
 8001766:	2210      	movs	r2, #16
 8001768:	60da      	str	r2, [r3, #12]
    item->valuestring = (char*)output;
 800176a:	687b      	ldr	r3, [r7, #4]
 800176c:	69fa      	ldr	r2, [r7, #28]
 800176e:	611a      	str	r2, [r3, #16]

    input_buffer->offset = (size_t) (input_end - input_buffer->content);
 8001770:	683b      	ldr	r3, [r7, #0]
 8001772:	681b      	ldr	r3, [r3, #0]
 8001774:	6a3a      	ldr	r2, [r7, #32]
 8001776:	1ad3      	subs	r3, r2, r3
 8001778:	461a      	mov	r2, r3
 800177a:	683b      	ldr	r3, [r7, #0]
 800177c:	609a      	str	r2, [r3, #8]
    input_buffer->offset++;
 800177e:	683b      	ldr	r3, [r7, #0]
 8001780:	689b      	ldr	r3, [r3, #8]
 8001782:	1c5a      	adds	r2, r3, #1
 8001784:	683b      	ldr	r3, [r7, #0]
 8001786:	609a      	str	r2, [r3, #8]

    return true;
 8001788:	2301      	movs	r3, #1
 800178a:	e01e      	b.n	80017ca <parse_string+0x282>
        goto fail;
 800178c:	bf00      	nop
 800178e:	e00a      	b.n	80017a6 <parse_string+0x25e>
                    goto fail;
 8001790:	bf00      	nop
 8001792:	e008      	b.n	80017a6 <parse_string+0x25e>
            goto fail; /* string ended unexpectedly */
 8001794:	bf00      	nop
 8001796:	e006      	b.n	80017a6 <parse_string+0x25e>
            goto fail; /* allocation failure */
 8001798:	bf00      	nop
 800179a:	e004      	b.n	80017a6 <parse_string+0x25e>
                goto fail;
 800179c:	bf00      	nop
 800179e:	e002      	b.n	80017a6 <parse_string+0x25e>
                    goto fail;
 80017a0:	bf00      	nop
 80017a2:	e000      	b.n	80017a6 <parse_string+0x25e>
                        goto fail;
 80017a4:	bf00      	nop

fail:
    if (output != NULL)
 80017a6:	69fb      	ldr	r3, [r7, #28]
 80017a8:	2b00      	cmp	r3, #0
 80017aa:	d003      	beq.n	80017b4 <parse_string+0x26c>
    {
        input_buffer->hooks.deallocate(output);
 80017ac:	683b      	ldr	r3, [r7, #0]
 80017ae:	695b      	ldr	r3, [r3, #20]
 80017b0:	69f8      	ldr	r0, [r7, #28]
 80017b2:	4798      	blx	r3
    }

    if (input_pointer != NULL)
 80017b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017b6:	2b00      	cmp	r3, #0
 80017b8:	d006      	beq.n	80017c8 <parse_string+0x280>
    {
        input_buffer->offset = (size_t)(input_pointer - input_buffer->content);
 80017ba:	683b      	ldr	r3, [r7, #0]
 80017bc:	681b      	ldr	r3, [r3, #0]
 80017be:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80017c0:	1ad3      	subs	r3, r2, r3
 80017c2:	461a      	mov	r2, r3
 80017c4:	683b      	ldr	r3, [r7, #0]
 80017c6:	609a      	str	r2, [r3, #8]
    }

    return false;
 80017c8:	2300      	movs	r3, #0
}
 80017ca:	4618      	mov	r0, r3
 80017cc:	3728      	adds	r7, #40	; 0x28
 80017ce:	46bd      	mov	sp, r7
 80017d0:	bd80      	pop	{r7, pc}
 80017d2:	bf00      	nop

080017d4 <buffer_skip_whitespace>:
static cJSON_bool parse_object(cJSON * const item, parse_buffer * const input_buffer);
static cJSON_bool print_object(const cJSON * const item, printbuffer * const output_buffer);

/* Utility to jump whitespace and cr/lf */
static parse_buffer *buffer_skip_whitespace(parse_buffer * const buffer)
{
 80017d4:	b480      	push	{r7}
 80017d6:	b083      	sub	sp, #12
 80017d8:	af00      	add	r7, sp, #0
 80017da:	6078      	str	r0, [r7, #4]
    if ((buffer == NULL) || (buffer->content == NULL))
 80017dc:	687b      	ldr	r3, [r7, #4]
 80017de:	2b00      	cmp	r3, #0
 80017e0:	d003      	beq.n	80017ea <buffer_skip_whitespace+0x16>
 80017e2:	687b      	ldr	r3, [r7, #4]
 80017e4:	681b      	ldr	r3, [r3, #0]
 80017e6:	2b00      	cmp	r3, #0
 80017e8:	d101      	bne.n	80017ee <buffer_skip_whitespace+0x1a>
    {
        return NULL;
 80017ea:	2300      	movs	r3, #0
 80017ec:	e02c      	b.n	8001848 <buffer_skip_whitespace+0x74>
    }

    if (cannot_access_at_index(buffer, 0))
 80017ee:	687b      	ldr	r3, [r7, #4]
 80017f0:	2b00      	cmp	r3, #0
 80017f2:	d005      	beq.n	8001800 <buffer_skip_whitespace+0x2c>
 80017f4:	687b      	ldr	r3, [r7, #4]
 80017f6:	689a      	ldr	r2, [r3, #8]
 80017f8:	687b      	ldr	r3, [r7, #4]
 80017fa:	685b      	ldr	r3, [r3, #4]
 80017fc:	429a      	cmp	r2, r3
 80017fe:	d306      	bcc.n	800180e <buffer_skip_whitespace+0x3a>
    {
        return buffer;
 8001800:	687b      	ldr	r3, [r7, #4]
 8001802:	e021      	b.n	8001848 <buffer_skip_whitespace+0x74>
    }

    while (can_access_at_index(buffer, 0) && (buffer_at_offset(buffer)[0] <= 32))
    {
       buffer->offset++;
 8001804:	687b      	ldr	r3, [r7, #4]
 8001806:	689b      	ldr	r3, [r3, #8]
 8001808:	1c5a      	adds	r2, r3, #1
 800180a:	687b      	ldr	r3, [r7, #4]
 800180c:	609a      	str	r2, [r3, #8]
    while (can_access_at_index(buffer, 0) && (buffer_at_offset(buffer)[0] <= 32))
 800180e:	687b      	ldr	r3, [r7, #4]
 8001810:	2b00      	cmp	r3, #0
 8001812:	d00d      	beq.n	8001830 <buffer_skip_whitespace+0x5c>
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	689a      	ldr	r2, [r3, #8]
 8001818:	687b      	ldr	r3, [r7, #4]
 800181a:	685b      	ldr	r3, [r3, #4]
 800181c:	429a      	cmp	r2, r3
 800181e:	d207      	bcs.n	8001830 <buffer_skip_whitespace+0x5c>
 8001820:	687b      	ldr	r3, [r7, #4]
 8001822:	681a      	ldr	r2, [r3, #0]
 8001824:	687b      	ldr	r3, [r7, #4]
 8001826:	689b      	ldr	r3, [r3, #8]
 8001828:	4413      	add	r3, r2
 800182a:	781b      	ldrb	r3, [r3, #0]
 800182c:	2b20      	cmp	r3, #32
 800182e:	d9e9      	bls.n	8001804 <buffer_skip_whitespace+0x30>
    }

    if (buffer->offset == buffer->length)
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	689a      	ldr	r2, [r3, #8]
 8001834:	687b      	ldr	r3, [r7, #4]
 8001836:	685b      	ldr	r3, [r3, #4]
 8001838:	429a      	cmp	r2, r3
 800183a:	d104      	bne.n	8001846 <buffer_skip_whitespace+0x72>
    {
        buffer->offset--;
 800183c:	687b      	ldr	r3, [r7, #4]
 800183e:	689b      	ldr	r3, [r3, #8]
 8001840:	1e5a      	subs	r2, r3, #1
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	609a      	str	r2, [r3, #8]
    }

    return buffer;
 8001846:	687b      	ldr	r3, [r7, #4]
}
 8001848:	4618      	mov	r0, r3
 800184a:	370c      	adds	r7, #12
 800184c:	46bd      	mov	sp, r7
 800184e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001852:	4770      	bx	lr

08001854 <skip_utf8_bom>:

/* skip the UTF-8 BOM (byte order mark) if it is at the beginning of a buffer */
static parse_buffer *skip_utf8_bom(parse_buffer * const buffer)
{
 8001854:	b580      	push	{r7, lr}
 8001856:	b082      	sub	sp, #8
 8001858:	af00      	add	r7, sp, #0
 800185a:	6078      	str	r0, [r7, #4]
    if ((buffer == NULL) || (buffer->content == NULL) || (buffer->offset != 0))
 800185c:	687b      	ldr	r3, [r7, #4]
 800185e:	2b00      	cmp	r3, #0
 8001860:	d007      	beq.n	8001872 <skip_utf8_bom+0x1e>
 8001862:	687b      	ldr	r3, [r7, #4]
 8001864:	681b      	ldr	r3, [r3, #0]
 8001866:	2b00      	cmp	r3, #0
 8001868:	d003      	beq.n	8001872 <skip_utf8_bom+0x1e>
 800186a:	687b      	ldr	r3, [r7, #4]
 800186c:	689b      	ldr	r3, [r3, #8]
 800186e:	2b00      	cmp	r3, #0
 8001870:	d001      	beq.n	8001876 <skip_utf8_bom+0x22>
    {
        return NULL;
 8001872:	2300      	movs	r3, #0
 8001874:	e01c      	b.n	80018b0 <skip_utf8_bom+0x5c>
    }

    if (can_access_at_index(buffer, 4) && (strncmp((const char*)buffer_at_offset(buffer), "\xEF\xBB\xBF", 3) == 0))
 8001876:	687b      	ldr	r3, [r7, #4]
 8001878:	2b00      	cmp	r3, #0
 800187a:	d018      	beq.n	80018ae <skip_utf8_bom+0x5a>
 800187c:	687b      	ldr	r3, [r7, #4]
 800187e:	689b      	ldr	r3, [r3, #8]
 8001880:	1d1a      	adds	r2, r3, #4
 8001882:	687b      	ldr	r3, [r7, #4]
 8001884:	685b      	ldr	r3, [r3, #4]
 8001886:	429a      	cmp	r2, r3
 8001888:	d211      	bcs.n	80018ae <skip_utf8_bom+0x5a>
 800188a:	687b      	ldr	r3, [r7, #4]
 800188c:	681a      	ldr	r2, [r3, #0]
 800188e:	687b      	ldr	r3, [r7, #4]
 8001890:	689b      	ldr	r3, [r3, #8]
 8001892:	4413      	add	r3, r2
 8001894:	2203      	movs	r2, #3
 8001896:	4908      	ldr	r1, [pc, #32]	; (80018b8 <skip_utf8_bom+0x64>)
 8001898:	4618      	mov	r0, r3
 800189a:	f009 fac1 	bl	800ae20 <strncmp>
 800189e:	4603      	mov	r3, r0
 80018a0:	2b00      	cmp	r3, #0
 80018a2:	d104      	bne.n	80018ae <skip_utf8_bom+0x5a>
    {
        buffer->offset += 3;
 80018a4:	687b      	ldr	r3, [r7, #4]
 80018a6:	689b      	ldr	r3, [r3, #8]
 80018a8:	1cda      	adds	r2, r3, #3
 80018aa:	687b      	ldr	r3, [r7, #4]
 80018ac:	609a      	str	r2, [r3, #8]
    }

    return buffer;
 80018ae:	687b      	ldr	r3, [r7, #4]
}
 80018b0:	4618      	mov	r0, r3
 80018b2:	3708      	adds	r7, #8
 80018b4:	46bd      	mov	sp, r7
 80018b6:	bd80      	pop	{r7, pc}
 80018b8:	080105d0 	.word	0x080105d0

080018bc <cJSON_ParseWithOpts>:

CJSON_PUBLIC(cJSON *) cJSON_ParseWithOpts(const char *value, const char **return_parse_end, cJSON_bool require_null_terminated)
{
 80018bc:	b580      	push	{r7, lr}
 80018be:	b086      	sub	sp, #24
 80018c0:	af00      	add	r7, sp, #0
 80018c2:	60f8      	str	r0, [r7, #12]
 80018c4:	60b9      	str	r1, [r7, #8]
 80018c6:	607a      	str	r2, [r7, #4]
    size_t buffer_length;

    if (NULL == value)
 80018c8:	68fb      	ldr	r3, [r7, #12]
 80018ca:	2b00      	cmp	r3, #0
 80018cc:	d101      	bne.n	80018d2 <cJSON_ParseWithOpts+0x16>
    {
        return NULL;
 80018ce:	2300      	movs	r3, #0
 80018d0:	e00c      	b.n	80018ec <cJSON_ParseWithOpts+0x30>
    }

    /* Adding null character size due to require_null_terminated. */
    buffer_length = strlen(value) + sizeof("");
 80018d2:	68f8      	ldr	r0, [r7, #12]
 80018d4:	f7fe fc84 	bl	80001e0 <strlen>
 80018d8:	4603      	mov	r3, r0
 80018da:	3301      	adds	r3, #1
 80018dc:	617b      	str	r3, [r7, #20]

    return cJSON_ParseWithLengthOpts(value, buffer_length, return_parse_end, require_null_terminated);
 80018de:	687b      	ldr	r3, [r7, #4]
 80018e0:	68ba      	ldr	r2, [r7, #8]
 80018e2:	6979      	ldr	r1, [r7, #20]
 80018e4:	68f8      	ldr	r0, [r7, #12]
 80018e6:	f000 f805 	bl	80018f4 <cJSON_ParseWithLengthOpts>
 80018ea:	4603      	mov	r3, r0
}
 80018ec:	4618      	mov	r0, r3
 80018ee:	3718      	adds	r7, #24
 80018f0:	46bd      	mov	sp, r7
 80018f2:	bd80      	pop	{r7, pc}

080018f4 <cJSON_ParseWithLengthOpts>:

/* Parse an object - create a new root, and populate. */
CJSON_PUBLIC(cJSON *) cJSON_ParseWithLengthOpts(const char *value, size_t buffer_length, const char **return_parse_end, cJSON_bool require_null_terminated)
{
 80018f4:	b580      	push	{r7, lr}
 80018f6:	b08e      	sub	sp, #56	; 0x38
 80018f8:	af00      	add	r7, sp, #0
 80018fa:	60f8      	str	r0, [r7, #12]
 80018fc:	60b9      	str	r1, [r7, #8]
 80018fe:	607a      	str	r2, [r7, #4]
 8001900:	603b      	str	r3, [r7, #0]
    parse_buffer buffer = { 0, 0, 0, 0, { 0, 0, 0 } };
 8001902:	f107 0318 	add.w	r3, r7, #24
 8001906:	2200      	movs	r2, #0
 8001908:	601a      	str	r2, [r3, #0]
 800190a:	605a      	str	r2, [r3, #4]
 800190c:	609a      	str	r2, [r3, #8]
 800190e:	60da      	str	r2, [r3, #12]
 8001910:	611a      	str	r2, [r3, #16]
 8001912:	615a      	str	r2, [r3, #20]
 8001914:	619a      	str	r2, [r3, #24]
    cJSON *item = NULL;
 8001916:	2300      	movs	r3, #0
 8001918:	637b      	str	r3, [r7, #52]	; 0x34

    /* reset error position */
    global_error.json = NULL;
 800191a:	4b41      	ldr	r3, [pc, #260]	; (8001a20 <cJSON_ParseWithLengthOpts+0x12c>)
 800191c:	2200      	movs	r2, #0
 800191e:	601a      	str	r2, [r3, #0]
    global_error.position = 0;
 8001920:	4b3f      	ldr	r3, [pc, #252]	; (8001a20 <cJSON_ParseWithLengthOpts+0x12c>)
 8001922:	2200      	movs	r2, #0
 8001924:	605a      	str	r2, [r3, #4]

    if (value == NULL || 0 == buffer_length)
 8001926:	68fb      	ldr	r3, [r7, #12]
 8001928:	2b00      	cmp	r3, #0
 800192a:	d042      	beq.n	80019b2 <cJSON_ParseWithLengthOpts+0xbe>
 800192c:	68bb      	ldr	r3, [r7, #8]
 800192e:	2b00      	cmp	r3, #0
 8001930:	d03f      	beq.n	80019b2 <cJSON_ParseWithLengthOpts+0xbe>
    {
        goto fail;
    }

    buffer.content = (const unsigned char*)value;
 8001932:	68fb      	ldr	r3, [r7, #12]
 8001934:	61bb      	str	r3, [r7, #24]
    buffer.length = buffer_length;
 8001936:	68bb      	ldr	r3, [r7, #8]
 8001938:	61fb      	str	r3, [r7, #28]
    buffer.offset = 0;
 800193a:	2300      	movs	r3, #0
 800193c:	623b      	str	r3, [r7, #32]
    buffer.hooks = global_hooks;
 800193e:	4a39      	ldr	r2, [pc, #228]	; (8001a24 <cJSON_ParseWithLengthOpts+0x130>)
 8001940:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001944:	ca07      	ldmia	r2, {r0, r1, r2}
 8001946:	e883 0007 	stmia.w	r3, {r0, r1, r2}

    item = cJSON_New_Item(&global_hooks);
 800194a:	4836      	ldr	r0, [pc, #216]	; (8001a24 <cJSON_ParseWithLengthOpts+0x130>)
 800194c:	f7ff fb5c 	bl	8001008 <cJSON_New_Item>
 8001950:	6378      	str	r0, [r7, #52]	; 0x34
    if (item == NULL) /* memory fail */
 8001952:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001954:	2b00      	cmp	r3, #0
 8001956:	d02e      	beq.n	80019b6 <cJSON_ParseWithLengthOpts+0xc2>
    {
        goto fail;
    }

    if (!parse_value(item, buffer_skip_whitespace(skip_utf8_bom(&buffer))))
 8001958:	f107 0318 	add.w	r3, r7, #24
 800195c:	4618      	mov	r0, r3
 800195e:	f7ff ff79 	bl	8001854 <skip_utf8_bom>
 8001962:	4603      	mov	r3, r0
 8001964:	4618      	mov	r0, r3
 8001966:	f7ff ff35 	bl	80017d4 <buffer_skip_whitespace>
 800196a:	4603      	mov	r3, r0
 800196c:	4619      	mov	r1, r3
 800196e:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8001970:	f000 f868 	bl	8001a44 <parse_value>
 8001974:	4603      	mov	r3, r0
 8001976:	2b00      	cmp	r3, #0
 8001978:	d01f      	beq.n	80019ba <cJSON_ParseWithLengthOpts+0xc6>
        /* parse failure. ep is set. */
        goto fail;
    }

    /* if we require null-terminated JSON without appended garbage, skip and then check for a null terminator */
    if (require_null_terminated)
 800197a:	683b      	ldr	r3, [r7, #0]
 800197c:	2b00      	cmp	r3, #0
 800197e:	d00e      	beq.n	800199e <cJSON_ParseWithLengthOpts+0xaa>
    {
        buffer_skip_whitespace(&buffer);
 8001980:	f107 0318 	add.w	r3, r7, #24
 8001984:	4618      	mov	r0, r3
 8001986:	f7ff ff25 	bl	80017d4 <buffer_skip_whitespace>
        if ((buffer.offset >= buffer.length) || buffer_at_offset(&buffer)[0] != '\0')
 800198a:	6a3a      	ldr	r2, [r7, #32]
 800198c:	69fb      	ldr	r3, [r7, #28]
 800198e:	429a      	cmp	r2, r3
 8001990:	d215      	bcs.n	80019be <cJSON_ParseWithLengthOpts+0xca>
 8001992:	69ba      	ldr	r2, [r7, #24]
 8001994:	6a3b      	ldr	r3, [r7, #32]
 8001996:	4413      	add	r3, r2
 8001998:	781b      	ldrb	r3, [r3, #0]
 800199a:	2b00      	cmp	r3, #0
 800199c:	d10f      	bne.n	80019be <cJSON_ParseWithLengthOpts+0xca>
        {
            goto fail;
        }
    }
    if (return_parse_end)
 800199e:	687b      	ldr	r3, [r7, #4]
 80019a0:	2b00      	cmp	r3, #0
 80019a2:	d004      	beq.n	80019ae <cJSON_ParseWithLengthOpts+0xba>
    {
        *return_parse_end = (const char*)buffer_at_offset(&buffer);
 80019a4:	69ba      	ldr	r2, [r7, #24]
 80019a6:	6a3b      	ldr	r3, [r7, #32]
 80019a8:	441a      	add	r2, r3
 80019aa:	687b      	ldr	r3, [r7, #4]
 80019ac:	601a      	str	r2, [r3, #0]
    }

    return item;
 80019ae:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80019b0:	e031      	b.n	8001a16 <cJSON_ParseWithLengthOpts+0x122>
        goto fail;
 80019b2:	bf00      	nop
 80019b4:	e004      	b.n	80019c0 <cJSON_ParseWithLengthOpts+0xcc>
        goto fail;
 80019b6:	bf00      	nop
 80019b8:	e002      	b.n	80019c0 <cJSON_ParseWithLengthOpts+0xcc>
        goto fail;
 80019ba:	bf00      	nop
 80019bc:	e000      	b.n	80019c0 <cJSON_ParseWithLengthOpts+0xcc>
            goto fail;
 80019be:	bf00      	nop

fail:
    if (item != NULL)
 80019c0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80019c2:	2b00      	cmp	r3, #0
 80019c4:	d002      	beq.n	80019cc <cJSON_ParseWithLengthOpts+0xd8>
    {
        cJSON_Delete(item);
 80019c6:	6b78      	ldr	r0, [r7, #52]	; 0x34
 80019c8:	f7ff fb34 	bl	8001034 <cJSON_Delete>
    }

    if (value != NULL)
 80019cc:	68fb      	ldr	r3, [r7, #12]
 80019ce:	2b00      	cmp	r3, #0
 80019d0:	d020      	beq.n	8001a14 <cJSON_ParseWithLengthOpts+0x120>
    {
        error local_error;
        local_error.json = (const unsigned char*)value;
 80019d2:	68fb      	ldr	r3, [r7, #12]
 80019d4:	613b      	str	r3, [r7, #16]
        local_error.position = 0;
 80019d6:	2300      	movs	r3, #0
 80019d8:	617b      	str	r3, [r7, #20]

        if (buffer.offset < buffer.length)
 80019da:	6a3a      	ldr	r2, [r7, #32]
 80019dc:	69fb      	ldr	r3, [r7, #28]
 80019de:	429a      	cmp	r2, r3
 80019e0:	d202      	bcs.n	80019e8 <cJSON_ParseWithLengthOpts+0xf4>
        {
            local_error.position = buffer.offset;
 80019e2:	6a3b      	ldr	r3, [r7, #32]
 80019e4:	617b      	str	r3, [r7, #20]
 80019e6:	e005      	b.n	80019f4 <cJSON_ParseWithLengthOpts+0x100>
        }
        else if (buffer.length > 0)
 80019e8:	69fb      	ldr	r3, [r7, #28]
 80019ea:	2b00      	cmp	r3, #0
 80019ec:	d002      	beq.n	80019f4 <cJSON_ParseWithLengthOpts+0x100>
        {
            local_error.position = buffer.length - 1;
 80019ee:	69fb      	ldr	r3, [r7, #28]
 80019f0:	3b01      	subs	r3, #1
 80019f2:	617b      	str	r3, [r7, #20]
        }

        if (return_parse_end != NULL)
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	2b00      	cmp	r3, #0
 80019f8:	d004      	beq.n	8001a04 <cJSON_ParseWithLengthOpts+0x110>
        {
            *return_parse_end = (const char*)local_error.json + local_error.position;
 80019fa:	693a      	ldr	r2, [r7, #16]
 80019fc:	697b      	ldr	r3, [r7, #20]
 80019fe:	441a      	add	r2, r3
 8001a00:	687b      	ldr	r3, [r7, #4]
 8001a02:	601a      	str	r2, [r3, #0]
        }

        global_error = local_error;
 8001a04:	4b06      	ldr	r3, [pc, #24]	; (8001a20 <cJSON_ParseWithLengthOpts+0x12c>)
 8001a06:	461a      	mov	r2, r3
 8001a08:	f107 0310 	add.w	r3, r7, #16
 8001a0c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8001a10:	e882 0003 	stmia.w	r2, {r0, r1}
    }

    return NULL;
 8001a14:	2300      	movs	r3, #0
}
 8001a16:	4618      	mov	r0, r3
 8001a18:	3738      	adds	r7, #56	; 0x38
 8001a1a:	46bd      	mov	sp, r7
 8001a1c:	bd80      	pop	{r7, pc}
 8001a1e:	bf00      	nop
 8001a20:	200009f4 	.word	0x200009f4
 8001a24:	20000000 	.word	0x20000000

08001a28 <cJSON_Parse>:

/* Default options for cJSON_Parse */
CJSON_PUBLIC(cJSON *) cJSON_Parse(const char *value)
{
 8001a28:	b580      	push	{r7, lr}
 8001a2a:	b082      	sub	sp, #8
 8001a2c:	af00      	add	r7, sp, #0
 8001a2e:	6078      	str	r0, [r7, #4]
    return cJSON_ParseWithOpts(value, 0, 0);
 8001a30:	2200      	movs	r2, #0
 8001a32:	2100      	movs	r1, #0
 8001a34:	6878      	ldr	r0, [r7, #4]
 8001a36:	f7ff ff41 	bl	80018bc <cJSON_ParseWithOpts>
 8001a3a:	4603      	mov	r3, r0
}
 8001a3c:	4618      	mov	r0, r3
 8001a3e:	3708      	adds	r7, #8
 8001a40:	46bd      	mov	sp, r7
 8001a42:	bd80      	pop	{r7, pc}

08001a44 <parse_value>:
    return print_value(item, &p);
}

/* Parser core - when encountering text, process appropriately. */
static cJSON_bool parse_value(cJSON * const item, parse_buffer * const input_buffer)
{
 8001a44:	b580      	push	{r7, lr}
 8001a46:	b082      	sub	sp, #8
 8001a48:	af00      	add	r7, sp, #0
 8001a4a:	6078      	str	r0, [r7, #4]
 8001a4c:	6039      	str	r1, [r7, #0]
    if ((input_buffer == NULL) || (input_buffer->content == NULL))
 8001a4e:	683b      	ldr	r3, [r7, #0]
 8001a50:	2b00      	cmp	r3, #0
 8001a52:	d003      	beq.n	8001a5c <parse_value+0x18>
 8001a54:	683b      	ldr	r3, [r7, #0]
 8001a56:	681b      	ldr	r3, [r3, #0]
 8001a58:	2b00      	cmp	r3, #0
 8001a5a:	d101      	bne.n	8001a60 <parse_value+0x1c>
    {
        return false; /* no input */
 8001a5c:	2300      	movs	r3, #0
 8001a5e:	e0d2      	b.n	8001c06 <parse_value+0x1c2>
    }

    /* parse the different types of values */
    /* null */
    if (can_read(input_buffer, 4) && (strncmp((const char*)buffer_at_offset(input_buffer), "null", 4) == 0))
 8001a60:	683b      	ldr	r3, [r7, #0]
 8001a62:	2b00      	cmp	r3, #0
 8001a64:	d01d      	beq.n	8001aa2 <parse_value+0x5e>
 8001a66:	683b      	ldr	r3, [r7, #0]
 8001a68:	689b      	ldr	r3, [r3, #8]
 8001a6a:	1d1a      	adds	r2, r3, #4
 8001a6c:	683b      	ldr	r3, [r7, #0]
 8001a6e:	685b      	ldr	r3, [r3, #4]
 8001a70:	429a      	cmp	r2, r3
 8001a72:	d816      	bhi.n	8001aa2 <parse_value+0x5e>
 8001a74:	683b      	ldr	r3, [r7, #0]
 8001a76:	681a      	ldr	r2, [r3, #0]
 8001a78:	683b      	ldr	r3, [r7, #0]
 8001a7a:	689b      	ldr	r3, [r3, #8]
 8001a7c:	4413      	add	r3, r2
 8001a7e:	2204      	movs	r2, #4
 8001a80:	4963      	ldr	r1, [pc, #396]	; (8001c10 <parse_value+0x1cc>)
 8001a82:	4618      	mov	r0, r3
 8001a84:	f009 f9cc 	bl	800ae20 <strncmp>
 8001a88:	4603      	mov	r3, r0
 8001a8a:	2b00      	cmp	r3, #0
 8001a8c:	d109      	bne.n	8001aa2 <parse_value+0x5e>
    {
        item->type = cJSON_NULL;
 8001a8e:	687b      	ldr	r3, [r7, #4]
 8001a90:	2204      	movs	r2, #4
 8001a92:	60da      	str	r2, [r3, #12]
        input_buffer->offset += 4;
 8001a94:	683b      	ldr	r3, [r7, #0]
 8001a96:	689b      	ldr	r3, [r3, #8]
 8001a98:	1d1a      	adds	r2, r3, #4
 8001a9a:	683b      	ldr	r3, [r7, #0]
 8001a9c:	609a      	str	r2, [r3, #8]
        return true;
 8001a9e:	2301      	movs	r3, #1
 8001aa0:	e0b1      	b.n	8001c06 <parse_value+0x1c2>
    }
    /* false */
    if (can_read(input_buffer, 5) && (strncmp((const char*)buffer_at_offset(input_buffer), "false", 5) == 0))
 8001aa2:	683b      	ldr	r3, [r7, #0]
 8001aa4:	2b00      	cmp	r3, #0
 8001aa6:	d01d      	beq.n	8001ae4 <parse_value+0xa0>
 8001aa8:	683b      	ldr	r3, [r7, #0]
 8001aaa:	689b      	ldr	r3, [r3, #8]
 8001aac:	1d5a      	adds	r2, r3, #5
 8001aae:	683b      	ldr	r3, [r7, #0]
 8001ab0:	685b      	ldr	r3, [r3, #4]
 8001ab2:	429a      	cmp	r2, r3
 8001ab4:	d816      	bhi.n	8001ae4 <parse_value+0xa0>
 8001ab6:	683b      	ldr	r3, [r7, #0]
 8001ab8:	681a      	ldr	r2, [r3, #0]
 8001aba:	683b      	ldr	r3, [r7, #0]
 8001abc:	689b      	ldr	r3, [r3, #8]
 8001abe:	4413      	add	r3, r2
 8001ac0:	2205      	movs	r2, #5
 8001ac2:	4954      	ldr	r1, [pc, #336]	; (8001c14 <parse_value+0x1d0>)
 8001ac4:	4618      	mov	r0, r3
 8001ac6:	f009 f9ab 	bl	800ae20 <strncmp>
 8001aca:	4603      	mov	r3, r0
 8001acc:	2b00      	cmp	r3, #0
 8001ace:	d109      	bne.n	8001ae4 <parse_value+0xa0>
    {
        item->type = cJSON_False;
 8001ad0:	687b      	ldr	r3, [r7, #4]
 8001ad2:	2201      	movs	r2, #1
 8001ad4:	60da      	str	r2, [r3, #12]
        input_buffer->offset += 5;
 8001ad6:	683b      	ldr	r3, [r7, #0]
 8001ad8:	689b      	ldr	r3, [r3, #8]
 8001ada:	1d5a      	adds	r2, r3, #5
 8001adc:	683b      	ldr	r3, [r7, #0]
 8001ade:	609a      	str	r2, [r3, #8]
        return true;
 8001ae0:	2301      	movs	r3, #1
 8001ae2:	e090      	b.n	8001c06 <parse_value+0x1c2>
    }
    /* true */
    if (can_read(input_buffer, 4) && (strncmp((const char*)buffer_at_offset(input_buffer), "true", 4) == 0))
 8001ae4:	683b      	ldr	r3, [r7, #0]
 8001ae6:	2b00      	cmp	r3, #0
 8001ae8:	d020      	beq.n	8001b2c <parse_value+0xe8>
 8001aea:	683b      	ldr	r3, [r7, #0]
 8001aec:	689b      	ldr	r3, [r3, #8]
 8001aee:	1d1a      	adds	r2, r3, #4
 8001af0:	683b      	ldr	r3, [r7, #0]
 8001af2:	685b      	ldr	r3, [r3, #4]
 8001af4:	429a      	cmp	r2, r3
 8001af6:	d819      	bhi.n	8001b2c <parse_value+0xe8>
 8001af8:	683b      	ldr	r3, [r7, #0]
 8001afa:	681a      	ldr	r2, [r3, #0]
 8001afc:	683b      	ldr	r3, [r7, #0]
 8001afe:	689b      	ldr	r3, [r3, #8]
 8001b00:	4413      	add	r3, r2
 8001b02:	2204      	movs	r2, #4
 8001b04:	4944      	ldr	r1, [pc, #272]	; (8001c18 <parse_value+0x1d4>)
 8001b06:	4618      	mov	r0, r3
 8001b08:	f009 f98a 	bl	800ae20 <strncmp>
 8001b0c:	4603      	mov	r3, r0
 8001b0e:	2b00      	cmp	r3, #0
 8001b10:	d10c      	bne.n	8001b2c <parse_value+0xe8>
    {
        item->type = cJSON_True;
 8001b12:	687b      	ldr	r3, [r7, #4]
 8001b14:	2202      	movs	r2, #2
 8001b16:	60da      	str	r2, [r3, #12]
        item->valueint = 1;
 8001b18:	687b      	ldr	r3, [r7, #4]
 8001b1a:	2201      	movs	r2, #1
 8001b1c:	615a      	str	r2, [r3, #20]
        input_buffer->offset += 4;
 8001b1e:	683b      	ldr	r3, [r7, #0]
 8001b20:	689b      	ldr	r3, [r3, #8]
 8001b22:	1d1a      	adds	r2, r3, #4
 8001b24:	683b      	ldr	r3, [r7, #0]
 8001b26:	609a      	str	r2, [r3, #8]
        return true;
 8001b28:	2301      	movs	r3, #1
 8001b2a:	e06c      	b.n	8001c06 <parse_value+0x1c2>
    }
    /* string */
    if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == '\"'))
 8001b2c:	683b      	ldr	r3, [r7, #0]
 8001b2e:	2b00      	cmp	r3, #0
 8001b30:	d013      	beq.n	8001b5a <parse_value+0x116>
 8001b32:	683b      	ldr	r3, [r7, #0]
 8001b34:	689a      	ldr	r2, [r3, #8]
 8001b36:	683b      	ldr	r3, [r7, #0]
 8001b38:	685b      	ldr	r3, [r3, #4]
 8001b3a:	429a      	cmp	r2, r3
 8001b3c:	d20d      	bcs.n	8001b5a <parse_value+0x116>
 8001b3e:	683b      	ldr	r3, [r7, #0]
 8001b40:	681a      	ldr	r2, [r3, #0]
 8001b42:	683b      	ldr	r3, [r7, #0]
 8001b44:	689b      	ldr	r3, [r3, #8]
 8001b46:	4413      	add	r3, r2
 8001b48:	781b      	ldrb	r3, [r3, #0]
 8001b4a:	2b22      	cmp	r3, #34	; 0x22
 8001b4c:	d105      	bne.n	8001b5a <parse_value+0x116>
    {
        return parse_string(item, input_buffer);
 8001b4e:	6839      	ldr	r1, [r7, #0]
 8001b50:	6878      	ldr	r0, [r7, #4]
 8001b52:	f7ff fcf9 	bl	8001548 <parse_string>
 8001b56:	4603      	mov	r3, r0
 8001b58:	e055      	b.n	8001c06 <parse_value+0x1c2>
    }
    /* number */
    if (can_access_at_index(input_buffer, 0) && ((buffer_at_offset(input_buffer)[0] == '-') || ((buffer_at_offset(input_buffer)[0] >= '0') && (buffer_at_offset(input_buffer)[0] <= '9'))))
 8001b5a:	683b      	ldr	r3, [r7, #0]
 8001b5c:	2b00      	cmp	r3, #0
 8001b5e:	d023      	beq.n	8001ba8 <parse_value+0x164>
 8001b60:	683b      	ldr	r3, [r7, #0]
 8001b62:	689a      	ldr	r2, [r3, #8]
 8001b64:	683b      	ldr	r3, [r7, #0]
 8001b66:	685b      	ldr	r3, [r3, #4]
 8001b68:	429a      	cmp	r2, r3
 8001b6a:	d21d      	bcs.n	8001ba8 <parse_value+0x164>
 8001b6c:	683b      	ldr	r3, [r7, #0]
 8001b6e:	681a      	ldr	r2, [r3, #0]
 8001b70:	683b      	ldr	r3, [r7, #0]
 8001b72:	689b      	ldr	r3, [r3, #8]
 8001b74:	4413      	add	r3, r2
 8001b76:	781b      	ldrb	r3, [r3, #0]
 8001b78:	2b2d      	cmp	r3, #45	; 0x2d
 8001b7a:	d00f      	beq.n	8001b9c <parse_value+0x158>
 8001b7c:	683b      	ldr	r3, [r7, #0]
 8001b7e:	681a      	ldr	r2, [r3, #0]
 8001b80:	683b      	ldr	r3, [r7, #0]
 8001b82:	689b      	ldr	r3, [r3, #8]
 8001b84:	4413      	add	r3, r2
 8001b86:	781b      	ldrb	r3, [r3, #0]
 8001b88:	2b2f      	cmp	r3, #47	; 0x2f
 8001b8a:	d90d      	bls.n	8001ba8 <parse_value+0x164>
 8001b8c:	683b      	ldr	r3, [r7, #0]
 8001b8e:	681a      	ldr	r2, [r3, #0]
 8001b90:	683b      	ldr	r3, [r7, #0]
 8001b92:	689b      	ldr	r3, [r3, #8]
 8001b94:	4413      	add	r3, r2
 8001b96:	781b      	ldrb	r3, [r3, #0]
 8001b98:	2b39      	cmp	r3, #57	; 0x39
 8001b9a:	d805      	bhi.n	8001ba8 <parse_value+0x164>
    {
        return parse_number(item, input_buffer);
 8001b9c:	6839      	ldr	r1, [r7, #0]
 8001b9e:	6878      	ldr	r0, [r7, #4]
 8001ba0:	f7ff fa9a 	bl	80010d8 <parse_number>
 8001ba4:	4603      	mov	r3, r0
 8001ba6:	e02e      	b.n	8001c06 <parse_value+0x1c2>
    }
    /* array */
    if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == '['))
 8001ba8:	683b      	ldr	r3, [r7, #0]
 8001baa:	2b00      	cmp	r3, #0
 8001bac:	d013      	beq.n	8001bd6 <parse_value+0x192>
 8001bae:	683b      	ldr	r3, [r7, #0]
 8001bb0:	689a      	ldr	r2, [r3, #8]
 8001bb2:	683b      	ldr	r3, [r7, #0]
 8001bb4:	685b      	ldr	r3, [r3, #4]
 8001bb6:	429a      	cmp	r2, r3
 8001bb8:	d20d      	bcs.n	8001bd6 <parse_value+0x192>
 8001bba:	683b      	ldr	r3, [r7, #0]
 8001bbc:	681a      	ldr	r2, [r3, #0]
 8001bbe:	683b      	ldr	r3, [r7, #0]
 8001bc0:	689b      	ldr	r3, [r3, #8]
 8001bc2:	4413      	add	r3, r2
 8001bc4:	781b      	ldrb	r3, [r3, #0]
 8001bc6:	2b5b      	cmp	r3, #91	; 0x5b
 8001bc8:	d105      	bne.n	8001bd6 <parse_value+0x192>
    {
        return parse_array(item, input_buffer);
 8001bca:	6839      	ldr	r1, [r7, #0]
 8001bcc:	6878      	ldr	r0, [r7, #4]
 8001bce:	f000 f825 	bl	8001c1c <parse_array>
 8001bd2:	4603      	mov	r3, r0
 8001bd4:	e017      	b.n	8001c06 <parse_value+0x1c2>
    }
    /* object */
    if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == '{'))
 8001bd6:	683b      	ldr	r3, [r7, #0]
 8001bd8:	2b00      	cmp	r3, #0
 8001bda:	d013      	beq.n	8001c04 <parse_value+0x1c0>
 8001bdc:	683b      	ldr	r3, [r7, #0]
 8001bde:	689a      	ldr	r2, [r3, #8]
 8001be0:	683b      	ldr	r3, [r7, #0]
 8001be2:	685b      	ldr	r3, [r3, #4]
 8001be4:	429a      	cmp	r2, r3
 8001be6:	d20d      	bcs.n	8001c04 <parse_value+0x1c0>
 8001be8:	683b      	ldr	r3, [r7, #0]
 8001bea:	681a      	ldr	r2, [r3, #0]
 8001bec:	683b      	ldr	r3, [r7, #0]
 8001bee:	689b      	ldr	r3, [r3, #8]
 8001bf0:	4413      	add	r3, r2
 8001bf2:	781b      	ldrb	r3, [r3, #0]
 8001bf4:	2b7b      	cmp	r3, #123	; 0x7b
 8001bf6:	d105      	bne.n	8001c04 <parse_value+0x1c0>
    {
        return parse_object(item, input_buffer);
 8001bf8:	6839      	ldr	r1, [r7, #0]
 8001bfa:	6878      	ldr	r0, [r7, #4]
 8001bfc:	f000 f8d2 	bl	8001da4 <parse_object>
 8001c00:	4603      	mov	r3, r0
 8001c02:	e000      	b.n	8001c06 <parse_value+0x1c2>
    }

    return false;
 8001c04:	2300      	movs	r3, #0
}
 8001c06:	4618      	mov	r0, r3
 8001c08:	3708      	adds	r7, #8
 8001c0a:	46bd      	mov	sp, r7
 8001c0c:	bd80      	pop	{r7, pc}
 8001c0e:	bf00      	nop
 8001c10:	080105a4 	.word	0x080105a4
 8001c14:	080105d4 	.word	0x080105d4
 8001c18:	080105dc 	.word	0x080105dc

08001c1c <parse_array>:
    }
}

/* Build an array from input text. */
static cJSON_bool parse_array(cJSON * const item, parse_buffer * const input_buffer)
{
 8001c1c:	b580      	push	{r7, lr}
 8001c1e:	b086      	sub	sp, #24
 8001c20:	af00      	add	r7, sp, #0
 8001c22:	6078      	str	r0, [r7, #4]
 8001c24:	6039      	str	r1, [r7, #0]
    cJSON *head = NULL; /* head of the linked list */
 8001c26:	2300      	movs	r3, #0
 8001c28:	617b      	str	r3, [r7, #20]
    cJSON *current_item = NULL;
 8001c2a:	2300      	movs	r3, #0
 8001c2c:	613b      	str	r3, [r7, #16]

    if (input_buffer->depth >= CJSON_NESTING_LIMIT)
 8001c2e:	683b      	ldr	r3, [r7, #0]
 8001c30:	68db      	ldr	r3, [r3, #12]
 8001c32:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001c36:	d301      	bcc.n	8001c3c <parse_array+0x20>
    {
        return false; /* to deeply nested */
 8001c38:	2300      	movs	r3, #0
 8001c3a:	e0af      	b.n	8001d9c <parse_array+0x180>
    }
    input_buffer->depth++;
 8001c3c:	683b      	ldr	r3, [r7, #0]
 8001c3e:	68db      	ldr	r3, [r3, #12]
 8001c40:	1c5a      	adds	r2, r3, #1
 8001c42:	683b      	ldr	r3, [r7, #0]
 8001c44:	60da      	str	r2, [r3, #12]

    if (buffer_at_offset(input_buffer)[0] != '[')
 8001c46:	683b      	ldr	r3, [r7, #0]
 8001c48:	681a      	ldr	r2, [r3, #0]
 8001c4a:	683b      	ldr	r3, [r7, #0]
 8001c4c:	689b      	ldr	r3, [r3, #8]
 8001c4e:	4413      	add	r3, r2
 8001c50:	781b      	ldrb	r3, [r3, #0]
 8001c52:	2b5b      	cmp	r3, #91	; 0x5b
 8001c54:	f040 8094 	bne.w	8001d80 <parse_array+0x164>
    {
        /* not an array */
        goto fail;
    }

    input_buffer->offset++;
 8001c58:	683b      	ldr	r3, [r7, #0]
 8001c5a:	689b      	ldr	r3, [r3, #8]
 8001c5c:	1c5a      	adds	r2, r3, #1
 8001c5e:	683b      	ldr	r3, [r7, #0]
 8001c60:	609a      	str	r2, [r3, #8]
    buffer_skip_whitespace(input_buffer);
 8001c62:	6838      	ldr	r0, [r7, #0]
 8001c64:	f7ff fdb6 	bl	80017d4 <buffer_skip_whitespace>
    if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == ']'))
 8001c68:	683b      	ldr	r3, [r7, #0]
 8001c6a:	2b00      	cmp	r3, #0
 8001c6c:	d00d      	beq.n	8001c8a <parse_array+0x6e>
 8001c6e:	683b      	ldr	r3, [r7, #0]
 8001c70:	689a      	ldr	r2, [r3, #8]
 8001c72:	683b      	ldr	r3, [r7, #0]
 8001c74:	685b      	ldr	r3, [r3, #4]
 8001c76:	429a      	cmp	r2, r3
 8001c78:	d207      	bcs.n	8001c8a <parse_array+0x6e>
 8001c7a:	683b      	ldr	r3, [r7, #0]
 8001c7c:	681a      	ldr	r2, [r3, #0]
 8001c7e:	683b      	ldr	r3, [r7, #0]
 8001c80:	689b      	ldr	r3, [r3, #8]
 8001c82:	4413      	add	r3, r2
 8001c84:	781b      	ldrb	r3, [r3, #0]
 8001c86:	2b5d      	cmp	r3, #93	; 0x5d
 8001c88:	d061      	beq.n	8001d4e <parse_array+0x132>
        /* empty array */
        goto success;
    }

    /* check if we skipped to the end of the buffer */
    if (cannot_access_at_index(input_buffer, 0))
 8001c8a:	683b      	ldr	r3, [r7, #0]
 8001c8c:	2b00      	cmp	r3, #0
 8001c8e:	d005      	beq.n	8001c9c <parse_array+0x80>
 8001c90:	683b      	ldr	r3, [r7, #0]
 8001c92:	689a      	ldr	r2, [r3, #8]
 8001c94:	683b      	ldr	r3, [r7, #0]
 8001c96:	685b      	ldr	r3, [r3, #4]
 8001c98:	429a      	cmp	r2, r3
 8001c9a:	d305      	bcc.n	8001ca8 <parse_array+0x8c>
    {
        input_buffer->offset--;
 8001c9c:	683b      	ldr	r3, [r7, #0]
 8001c9e:	689b      	ldr	r3, [r3, #8]
 8001ca0:	1e5a      	subs	r2, r3, #1
 8001ca2:	683b      	ldr	r3, [r7, #0]
 8001ca4:	609a      	str	r2, [r3, #8]
        goto fail;
 8001ca6:	e072      	b.n	8001d8e <parse_array+0x172>
    }

    /* step back to character in front of the first element */
    input_buffer->offset--;
 8001ca8:	683b      	ldr	r3, [r7, #0]
 8001caa:	689b      	ldr	r3, [r3, #8]
 8001cac:	1e5a      	subs	r2, r3, #1
 8001cae:	683b      	ldr	r3, [r7, #0]
 8001cb0:	609a      	str	r2, [r3, #8]
    /* loop through the comma separated array elements */
    do
    {
        /* allocate next item */
        cJSON *new_item = cJSON_New_Item(&(input_buffer->hooks));
 8001cb2:	683b      	ldr	r3, [r7, #0]
 8001cb4:	3310      	adds	r3, #16
 8001cb6:	4618      	mov	r0, r3
 8001cb8:	f7ff f9a6 	bl	8001008 <cJSON_New_Item>
 8001cbc:	60f8      	str	r0, [r7, #12]
        if (new_item == NULL)
 8001cbe:	68fb      	ldr	r3, [r7, #12]
 8001cc0:	2b00      	cmp	r3, #0
 8001cc2:	d05f      	beq.n	8001d84 <parse_array+0x168>
        {
            goto fail; /* allocation failure */
        }

        /* attach next item to list */
        if (head == NULL)
 8001cc4:	697b      	ldr	r3, [r7, #20]
 8001cc6:	2b00      	cmp	r3, #0
 8001cc8:	d104      	bne.n	8001cd4 <parse_array+0xb8>
        {
            /* start the linked list */
            current_item = head = new_item;
 8001cca:	68fb      	ldr	r3, [r7, #12]
 8001ccc:	617b      	str	r3, [r7, #20]
 8001cce:	697b      	ldr	r3, [r7, #20]
 8001cd0:	613b      	str	r3, [r7, #16]
 8001cd2:	e007      	b.n	8001ce4 <parse_array+0xc8>
        }
        else
        {
            /* add to the end and advance */
            current_item->next = new_item;
 8001cd4:	693b      	ldr	r3, [r7, #16]
 8001cd6:	68fa      	ldr	r2, [r7, #12]
 8001cd8:	601a      	str	r2, [r3, #0]
            new_item->prev = current_item;
 8001cda:	68fb      	ldr	r3, [r7, #12]
 8001cdc:	693a      	ldr	r2, [r7, #16]
 8001cde:	605a      	str	r2, [r3, #4]
            current_item = new_item;
 8001ce0:	68fb      	ldr	r3, [r7, #12]
 8001ce2:	613b      	str	r3, [r7, #16]
        }

        /* parse next value */
        input_buffer->offset++;
 8001ce4:	683b      	ldr	r3, [r7, #0]
 8001ce6:	689b      	ldr	r3, [r3, #8]
 8001ce8:	1c5a      	adds	r2, r3, #1
 8001cea:	683b      	ldr	r3, [r7, #0]
 8001cec:	609a      	str	r2, [r3, #8]
        buffer_skip_whitespace(input_buffer);
 8001cee:	6838      	ldr	r0, [r7, #0]
 8001cf0:	f7ff fd70 	bl	80017d4 <buffer_skip_whitespace>
        if (!parse_value(current_item, input_buffer))
 8001cf4:	6839      	ldr	r1, [r7, #0]
 8001cf6:	6938      	ldr	r0, [r7, #16]
 8001cf8:	f7ff fea4 	bl	8001a44 <parse_value>
 8001cfc:	4603      	mov	r3, r0
 8001cfe:	2b00      	cmp	r3, #0
 8001d00:	d042      	beq.n	8001d88 <parse_array+0x16c>
        {
            goto fail; /* failed to parse value */
        }
        buffer_skip_whitespace(input_buffer);
 8001d02:	6838      	ldr	r0, [r7, #0]
 8001d04:	f7ff fd66 	bl	80017d4 <buffer_skip_whitespace>
    }
    while (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == ','));
 8001d08:	683b      	ldr	r3, [r7, #0]
 8001d0a:	2b00      	cmp	r3, #0
 8001d0c:	d00d      	beq.n	8001d2a <parse_array+0x10e>
 8001d0e:	683b      	ldr	r3, [r7, #0]
 8001d10:	689a      	ldr	r2, [r3, #8]
 8001d12:	683b      	ldr	r3, [r7, #0]
 8001d14:	685b      	ldr	r3, [r3, #4]
 8001d16:	429a      	cmp	r2, r3
 8001d18:	d207      	bcs.n	8001d2a <parse_array+0x10e>
 8001d1a:	683b      	ldr	r3, [r7, #0]
 8001d1c:	681a      	ldr	r2, [r3, #0]
 8001d1e:	683b      	ldr	r3, [r7, #0]
 8001d20:	689b      	ldr	r3, [r3, #8]
 8001d22:	4413      	add	r3, r2
 8001d24:	781b      	ldrb	r3, [r3, #0]
 8001d26:	2b2c      	cmp	r3, #44	; 0x2c
 8001d28:	d0c3      	beq.n	8001cb2 <parse_array+0x96>

    if (cannot_access_at_index(input_buffer, 0) || buffer_at_offset(input_buffer)[0] != ']')
 8001d2a:	683b      	ldr	r3, [r7, #0]
 8001d2c:	2b00      	cmp	r3, #0
 8001d2e:	d02d      	beq.n	8001d8c <parse_array+0x170>
 8001d30:	683b      	ldr	r3, [r7, #0]
 8001d32:	689a      	ldr	r2, [r3, #8]
 8001d34:	683b      	ldr	r3, [r7, #0]
 8001d36:	685b      	ldr	r3, [r3, #4]
 8001d38:	429a      	cmp	r2, r3
 8001d3a:	d227      	bcs.n	8001d8c <parse_array+0x170>
 8001d3c:	683b      	ldr	r3, [r7, #0]
 8001d3e:	681a      	ldr	r2, [r3, #0]
 8001d40:	683b      	ldr	r3, [r7, #0]
 8001d42:	689b      	ldr	r3, [r3, #8]
 8001d44:	4413      	add	r3, r2
 8001d46:	781b      	ldrb	r3, [r3, #0]
 8001d48:	2b5d      	cmp	r3, #93	; 0x5d
 8001d4a:	d11f      	bne.n	8001d8c <parse_array+0x170>
    {
        goto fail; /* expected end of array */
    }

success:
 8001d4c:	e000      	b.n	8001d50 <parse_array+0x134>
        goto success;
 8001d4e:	bf00      	nop
    input_buffer->depth--;
 8001d50:	683b      	ldr	r3, [r7, #0]
 8001d52:	68db      	ldr	r3, [r3, #12]
 8001d54:	1e5a      	subs	r2, r3, #1
 8001d56:	683b      	ldr	r3, [r7, #0]
 8001d58:	60da      	str	r2, [r3, #12]

    if (head != NULL) {
 8001d5a:	697b      	ldr	r3, [r7, #20]
 8001d5c:	2b00      	cmp	r3, #0
 8001d5e:	d002      	beq.n	8001d66 <parse_array+0x14a>
        head->prev = current_item;
 8001d60:	697b      	ldr	r3, [r7, #20]
 8001d62:	693a      	ldr	r2, [r7, #16]
 8001d64:	605a      	str	r2, [r3, #4]
    }

    item->type = cJSON_Array;
 8001d66:	687b      	ldr	r3, [r7, #4]
 8001d68:	2220      	movs	r2, #32
 8001d6a:	60da      	str	r2, [r3, #12]
    item->child = head;
 8001d6c:	687b      	ldr	r3, [r7, #4]
 8001d6e:	697a      	ldr	r2, [r7, #20]
 8001d70:	609a      	str	r2, [r3, #8]

    input_buffer->offset++;
 8001d72:	683b      	ldr	r3, [r7, #0]
 8001d74:	689b      	ldr	r3, [r3, #8]
 8001d76:	1c5a      	adds	r2, r3, #1
 8001d78:	683b      	ldr	r3, [r7, #0]
 8001d7a:	609a      	str	r2, [r3, #8]

    return true;
 8001d7c:	2301      	movs	r3, #1
 8001d7e:	e00d      	b.n	8001d9c <parse_array+0x180>
        goto fail;
 8001d80:	bf00      	nop
 8001d82:	e004      	b.n	8001d8e <parse_array+0x172>
            goto fail; /* allocation failure */
 8001d84:	bf00      	nop
 8001d86:	e002      	b.n	8001d8e <parse_array+0x172>
            goto fail; /* failed to parse value */
 8001d88:	bf00      	nop
 8001d8a:	e000      	b.n	8001d8e <parse_array+0x172>
        goto fail; /* expected end of array */
 8001d8c:	bf00      	nop

fail:
    if (head != NULL)
 8001d8e:	697b      	ldr	r3, [r7, #20]
 8001d90:	2b00      	cmp	r3, #0
 8001d92:	d002      	beq.n	8001d9a <parse_array+0x17e>
    {
        cJSON_Delete(head);
 8001d94:	6978      	ldr	r0, [r7, #20]
 8001d96:	f7ff f94d 	bl	8001034 <cJSON_Delete>
    }

    return false;
 8001d9a:	2300      	movs	r3, #0
}
 8001d9c:	4618      	mov	r0, r3
 8001d9e:	3718      	adds	r7, #24
 8001da0:	46bd      	mov	sp, r7
 8001da2:	bd80      	pop	{r7, pc}

08001da4 <parse_object>:
    return true;
}

/* Build an object from the text. */
static cJSON_bool parse_object(cJSON * const item, parse_buffer * const input_buffer)
{
 8001da4:	b580      	push	{r7, lr}
 8001da6:	b086      	sub	sp, #24
 8001da8:	af00      	add	r7, sp, #0
 8001daa:	6078      	str	r0, [r7, #4]
 8001dac:	6039      	str	r1, [r7, #0]
    cJSON *head = NULL; /* linked list head */
 8001dae:	2300      	movs	r3, #0
 8001db0:	617b      	str	r3, [r7, #20]
    cJSON *current_item = NULL;
 8001db2:	2300      	movs	r3, #0
 8001db4:	613b      	str	r3, [r7, #16]

    if (input_buffer->depth >= CJSON_NESTING_LIMIT)
 8001db6:	683b      	ldr	r3, [r7, #0]
 8001db8:	68db      	ldr	r3, [r3, #12]
 8001dba:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001dbe:	d301      	bcc.n	8001dc4 <parse_object+0x20>
    {
        return false; /* to deeply nested */
 8001dc0:	2300      	movs	r3, #0
 8001dc2:	e0ea      	b.n	8001f9a <parse_object+0x1f6>
    }
    input_buffer->depth++;
 8001dc4:	683b      	ldr	r3, [r7, #0]
 8001dc6:	68db      	ldr	r3, [r3, #12]
 8001dc8:	1c5a      	adds	r2, r3, #1
 8001dca:	683b      	ldr	r3, [r7, #0]
 8001dcc:	60da      	str	r2, [r3, #12]

    if (cannot_access_at_index(input_buffer, 0) || (buffer_at_offset(input_buffer)[0] != '{'))
 8001dce:	683b      	ldr	r3, [r7, #0]
 8001dd0:	2b00      	cmp	r3, #0
 8001dd2:	f000 80d0 	beq.w	8001f76 <parse_object+0x1d2>
 8001dd6:	683b      	ldr	r3, [r7, #0]
 8001dd8:	689a      	ldr	r2, [r3, #8]
 8001dda:	683b      	ldr	r3, [r7, #0]
 8001ddc:	685b      	ldr	r3, [r3, #4]
 8001dde:	429a      	cmp	r2, r3
 8001de0:	f080 80c9 	bcs.w	8001f76 <parse_object+0x1d2>
 8001de4:	683b      	ldr	r3, [r7, #0]
 8001de6:	681a      	ldr	r2, [r3, #0]
 8001de8:	683b      	ldr	r3, [r7, #0]
 8001dea:	689b      	ldr	r3, [r3, #8]
 8001dec:	4413      	add	r3, r2
 8001dee:	781b      	ldrb	r3, [r3, #0]
 8001df0:	2b7b      	cmp	r3, #123	; 0x7b
 8001df2:	f040 80c0 	bne.w	8001f76 <parse_object+0x1d2>
    {
        goto fail; /* not an object */
    }

    input_buffer->offset++;
 8001df6:	683b      	ldr	r3, [r7, #0]
 8001df8:	689b      	ldr	r3, [r3, #8]
 8001dfa:	1c5a      	adds	r2, r3, #1
 8001dfc:	683b      	ldr	r3, [r7, #0]
 8001dfe:	609a      	str	r2, [r3, #8]
    buffer_skip_whitespace(input_buffer);
 8001e00:	6838      	ldr	r0, [r7, #0]
 8001e02:	f7ff fce7 	bl	80017d4 <buffer_skip_whitespace>
    if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == '}'))
 8001e06:	683b      	ldr	r3, [r7, #0]
 8001e08:	2b00      	cmp	r3, #0
 8001e0a:	d00e      	beq.n	8001e2a <parse_object+0x86>
 8001e0c:	683b      	ldr	r3, [r7, #0]
 8001e0e:	689a      	ldr	r2, [r3, #8]
 8001e10:	683b      	ldr	r3, [r7, #0]
 8001e12:	685b      	ldr	r3, [r3, #4]
 8001e14:	429a      	cmp	r2, r3
 8001e16:	d208      	bcs.n	8001e2a <parse_object+0x86>
 8001e18:	683b      	ldr	r3, [r7, #0]
 8001e1a:	681a      	ldr	r2, [r3, #0]
 8001e1c:	683b      	ldr	r3, [r7, #0]
 8001e1e:	689b      	ldr	r3, [r3, #8]
 8001e20:	4413      	add	r3, r2
 8001e22:	781b      	ldrb	r3, [r3, #0]
 8001e24:	2b7d      	cmp	r3, #125	; 0x7d
 8001e26:	f000 808d 	beq.w	8001f44 <parse_object+0x1a0>
    {
        goto success; /* empty object */
    }

    /* check if we skipped to the end of the buffer */
    if (cannot_access_at_index(input_buffer, 0))
 8001e2a:	683b      	ldr	r3, [r7, #0]
 8001e2c:	2b00      	cmp	r3, #0
 8001e2e:	d005      	beq.n	8001e3c <parse_object+0x98>
 8001e30:	683b      	ldr	r3, [r7, #0]
 8001e32:	689a      	ldr	r2, [r3, #8]
 8001e34:	683b      	ldr	r3, [r7, #0]
 8001e36:	685b      	ldr	r3, [r3, #4]
 8001e38:	429a      	cmp	r2, r3
 8001e3a:	d305      	bcc.n	8001e48 <parse_object+0xa4>
    {
        input_buffer->offset--;
 8001e3c:	683b      	ldr	r3, [r7, #0]
 8001e3e:	689b      	ldr	r3, [r3, #8]
 8001e40:	1e5a      	subs	r2, r3, #1
 8001e42:	683b      	ldr	r3, [r7, #0]
 8001e44:	609a      	str	r2, [r3, #8]
        goto fail;
 8001e46:	e0a1      	b.n	8001f8c <parse_object+0x1e8>
    }

    /* step back to character in front of the first element */
    input_buffer->offset--;
 8001e48:	683b      	ldr	r3, [r7, #0]
 8001e4a:	689b      	ldr	r3, [r3, #8]
 8001e4c:	1e5a      	subs	r2, r3, #1
 8001e4e:	683b      	ldr	r3, [r7, #0]
 8001e50:	609a      	str	r2, [r3, #8]
    /* loop through the comma separated array elements */
    do
    {
        /* allocate next item */
        cJSON *new_item = cJSON_New_Item(&(input_buffer->hooks));
 8001e52:	683b      	ldr	r3, [r7, #0]
 8001e54:	3310      	adds	r3, #16
 8001e56:	4618      	mov	r0, r3
 8001e58:	f7ff f8d6 	bl	8001008 <cJSON_New_Item>
 8001e5c:	60f8      	str	r0, [r7, #12]
        if (new_item == NULL)
 8001e5e:	68fb      	ldr	r3, [r7, #12]
 8001e60:	2b00      	cmp	r3, #0
 8001e62:	f000 808a 	beq.w	8001f7a <parse_object+0x1d6>
        {
            goto fail; /* allocation failure */
        }

        /* attach next item to list */
        if (head == NULL)
 8001e66:	697b      	ldr	r3, [r7, #20]
 8001e68:	2b00      	cmp	r3, #0
 8001e6a:	d104      	bne.n	8001e76 <parse_object+0xd2>
        {
            /* start the linked list */
            current_item = head = new_item;
 8001e6c:	68fb      	ldr	r3, [r7, #12]
 8001e6e:	617b      	str	r3, [r7, #20]
 8001e70:	697b      	ldr	r3, [r7, #20]
 8001e72:	613b      	str	r3, [r7, #16]
 8001e74:	e007      	b.n	8001e86 <parse_object+0xe2>
        }
        else
        {
            /* add to the end and advance */
            current_item->next = new_item;
 8001e76:	693b      	ldr	r3, [r7, #16]
 8001e78:	68fa      	ldr	r2, [r7, #12]
 8001e7a:	601a      	str	r2, [r3, #0]
            new_item->prev = current_item;
 8001e7c:	68fb      	ldr	r3, [r7, #12]
 8001e7e:	693a      	ldr	r2, [r7, #16]
 8001e80:	605a      	str	r2, [r3, #4]
            current_item = new_item;
 8001e82:	68fb      	ldr	r3, [r7, #12]
 8001e84:	613b      	str	r3, [r7, #16]
        }

        /* parse the name of the child */
        input_buffer->offset++;
 8001e86:	683b      	ldr	r3, [r7, #0]
 8001e88:	689b      	ldr	r3, [r3, #8]
 8001e8a:	1c5a      	adds	r2, r3, #1
 8001e8c:	683b      	ldr	r3, [r7, #0]
 8001e8e:	609a      	str	r2, [r3, #8]
        buffer_skip_whitespace(input_buffer);
 8001e90:	6838      	ldr	r0, [r7, #0]
 8001e92:	f7ff fc9f 	bl	80017d4 <buffer_skip_whitespace>
        if (!parse_string(current_item, input_buffer))
 8001e96:	6839      	ldr	r1, [r7, #0]
 8001e98:	6938      	ldr	r0, [r7, #16]
 8001e9a:	f7ff fb55 	bl	8001548 <parse_string>
 8001e9e:	4603      	mov	r3, r0
 8001ea0:	2b00      	cmp	r3, #0
 8001ea2:	d06c      	beq.n	8001f7e <parse_object+0x1da>
        {
            goto fail; /* failed to parse name */
        }
        buffer_skip_whitespace(input_buffer);
 8001ea4:	6838      	ldr	r0, [r7, #0]
 8001ea6:	f7ff fc95 	bl	80017d4 <buffer_skip_whitespace>

        /* swap valuestring and string, because we parsed the name */
        current_item->string = current_item->valuestring;
 8001eaa:	693b      	ldr	r3, [r7, #16]
 8001eac:	691a      	ldr	r2, [r3, #16]
 8001eae:	693b      	ldr	r3, [r7, #16]
 8001eb0:	621a      	str	r2, [r3, #32]
        current_item->valuestring = NULL;
 8001eb2:	693b      	ldr	r3, [r7, #16]
 8001eb4:	2200      	movs	r2, #0
 8001eb6:	611a      	str	r2, [r3, #16]

        if (cannot_access_at_index(input_buffer, 0) || (buffer_at_offset(input_buffer)[0] != ':'))
 8001eb8:	683b      	ldr	r3, [r7, #0]
 8001eba:	2b00      	cmp	r3, #0
 8001ebc:	d061      	beq.n	8001f82 <parse_object+0x1de>
 8001ebe:	683b      	ldr	r3, [r7, #0]
 8001ec0:	689a      	ldr	r2, [r3, #8]
 8001ec2:	683b      	ldr	r3, [r7, #0]
 8001ec4:	685b      	ldr	r3, [r3, #4]
 8001ec6:	429a      	cmp	r2, r3
 8001ec8:	d25b      	bcs.n	8001f82 <parse_object+0x1de>
 8001eca:	683b      	ldr	r3, [r7, #0]
 8001ecc:	681a      	ldr	r2, [r3, #0]
 8001ece:	683b      	ldr	r3, [r7, #0]
 8001ed0:	689b      	ldr	r3, [r3, #8]
 8001ed2:	4413      	add	r3, r2
 8001ed4:	781b      	ldrb	r3, [r3, #0]
 8001ed6:	2b3a      	cmp	r3, #58	; 0x3a
 8001ed8:	d153      	bne.n	8001f82 <parse_object+0x1de>
        {
            goto fail; /* invalid object */
        }

        /* parse the value */
        input_buffer->offset++;
 8001eda:	683b      	ldr	r3, [r7, #0]
 8001edc:	689b      	ldr	r3, [r3, #8]
 8001ede:	1c5a      	adds	r2, r3, #1
 8001ee0:	683b      	ldr	r3, [r7, #0]
 8001ee2:	609a      	str	r2, [r3, #8]
        buffer_skip_whitespace(input_buffer);
 8001ee4:	6838      	ldr	r0, [r7, #0]
 8001ee6:	f7ff fc75 	bl	80017d4 <buffer_skip_whitespace>
        if (!parse_value(current_item, input_buffer))
 8001eea:	6839      	ldr	r1, [r7, #0]
 8001eec:	6938      	ldr	r0, [r7, #16]
 8001eee:	f7ff fda9 	bl	8001a44 <parse_value>
 8001ef2:	4603      	mov	r3, r0
 8001ef4:	2b00      	cmp	r3, #0
 8001ef6:	d046      	beq.n	8001f86 <parse_object+0x1e2>
        {
            goto fail; /* failed to parse value */
        }
        buffer_skip_whitespace(input_buffer);
 8001ef8:	6838      	ldr	r0, [r7, #0]
 8001efa:	f7ff fc6b 	bl	80017d4 <buffer_skip_whitespace>
    }
    while (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == ','));
 8001efe:	683b      	ldr	r3, [r7, #0]
 8001f00:	2b00      	cmp	r3, #0
 8001f02:	d00d      	beq.n	8001f20 <parse_object+0x17c>
 8001f04:	683b      	ldr	r3, [r7, #0]
 8001f06:	689a      	ldr	r2, [r3, #8]
 8001f08:	683b      	ldr	r3, [r7, #0]
 8001f0a:	685b      	ldr	r3, [r3, #4]
 8001f0c:	429a      	cmp	r2, r3
 8001f0e:	d207      	bcs.n	8001f20 <parse_object+0x17c>
 8001f10:	683b      	ldr	r3, [r7, #0]
 8001f12:	681a      	ldr	r2, [r3, #0]
 8001f14:	683b      	ldr	r3, [r7, #0]
 8001f16:	689b      	ldr	r3, [r3, #8]
 8001f18:	4413      	add	r3, r2
 8001f1a:	781b      	ldrb	r3, [r3, #0]
 8001f1c:	2b2c      	cmp	r3, #44	; 0x2c
 8001f1e:	d098      	beq.n	8001e52 <parse_object+0xae>

    if (cannot_access_at_index(input_buffer, 0) || (buffer_at_offset(input_buffer)[0] != '}'))
 8001f20:	683b      	ldr	r3, [r7, #0]
 8001f22:	2b00      	cmp	r3, #0
 8001f24:	d031      	beq.n	8001f8a <parse_object+0x1e6>
 8001f26:	683b      	ldr	r3, [r7, #0]
 8001f28:	689a      	ldr	r2, [r3, #8]
 8001f2a:	683b      	ldr	r3, [r7, #0]
 8001f2c:	685b      	ldr	r3, [r3, #4]
 8001f2e:	429a      	cmp	r2, r3
 8001f30:	d22b      	bcs.n	8001f8a <parse_object+0x1e6>
 8001f32:	683b      	ldr	r3, [r7, #0]
 8001f34:	681a      	ldr	r2, [r3, #0]
 8001f36:	683b      	ldr	r3, [r7, #0]
 8001f38:	689b      	ldr	r3, [r3, #8]
 8001f3a:	4413      	add	r3, r2
 8001f3c:	781b      	ldrb	r3, [r3, #0]
 8001f3e:	2b7d      	cmp	r3, #125	; 0x7d
 8001f40:	d123      	bne.n	8001f8a <parse_object+0x1e6>
    {
        goto fail; /* expected end of object */
    }

success:
 8001f42:	e000      	b.n	8001f46 <parse_object+0x1a2>
        goto success; /* empty object */
 8001f44:	bf00      	nop
    input_buffer->depth--;
 8001f46:	683b      	ldr	r3, [r7, #0]
 8001f48:	68db      	ldr	r3, [r3, #12]
 8001f4a:	1e5a      	subs	r2, r3, #1
 8001f4c:	683b      	ldr	r3, [r7, #0]
 8001f4e:	60da      	str	r2, [r3, #12]

    if (head != NULL) {
 8001f50:	697b      	ldr	r3, [r7, #20]
 8001f52:	2b00      	cmp	r3, #0
 8001f54:	d002      	beq.n	8001f5c <parse_object+0x1b8>
        head->prev = current_item;
 8001f56:	697b      	ldr	r3, [r7, #20]
 8001f58:	693a      	ldr	r2, [r7, #16]
 8001f5a:	605a      	str	r2, [r3, #4]
    }

    item->type = cJSON_Object;
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	2240      	movs	r2, #64	; 0x40
 8001f60:	60da      	str	r2, [r3, #12]
    item->child = head;
 8001f62:	687b      	ldr	r3, [r7, #4]
 8001f64:	697a      	ldr	r2, [r7, #20]
 8001f66:	609a      	str	r2, [r3, #8]

    input_buffer->offset++;
 8001f68:	683b      	ldr	r3, [r7, #0]
 8001f6a:	689b      	ldr	r3, [r3, #8]
 8001f6c:	1c5a      	adds	r2, r3, #1
 8001f6e:	683b      	ldr	r3, [r7, #0]
 8001f70:	609a      	str	r2, [r3, #8]
    return true;
 8001f72:	2301      	movs	r3, #1
 8001f74:	e011      	b.n	8001f9a <parse_object+0x1f6>
        goto fail; /* not an object */
 8001f76:	bf00      	nop
 8001f78:	e008      	b.n	8001f8c <parse_object+0x1e8>
            goto fail; /* allocation failure */
 8001f7a:	bf00      	nop
 8001f7c:	e006      	b.n	8001f8c <parse_object+0x1e8>
            goto fail; /* failed to parse name */
 8001f7e:	bf00      	nop
 8001f80:	e004      	b.n	8001f8c <parse_object+0x1e8>
            goto fail; /* invalid object */
 8001f82:	bf00      	nop
 8001f84:	e002      	b.n	8001f8c <parse_object+0x1e8>
            goto fail; /* failed to parse value */
 8001f86:	bf00      	nop
 8001f88:	e000      	b.n	8001f8c <parse_object+0x1e8>
        goto fail; /* expected end of object */
 8001f8a:	bf00      	nop

fail:
    if (head != NULL)
 8001f8c:	697b      	ldr	r3, [r7, #20]
 8001f8e:	2b00      	cmp	r3, #0
 8001f90:	d002      	beq.n	8001f98 <parse_object+0x1f4>
    {
        cJSON_Delete(head);
 8001f92:	6978      	ldr	r0, [r7, #20]
 8001f94:	f7ff f84e 	bl	8001034 <cJSON_Delete>
    }

    return false;
 8001f98:	2300      	movs	r3, #0
}
 8001f9a:	4618      	mov	r0, r3
 8001f9c:	3718      	adds	r7, #24
 8001f9e:	46bd      	mov	sp, r7
 8001fa0:	bd80      	pop	{r7, pc}
	...

08001fa4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001fa4:	b580      	push	{r7, lr}
 8001fa6:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001fa8:	f002 f8b6 	bl	8004118 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001fac:	f000 f820 	bl	8001ff0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001fb0:	f000 f96c 	bl	800228c <MX_GPIO_Init>
  MX_DMA_Init();
 8001fb4:	f000 f92c 	bl	8002210 <MX_DMA_Init>
  MX_USART2_UART_Init();
 8001fb8:	f000 f900 	bl	80021bc <MX_USART2_UART_Init>
  MX_USART1_UART_Init();
 8001fbc:	f000 f8d4 	bl	8002168 <MX_USART1_UART_Init>
  MX_ADC1_Init();
 8001fc0:	f000 f880 	bl	80020c4 <MX_ADC1_Init>
  /* USER CODE BEGIN 2 */


  CONFIGURACION_INICIAL();
 8001fc4:	f000 fcd4 	bl	8002970 <CONFIGURACION_INICIAL>

  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 8001fc8:	f004 ff20 	bl	8006e0c <osKernelInitialize>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* creation of defaultTask */
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001fcc:	4a05      	ldr	r2, [pc, #20]	; (8001fe4 <main+0x40>)
 8001fce:	2100      	movs	r1, #0
 8001fd0:	4805      	ldr	r0, [pc, #20]	; (8001fe8 <main+0x44>)
 8001fd2:	f004 ff65 	bl	8006ea0 <osThreadNew>
 8001fd6:	4603      	mov	r3, r0
 8001fd8:	4a04      	ldr	r2, [pc, #16]	; (8001fec <main+0x48>)
 8001fda:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_EVENTS */
  /* add events, ... */
  /* USER CODE END RTOS_EVENTS */

  /* Start scheduler */
  osKernelStart();
 8001fdc:	f004 ff3a 	bl	8006e54 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8001fe0:	e7fe      	b.n	8001fe0 <main+0x3c>
 8001fe2:	bf00      	nop
 8001fe4:	08010b28 	.word	0x08010b28
 8001fe8:	08002419 	.word	0x08002419
 8001fec:	20000bec 	.word	0x20000bec

08001ff0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001ff0:	b580      	push	{r7, lr}
 8001ff2:	b094      	sub	sp, #80	; 0x50
 8001ff4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001ff6:	f107 0320 	add.w	r3, r7, #32
 8001ffa:	2230      	movs	r2, #48	; 0x30
 8001ffc:	2100      	movs	r1, #0
 8001ffe:	4618      	mov	r0, r3
 8002000:	f008 fc2e 	bl	800a860 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002004:	f107 030c 	add.w	r3, r7, #12
 8002008:	2200      	movs	r2, #0
 800200a:	601a      	str	r2, [r3, #0]
 800200c:	605a      	str	r2, [r3, #4]
 800200e:	609a      	str	r2, [r3, #8]
 8002010:	60da      	str	r2, [r3, #12]
 8002012:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8002014:	2300      	movs	r3, #0
 8002016:	60bb      	str	r3, [r7, #8]
 8002018:	4b28      	ldr	r3, [pc, #160]	; (80020bc <SystemClock_Config+0xcc>)
 800201a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800201c:	4a27      	ldr	r2, [pc, #156]	; (80020bc <SystemClock_Config+0xcc>)
 800201e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002022:	6413      	str	r3, [r2, #64]	; 0x40
 8002024:	4b25      	ldr	r3, [pc, #148]	; (80020bc <SystemClock_Config+0xcc>)
 8002026:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002028:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800202c:	60bb      	str	r3, [r7, #8]
 800202e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002030:	2300      	movs	r3, #0
 8002032:	607b      	str	r3, [r7, #4]
 8002034:	4b22      	ldr	r3, [pc, #136]	; (80020c0 <SystemClock_Config+0xd0>)
 8002036:	681b      	ldr	r3, [r3, #0]
 8002038:	4a21      	ldr	r2, [pc, #132]	; (80020c0 <SystemClock_Config+0xd0>)
 800203a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800203e:	6013      	str	r3, [r2, #0]
 8002040:	4b1f      	ldr	r3, [pc, #124]	; (80020c0 <SystemClock_Config+0xd0>)
 8002042:	681b      	ldr	r3, [r3, #0]
 8002044:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8002048:	607b      	str	r3, [r7, #4]
 800204a:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800204c:	2302      	movs	r3, #2
 800204e:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002050:	2301      	movs	r3, #1
 8002052:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002054:	2310      	movs	r3, #16
 8002056:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002058:	2302      	movs	r3, #2
 800205a:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800205c:	2300      	movs	r3, #0
 800205e:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 16;
 8002060:	2310      	movs	r3, #16
 8002062:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 336;
 8002064:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8002068:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 800206a:	2304      	movs	r3, #4
 800206c:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800206e:	2304      	movs	r3, #4
 8002070:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002072:	f107 0320 	add.w	r3, r7, #32
 8002076:	4618      	mov	r0, r3
 8002078:	f003 fb40 	bl	80056fc <HAL_RCC_OscConfig>
 800207c:	4603      	mov	r3, r0
 800207e:	2b00      	cmp	r3, #0
 8002080:	d001      	beq.n	8002086 <SystemClock_Config+0x96>
  {
    Error_Handler();
 8002082:	f000 f9d1 	bl	8002428 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002086:	230f      	movs	r3, #15
 8002088:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800208a:	2302      	movs	r3, #2
 800208c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800208e:	2300      	movs	r3, #0
 8002090:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8002092:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002096:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8002098:	2300      	movs	r3, #0
 800209a:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800209c:	f107 030c 	add.w	r3, r7, #12
 80020a0:	2102      	movs	r1, #2
 80020a2:	4618      	mov	r0, r3
 80020a4:	f003 fda2 	bl	8005bec <HAL_RCC_ClockConfig>
 80020a8:	4603      	mov	r3, r0
 80020aa:	2b00      	cmp	r3, #0
 80020ac:	d001      	beq.n	80020b2 <SystemClock_Config+0xc2>
  {
    Error_Handler();
 80020ae:	f000 f9bb 	bl	8002428 <Error_Handler>
  }
}
 80020b2:	bf00      	nop
 80020b4:	3750      	adds	r7, #80	; 0x50
 80020b6:	46bd      	mov	sp, r7
 80020b8:	bd80      	pop	{r7, pc}
 80020ba:	bf00      	nop
 80020bc:	40023800 	.word	0x40023800
 80020c0:	40007000 	.word	0x40007000

080020c4 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80020c4:	b580      	push	{r7, lr}
 80020c6:	b084      	sub	sp, #16
 80020c8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80020ca:	463b      	mov	r3, r7
 80020cc:	2200      	movs	r2, #0
 80020ce:	601a      	str	r2, [r3, #0]
 80020d0:	605a      	str	r2, [r3, #4]
 80020d2:	609a      	str	r2, [r3, #8]
 80020d4:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 80020d6:	4b21      	ldr	r3, [pc, #132]	; (800215c <MX_ADC1_Init+0x98>)
 80020d8:	4a21      	ldr	r2, [pc, #132]	; (8002160 <MX_ADC1_Init+0x9c>)
 80020da:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80020dc:	4b1f      	ldr	r3, [pc, #124]	; (800215c <MX_ADC1_Init+0x98>)
 80020de:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 80020e2:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80020e4:	4b1d      	ldr	r3, [pc, #116]	; (800215c <MX_ADC1_Init+0x98>)
 80020e6:	2200      	movs	r2, #0
 80020e8:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80020ea:	4b1c      	ldr	r3, [pc, #112]	; (800215c <MX_ADC1_Init+0x98>)
 80020ec:	2200      	movs	r2, #0
 80020ee:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80020f0:	4b1a      	ldr	r3, [pc, #104]	; (800215c <MX_ADC1_Init+0x98>)
 80020f2:	2200      	movs	r2, #0
 80020f4:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80020f6:	4b19      	ldr	r3, [pc, #100]	; (800215c <MX_ADC1_Init+0x98>)
 80020f8:	2200      	movs	r2, #0
 80020fa:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80020fe:	4b17      	ldr	r3, [pc, #92]	; (800215c <MX_ADC1_Init+0x98>)
 8002100:	2200      	movs	r2, #0
 8002102:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8002104:	4b15      	ldr	r3, [pc, #84]	; (800215c <MX_ADC1_Init+0x98>)
 8002106:	4a17      	ldr	r2, [pc, #92]	; (8002164 <MX_ADC1_Init+0xa0>)
 8002108:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800210a:	4b14      	ldr	r3, [pc, #80]	; (800215c <MX_ADC1_Init+0x98>)
 800210c:	2200      	movs	r2, #0
 800210e:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8002110:	4b12      	ldr	r3, [pc, #72]	; (800215c <MX_ADC1_Init+0x98>)
 8002112:	2201      	movs	r2, #1
 8002114:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8002116:	4b11      	ldr	r3, [pc, #68]	; (800215c <MX_ADC1_Init+0x98>)
 8002118:	2200      	movs	r2, #0
 800211a:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800211e:	4b0f      	ldr	r3, [pc, #60]	; (800215c <MX_ADC1_Init+0x98>)
 8002120:	2201      	movs	r2, #1
 8002122:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8002124:	480d      	ldr	r0, [pc, #52]	; (800215c <MX_ADC1_Init+0x98>)
 8002126:	f002 f869 	bl	80041fc <HAL_ADC_Init>
 800212a:	4603      	mov	r3, r0
 800212c:	2b00      	cmp	r3, #0
 800212e:	d001      	beq.n	8002134 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8002130:	f000 f97a 	bl	8002428 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8002134:	2300      	movs	r3, #0
 8002136:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8002138:	2301      	movs	r3, #1
 800213a:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 800213c:	2300      	movs	r3, #0
 800213e:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8002140:	463b      	mov	r3, r7
 8002142:	4619      	mov	r1, r3
 8002144:	4805      	ldr	r0, [pc, #20]	; (800215c <MX_ADC1_Init+0x98>)
 8002146:	f002 f9e9 	bl	800451c <HAL_ADC_ConfigChannel>
 800214a:	4603      	mov	r3, r0
 800214c:	2b00      	cmp	r3, #0
 800214e:	d001      	beq.n	8002154 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8002150:	f000 f96a 	bl	8002428 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8002154:	bf00      	nop
 8002156:	3710      	adds	r7, #16
 8002158:	46bd      	mov	sp, r7
 800215a:	bd80      	pop	{r7, pc}
 800215c:	200009fc 	.word	0x200009fc
 8002160:	40012000 	.word	0x40012000
 8002164:	0f000001 	.word	0x0f000001

08002168 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8002168:	b580      	push	{r7, lr}
 800216a:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 800216c:	4b11      	ldr	r3, [pc, #68]	; (80021b4 <MX_USART1_UART_Init+0x4c>)
 800216e:	4a12      	ldr	r2, [pc, #72]	; (80021b8 <MX_USART1_UART_Init+0x50>)
 8002170:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8002172:	4b10      	ldr	r3, [pc, #64]	; (80021b4 <MX_USART1_UART_Init+0x4c>)
 8002174:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8002178:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800217a:	4b0e      	ldr	r3, [pc, #56]	; (80021b4 <MX_USART1_UART_Init+0x4c>)
 800217c:	2200      	movs	r2, #0
 800217e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8002180:	4b0c      	ldr	r3, [pc, #48]	; (80021b4 <MX_USART1_UART_Init+0x4c>)
 8002182:	2200      	movs	r2, #0
 8002184:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8002186:	4b0b      	ldr	r3, [pc, #44]	; (80021b4 <MX_USART1_UART_Init+0x4c>)
 8002188:	2200      	movs	r2, #0
 800218a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 800218c:	4b09      	ldr	r3, [pc, #36]	; (80021b4 <MX_USART1_UART_Init+0x4c>)
 800218e:	220c      	movs	r2, #12
 8002190:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002192:	4b08      	ldr	r3, [pc, #32]	; (80021b4 <MX_USART1_UART_Init+0x4c>)
 8002194:	2200      	movs	r2, #0
 8002196:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002198:	4b06      	ldr	r3, [pc, #24]	; (80021b4 <MX_USART1_UART_Init+0x4c>)
 800219a:	2200      	movs	r2, #0
 800219c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800219e:	4805      	ldr	r0, [pc, #20]	; (80021b4 <MX_USART1_UART_Init+0x4c>)
 80021a0:	f003 ff44 	bl	800602c <HAL_UART_Init>
 80021a4:	4603      	mov	r3, r0
 80021a6:	2b00      	cmp	r3, #0
 80021a8:	d001      	beq.n	80021ae <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 80021aa:	f000 f93d 	bl	8002428 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80021ae:	bf00      	nop
 80021b0:	bd80      	pop	{r7, pc}
 80021b2:	bf00      	nop
 80021b4:	20000a44 	.word	0x20000a44
 80021b8:	40011000 	.word	0x40011000

080021bc <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80021bc:	b580      	push	{r7, lr}
 80021be:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80021c0:	4b11      	ldr	r3, [pc, #68]	; (8002208 <MX_USART2_UART_Init+0x4c>)
 80021c2:	4a12      	ldr	r2, [pc, #72]	; (800220c <MX_USART2_UART_Init+0x50>)
 80021c4:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80021c6:	4b10      	ldr	r3, [pc, #64]	; (8002208 <MX_USART2_UART_Init+0x4c>)
 80021c8:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80021cc:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80021ce:	4b0e      	ldr	r3, [pc, #56]	; (8002208 <MX_USART2_UART_Init+0x4c>)
 80021d0:	2200      	movs	r2, #0
 80021d2:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80021d4:	4b0c      	ldr	r3, [pc, #48]	; (8002208 <MX_USART2_UART_Init+0x4c>)
 80021d6:	2200      	movs	r2, #0
 80021d8:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80021da:	4b0b      	ldr	r3, [pc, #44]	; (8002208 <MX_USART2_UART_Init+0x4c>)
 80021dc:	2200      	movs	r2, #0
 80021de:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80021e0:	4b09      	ldr	r3, [pc, #36]	; (8002208 <MX_USART2_UART_Init+0x4c>)
 80021e2:	220c      	movs	r2, #12
 80021e4:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80021e6:	4b08      	ldr	r3, [pc, #32]	; (8002208 <MX_USART2_UART_Init+0x4c>)
 80021e8:	2200      	movs	r2, #0
 80021ea:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80021ec:	4b06      	ldr	r3, [pc, #24]	; (8002208 <MX_USART2_UART_Init+0x4c>)
 80021ee:	2200      	movs	r2, #0
 80021f0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80021f2:	4805      	ldr	r0, [pc, #20]	; (8002208 <MX_USART2_UART_Init+0x4c>)
 80021f4:	f003 ff1a 	bl	800602c <HAL_UART_Init>
 80021f8:	4603      	mov	r3, r0
 80021fa:	2b00      	cmp	r3, #0
 80021fc:	d001      	beq.n	8002202 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80021fe:	f000 f913 	bl	8002428 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8002202:	bf00      	nop
 8002204:	bd80      	pop	{r7, pc}
 8002206:	bf00      	nop
 8002208:	20000a88 	.word	0x20000a88
 800220c:	40004400 	.word	0x40004400

08002210 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8002210:	b580      	push	{r7, lr}
 8002212:	b082      	sub	sp, #8
 8002214:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 8002216:	2300      	movs	r3, #0
 8002218:	607b      	str	r3, [r7, #4]
 800221a:	4b1b      	ldr	r3, [pc, #108]	; (8002288 <MX_DMA_Init+0x78>)
 800221c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800221e:	4a1a      	ldr	r2, [pc, #104]	; (8002288 <MX_DMA_Init+0x78>)
 8002220:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8002224:	6313      	str	r3, [r2, #48]	; 0x30
 8002226:	4b18      	ldr	r3, [pc, #96]	; (8002288 <MX_DMA_Init+0x78>)
 8002228:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800222a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800222e:	607b      	str	r3, [r7, #4]
 8002230:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA1_CLK_ENABLE();
 8002232:	2300      	movs	r3, #0
 8002234:	603b      	str	r3, [r7, #0]
 8002236:	4b14      	ldr	r3, [pc, #80]	; (8002288 <MX_DMA_Init+0x78>)
 8002238:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800223a:	4a13      	ldr	r2, [pc, #76]	; (8002288 <MX_DMA_Init+0x78>)
 800223c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002240:	6313      	str	r3, [r2, #48]	; 0x30
 8002242:	4b11      	ldr	r3, [pc, #68]	; (8002288 <MX_DMA_Init+0x78>)
 8002244:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002246:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800224a:	603b      	str	r3, [r7, #0]
 800224c:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 5, 0);
 800224e:	2200      	movs	r2, #0
 8002250:	2105      	movs	r1, #5
 8002252:	2010      	movs	r0, #16
 8002254:	f002 fc81 	bl	8004b5a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 8002258:	2010      	movs	r0, #16
 800225a:	f002 fc9a 	bl	8004b92 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 5, 0);
 800225e:	2200      	movs	r2, #0
 8002260:	2105      	movs	r1, #5
 8002262:	203a      	movs	r0, #58	; 0x3a
 8002264:	f002 fc79 	bl	8004b5a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 8002268:	203a      	movs	r0, #58	; 0x3a
 800226a:	f002 fc92 	bl	8004b92 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream7_IRQn, 5, 0);
 800226e:	2200      	movs	r2, #0
 8002270:	2105      	movs	r1, #5
 8002272:	2046      	movs	r0, #70	; 0x46
 8002274:	f002 fc71 	bl	8004b5a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 8002278:	2046      	movs	r0, #70	; 0x46
 800227a:	f002 fc8a 	bl	8004b92 <HAL_NVIC_EnableIRQ>

}
 800227e:	bf00      	nop
 8002280:	3708      	adds	r7, #8
 8002282:	46bd      	mov	sp, r7
 8002284:	bd80      	pop	{r7, pc}
 8002286:	bf00      	nop
 8002288:	40023800 	.word	0x40023800

0800228c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800228c:	b580      	push	{r7, lr}
 800228e:	b08a      	sub	sp, #40	; 0x28
 8002290:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002292:	f107 0314 	add.w	r3, r7, #20
 8002296:	2200      	movs	r2, #0
 8002298:	601a      	str	r2, [r3, #0]
 800229a:	605a      	str	r2, [r3, #4]
 800229c:	609a      	str	r2, [r3, #8]
 800229e:	60da      	str	r2, [r3, #12]
 80022a0:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80022a2:	2300      	movs	r3, #0
 80022a4:	613b      	str	r3, [r7, #16]
 80022a6:	4b58      	ldr	r3, [pc, #352]	; (8002408 <MX_GPIO_Init+0x17c>)
 80022a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022aa:	4a57      	ldr	r2, [pc, #348]	; (8002408 <MX_GPIO_Init+0x17c>)
 80022ac:	f043 0304 	orr.w	r3, r3, #4
 80022b0:	6313      	str	r3, [r2, #48]	; 0x30
 80022b2:	4b55      	ldr	r3, [pc, #340]	; (8002408 <MX_GPIO_Init+0x17c>)
 80022b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022b6:	f003 0304 	and.w	r3, r3, #4
 80022ba:	613b      	str	r3, [r7, #16]
 80022bc:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80022be:	2300      	movs	r3, #0
 80022c0:	60fb      	str	r3, [r7, #12]
 80022c2:	4b51      	ldr	r3, [pc, #324]	; (8002408 <MX_GPIO_Init+0x17c>)
 80022c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022c6:	4a50      	ldr	r2, [pc, #320]	; (8002408 <MX_GPIO_Init+0x17c>)
 80022c8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80022cc:	6313      	str	r3, [r2, #48]	; 0x30
 80022ce:	4b4e      	ldr	r3, [pc, #312]	; (8002408 <MX_GPIO_Init+0x17c>)
 80022d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022d2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80022d6:	60fb      	str	r3, [r7, #12]
 80022d8:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80022da:	2300      	movs	r3, #0
 80022dc:	60bb      	str	r3, [r7, #8]
 80022de:	4b4a      	ldr	r3, [pc, #296]	; (8002408 <MX_GPIO_Init+0x17c>)
 80022e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022e2:	4a49      	ldr	r2, [pc, #292]	; (8002408 <MX_GPIO_Init+0x17c>)
 80022e4:	f043 0301 	orr.w	r3, r3, #1
 80022e8:	6313      	str	r3, [r2, #48]	; 0x30
 80022ea:	4b47      	ldr	r3, [pc, #284]	; (8002408 <MX_GPIO_Init+0x17c>)
 80022ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022ee:	f003 0301 	and.w	r3, r3, #1
 80022f2:	60bb      	str	r3, [r7, #8]
 80022f4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80022f6:	2300      	movs	r3, #0
 80022f8:	607b      	str	r3, [r7, #4]
 80022fa:	4b43      	ldr	r3, [pc, #268]	; (8002408 <MX_GPIO_Init+0x17c>)
 80022fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022fe:	4a42      	ldr	r2, [pc, #264]	; (8002408 <MX_GPIO_Init+0x17c>)
 8002300:	f043 0302 	orr.w	r3, r3, #2
 8002304:	6313      	str	r3, [r2, #48]	; 0x30
 8002306:	4b40      	ldr	r3, [pc, #256]	; (8002408 <MX_GPIO_Init+0x17c>)
 8002308:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800230a:	f003 0302 	and.w	r3, r3, #2
 800230e:	607b      	str	r3, [r7, #4]
 8002310:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ESP8266_RESET_GPIO_Port, ESP8266_RESET_Pin, GPIO_PIN_RESET);
 8002312:	2200      	movs	r2, #0
 8002314:	2102      	movs	r1, #2
 8002316:	483d      	ldr	r0, [pc, #244]	; (800240c <MX_GPIO_Init+0x180>)
 8002318:	f003 f9d6 	bl	80056c8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, D8_Pin|Buzzer_Pin|D3_Pin, GPIO_PIN_RESET);
 800231c:	2200      	movs	r2, #0
 800231e:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8002322:	483b      	ldr	r0, [pc, #236]	; (8002410 <MX_GPIO_Init+0x184>)
 8002324:	f003 f9d0 	bl	80056c8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(D6_GPIO_Port, D6_Pin, GPIO_PIN_SET);
 8002328:	2201      	movs	r2, #1
 800232a:	2140      	movs	r1, #64	; 0x40
 800232c:	4838      	ldr	r0, [pc, #224]	; (8002410 <MX_GPIO_Init+0x184>)
 800232e:	f003 f9cb 	bl	80056c8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, D7_Pin|D2_Pin|D5_Pin|D1_Pin
 8002332:	2200      	movs	r2, #0
 8002334:	f240 4139 	movw	r1, #1081	; 0x439
 8002338:	4836      	ldr	r0, [pc, #216]	; (8002414 <MX_GPIO_Init+0x188>)
 800233a:	f003 f9c5 	bl	80056c8 <HAL_GPIO_WritePin>
                          |D4_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 800233e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002342:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8002344:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8002348:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800234a:	2300      	movs	r3, #0
 800234c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 800234e:	f107 0314 	add.w	r3, r7, #20
 8002352:	4619      	mov	r1, r3
 8002354:	482d      	ldr	r0, [pc, #180]	; (800240c <MX_GPIO_Init+0x180>)
 8002356:	f003 f81b 	bl	8005390 <HAL_GPIO_Init>

  /*Configure GPIO pin : ESP8266_RESET_Pin */
  GPIO_InitStruct.Pin = ESP8266_RESET_Pin;
 800235a:	2302      	movs	r3, #2
 800235c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800235e:	2301      	movs	r3, #1
 8002360:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002362:	2300      	movs	r3, #0
 8002364:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002366:	2303      	movs	r3, #3
 8002368:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(ESP8266_RESET_GPIO_Port, &GPIO_InitStruct);
 800236a:	f107 0314 	add.w	r3, r7, #20
 800236e:	4619      	mov	r1, r3
 8002370:	4826      	ldr	r0, [pc, #152]	; (800240c <MX_GPIO_Init+0x180>)
 8002372:	f003 f80d 	bl	8005390 <HAL_GPIO_Init>

  /*Configure GPIO pins : D8_Pin Buzzer_Pin D3_Pin */
  GPIO_InitStruct.Pin = D8_Pin|Buzzer_Pin|D3_Pin;
 8002376:	f44f 73d0 	mov.w	r3, #416	; 0x1a0
 800237a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800237c:	2301      	movs	r3, #1
 800237e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002380:	2300      	movs	r3, #0
 8002382:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002384:	2300      	movs	r3, #0
 8002386:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002388:	f107 0314 	add.w	r3, r7, #20
 800238c:	4619      	mov	r1, r3
 800238e:	4820      	ldr	r0, [pc, #128]	; (8002410 <MX_GPIO_Init+0x184>)
 8002390:	f002 fffe 	bl	8005390 <HAL_GPIO_Init>

  /*Configure GPIO pin : D6_Pin */
  GPIO_InitStruct.Pin = D6_Pin;
 8002394:	2340      	movs	r3, #64	; 0x40
 8002396:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002398:	2301      	movs	r3, #1
 800239a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800239c:	2300      	movs	r3, #0
 800239e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80023a0:	2302      	movs	r3, #2
 80023a2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(D6_GPIO_Port, &GPIO_InitStruct);
 80023a4:	f107 0314 	add.w	r3, r7, #20
 80023a8:	4619      	mov	r1, r3
 80023aa:	4819      	ldr	r0, [pc, #100]	; (8002410 <MX_GPIO_Init+0x184>)
 80023ac:	f002 fff0 	bl	8005390 <HAL_GPIO_Init>

  /*Configure GPIO pins : D7_Pin D2_Pin D5_Pin D1_Pin
                           D4_Pin */
  GPIO_InitStruct.Pin = D7_Pin|D2_Pin|D5_Pin|D1_Pin
 80023b0:	f240 4339 	movw	r3, #1081	; 0x439
 80023b4:	617b      	str	r3, [r7, #20]
                          |D4_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80023b6:	2301      	movs	r3, #1
 80023b8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023ba:	2300      	movs	r3, #0
 80023bc:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80023be:	2300      	movs	r3, #0
 80023c0:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023c2:	f107 0314 	add.w	r3, r7, #20
 80023c6:	4619      	mov	r1, r3
 80023c8:	4812      	ldr	r0, [pc, #72]	; (8002414 <MX_GPIO_Init+0x188>)
 80023ca:	f002 ffe1 	bl	8005390 <HAL_GPIO_Init>

  /*Configure GPIO pin : PULSADOR1_Pin */
  GPIO_InitStruct.Pin = PULSADOR1_Pin;
 80023ce:	2380      	movs	r3, #128	; 0x80
 80023d0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80023d2:	2300      	movs	r3, #0
 80023d4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80023d6:	2301      	movs	r3, #1
 80023d8:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(PULSADOR1_GPIO_Port, &GPIO_InitStruct);
 80023da:	f107 0314 	add.w	r3, r7, #20
 80023de:	4619      	mov	r1, r3
 80023e0:	480a      	ldr	r0, [pc, #40]	; (800240c <MX_GPIO_Init+0x180>)
 80023e2:	f002 ffd5 	bl	8005390 <HAL_GPIO_Init>

  /*Configure GPIO pin : PULSADOR2_Pin */
  GPIO_InitStruct.Pin = PULSADOR2_Pin;
 80023e6:	2340      	movs	r3, #64	; 0x40
 80023e8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80023ea:	2300      	movs	r3, #0
 80023ec:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80023ee:	2301      	movs	r3, #1
 80023f0:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(PULSADOR2_GPIO_Port, &GPIO_InitStruct);
 80023f2:	f107 0314 	add.w	r3, r7, #20
 80023f6:	4619      	mov	r1, r3
 80023f8:	4806      	ldr	r0, [pc, #24]	; (8002414 <MX_GPIO_Init+0x188>)
 80023fa:	f002 ffc9 	bl	8005390 <HAL_GPIO_Init>

}
 80023fe:	bf00      	nop
 8002400:	3728      	adds	r7, #40	; 0x28
 8002402:	46bd      	mov	sp, r7
 8002404:	bd80      	pop	{r7, pc}
 8002406:	bf00      	nop
 8002408:	40023800 	.word	0x40023800
 800240c:	40020800 	.word	0x40020800
 8002410:	40020000 	.word	0x40020000
 8002414:	40020400 	.word	0x40020400

08002418 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8002418:	b580      	push	{r7, lr}
 800241a:	b082      	sub	sp, #8
 800241c:	af00      	add	r7, sp, #0
 800241e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 8002420:	2001      	movs	r0, #1
 8002422:	f004 fdd0 	bl	8006fc6 <osDelay>
 8002426:	e7fb      	b.n	8002420 <StartDefaultTask+0x8>

08002428 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002428:	b480      	push	{r7}
 800242a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800242c:	b672      	cpsid	i
}
 800242e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002430:	e7fe      	b.n	8002430 <Error_Handler+0x8>
	...

08002434 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002434:	b580      	push	{r7, lr}
 8002436:	b082      	sub	sp, #8
 8002438:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800243a:	2300      	movs	r3, #0
 800243c:	607b      	str	r3, [r7, #4]
 800243e:	4b12      	ldr	r3, [pc, #72]	; (8002488 <HAL_MspInit+0x54>)
 8002440:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002442:	4a11      	ldr	r2, [pc, #68]	; (8002488 <HAL_MspInit+0x54>)
 8002444:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002448:	6453      	str	r3, [r2, #68]	; 0x44
 800244a:	4b0f      	ldr	r3, [pc, #60]	; (8002488 <HAL_MspInit+0x54>)
 800244c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800244e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002452:	607b      	str	r3, [r7, #4]
 8002454:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002456:	2300      	movs	r3, #0
 8002458:	603b      	str	r3, [r7, #0]
 800245a:	4b0b      	ldr	r3, [pc, #44]	; (8002488 <HAL_MspInit+0x54>)
 800245c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800245e:	4a0a      	ldr	r2, [pc, #40]	; (8002488 <HAL_MspInit+0x54>)
 8002460:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002464:	6413      	str	r3, [r2, #64]	; 0x40
 8002466:	4b08      	ldr	r3, [pc, #32]	; (8002488 <HAL_MspInit+0x54>)
 8002468:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800246a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800246e:	603b      	str	r3, [r7, #0]
 8002470:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002472:	2200      	movs	r2, #0
 8002474:	210f      	movs	r1, #15
 8002476:	f06f 0001 	mvn.w	r0, #1
 800247a:	f002 fb6e 	bl	8004b5a <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800247e:	bf00      	nop
 8002480:	3708      	adds	r7, #8
 8002482:	46bd      	mov	sp, r7
 8002484:	bd80      	pop	{r7, pc}
 8002486:	bf00      	nop
 8002488:	40023800 	.word	0x40023800

0800248c <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 800248c:	b580      	push	{r7, lr}
 800248e:	b08a      	sub	sp, #40	; 0x28
 8002490:	af00      	add	r7, sp, #0
 8002492:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002494:	f107 0314 	add.w	r3, r7, #20
 8002498:	2200      	movs	r2, #0
 800249a:	601a      	str	r2, [r3, #0]
 800249c:	605a      	str	r2, [r3, #4]
 800249e:	609a      	str	r2, [r3, #8]
 80024a0:	60da      	str	r2, [r3, #12]
 80024a2:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	681b      	ldr	r3, [r3, #0]
 80024a8:	4a17      	ldr	r2, [pc, #92]	; (8002508 <HAL_ADC_MspInit+0x7c>)
 80024aa:	4293      	cmp	r3, r2
 80024ac:	d127      	bne.n	80024fe <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80024ae:	2300      	movs	r3, #0
 80024b0:	613b      	str	r3, [r7, #16]
 80024b2:	4b16      	ldr	r3, [pc, #88]	; (800250c <HAL_ADC_MspInit+0x80>)
 80024b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80024b6:	4a15      	ldr	r2, [pc, #84]	; (800250c <HAL_ADC_MspInit+0x80>)
 80024b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80024bc:	6453      	str	r3, [r2, #68]	; 0x44
 80024be:	4b13      	ldr	r3, [pc, #76]	; (800250c <HAL_ADC_MspInit+0x80>)
 80024c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80024c2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80024c6:	613b      	str	r3, [r7, #16]
 80024c8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024ca:	2300      	movs	r3, #0
 80024cc:	60fb      	str	r3, [r7, #12]
 80024ce:	4b0f      	ldr	r3, [pc, #60]	; (800250c <HAL_ADC_MspInit+0x80>)
 80024d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024d2:	4a0e      	ldr	r2, [pc, #56]	; (800250c <HAL_ADC_MspInit+0x80>)
 80024d4:	f043 0301 	orr.w	r3, r3, #1
 80024d8:	6313      	str	r3, [r2, #48]	; 0x30
 80024da:	4b0c      	ldr	r3, [pc, #48]	; (800250c <HAL_ADC_MspInit+0x80>)
 80024dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024de:	f003 0301 	and.w	r3, r3, #1
 80024e2:	60fb      	str	r3, [r7, #12]
 80024e4:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA0-WKUP     ------> ADC1_IN0
    PA1     ------> ADC1_IN1
    PA4     ------> ADC1_IN4
    */
    GPIO_InitStruct.Pin = LDR_Pin|NTC_Pin|POT_Pin;
 80024e6:	2313      	movs	r3, #19
 80024e8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80024ea:	2303      	movs	r3, #3
 80024ec:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024ee:	2300      	movs	r3, #0
 80024f0:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024f2:	f107 0314 	add.w	r3, r7, #20
 80024f6:	4619      	mov	r1, r3
 80024f8:	4805      	ldr	r0, [pc, #20]	; (8002510 <HAL_ADC_MspInit+0x84>)
 80024fa:	f002 ff49 	bl	8005390 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 80024fe:	bf00      	nop
 8002500:	3728      	adds	r7, #40	; 0x28
 8002502:	46bd      	mov	sp, r7
 8002504:	bd80      	pop	{r7, pc}
 8002506:	bf00      	nop
 8002508:	40012000 	.word	0x40012000
 800250c:	40023800 	.word	0x40023800
 8002510:	40020000 	.word	0x40020000

08002514 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002514:	b580      	push	{r7, lr}
 8002516:	b08c      	sub	sp, #48	; 0x30
 8002518:	af00      	add	r7, sp, #0
 800251a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800251c:	f107 031c 	add.w	r3, r7, #28
 8002520:	2200      	movs	r2, #0
 8002522:	601a      	str	r2, [r3, #0]
 8002524:	605a      	str	r2, [r3, #4]
 8002526:	609a      	str	r2, [r3, #8]
 8002528:	60da      	str	r2, [r3, #12]
 800252a:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 800252c:	687b      	ldr	r3, [r7, #4]
 800252e:	681b      	ldr	r3, [r3, #0]
 8002530:	4a78      	ldr	r2, [pc, #480]	; (8002714 <HAL_UART_MspInit+0x200>)
 8002532:	4293      	cmp	r3, r2
 8002534:	f040 808a 	bne.w	800264c <HAL_UART_MspInit+0x138>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8002538:	2300      	movs	r3, #0
 800253a:	61bb      	str	r3, [r7, #24]
 800253c:	4b76      	ldr	r3, [pc, #472]	; (8002718 <HAL_UART_MspInit+0x204>)
 800253e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002540:	4a75      	ldr	r2, [pc, #468]	; (8002718 <HAL_UART_MspInit+0x204>)
 8002542:	f043 0310 	orr.w	r3, r3, #16
 8002546:	6453      	str	r3, [r2, #68]	; 0x44
 8002548:	4b73      	ldr	r3, [pc, #460]	; (8002718 <HAL_UART_MspInit+0x204>)
 800254a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800254c:	f003 0310 	and.w	r3, r3, #16
 8002550:	61bb      	str	r3, [r7, #24]
 8002552:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002554:	2300      	movs	r3, #0
 8002556:	617b      	str	r3, [r7, #20]
 8002558:	4b6f      	ldr	r3, [pc, #444]	; (8002718 <HAL_UART_MspInit+0x204>)
 800255a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800255c:	4a6e      	ldr	r2, [pc, #440]	; (8002718 <HAL_UART_MspInit+0x204>)
 800255e:	f043 0301 	orr.w	r3, r3, #1
 8002562:	6313      	str	r3, [r2, #48]	; 0x30
 8002564:	4b6c      	ldr	r3, [pc, #432]	; (8002718 <HAL_UART_MspInit+0x204>)
 8002566:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002568:	f003 0301 	and.w	r3, r3, #1
 800256c:	617b      	str	r3, [r7, #20]
 800256e:	697b      	ldr	r3, [r7, #20]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8002570:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8002574:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002576:	2302      	movs	r3, #2
 8002578:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800257a:	2300      	movs	r3, #0
 800257c:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800257e:	2303      	movs	r3, #3
 8002580:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8002582:	2307      	movs	r3, #7
 8002584:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002586:	f107 031c 	add.w	r3, r7, #28
 800258a:	4619      	mov	r1, r3
 800258c:	4863      	ldr	r0, [pc, #396]	; (800271c <HAL_UART_MspInit+0x208>)
 800258e:	f002 feff 	bl	8005390 <HAL_GPIO_Init>

    /* USART1 DMA Init */
    /* USART1_RX Init */
    hdma_usart1_rx.Instance = DMA2_Stream2;
 8002592:	4b63      	ldr	r3, [pc, #396]	; (8002720 <HAL_UART_MspInit+0x20c>)
 8002594:	4a63      	ldr	r2, [pc, #396]	; (8002724 <HAL_UART_MspInit+0x210>)
 8002596:	601a      	str	r2, [r3, #0]
    hdma_usart1_rx.Init.Channel = DMA_CHANNEL_4;
 8002598:	4b61      	ldr	r3, [pc, #388]	; (8002720 <HAL_UART_MspInit+0x20c>)
 800259a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800259e:	605a      	str	r2, [r3, #4]
    hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80025a0:	4b5f      	ldr	r3, [pc, #380]	; (8002720 <HAL_UART_MspInit+0x20c>)
 80025a2:	2200      	movs	r2, #0
 80025a4:	609a      	str	r2, [r3, #8]
    hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 80025a6:	4b5e      	ldr	r3, [pc, #376]	; (8002720 <HAL_UART_MspInit+0x20c>)
 80025a8:	2200      	movs	r2, #0
 80025aa:	60da      	str	r2, [r3, #12]
    hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 80025ac:	4b5c      	ldr	r3, [pc, #368]	; (8002720 <HAL_UART_MspInit+0x20c>)
 80025ae:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80025b2:	611a      	str	r2, [r3, #16]
    hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80025b4:	4b5a      	ldr	r3, [pc, #360]	; (8002720 <HAL_UART_MspInit+0x20c>)
 80025b6:	2200      	movs	r2, #0
 80025b8:	615a      	str	r2, [r3, #20]
    hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80025ba:	4b59      	ldr	r3, [pc, #356]	; (8002720 <HAL_UART_MspInit+0x20c>)
 80025bc:	2200      	movs	r2, #0
 80025be:	619a      	str	r2, [r3, #24]
    hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 80025c0:	4b57      	ldr	r3, [pc, #348]	; (8002720 <HAL_UART_MspInit+0x20c>)
 80025c2:	2200      	movs	r2, #0
 80025c4:	61da      	str	r2, [r3, #28]
    hdma_usart1_rx.Init.Priority = DMA_PRIORITY_LOW;
 80025c6:	4b56      	ldr	r3, [pc, #344]	; (8002720 <HAL_UART_MspInit+0x20c>)
 80025c8:	2200      	movs	r2, #0
 80025ca:	621a      	str	r2, [r3, #32]
    hdma_usart1_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80025cc:	4b54      	ldr	r3, [pc, #336]	; (8002720 <HAL_UART_MspInit+0x20c>)
 80025ce:	2200      	movs	r2, #0
 80025d0:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 80025d2:	4853      	ldr	r0, [pc, #332]	; (8002720 <HAL_UART_MspInit+0x20c>)
 80025d4:	f002 fafc 	bl	8004bd0 <HAL_DMA_Init>
 80025d8:	4603      	mov	r3, r0
 80025da:	2b00      	cmp	r3, #0
 80025dc:	d001      	beq.n	80025e2 <HAL_UART_MspInit+0xce>
    {
      Error_Handler();
 80025de:	f7ff ff23 	bl	8002428 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmarx,hdma_usart1_rx);
 80025e2:	687b      	ldr	r3, [r7, #4]
 80025e4:	4a4e      	ldr	r2, [pc, #312]	; (8002720 <HAL_UART_MspInit+0x20c>)
 80025e6:	639a      	str	r2, [r3, #56]	; 0x38
 80025e8:	4a4d      	ldr	r2, [pc, #308]	; (8002720 <HAL_UART_MspInit+0x20c>)
 80025ea:	687b      	ldr	r3, [r7, #4]
 80025ec:	6393      	str	r3, [r2, #56]	; 0x38

    /* USART1_TX Init */
    hdma_usart1_tx.Instance = DMA2_Stream7;
 80025ee:	4b4e      	ldr	r3, [pc, #312]	; (8002728 <HAL_UART_MspInit+0x214>)
 80025f0:	4a4e      	ldr	r2, [pc, #312]	; (800272c <HAL_UART_MspInit+0x218>)
 80025f2:	601a      	str	r2, [r3, #0]
    hdma_usart1_tx.Init.Channel = DMA_CHANNEL_4;
 80025f4:	4b4c      	ldr	r3, [pc, #304]	; (8002728 <HAL_UART_MspInit+0x214>)
 80025f6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80025fa:	605a      	str	r2, [r3, #4]
    hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80025fc:	4b4a      	ldr	r3, [pc, #296]	; (8002728 <HAL_UART_MspInit+0x214>)
 80025fe:	2240      	movs	r2, #64	; 0x40
 8002600:	609a      	str	r2, [r3, #8]
    hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002602:	4b49      	ldr	r3, [pc, #292]	; (8002728 <HAL_UART_MspInit+0x214>)
 8002604:	2200      	movs	r2, #0
 8002606:	60da      	str	r2, [r3, #12]
    hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 8002608:	4b47      	ldr	r3, [pc, #284]	; (8002728 <HAL_UART_MspInit+0x214>)
 800260a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800260e:	611a      	str	r2, [r3, #16]
    hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002610:	4b45      	ldr	r3, [pc, #276]	; (8002728 <HAL_UART_MspInit+0x214>)
 8002612:	2200      	movs	r2, #0
 8002614:	615a      	str	r2, [r3, #20]
    hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002616:	4b44      	ldr	r3, [pc, #272]	; (8002728 <HAL_UART_MspInit+0x214>)
 8002618:	2200      	movs	r2, #0
 800261a:	619a      	str	r2, [r3, #24]
    hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 800261c:	4b42      	ldr	r3, [pc, #264]	; (8002728 <HAL_UART_MspInit+0x214>)
 800261e:	2200      	movs	r2, #0
 8002620:	61da      	str	r2, [r3, #28]
    hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 8002622:	4b41      	ldr	r3, [pc, #260]	; (8002728 <HAL_UART_MspInit+0x214>)
 8002624:	2200      	movs	r2, #0
 8002626:	621a      	str	r2, [r3, #32]
    hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002628:	4b3f      	ldr	r3, [pc, #252]	; (8002728 <HAL_UART_MspInit+0x214>)
 800262a:	2200      	movs	r2, #0
 800262c:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 800262e:	483e      	ldr	r0, [pc, #248]	; (8002728 <HAL_UART_MspInit+0x214>)
 8002630:	f002 face 	bl	8004bd0 <HAL_DMA_Init>
 8002634:	4603      	mov	r3, r0
 8002636:	2b00      	cmp	r3, #0
 8002638:	d001      	beq.n	800263e <HAL_UART_MspInit+0x12a>
    {
      Error_Handler();
 800263a:	f7ff fef5 	bl	8002428 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmatx,hdma_usart1_tx);
 800263e:	687b      	ldr	r3, [r7, #4]
 8002640:	4a39      	ldr	r2, [pc, #228]	; (8002728 <HAL_UART_MspInit+0x214>)
 8002642:	635a      	str	r2, [r3, #52]	; 0x34
 8002644:	4a38      	ldr	r2, [pc, #224]	; (8002728 <HAL_UART_MspInit+0x214>)
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	6393      	str	r3, [r2, #56]	; 0x38
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 800264a:	e05e      	b.n	800270a <HAL_UART_MspInit+0x1f6>
  else if(huart->Instance==USART2)
 800264c:	687b      	ldr	r3, [r7, #4]
 800264e:	681b      	ldr	r3, [r3, #0]
 8002650:	4a37      	ldr	r2, [pc, #220]	; (8002730 <HAL_UART_MspInit+0x21c>)
 8002652:	4293      	cmp	r3, r2
 8002654:	d159      	bne.n	800270a <HAL_UART_MspInit+0x1f6>
    __HAL_RCC_USART2_CLK_ENABLE();
 8002656:	2300      	movs	r3, #0
 8002658:	613b      	str	r3, [r7, #16]
 800265a:	4b2f      	ldr	r3, [pc, #188]	; (8002718 <HAL_UART_MspInit+0x204>)
 800265c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800265e:	4a2e      	ldr	r2, [pc, #184]	; (8002718 <HAL_UART_MspInit+0x204>)
 8002660:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002664:	6413      	str	r3, [r2, #64]	; 0x40
 8002666:	4b2c      	ldr	r3, [pc, #176]	; (8002718 <HAL_UART_MspInit+0x204>)
 8002668:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800266a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800266e:	613b      	str	r3, [r7, #16]
 8002670:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002672:	2300      	movs	r3, #0
 8002674:	60fb      	str	r3, [r7, #12]
 8002676:	4b28      	ldr	r3, [pc, #160]	; (8002718 <HAL_UART_MspInit+0x204>)
 8002678:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800267a:	4a27      	ldr	r2, [pc, #156]	; (8002718 <HAL_UART_MspInit+0x204>)
 800267c:	f043 0301 	orr.w	r3, r3, #1
 8002680:	6313      	str	r3, [r2, #48]	; 0x30
 8002682:	4b25      	ldr	r3, [pc, #148]	; (8002718 <HAL_UART_MspInit+0x204>)
 8002684:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002686:	f003 0301 	and.w	r3, r3, #1
 800268a:	60fb      	str	r3, [r7, #12]
 800268c:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 800268e:	230c      	movs	r3, #12
 8002690:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002692:	2302      	movs	r3, #2
 8002694:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002696:	2300      	movs	r3, #0
 8002698:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800269a:	2303      	movs	r3, #3
 800269c:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 800269e:	2307      	movs	r3, #7
 80026a0:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80026a2:	f107 031c 	add.w	r3, r7, #28
 80026a6:	4619      	mov	r1, r3
 80026a8:	481c      	ldr	r0, [pc, #112]	; (800271c <HAL_UART_MspInit+0x208>)
 80026aa:	f002 fe71 	bl	8005390 <HAL_GPIO_Init>
    hdma_usart2_rx.Instance = DMA1_Stream5;
 80026ae:	4b21      	ldr	r3, [pc, #132]	; (8002734 <HAL_UART_MspInit+0x220>)
 80026b0:	4a21      	ldr	r2, [pc, #132]	; (8002738 <HAL_UART_MspInit+0x224>)
 80026b2:	601a      	str	r2, [r3, #0]
    hdma_usart2_rx.Init.Channel = DMA_CHANNEL_4;
 80026b4:	4b1f      	ldr	r3, [pc, #124]	; (8002734 <HAL_UART_MspInit+0x220>)
 80026b6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80026ba:	605a      	str	r2, [r3, #4]
    hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80026bc:	4b1d      	ldr	r3, [pc, #116]	; (8002734 <HAL_UART_MspInit+0x220>)
 80026be:	2200      	movs	r2, #0
 80026c0:	609a      	str	r2, [r3, #8]
    hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 80026c2:	4b1c      	ldr	r3, [pc, #112]	; (8002734 <HAL_UART_MspInit+0x220>)
 80026c4:	2200      	movs	r2, #0
 80026c6:	60da      	str	r2, [r3, #12]
    hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 80026c8:	4b1a      	ldr	r3, [pc, #104]	; (8002734 <HAL_UART_MspInit+0x220>)
 80026ca:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80026ce:	611a      	str	r2, [r3, #16]
    hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80026d0:	4b18      	ldr	r3, [pc, #96]	; (8002734 <HAL_UART_MspInit+0x220>)
 80026d2:	2200      	movs	r2, #0
 80026d4:	615a      	str	r2, [r3, #20]
    hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80026d6:	4b17      	ldr	r3, [pc, #92]	; (8002734 <HAL_UART_MspInit+0x220>)
 80026d8:	2200      	movs	r2, #0
 80026da:	619a      	str	r2, [r3, #24]
    hdma_usart2_rx.Init.Mode = DMA_NORMAL;
 80026dc:	4b15      	ldr	r3, [pc, #84]	; (8002734 <HAL_UART_MspInit+0x220>)
 80026de:	2200      	movs	r2, #0
 80026e0:	61da      	str	r2, [r3, #28]
    hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 80026e2:	4b14      	ldr	r3, [pc, #80]	; (8002734 <HAL_UART_MspInit+0x220>)
 80026e4:	2200      	movs	r2, #0
 80026e6:	621a      	str	r2, [r3, #32]
    hdma_usart2_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80026e8:	4b12      	ldr	r3, [pc, #72]	; (8002734 <HAL_UART_MspInit+0x220>)
 80026ea:	2200      	movs	r2, #0
 80026ec:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 80026ee:	4811      	ldr	r0, [pc, #68]	; (8002734 <HAL_UART_MspInit+0x220>)
 80026f0:	f002 fa6e 	bl	8004bd0 <HAL_DMA_Init>
 80026f4:	4603      	mov	r3, r0
 80026f6:	2b00      	cmp	r3, #0
 80026f8:	d001      	beq.n	80026fe <HAL_UART_MspInit+0x1ea>
      Error_Handler();
 80026fa:	f7ff fe95 	bl	8002428 <Error_Handler>
    __HAL_LINKDMA(huart,hdmarx,hdma_usart2_rx);
 80026fe:	687b      	ldr	r3, [r7, #4]
 8002700:	4a0c      	ldr	r2, [pc, #48]	; (8002734 <HAL_UART_MspInit+0x220>)
 8002702:	639a      	str	r2, [r3, #56]	; 0x38
 8002704:	4a0b      	ldr	r2, [pc, #44]	; (8002734 <HAL_UART_MspInit+0x220>)
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	6393      	str	r3, [r2, #56]	; 0x38
}
 800270a:	bf00      	nop
 800270c:	3730      	adds	r7, #48	; 0x30
 800270e:	46bd      	mov	sp, r7
 8002710:	bd80      	pop	{r7, pc}
 8002712:	bf00      	nop
 8002714:	40011000 	.word	0x40011000
 8002718:	40023800 	.word	0x40023800
 800271c:	40020000 	.word	0x40020000
 8002720:	20000acc 	.word	0x20000acc
 8002724:	40026440 	.word	0x40026440
 8002728:	20000b2c 	.word	0x20000b2c
 800272c:	400264b8 	.word	0x400264b8
 8002730:	40004400 	.word	0x40004400
 8002734:	20000b8c 	.word	0x20000b8c
 8002738:	40026088 	.word	0x40026088

0800273c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800273c:	b480      	push	{r7}
 800273e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002740:	e7fe      	b.n	8002740 <NMI_Handler+0x4>

08002742 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002742:	b480      	push	{r7}
 8002744:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002746:	e7fe      	b.n	8002746 <HardFault_Handler+0x4>

08002748 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002748:	b480      	push	{r7}
 800274a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800274c:	e7fe      	b.n	800274c <MemManage_Handler+0x4>

0800274e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800274e:	b480      	push	{r7}
 8002750:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002752:	e7fe      	b.n	8002752 <BusFault_Handler+0x4>

08002754 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002754:	b480      	push	{r7}
 8002756:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002758:	e7fe      	b.n	8002758 <UsageFault_Handler+0x4>

0800275a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800275a:	b480      	push	{r7}
 800275c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800275e:	bf00      	nop
 8002760:	46bd      	mov	sp, r7
 8002762:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002766:	4770      	bx	lr

08002768 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002768:	b580      	push	{r7, lr}
 800276a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800276c:	f001 fd26 	bl	80041bc <HAL_IncTick>
#if (INCLUDE_xTaskGetSchedulerState == 1 )
  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 8002770:	f006 fa1c 	bl	8008bac <xTaskGetSchedulerState>
 8002774:	4603      	mov	r3, r0
 8002776:	2b01      	cmp	r3, #1
 8002778:	d001      	beq.n	800277e <SysTick_Handler+0x16>
  {
#endif /* INCLUDE_xTaskGetSchedulerState */
  xPortSysTickHandler();
 800277a:	f007 f905 	bl	8009988 <xPortSysTickHandler>
  }
#endif /* INCLUDE_xTaskGetSchedulerState */
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800277e:	bf00      	nop
 8002780:	bd80      	pop	{r7, pc}
	...

08002784 <DMA1_Stream5_IRQHandler>:

/**
  * @brief This function handles DMA1 stream5 global interrupt.
  */
void DMA1_Stream5_IRQHandler(void)
{
 8002784:	b580      	push	{r7, lr}
 8002786:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */

  /* USER CODE END DMA1_Stream5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart2_rx);
 8002788:	4802      	ldr	r0, [pc, #8]	; (8002794 <DMA1_Stream5_IRQHandler+0x10>)
 800278a:	f002 fb97 	bl	8004ebc <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */

  /* USER CODE END DMA1_Stream5_IRQn 1 */
}
 800278e:	bf00      	nop
 8002790:	bd80      	pop	{r7, pc}
 8002792:	bf00      	nop
 8002794:	20000b8c 	.word	0x20000b8c

08002798 <DMA2_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA2 stream2 global interrupt.
  */
void DMA2_Stream2_IRQHandler(void)
{
 8002798:	b580      	push	{r7, lr}
 800279a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */

  /* USER CODE END DMA2_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_rx);
 800279c:	4802      	ldr	r0, [pc, #8]	; (80027a8 <DMA2_Stream2_IRQHandler+0x10>)
 800279e:	f002 fb8d 	bl	8004ebc <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */

  /* USER CODE END DMA2_Stream2_IRQn 1 */
}
 80027a2:	bf00      	nop
 80027a4:	bd80      	pop	{r7, pc}
 80027a6:	bf00      	nop
 80027a8:	20000acc 	.word	0x20000acc

080027ac <DMA2_Stream7_IRQHandler>:

/**
  * @brief This function handles DMA2 stream7 global interrupt.
  */
void DMA2_Stream7_IRQHandler(void)
{
 80027ac:	b580      	push	{r7, lr}
 80027ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */

  /* USER CODE END DMA2_Stream7_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_tx);
 80027b0:	4802      	ldr	r0, [pc, #8]	; (80027bc <DMA2_Stream7_IRQHandler+0x10>)
 80027b2:	f002 fb83 	bl	8004ebc <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */

  /* USER CODE END DMA2_Stream7_IRQn 1 */
}
 80027b6:	bf00      	nop
 80027b8:	bd80      	pop	{r7, pc}
 80027ba:	bf00      	nop
 80027bc:	20000b2c 	.word	0x20000b2c

080027c0 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80027c0:	b480      	push	{r7}
 80027c2:	af00      	add	r7, sp, #0
	return 1;
 80027c4:	2301      	movs	r3, #1
}
 80027c6:	4618      	mov	r0, r3
 80027c8:	46bd      	mov	sp, r7
 80027ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027ce:	4770      	bx	lr

080027d0 <_kill>:

int _kill(int pid, int sig)
{
 80027d0:	b580      	push	{r7, lr}
 80027d2:	b082      	sub	sp, #8
 80027d4:	af00      	add	r7, sp, #0
 80027d6:	6078      	str	r0, [r7, #4]
 80027d8:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80027da:	f007 fb51 	bl	8009e80 <__errno>
 80027de:	4603      	mov	r3, r0
 80027e0:	2216      	movs	r2, #22
 80027e2:	601a      	str	r2, [r3, #0]
	return -1;
 80027e4:	f04f 33ff 	mov.w	r3, #4294967295
}
 80027e8:	4618      	mov	r0, r3
 80027ea:	3708      	adds	r7, #8
 80027ec:	46bd      	mov	sp, r7
 80027ee:	bd80      	pop	{r7, pc}

080027f0 <_exit>:

void _exit (int status)
{
 80027f0:	b580      	push	{r7, lr}
 80027f2:	b082      	sub	sp, #8
 80027f4:	af00      	add	r7, sp, #0
 80027f6:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 80027f8:	f04f 31ff 	mov.w	r1, #4294967295
 80027fc:	6878      	ldr	r0, [r7, #4]
 80027fe:	f7ff ffe7 	bl	80027d0 <_kill>
	while (1) {}		/* Make sure we hang here */
 8002802:	e7fe      	b.n	8002802 <_exit+0x12>

08002804 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002804:	b580      	push	{r7, lr}
 8002806:	b086      	sub	sp, #24
 8002808:	af00      	add	r7, sp, #0
 800280a:	60f8      	str	r0, [r7, #12]
 800280c:	60b9      	str	r1, [r7, #8]
 800280e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002810:	2300      	movs	r3, #0
 8002812:	617b      	str	r3, [r7, #20]
 8002814:	e00a      	b.n	800282c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8002816:	f3af 8000 	nop.w
 800281a:	4601      	mov	r1, r0
 800281c:	68bb      	ldr	r3, [r7, #8]
 800281e:	1c5a      	adds	r2, r3, #1
 8002820:	60ba      	str	r2, [r7, #8]
 8002822:	b2ca      	uxtb	r2, r1
 8002824:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002826:	697b      	ldr	r3, [r7, #20]
 8002828:	3301      	adds	r3, #1
 800282a:	617b      	str	r3, [r7, #20]
 800282c:	697a      	ldr	r2, [r7, #20]
 800282e:	687b      	ldr	r3, [r7, #4]
 8002830:	429a      	cmp	r2, r3
 8002832:	dbf0      	blt.n	8002816 <_read+0x12>
	}

return len;
 8002834:	687b      	ldr	r3, [r7, #4]
}
 8002836:	4618      	mov	r0, r3
 8002838:	3718      	adds	r7, #24
 800283a:	46bd      	mov	sp, r7
 800283c:	bd80      	pop	{r7, pc}

0800283e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800283e:	b580      	push	{r7, lr}
 8002840:	b086      	sub	sp, #24
 8002842:	af00      	add	r7, sp, #0
 8002844:	60f8      	str	r0, [r7, #12]
 8002846:	60b9      	str	r1, [r7, #8]
 8002848:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800284a:	2300      	movs	r3, #0
 800284c:	617b      	str	r3, [r7, #20]
 800284e:	e009      	b.n	8002864 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8002850:	68bb      	ldr	r3, [r7, #8]
 8002852:	1c5a      	adds	r2, r3, #1
 8002854:	60ba      	str	r2, [r7, #8]
 8002856:	781b      	ldrb	r3, [r3, #0]
 8002858:	4618      	mov	r0, r3
 800285a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800285e:	697b      	ldr	r3, [r7, #20]
 8002860:	3301      	adds	r3, #1
 8002862:	617b      	str	r3, [r7, #20]
 8002864:	697a      	ldr	r2, [r7, #20]
 8002866:	687b      	ldr	r3, [r7, #4]
 8002868:	429a      	cmp	r2, r3
 800286a:	dbf1      	blt.n	8002850 <_write+0x12>
	}
	return len;
 800286c:	687b      	ldr	r3, [r7, #4]
}
 800286e:	4618      	mov	r0, r3
 8002870:	3718      	adds	r7, #24
 8002872:	46bd      	mov	sp, r7
 8002874:	bd80      	pop	{r7, pc}

08002876 <_close>:

int _close(int file)
{
 8002876:	b480      	push	{r7}
 8002878:	b083      	sub	sp, #12
 800287a:	af00      	add	r7, sp, #0
 800287c:	6078      	str	r0, [r7, #4]
	return -1;
 800287e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002882:	4618      	mov	r0, r3
 8002884:	370c      	adds	r7, #12
 8002886:	46bd      	mov	sp, r7
 8002888:	f85d 7b04 	ldr.w	r7, [sp], #4
 800288c:	4770      	bx	lr

0800288e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800288e:	b480      	push	{r7}
 8002890:	b083      	sub	sp, #12
 8002892:	af00      	add	r7, sp, #0
 8002894:	6078      	str	r0, [r7, #4]
 8002896:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8002898:	683b      	ldr	r3, [r7, #0]
 800289a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800289e:	605a      	str	r2, [r3, #4]
	return 0;
 80028a0:	2300      	movs	r3, #0
}
 80028a2:	4618      	mov	r0, r3
 80028a4:	370c      	adds	r7, #12
 80028a6:	46bd      	mov	sp, r7
 80028a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028ac:	4770      	bx	lr

080028ae <_isatty>:

int _isatty(int file)
{
 80028ae:	b480      	push	{r7}
 80028b0:	b083      	sub	sp, #12
 80028b2:	af00      	add	r7, sp, #0
 80028b4:	6078      	str	r0, [r7, #4]
	return 1;
 80028b6:	2301      	movs	r3, #1
}
 80028b8:	4618      	mov	r0, r3
 80028ba:	370c      	adds	r7, #12
 80028bc:	46bd      	mov	sp, r7
 80028be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028c2:	4770      	bx	lr

080028c4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80028c4:	b480      	push	{r7}
 80028c6:	b085      	sub	sp, #20
 80028c8:	af00      	add	r7, sp, #0
 80028ca:	60f8      	str	r0, [r7, #12]
 80028cc:	60b9      	str	r1, [r7, #8]
 80028ce:	607a      	str	r2, [r7, #4]
	return 0;
 80028d0:	2300      	movs	r3, #0
}
 80028d2:	4618      	mov	r0, r3
 80028d4:	3714      	adds	r7, #20
 80028d6:	46bd      	mov	sp, r7
 80028d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028dc:	4770      	bx	lr
	...

080028e0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80028e0:	b580      	push	{r7, lr}
 80028e2:	b086      	sub	sp, #24
 80028e4:	af00      	add	r7, sp, #0
 80028e6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80028e8:	4a14      	ldr	r2, [pc, #80]	; (800293c <_sbrk+0x5c>)
 80028ea:	4b15      	ldr	r3, [pc, #84]	; (8002940 <_sbrk+0x60>)
 80028ec:	1ad3      	subs	r3, r2, r3
 80028ee:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80028f0:	697b      	ldr	r3, [r7, #20]
 80028f2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80028f4:	4b13      	ldr	r3, [pc, #76]	; (8002944 <_sbrk+0x64>)
 80028f6:	681b      	ldr	r3, [r3, #0]
 80028f8:	2b00      	cmp	r3, #0
 80028fa:	d102      	bne.n	8002902 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80028fc:	4b11      	ldr	r3, [pc, #68]	; (8002944 <_sbrk+0x64>)
 80028fe:	4a12      	ldr	r2, [pc, #72]	; (8002948 <_sbrk+0x68>)
 8002900:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002902:	4b10      	ldr	r3, [pc, #64]	; (8002944 <_sbrk+0x64>)
 8002904:	681a      	ldr	r2, [r3, #0]
 8002906:	687b      	ldr	r3, [r7, #4]
 8002908:	4413      	add	r3, r2
 800290a:	693a      	ldr	r2, [r7, #16]
 800290c:	429a      	cmp	r2, r3
 800290e:	d207      	bcs.n	8002920 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002910:	f007 fab6 	bl	8009e80 <__errno>
 8002914:	4603      	mov	r3, r0
 8002916:	220c      	movs	r2, #12
 8002918:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800291a:	f04f 33ff 	mov.w	r3, #4294967295
 800291e:	e009      	b.n	8002934 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002920:	4b08      	ldr	r3, [pc, #32]	; (8002944 <_sbrk+0x64>)
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002926:	4b07      	ldr	r3, [pc, #28]	; (8002944 <_sbrk+0x64>)
 8002928:	681a      	ldr	r2, [r3, #0]
 800292a:	687b      	ldr	r3, [r7, #4]
 800292c:	4413      	add	r3, r2
 800292e:	4a05      	ldr	r2, [pc, #20]	; (8002944 <_sbrk+0x64>)
 8002930:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002932:	68fb      	ldr	r3, [r7, #12]
}
 8002934:	4618      	mov	r0, r3
 8002936:	3718      	adds	r7, #24
 8002938:	46bd      	mov	sp, r7
 800293a:	bd80      	pop	{r7, pc}
 800293c:	20020000 	.word	0x20020000
 8002940:	00000400 	.word	0x00000400
 8002944:	20000bf0 	.word	0x20000bf0
 8002948:	20017ad8 	.word	0x20017ad8

0800294c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800294c:	b480      	push	{r7}
 800294e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002950:	4b06      	ldr	r3, [pc, #24]	; (800296c <SystemInit+0x20>)
 8002952:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002956:	4a05      	ldr	r2, [pc, #20]	; (800296c <SystemInit+0x20>)
 8002958:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800295c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002960:	bf00      	nop
 8002962:	46bd      	mov	sp, r7
 8002964:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002968:	4770      	bx	lr
 800296a:	bf00      	nop
 800296c:	e000ed00 	.word	0xe000ed00

08002970 <CONFIGURACION_INICIAL>:

uint8_t buff_recv[2048];

int global_mode=1;

void CONFIGURACION_INICIAL(void){
 8002970:	b580      	push	{r7, lr}
 8002972:	b084      	sub	sp, #16
 8002974:	af02      	add	r7, sp, #8

	BaseType_t res_task;

 	IObuff=bufferCreat(128);
 8002976:	2080      	movs	r0, #128	; 0x80
 8002978:	f001 fb4a 	bl	8004010 <bufferCreat>
 800297c:	4603      	mov	r3, r0
 800297e:	4a1e      	ldr	r2, [pc, #120]	; (80029f8 <CONFIGURACION_INICIAL+0x88>)
 8002980:	6013      	str	r3, [r2, #0]

 	if (!IObuff) return;
 8002982:	4b1d      	ldr	r3, [pc, #116]	; (80029f8 <CONFIGURACION_INICIAL+0x88>)
 8002984:	681b      	ldr	r3, [r3, #0]
 8002986:	2b00      	cmp	r3, #0
 8002988:	d032      	beq.n	80029f0 <CONFIGURACION_INICIAL+0x80>

	res_task=xTaskCreate( Task_HW,"Tarea_HW",2048,NULL,	NORMAL_PRIORITY,NULL);
 800298a:	2300      	movs	r3, #0
 800298c:	9301      	str	r3, [sp, #4]
 800298e:	231b      	movs	r3, #27
 8002990:	9300      	str	r3, [sp, #0]
 8002992:	2300      	movs	r3, #0
 8002994:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002998:	4918      	ldr	r1, [pc, #96]	; (80029fc <CONFIGURACION_INICIAL+0x8c>)
 800299a:	4819      	ldr	r0, [pc, #100]	; (8002a00 <CONFIGURACION_INICIAL+0x90>)
 800299c:	f005 faf1 	bl	8007f82 <xTaskCreate>
 80029a0:	6078      	str	r0, [r7, #4]
	if( res_task != pdPASS ){
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	2b01      	cmp	r3, #1
 80029a6:	d006      	beq.n	80029b6 <CONFIGURACION_INICIAL+0x46>
			printf("PANIC: Error al crear Tarea Visualizador\r\n");
 80029a8:	4816      	ldr	r0, [pc, #88]	; (8002a04 <CONFIGURACION_INICIAL+0x94>)
 80029aa:	f007 ffb3 	bl	800a914 <puts>
			fflush(NULL);
 80029ae:	2000      	movs	r0, #0
 80029b0:	f007 fb20 	bl	8009ff4 <fflush>
			while(1);
 80029b4:	e7fe      	b.n	80029b4 <CONFIGURACION_INICIAL+0x44>
	}



	res_task=xTaskCreate(Task_CONSOLE,"CONSOLA",2048,NULL,	NORMAL_PRIORITY,NULL);
 80029b6:	2300      	movs	r3, #0
 80029b8:	9301      	str	r3, [sp, #4]
 80029ba:	231b      	movs	r3, #27
 80029bc:	9300      	str	r3, [sp, #0]
 80029be:	2300      	movs	r3, #0
 80029c0:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80029c4:	4910      	ldr	r1, [pc, #64]	; (8002a08 <CONFIGURACION_INICIAL+0x98>)
 80029c6:	4811      	ldr	r0, [pc, #68]	; (8002a0c <CONFIGURACION_INICIAL+0x9c>)
 80029c8:	f005 fadb 	bl	8007f82 <xTaskCreate>
 80029cc:	6078      	str	r0, [r7, #4]
 		if( res_task != pdPASS ){
 80029ce:	687b      	ldr	r3, [r7, #4]
 80029d0:	2b01      	cmp	r3, #1
 80029d2:	d006      	beq.n	80029e2 <CONFIGURACION_INICIAL+0x72>
 				printf("PANIC: Error al crear Tarea Visualizador\r\n");
 80029d4:	480b      	ldr	r0, [pc, #44]	; (8002a04 <CONFIGURACION_INICIAL+0x94>)
 80029d6:	f007 ff9d 	bl	800a914 <puts>
 				fflush(NULL);
 80029da:	2000      	movs	r0, #0
 80029dc:	f007 fb0a 	bl	8009ff4 <fflush>
 				while(1);
 80029e0:	e7fe      	b.n	80029e0 <CONFIGURACION_INICIAL+0x70>
 		}

 		Task_WIFI_init();
 80029e2:	f000 ffbf 	bl	8003964 <Task_WIFI_init>
 		//Task_TIME_init();
 		Task_GETREQUEST_init();
 80029e6:	f000 f983 	bl	8002cf0 <Task_GETREQUEST_init>
 		Task_COMM_init();
 80029ea:	f000 f811 	bl	8002a10 <Task_COMM_init>
 80029ee:	e000      	b.n	80029f2 <CONFIGURACION_INICIAL+0x82>
 	if (!IObuff) return;
 80029f0:	bf00      	nop


}
 80029f2:	3708      	adds	r7, #8
 80029f4:	46bd      	mov	sp, r7
 80029f6:	bd80      	pop	{r7, pc}
 80029f8:	20001c18 	.word	0x20001c18
 80029fc:	080105f0 	.word	0x080105f0
 8002a00:	08003089 	.word	0x08003089
 8002a04:	080105fc 	.word	0x080105fc
 8002a08:	08010628 	.word	0x08010628
 8002a0c:	08002c59 	.word	0x08002c59

08002a10 <Task_COMM_init>:
scomm_request_t COMM_request;
SemaphoreHandle_t COMM_xSem = NULL;
uint32_t global_comm_it;


void Task_COMM_init(void){
 8002a10:	b580      	push	{r7, lr}
 8002a12:	b084      	sub	sp, #16
 8002a14:	af02      	add	r7, sp, #8
	BaseType_t res_task;

	global_comm_it=0;
 8002a16:	4b17      	ldr	r3, [pc, #92]	; (8002a74 <Task_COMM_init+0x64>)
 8002a18:	2200      	movs	r2, #0
 8002a1a:	601a      	str	r2, [r3, #0]

	COMM_xSem=xSemaphoreCreateMutex();
 8002a1c:	2001      	movs	r0, #1
 8002a1e:	f004 fd2c 	bl	800747a <xQueueCreateMutex>
 8002a22:	4603      	mov	r3, r0
 8002a24:	4a14      	ldr	r2, [pc, #80]	; (8002a78 <Task_COMM_init+0x68>)
 8002a26:	6013      	str	r3, [r2, #0]
	if( COMM_xSem == NULL ){
 8002a28:	4b13      	ldr	r3, [pc, #76]	; (8002a78 <Task_COMM_init+0x68>)
 8002a2a:	681b      	ldr	r3, [r3, #0]
 8002a2c:	2b00      	cmp	r3, #0
 8002a2e:	d106      	bne.n	8002a3e <Task_COMM_init+0x2e>
		printf("PANIC: Error al crear el Semáforo ORION\r\n");
 8002a30:	4812      	ldr	r0, [pc, #72]	; (8002a7c <Task_COMM_init+0x6c>)
 8002a32:	f007 ff6f 	bl	800a914 <puts>
		fflush(NULL);
 8002a36:	2000      	movs	r0, #0
 8002a38:	f007 fadc 	bl	8009ff4 <fflush>
		while(1);
 8002a3c:	e7fe      	b.n	8002a3c <Task_COMM_init+0x2c>
	}

 	res_task=xTaskCreate(Task_COMM,"COMMUNICATION",2048,NULL,	NORMAL_PRIORITY,NULL);
 8002a3e:	2300      	movs	r3, #0
 8002a40:	9301      	str	r3, [sp, #4]
 8002a42:	231b      	movs	r3, #27
 8002a44:	9300      	str	r3, [sp, #0]
 8002a46:	2300      	movs	r3, #0
 8002a48:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002a4c:	490c      	ldr	r1, [pc, #48]	; (8002a80 <Task_COMM_init+0x70>)
 8002a4e:	480d      	ldr	r0, [pc, #52]	; (8002a84 <Task_COMM_init+0x74>)
 8002a50:	f005 fa97 	bl	8007f82 <xTaskCreate>
 8002a54:	6078      	str	r0, [r7, #4]
 	if( res_task != pdPASS ){
 8002a56:	687b      	ldr	r3, [r7, #4]
 8002a58:	2b01      	cmp	r3, #1
 8002a5a:	d006      	beq.n	8002a6a <Task_COMM_init+0x5a>
 	 				printf("PANIC: Error al crear Tarea Comunicaciones\r\n");
 8002a5c:	480a      	ldr	r0, [pc, #40]	; (8002a88 <Task_COMM_init+0x78>)
 8002a5e:	f007 ff59 	bl	800a914 <puts>
 	 				fflush(NULL);
 8002a62:	2000      	movs	r0, #0
 8002a64:	f007 fac6 	bl	8009ff4 <fflush>
 	 				while(1);
 8002a68:	e7fe      	b.n	8002a68 <Task_COMM_init+0x58>
 	}
}
 8002a6a:	bf00      	nop
 8002a6c:	3708      	adds	r7, #8
 8002a6e:	46bd      	mov	sp, r7
 8002a70:	bd80      	pop	{r7, pc}
 8002a72:	bf00      	nop
 8002a74:	20001414 	.word	0x20001414
 8002a78:	20001410 	.word	0x20001410
 8002a7c:	08010630 	.word	0x08010630
 8002a80:	0801065c 	.word	0x0801065c
 8002a84:	08002a8d 	.word	0x08002a8d
 8002a88:	0801066c 	.word	0x0801066c

08002a8c <Task_COMM>:

void Task_COMM( void *pvParameters ){
 8002a8c:	b590      	push	{r4, r7, lr}
 8002a8e:	b085      	sub	sp, #20
 8002a90:	af00      	add	r7, sp, #0
 8002a92:	6078      	str	r0, [r7, #4]

	int signal;

	while (global_wifi_ready==0) osDelay(1);
 8002a94:	e002      	b.n	8002a9c <Task_COMM+0x10>
 8002a96:	2001      	movs	r0, #1
 8002a98:	f004 fa95 	bl	8006fc6 <osDelay>
 8002a9c:	4b32      	ldr	r3, [pc, #200]	; (8002b68 <Task_COMM+0xdc>)
 8002a9e:	681b      	ldr	r3, [r3, #0]
 8002aa0:	2b00      	cmp	r3, #0
 8002aa2:	d0f8      	beq.n	8002a96 <Task_COMM+0xa>

	while (1) {

		signal=1;
 8002aa4:	2301      	movs	r3, #1
 8002aa6:	60fb      	str	r3, [r7, #12]
		do {
			if (xSemaphoreTake(COMM_xSem, 20000/portTICK_RATE_MS  ) != pdTRUE ){// si en 20 segundos no he continuado entrado en orion mmm mal rollito harakiri
 8002aa8:	4b30      	ldr	r3, [pc, #192]	; (8002b6c <Task_COMM+0xe0>)
 8002aaa:	681b      	ldr	r3, [r3, #0]
 8002aac:	f644 6120 	movw	r1, #20000	; 0x4e20
 8002ab0:	4618      	mov	r0, r3
 8002ab2:	f004 ff75 	bl	80079a0 <xQueueSemaphoreTake>
 8002ab6:	4603      	mov	r3, r0
 8002ab8:	2b01      	cmp	r3, #1
 8002aba:	d004      	beq.n	8002ac6 <Task_COMM+0x3a>
				bprintf("\r\n\n\nHARAKIRI!!\n\n\n");
 8002abc:	482c      	ldr	r0, [pc, #176]	; (8002b70 <Task_COMM+0xe4>)
 8002abe:	f000 f8f3 	bl	8002ca8 <bprintf>
		   		HAL_NVIC_SystemReset();
 8002ac2:	f002 f874 	bl	8004bae <HAL_NVIC_SystemReset>
		}

		// aquí tengo la exclusión mutua asegurada.
		if (COMM_request.command==0){ //nada quiere nada
 8002ac6:	4b2b      	ldr	r3, [pc, #172]	; (8002b74 <Task_COMM+0xe8>)
 8002ac8:	681b      	ldr	r3, [r3, #0]
 8002aca:	2b00      	cmp	r3, #0
 8002acc:	d10a      	bne.n	8002ae4 <Task_COMM+0x58>
			xSemaphoreGive(COMM_xSem); // i’m going out critical section
 8002ace:	4b27      	ldr	r3, [pc, #156]	; (8002b6c <Task_COMM+0xe0>)
 8002ad0:	6818      	ldr	r0, [r3, #0]
 8002ad2:	2300      	movs	r3, #0
 8002ad4:	2200      	movs	r2, #0
 8002ad6:	2100      	movs	r1, #0
 8002ad8:	f004 fce8 	bl	80074ac <xQueueGenericSend>
			osDelay(100);
 8002adc:	2064      	movs	r0, #100	; 0x64
 8002ade:	f004 fa72 	bl	8006fc6 <osDelay>
 8002ae2:	e001      	b.n	8002ae8 <Task_COMM+0x5c>
		}else signal=0;
 8002ae4:	2300      	movs	r3, #0
 8002ae6:	60fb      	str	r3, [r7, #12]

		}while(signal);
 8002ae8:	68fb      	ldr	r3, [r7, #12]
 8002aea:	2b00      	cmp	r3, #0
 8002aec:	d1dc      	bne.n	8002aa8 <Task_COMM+0x1c>

		xSemaphoreGive(COMM_xSem); // i’m going out critical section
 8002aee:	4b1f      	ldr	r3, [pc, #124]	; (8002b6c <Task_COMM+0xe0>)
 8002af0:	6818      	ldr	r0, [r3, #0]
 8002af2:	2300      	movs	r3, #0
 8002af4:	2200      	movs	r2, #0
 8002af6:	2100      	movs	r1, #0
 8002af8:	f004 fcd8 	bl	80074ac <xQueueGenericSend>

		// Here is safe access to COMM_request because other thread has put COMM_request.command to 1 so before write any other thread must read 0 in this item.

		COMM_request.HTTP_response=ESP_Send_Request(COMM_request.dst_address,COMM_request.dst_port,COMM_request.HTTP_request);
 8002afc:	4b1d      	ldr	r3, [pc, #116]	; (8002b74 <Task_COMM+0xe8>)
 8002afe:	691b      	ldr	r3, [r3, #16]
 8002b00:	4a1c      	ldr	r2, [pc, #112]	; (8002b74 <Task_COMM+0xe8>)
 8002b02:	68d2      	ldr	r2, [r2, #12]
 8002b04:	4611      	mov	r1, r2
 8002b06:	4a1b      	ldr	r2, [pc, #108]	; (8002b74 <Task_COMM+0xe8>)
 8002b08:	6952      	ldr	r2, [r2, #20]
 8002b0a:	4618      	mov	r0, r3
 8002b0c:	f001 f8a4 	bl	8003c58 <ESP_Send_Request>
 8002b10:	4603      	mov	r3, r0
 8002b12:	4a18      	ldr	r2, [pc, #96]	; (8002b74 <Task_COMM+0xe8>)
 8002b14:	6193      	str	r3, [r2, #24]

		// remove headers and +IPD messages from ESP32 as a result you have json pure string IF it is completely recover from server in a unique +IPD message
		//bprintf(" RESPONSE %s",COMM_request.HTTP_response);

		cleanResponse(COMM_request.HTTP_response,strlen((char *)COMM_request.HTTP_response));
 8002b16:	4b17      	ldr	r3, [pc, #92]	; (8002b74 <Task_COMM+0xe8>)
 8002b18:	699c      	ldr	r4, [r3, #24]
 8002b1a:	4b16      	ldr	r3, [pc, #88]	; (8002b74 <Task_COMM+0xe8>)
 8002b1c:	699b      	ldr	r3, [r3, #24]
 8002b1e:	4618      	mov	r0, r3
 8002b20:	f7fd fb5e 	bl	80001e0 <strlen>
 8002b24:	4603      	mov	r3, r0
 8002b26:	4619      	mov	r1, r3
 8002b28:	4620      	mov	r0, r4
 8002b2a:	f000 f825 	bl	8002b78 <cleanResponse>



		if (xSemaphoreTake(COMM_xSem, 20000/portTICK_RATE_MS  ) != pdTRUE ){// si en 20 segundos no he continuado entrado en orion mmm mal rollito harakiri
 8002b2e:	4b0f      	ldr	r3, [pc, #60]	; (8002b6c <Task_COMM+0xe0>)
 8002b30:	681b      	ldr	r3, [r3, #0]
 8002b32:	f644 6120 	movw	r1, #20000	; 0x4e20
 8002b36:	4618      	mov	r0, r3
 8002b38:	f004 ff32 	bl	80079a0 <xQueueSemaphoreTake>
 8002b3c:	4603      	mov	r3, r0
 8002b3e:	2b01      	cmp	r3, #1
 8002b40:	d004      	beq.n	8002b4c <Task_COMM+0xc0>
			bprintf("\r\n\n\nHARAKIRI!!\n\n\n");
 8002b42:	480b      	ldr	r0, [pc, #44]	; (8002b70 <Task_COMM+0xe4>)
 8002b44:	f000 f8b0 	bl	8002ca8 <bprintf>
		    HAL_NVIC_SystemReset();
 8002b48:	f002 f831 	bl	8004bae <HAL_NVIC_SystemReset>
		}

		// if ESP does not receive response or there are any errors result must be different to 1
		COMM_request.result=1;
 8002b4c:	4b09      	ldr	r3, [pc, #36]	; (8002b74 <Task_COMM+0xe8>)
 8002b4e:	2201      	movs	r2, #1
 8002b50:	609a      	str	r2, [r3, #8]
		xSemaphoreGive(COMM_xSem); // i’m going out critical section
 8002b52:	4b06      	ldr	r3, [pc, #24]	; (8002b6c <Task_COMM+0xe0>)
 8002b54:	6818      	ldr	r0, [r3, #0]
 8002b56:	2300      	movs	r3, #0
 8002b58:	2200      	movs	r2, #0
 8002b5a:	2100      	movs	r1, #0
 8002b5c:	f004 fca6 	bl	80074ac <xQueueGenericSend>

		vTaskDelay(10/portTICK_RATE_MS );
 8002b60:	200a      	movs	r0, #10
 8002b62:	f005 fb93 	bl	800828c <vTaskDelay>
		signal=1;
 8002b66:	e79d      	b.n	8002aa4 <Task_COMM+0x18>
 8002b68:	20001c6c 	.word	0x20001c6c
 8002b6c:	20001410 	.word	0x20001410
 8002b70:	08010698 	.word	0x08010698
 8002b74:	200013f4 	.word	0x200013f4

08002b78 <cleanResponse>:




void cleanResponse(uint8_t * data,int maxlen)
{
 8002b78:	b580      	push	{r7, lr}
 8002b7a:	b088      	sub	sp, #32
 8002b7c:	af00      	add	r7, sp, #0
 8002b7e:	6078      	str	r0, [r7, #4]
 8002b80:	6039      	str	r1, [r7, #0]


	uint8_t * j,*from, *pc;


	 i=0;
 8002b82:	2300      	movs	r3, #0
 8002b84:	61bb      	str	r3, [r7, #24]
	 while ((j=(uint8_t *)strstr((char *)data,"+IPD"))){
 8002b86:	e01b      	b.n	8002bc0 <cleanResponse+0x48>

		 from=(uint8_t *)strstr((char *)j,":");
 8002b88:	213a      	movs	r1, #58	; 0x3a
 8002b8a:	6978      	ldr	r0, [r7, #20]
 8002b8c:	f008 f93b 	bl	800ae06 <strchr>
 8002b90:	6138      	str	r0, [r7, #16]
		 from++;
 8002b92:	693b      	ldr	r3, [r7, #16]
 8002b94:	3301      	adds	r3, #1
 8002b96:	613b      	str	r3, [r7, #16]

		 	 for (pc=from;pc<(data+2048);pc++)
 8002b98:	693b      	ldr	r3, [r7, #16]
 8002b9a:	60fb      	str	r3, [r7, #12]
 8002b9c:	e00a      	b.n	8002bb4 <cleanResponse+0x3c>
			 	*(j++)=*(from++);
 8002b9e:	693a      	ldr	r2, [r7, #16]
 8002ba0:	1c53      	adds	r3, r2, #1
 8002ba2:	613b      	str	r3, [r7, #16]
 8002ba4:	697b      	ldr	r3, [r7, #20]
 8002ba6:	1c59      	adds	r1, r3, #1
 8002ba8:	6179      	str	r1, [r7, #20]
 8002baa:	7812      	ldrb	r2, [r2, #0]
 8002bac:	701a      	strb	r2, [r3, #0]
		 	 for (pc=from;pc<(data+2048);pc++)
 8002bae:	68fb      	ldr	r3, [r7, #12]
 8002bb0:	3301      	adds	r3, #1
 8002bb2:	60fb      	str	r3, [r7, #12]
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8002bba:	68fa      	ldr	r2, [r7, #12]
 8002bbc:	429a      	cmp	r2, r3
 8002bbe:	d3ee      	bcc.n	8002b9e <cleanResponse+0x26>
	 while ((j=(uint8_t *)strstr((char *)data,"+IPD"))){
 8002bc0:	4924      	ldr	r1, [pc, #144]	; (8002c54 <cleanResponse+0xdc>)
 8002bc2:	6878      	ldr	r0, [r7, #4]
 8002bc4:	f008 f940 	bl	800ae48 <strstr>
 8002bc8:	6178      	str	r0, [r7, #20]
 8002bca:	697b      	ldr	r3, [r7, #20]
 8002bcc:	2b00      	cmp	r3, #0
 8002bce:	d1db      	bne.n	8002b88 <cleanResponse+0x10>
	 };
	 	 do
			                  {
			                  }while(data[i++]!='{');
 8002bd0:	69bb      	ldr	r3, [r7, #24]
 8002bd2:	1c5a      	adds	r2, r3, #1
 8002bd4:	61ba      	str	r2, [r7, #24]
 8002bd6:	461a      	mov	r2, r3
 8002bd8:	687b      	ldr	r3, [r7, #4]
 8002bda:	4413      	add	r3, r2
 8002bdc:	781b      	ldrb	r3, [r3, #0]
 8002bde:	2b7b      	cmp	r3, #123	; 0x7b
 8002be0:	d1f6      	bne.n	8002bd0 <cleanResponse+0x58>
			                  i--;
 8002be2:	69bb      	ldr	r3, [r7, #24]
 8002be4:	3b01      	subs	r3, #1
 8002be6:	61bb      	str	r3, [r7, #24]
	for (t=0;t<(2048-i);t++)
 8002be8:	2300      	movs	r3, #0
 8002bea:	61fb      	str	r3, [r7, #28]
 8002bec:	e00d      	b.n	8002c0a <cleanResponse+0x92>
		data[t]=data[t+i];
 8002bee:	69fa      	ldr	r2, [r7, #28]
 8002bf0:	69bb      	ldr	r3, [r7, #24]
 8002bf2:	4413      	add	r3, r2
 8002bf4:	461a      	mov	r2, r3
 8002bf6:	687b      	ldr	r3, [r7, #4]
 8002bf8:	441a      	add	r2, r3
 8002bfa:	69fb      	ldr	r3, [r7, #28]
 8002bfc:	6879      	ldr	r1, [r7, #4]
 8002bfe:	440b      	add	r3, r1
 8002c00:	7812      	ldrb	r2, [r2, #0]
 8002c02:	701a      	strb	r2, [r3, #0]
	for (t=0;t<(2048-i);t++)
 8002c04:	69fb      	ldr	r3, [r7, #28]
 8002c06:	3301      	adds	r3, #1
 8002c08:	61fb      	str	r3, [r7, #28]
 8002c0a:	69bb      	ldr	r3, [r7, #24]
 8002c0c:	f5c3 6300 	rsb	r3, r3, #2048	; 0x800
 8002c10:	69fa      	ldr	r2, [r7, #28]
 8002c12:	429a      	cmp	r2, r3
 8002c14:	dbeb      	blt.n	8002bee <cleanResponse+0x76>

	i=0;
 8002c16:	2300      	movs	r3, #0
 8002c18:	61bb      	str	r3, [r7, #24]

    for (t=0;t<2048;t++)
 8002c1a:	2300      	movs	r3, #0
 8002c1c:	61fb      	str	r3, [r7, #28]
 8002c1e:	e00a      	b.n	8002c36 <cleanResponse+0xbe>
    	if (data[t]=='}')
 8002c20:	69fb      	ldr	r3, [r7, #28]
 8002c22:	687a      	ldr	r2, [r7, #4]
 8002c24:	4413      	add	r3, r2
 8002c26:	781b      	ldrb	r3, [r3, #0]
 8002c28:	2b7d      	cmp	r3, #125	; 0x7d
 8002c2a:	d101      	bne.n	8002c30 <cleanResponse+0xb8>
    		i=t;
 8002c2c:	69fb      	ldr	r3, [r7, #28]
 8002c2e:	61bb      	str	r3, [r7, #24]
    for (t=0;t<2048;t++)
 8002c30:	69fb      	ldr	r3, [r7, #28]
 8002c32:	3301      	adds	r3, #1
 8002c34:	61fb      	str	r3, [r7, #28]
 8002c36:	69fb      	ldr	r3, [r7, #28]
 8002c38:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8002c3c:	dbf0      	blt.n	8002c20 <cleanResponse+0xa8>
    data[i+1]=0;
 8002c3e:	69bb      	ldr	r3, [r7, #24]
 8002c40:	3301      	adds	r3, #1
 8002c42:	687a      	ldr	r2, [r7, #4]
 8002c44:	4413      	add	r3, r2
 8002c46:	2200      	movs	r2, #0
 8002c48:	701a      	strb	r2, [r3, #0]




}
 8002c4a:	bf00      	nop
 8002c4c:	3720      	adds	r7, #32
 8002c4e:	46bd      	mov	sp, r7
 8002c50:	bd80      	pop	{r7, pc}
 8002c52:	bf00      	nop
 8002c54:	080106ac 	.word	0x080106ac

08002c58 <Task_CONSOLE>:
#include <stdarg.h>

char bprint_buff[2048];
BUFF_BUFFER_t * IObuff;

void Task_CONSOLE( void *pvParameters ){
 8002c58:	b580      	push	{r7, lr}
 8002c5a:	b084      	sub	sp, #16
 8002c5c:	af00      	add	r7, sp, #0
 8002c5e:	6078      	str	r0, [r7, #4]

	uint32_t it;
	BUFF_ITEM_t car;
	HAL_StatusTypeDef res;

    it=0;
 8002c60:	2300      	movs	r3, #0
 8002c62:	60fb      	str	r3, [r7, #12]
	while(1){

		IObuff->get(IObuff,&car);
 8002c64:	4b0e      	ldr	r3, [pc, #56]	; (8002ca0 <Task_CONSOLE+0x48>)
 8002c66:	681b      	ldr	r3, [r3, #0]
 8002c68:	681b      	ldr	r3, [r3, #0]
 8002c6a:	4a0d      	ldr	r2, [pc, #52]	; (8002ca0 <Task_CONSOLE+0x48>)
 8002c6c:	6812      	ldr	r2, [r2, #0]
 8002c6e:	f107 010a 	add.w	r1, r7, #10
 8002c72:	4610      	mov	r0, r2
 8002c74:	4798      	blx	r3
		do
			{
			res=HAL_UART_Transmit(& huart2,&car,1,10000);
 8002c76:	f107 010a 	add.w	r1, r7, #10
 8002c7a:	f242 7310 	movw	r3, #10000	; 0x2710
 8002c7e:	2201      	movs	r2, #1
 8002c80:	4808      	ldr	r0, [pc, #32]	; (8002ca4 <Task_CONSOLE+0x4c>)
 8002c82:	f003 fa20 	bl	80060c6 <HAL_UART_Transmit>
 8002c86:	4603      	mov	r3, r0
 8002c88:	72fb      	strb	r3, [r7, #11]
			if (res!=HAL_OK) while(1);
 8002c8a:	7afb      	ldrb	r3, [r7, #11]
 8002c8c:	2b00      	cmp	r3, #0
 8002c8e:	d000      	beq.n	8002c92 <Task_CONSOLE+0x3a>
 8002c90:	e7fe      	b.n	8002c90 <Task_CONSOLE+0x38>
			}while(res!= HAL_OK);
 8002c92:	7afb      	ldrb	r3, [r7, #11]
 8002c94:	2b00      	cmp	r3, #0
 8002c96:	d1ee      	bne.n	8002c76 <Task_CONSOLE+0x1e>

		it++;
 8002c98:	68fb      	ldr	r3, [r7, #12]
 8002c9a:	3301      	adds	r3, #1
 8002c9c:	60fb      	str	r3, [r7, #12]
		IObuff->get(IObuff,&car);
 8002c9e:	e7e1      	b.n	8002c64 <Task_CONSOLE+0xc>
 8002ca0:	20001c18 	.word	0x20001c18
 8002ca4:	20000a88 	.word	0x20000a88

08002ca8 <bprintf>:
     }
	 IObuff->puts(IObuff,(BUFF_ITEM_t *)cad,strlen(cad));
}


void bprintf ( const char *fmt, ...){
 8002ca8:	b40f      	push	{r0, r1, r2, r3}
 8002caa:	b5b0      	push	{r4, r5, r7, lr}
 8002cac:	b082      	sub	sp, #8
 8002cae:	af00      	add	r7, sp, #0
	  va_list ap;


	  va_start(ap, fmt);
 8002cb0:	f107 031c 	add.w	r3, r7, #28
 8002cb4:	607b      	str	r3, [r7, #4]
	  vsprintf(bprint_buff,fmt,ap);
 8002cb6:	687a      	ldr	r2, [r7, #4]
 8002cb8:	69b9      	ldr	r1, [r7, #24]
 8002cba:	480b      	ldr	r0, [pc, #44]	; (8002ce8 <bprintf+0x40>)
 8002cbc:	f00a f914 	bl	800cee8 <vsprintf>
	  va_end(ap);
 	  IObuff->puts(IObuff,(BUFF_ITEM_t *)bprint_buff,strlen(bprint_buff));
 8002cc0:	4b0a      	ldr	r3, [pc, #40]	; (8002cec <bprintf+0x44>)
 8002cc2:	681b      	ldr	r3, [r3, #0]
 8002cc4:	691c      	ldr	r4, [r3, #16]
 8002cc6:	4b09      	ldr	r3, [pc, #36]	; (8002cec <bprintf+0x44>)
 8002cc8:	681d      	ldr	r5, [r3, #0]
 8002cca:	4807      	ldr	r0, [pc, #28]	; (8002ce8 <bprintf+0x40>)
 8002ccc:	f7fd fa88 	bl	80001e0 <strlen>
 8002cd0:	4603      	mov	r3, r0
 8002cd2:	461a      	mov	r2, r3
 8002cd4:	4904      	ldr	r1, [pc, #16]	; (8002ce8 <bprintf+0x40>)
 8002cd6:	4628      	mov	r0, r5
 8002cd8:	47a0      	blx	r4

}
 8002cda:	bf00      	nop
 8002cdc:	3708      	adds	r7, #8
 8002cde:	46bd      	mov	sp, r7
 8002ce0:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8002ce4:	b004      	add	sp, #16
 8002ce6:	4770      	bx	lr
 8002ce8:	20001418 	.word	0x20001418
 8002cec:	20001c18 	.word	0x20001c18

08002cf0 <Task_GETREQUEST_init>:
#include "cJSON.h"




void Task_GETREQUEST_init(void){
 8002cf0:	b580      	push	{r7, lr}
 8002cf2:	b084      	sub	sp, #16
 8002cf4:	af02      	add	r7, sp, #8

	BaseType_t res_task;

	res_task=xTaskCreate( Task_GETREQUEST,"GETREQUEST",2048,NULL,	NORMAL_PRIORITY,NULL);
 8002cf6:	2300      	movs	r3, #0
 8002cf8:	9301      	str	r3, [sp, #4]
 8002cfa:	231b      	movs	r3, #27
 8002cfc:	9300      	str	r3, [sp, #0]
 8002cfe:	2300      	movs	r3, #0
 8002d00:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002d04:	4909      	ldr	r1, [pc, #36]	; (8002d2c <Task_GETREQUEST_init+0x3c>)
 8002d06:	480a      	ldr	r0, [pc, #40]	; (8002d30 <Task_GETREQUEST_init+0x40>)
 8002d08:	f005 f93b 	bl	8007f82 <xTaskCreate>
 8002d0c:	6078      	str	r0, [r7, #4]
	if( res_task != pdPASS ){
 8002d0e:	687b      	ldr	r3, [r7, #4]
 8002d10:	2b01      	cmp	r3, #1
 8002d12:	d006      	beq.n	8002d22 <Task_GETREQUEST_init+0x32>
		bprintf("PANIC: Error al crear Tarea GETREQUEST\r\n");
 8002d14:	4807      	ldr	r0, [pc, #28]	; (8002d34 <Task_GETREQUEST_init+0x44>)
 8002d16:	f7ff ffc7 	bl	8002ca8 <bprintf>
		fflush(NULL);
 8002d1a:	2000      	movs	r0, #0
 8002d1c:	f007 f96a 	bl	8009ff4 <fflush>
		while(1);
 8002d20:	e7fe      	b.n	8002d20 <Task_GETREQUEST_init+0x30>
	}

}
 8002d22:	bf00      	nop
 8002d24:	3708      	adds	r7, #8
 8002d26:	46bd      	mov	sp, r7
 8002d28:	bd80      	pop	{r7, pc}
 8002d2a:	bf00      	nop
 8002d2c:	080106b4 	.word	0x080106b4
 8002d30:	08002d39 	.word	0x08002d39
 8002d34:	080106c0 	.word	0x080106c0

08002d38 <Task_GETREQUEST>:


void Task_GETREQUEST( void *pvParameters ){
 8002d38:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002d3c:	f5ad 6d48 	sub.w	sp, sp, #3200	; 0xc80
 8002d40:	af12      	add	r7, sp, #72	; 0x48
 8002d42:	f607 4338 	addw	r3, r7, #3128	; 0xc38
 8002d46:	f6a3 4314 	subw	r3, r3, #3092	; 0xc14
 8002d4a:	6018      	str	r0, [r3, #0]

	int signal;
	CJSON_PUBLIC(cJSON *) jsons1;

 	cJSON *name = NULL;
 8002d4c:	2300      	movs	r3, #0
 8002d4e:	f8c7 3c30 	str.w	r3, [r7, #3120]	; 0xc30

	while (1) {

		signal=1;
 8002d52:	2301      	movs	r3, #1
 8002d54:	f8c7 3c34 	str.w	r3, [r7, #3124]	; 0xc34
		do {
			if (xSemaphoreTake(COMM_xSem, 20000/portTICK_RATE_MS  ) != pdTRUE ){// si en 20 segundos no he continuado entrado en orion mmm mal rollito harakiri
 8002d58:	4baa      	ldr	r3, [pc, #680]	; (8003004 <Task_GETREQUEST+0x2cc>)
 8002d5a:	681b      	ldr	r3, [r3, #0]
 8002d5c:	f644 6120 	movw	r1, #20000	; 0x4e20
 8002d60:	4618      	mov	r0, r3
 8002d62:	f004 fe1d 	bl	80079a0 <xQueueSemaphoreTake>
 8002d66:	4603      	mov	r3, r0
 8002d68:	2b01      	cmp	r3, #1
 8002d6a:	d004      	beq.n	8002d76 <Task_GETREQUEST+0x3e>
				bprintf("\r\n\n\nHARAKIRI!!\n\n\n");
 8002d6c:	48a6      	ldr	r0, [pc, #664]	; (8003008 <Task_GETREQUEST+0x2d0>)
 8002d6e:	f7ff ff9b 	bl	8002ca8 <bprintf>
		   		HAL_NVIC_SystemReset();
 8002d72:	f001 ff1c 	bl	8004bae <HAL_NVIC_SystemReset>
			}

			// aquí tengo la exclusión mutua asegurada.
			if (COMM_request.command==0){ //nada quiere nada
 8002d76:	4ba5      	ldr	r3, [pc, #660]	; (800300c <Task_GETREQUEST+0x2d4>)
 8002d78:	681b      	ldr	r3, [r3, #0]
 8002d7a:	2b00      	cmp	r3, #0
 8002d7c:	f040 80f6 	bne.w	8002f6c <Task_GETREQUEST+0x234>
				if(global_mode==1){
 8002d80:	4ba3      	ldr	r3, [pc, #652]	; (8003010 <Task_GETREQUEST+0x2d8>)
 8002d82:	681b      	ldr	r3, [r3, #0]
 8002d84:	2b01      	cmp	r3, #1
 8002d86:	f040 80a0 	bne.w	8002eca <Task_GETREQUEST+0x192>
					COMM_request.command=1;
 8002d8a:	4ba0      	ldr	r3, [pc, #640]	; (800300c <Task_GETREQUEST+0x2d4>)
 8002d8c:	2201      	movs	r2, #1
 8002d8e:	601a      	str	r2, [r3, #0]
					COMM_request.result=0;
 8002d90:	4b9e      	ldr	r3, [pc, #632]	; (800300c <Task_GETREQUEST+0x2d4>)
 8002d92:	2200      	movs	r2, #0
 8002d94:	609a      	str	r2, [r3, #8]
					COMM_request.type=global_mode;
 8002d96:	4b9e      	ldr	r3, [pc, #632]	; (8003010 <Task_GETREQUEST+0x2d8>)
 8002d98:	681b      	ldr	r3, [r3, #0]
 8002d9a:	4a9c      	ldr	r2, [pc, #624]	; (800300c <Task_GETREQUEST+0x2d4>)
 8002d9c:	6053      	str	r3, [r2, #4]
					// now structure access is secure
					COMM_request.dst_port=1026;
 8002d9e:	4b9b      	ldr	r3, [pc, #620]	; (800300c <Task_GETREQUEST+0x2d4>)
 8002da0:	f240 4202 	movw	r2, #1026	; 0x402
 8002da4:	60da      	str	r2, [r3, #12]
					COMM_request.dst_address=(uint8_t *)"pperez-seu-or.disca.upv.es";
 8002da6:	4b99      	ldr	r3, [pc, #612]	; (800300c <Task_GETREQUEST+0x2d4>)
 8002da8:	4a9a      	ldr	r2, [pc, #616]	; (8003014 <Task_GETREQUEST+0x2dc>)
 8002daa:	611a      	str	r2, [r3, #16]
					char buff_sprintf_body[1024]="";
 8002dac:	f607 4338 	addw	r3, r7, #3128	; 0xc38
 8002db0:	f6a3 430c 	subw	r3, r3, #3084	; 0xc0c
 8002db4:	2200      	movs	r2, #0
 8002db6:	601a      	str	r2, [r3, #0]
 8002db8:	3304      	adds	r3, #4
 8002dba:	f44f 727f 	mov.w	r2, #1020	; 0x3fc
 8002dbe:	2100      	movs	r1, #0
 8002dc0:	4618      	mov	r0, r3
 8002dc2:	f007 fd4d 	bl	800a860 <memset>
					char buff_sprintf_header[2048]="";
 8002dc6:	f607 4338 	addw	r3, r7, #3128	; 0xc38
 8002dca:	f6a3 030c 	subw	r3, r3, #2060	; 0x80c
 8002dce:	2200      	movs	r2, #0
 8002dd0:	601a      	str	r2, [r3, #0]
 8002dd2:	3304      	adds	r3, #4
 8002dd4:	f240 72fc 	movw	r2, #2044	; 0x7fc
 8002dd8:	2100      	movs	r1, #0
 8002dda:	4618      	mov	r0, r3
 8002ddc:	f007 fd40 	bl	800a860 <memset>
					sprintf(buff_sprintf_body,ORION_UPDATE_BODY_TEMP,DEVICE_NAME,global_sensor_level[0],global_sensor_level_max[0],global_sensor_level_min[0],global_sensor_level_alarm[0],global_sensor_level[1],global_sensor_level_max[1],global_sensor_level_min[1],global_sensor_level_alarm[1],global_buzzer?'T':'F');
 8002de0:	4b8d      	ldr	r3, [pc, #564]	; (8003018 <Task_GETREQUEST+0x2e0>)
 8002de2:	681b      	ldr	r3, [r3, #0]
 8002de4:	4618      	mov	r0, r3
 8002de6:	f7fd fbb7 	bl	8000558 <__aeabi_f2d>
 8002dea:	4682      	mov	sl, r0
 8002dec:	468b      	mov	fp, r1
 8002dee:	4b8b      	ldr	r3, [pc, #556]	; (800301c <Task_GETREQUEST+0x2e4>)
 8002df0:	681b      	ldr	r3, [r3, #0]
 8002df2:	4618      	mov	r0, r3
 8002df4:	f7fd fbb0 	bl	8000558 <__aeabi_f2d>
 8002df8:	e9c7 0106 	strd	r0, r1, [r7, #24]
 8002dfc:	4b88      	ldr	r3, [pc, #544]	; (8003020 <Task_GETREQUEST+0x2e8>)
 8002dfe:	681b      	ldr	r3, [r3, #0]
 8002e00:	4618      	mov	r0, r3
 8002e02:	f7fd fba9 	bl	8000558 <__aeabi_f2d>
 8002e06:	e9c7 0104 	strd	r0, r1, [r7, #16]
 8002e0a:	4b86      	ldr	r3, [pc, #536]	; (8003024 <Task_GETREQUEST+0x2ec>)
 8002e0c:	681b      	ldr	r3, [r3, #0]
 8002e0e:	4618      	mov	r0, r3
 8002e10:	f7fd fba2 	bl	8000558 <__aeabi_f2d>
 8002e14:	e9c7 0102 	strd	r0, r1, [r7, #8]
 8002e18:	4b7f      	ldr	r3, [pc, #508]	; (8003018 <Task_GETREQUEST+0x2e0>)
 8002e1a:	685b      	ldr	r3, [r3, #4]
 8002e1c:	4618      	mov	r0, r3
 8002e1e:	f7fd fb9b 	bl	8000558 <__aeabi_f2d>
 8002e22:	e9c7 0100 	strd	r0, r1, [r7]
 8002e26:	4b7d      	ldr	r3, [pc, #500]	; (800301c <Task_GETREQUEST+0x2e4>)
 8002e28:	685b      	ldr	r3, [r3, #4]
 8002e2a:	4618      	mov	r0, r3
 8002e2c:	f7fd fb94 	bl	8000558 <__aeabi_f2d>
 8002e30:	4680      	mov	r8, r0
 8002e32:	4689      	mov	r9, r1
 8002e34:	4b7a      	ldr	r3, [pc, #488]	; (8003020 <Task_GETREQUEST+0x2e8>)
 8002e36:	685b      	ldr	r3, [r3, #4]
 8002e38:	4618      	mov	r0, r3
 8002e3a:	f7fd fb8d 	bl	8000558 <__aeabi_f2d>
 8002e3e:	4604      	mov	r4, r0
 8002e40:	460d      	mov	r5, r1
 8002e42:	4b78      	ldr	r3, [pc, #480]	; (8003024 <Task_GETREQUEST+0x2ec>)
 8002e44:	685b      	ldr	r3, [r3, #4]
 8002e46:	4618      	mov	r0, r3
 8002e48:	f7fd fb86 	bl	8000558 <__aeabi_f2d>
 8002e4c:	4b76      	ldr	r3, [pc, #472]	; (8003028 <Task_GETREQUEST+0x2f0>)
 8002e4e:	781b      	ldrb	r3, [r3, #0]
 8002e50:	2b00      	cmp	r3, #0
 8002e52:	d001      	beq.n	8002e58 <Task_GETREQUEST+0x120>
 8002e54:	2254      	movs	r2, #84	; 0x54
 8002e56:	e000      	b.n	8002e5a <Task_GETREQUEST+0x122>
 8002e58:	2246      	movs	r2, #70	; 0x46
 8002e5a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8002e5e:	9210      	str	r2, [sp, #64]	; 0x40
 8002e60:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 8002e64:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
 8002e68:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
 8002e6c:	ed97 7b00 	vldr	d7, [r7]
 8002e70:	ed8d 7b08 	vstr	d7, [sp, #32]
 8002e74:	ed97 7b02 	vldr	d7, [r7, #8]
 8002e78:	ed8d 7b06 	vstr	d7, [sp, #24]
 8002e7c:	ed97 7b04 	vldr	d7, [r7, #16]
 8002e80:	ed8d 7b04 	vstr	d7, [sp, #16]
 8002e84:	ed97 7b06 	vldr	d7, [r7, #24]
 8002e88:	ed8d 7b02 	vstr	d7, [sp, #8]
 8002e8c:	e9cd ab00 	strd	sl, fp, [sp]
 8002e90:	4a66      	ldr	r2, [pc, #408]	; (800302c <Task_GETREQUEST+0x2f4>)
 8002e92:	4967      	ldr	r1, [pc, #412]	; (8003030 <Task_GETREQUEST+0x2f8>)
 8002e94:	4618      	mov	r0, r3
 8002e96:	f007 ff53 	bl	800ad40 <sprintf>
			        sprintf(buff_sprintf_header,"%s%d\r\n\r\n%s ",UPDATE_HEADER,strlen(buff_sprintf_body),buff_sprintf_body);
 8002e9a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8002e9e:	4618      	mov	r0, r3
 8002ea0:	f7fd f99e 	bl	80001e0 <strlen>
 8002ea4:	4602      	mov	r2, r0
 8002ea6:	f207 402c 	addw	r0, r7, #1068	; 0x42c
 8002eaa:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8002eae:	9300      	str	r3, [sp, #0]
 8002eb0:	4613      	mov	r3, r2
 8002eb2:	4a60      	ldr	r2, [pc, #384]	; (8003034 <Task_GETREQUEST+0x2fc>)
 8002eb4:	4960      	ldr	r1, [pc, #384]	; (8003038 <Task_GETREQUEST+0x300>)
 8002eb6:	f007 ff43 	bl	800ad40 <sprintf>
			        COMM_request.HTTP_request=(	uint8_t *) buff_sprintf_header;
 8002eba:	4a54      	ldr	r2, [pc, #336]	; (800300c <Task_GETREQUEST+0x2d4>)
 8002ebc:	f207 432c 	addw	r3, r7, #1068	; 0x42c
 8002ec0:	6153      	str	r3, [r2, #20]
					signal=0;
 8002ec2:	2300      	movs	r3, #0
 8002ec4:	f8c7 3c34 	str.w	r3, [r7, #3124]	; 0xc34
 8002ec8:	e050      	b.n	8002f6c <Task_GETREQUEST+0x234>
				}
				else if(global_mode==2){
 8002eca:	4b51      	ldr	r3, [pc, #324]	; (8003010 <Task_GETREQUEST+0x2d8>)
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	2b02      	cmp	r3, #2
 8002ed0:	d149      	bne.n	8002f66 <Task_GETREQUEST+0x22e>
					COMM_request.command=1;
 8002ed2:	4b4e      	ldr	r3, [pc, #312]	; (800300c <Task_GETREQUEST+0x2d4>)
 8002ed4:	2201      	movs	r2, #1
 8002ed6:	601a      	str	r2, [r3, #0]
					COMM_request.result=0;
 8002ed8:	4b4c      	ldr	r3, [pc, #304]	; (800300c <Task_GETREQUEST+0x2d4>)
 8002eda:	2200      	movs	r2, #0
 8002edc:	609a      	str	r2, [r3, #8]
					COMM_request.type=global_mode;
 8002ede:	4b4c      	ldr	r3, [pc, #304]	; (8003010 <Task_GETREQUEST+0x2d8>)
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	4a4a      	ldr	r2, [pc, #296]	; (800300c <Task_GETREQUEST+0x2d4>)
 8002ee4:	6053      	str	r3, [r2, #4]
					// now structure access is secure
					COMM_request.dst_port=1026;
 8002ee6:	4b49      	ldr	r3, [pc, #292]	; (800300c <Task_GETREQUEST+0x2d4>)
 8002ee8:	f240 4202 	movw	r2, #1026	; 0x402
 8002eec:	60da      	str	r2, [r3, #12]
					COMM_request.dst_address=(uint8_t *)"pperez-seu-or.disca.upv.es";
 8002eee:	4b47      	ldr	r3, [pc, #284]	; (800300c <Task_GETREQUEST+0x2d4>)
 8002ef0:	4a48      	ldr	r2, [pc, #288]	; (8003014 <Task_GETREQUEST+0x2dc>)
 8002ef2:	611a      	str	r2, [r3, #16]
					char buff_sprintf_body[1024]="";
 8002ef4:	f607 4338 	addw	r3, r7, #3128	; 0xc38
 8002ef8:	f6a3 430c 	subw	r3, r3, #3084	; 0xc0c
 8002efc:	2200      	movs	r2, #0
 8002efe:	601a      	str	r2, [r3, #0]
 8002f00:	3304      	adds	r3, #4
 8002f02:	f44f 727f 	mov.w	r2, #1020	; 0x3fc
 8002f06:	2100      	movs	r1, #0
 8002f08:	4618      	mov	r0, r3
 8002f0a:	f007 fca9 	bl	800a860 <memset>
					char buff_sprintf_header[2048]="";
 8002f0e:	f607 4338 	addw	r3, r7, #3128	; 0xc38
 8002f12:	f6a3 030c 	subw	r3, r3, #2060	; 0x80c
 8002f16:	2200      	movs	r2, #0
 8002f18:	601a      	str	r2, [r3, #0]
 8002f1a:	3304      	adds	r3, #4
 8002f1c:	f240 72fc 	movw	r2, #2044	; 0x7fc
 8002f20:	2100      	movs	r1, #0
 8002f22:	4618      	mov	r0, r3
 8002f24:	f007 fc9c 	bl	800a860 <memset>
					sprintf(buff_sprintf_body,QUERY_BODY,IoT_NAME);
 8002f28:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8002f2c:	4a43      	ldr	r2, [pc, #268]	; (800303c <Task_GETREQUEST+0x304>)
 8002f2e:	4944      	ldr	r1, [pc, #272]	; (8003040 <Task_GETREQUEST+0x308>)
 8002f30:	4618      	mov	r0, r3
 8002f32:	f007 ff05 	bl	800ad40 <sprintf>
			        sprintf(buff_sprintf_header,"%s%d\r\n\r\n%s ",QUERY_HEADER,strlen(buff_sprintf_body),buff_sprintf_body);
 8002f36:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8002f3a:	4618      	mov	r0, r3
 8002f3c:	f7fd f950 	bl	80001e0 <strlen>
 8002f40:	4602      	mov	r2, r0
 8002f42:	f207 402c 	addw	r0, r7, #1068	; 0x42c
 8002f46:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8002f4a:	9300      	str	r3, [sp, #0]
 8002f4c:	4613      	mov	r3, r2
 8002f4e:	4a3d      	ldr	r2, [pc, #244]	; (8003044 <Task_GETREQUEST+0x30c>)
 8002f50:	4939      	ldr	r1, [pc, #228]	; (8003038 <Task_GETREQUEST+0x300>)
 8002f52:	f007 fef5 	bl	800ad40 <sprintf>
			        COMM_request.HTTP_request=(	uint8_t *) buff_sprintf_header;
 8002f56:	4a2d      	ldr	r2, [pc, #180]	; (800300c <Task_GETREQUEST+0x2d4>)
 8002f58:	f207 432c 	addw	r3, r7, #1068	; 0x42c
 8002f5c:	6153      	str	r3, [r2, #20]
					signal=0;
 8002f5e:	2300      	movs	r3, #0
 8002f60:	f8c7 3c34 	str.w	r3, [r7, #3124]	; 0xc34
 8002f64:	e002      	b.n	8002f6c <Task_GETREQUEST+0x234>
				}
				else{bprintf("Otro modo\r\n");}
 8002f66:	4838      	ldr	r0, [pc, #224]	; (8003048 <Task_GETREQUEST+0x310>)
 8002f68:	f7ff fe9e 	bl	8002ca8 <bprintf>

			}
		    xSemaphoreGive(COMM_xSem); // i’m going out critical section
 8002f6c:	4b25      	ldr	r3, [pc, #148]	; (8003004 <Task_GETREQUEST+0x2cc>)
 8002f6e:	6818      	ldr	r0, [r3, #0]
 8002f70:	2300      	movs	r3, #0
 8002f72:	2200      	movs	r2, #0
 8002f74:	2100      	movs	r1, #0
 8002f76:	f004 fa99 	bl	80074ac <xQueueGenericSend>

		    // AÑADIR RETARDO!!!!!!!!!!!!!!!
		}while(signal);
 8002f7a:	f8d7 3c34 	ldr.w	r3, [r7, #3124]	; 0xc34
 8002f7e:	2b00      	cmp	r3, #0
 8002f80:	f47f aeea 	bne.w	8002d58 <Task_GETREQUEST+0x20>
        //bprintf("%s\r\n",COMM_request.HTTP_request);

  		// Here you must parse json response in COMM_request.response item
		do
		{
			if (xSemaphoreTake(COMM_xSem, 20000/portTICK_RATE_MS  ) != pdTRUE ){// si en 20 segundos no he continuado entrado en orion mmm mal rollito harakiri
 8002f84:	4b1f      	ldr	r3, [pc, #124]	; (8003004 <Task_GETREQUEST+0x2cc>)
 8002f86:	681b      	ldr	r3, [r3, #0]
 8002f88:	f644 6120 	movw	r1, #20000	; 0x4e20
 8002f8c:	4618      	mov	r0, r3
 8002f8e:	f004 fd07 	bl	80079a0 <xQueueSemaphoreTake>
 8002f92:	4603      	mov	r3, r0
 8002f94:	2b01      	cmp	r3, #1
 8002f96:	d01e      	beq.n	8002fd6 <Task_GETREQUEST+0x29e>
			bprintf("\r\n\n\nHARAKIRI!!\n\n\n");
 8002f98:	481b      	ldr	r0, [pc, #108]	; (8003008 <Task_GETREQUEST+0x2d0>)
 8002f9a:	f7ff fe85 	bl	8002ca8 <bprintf>
			HAL_NVIC_SystemReset();
 8002f9e:	f001 fe06 	bl	8004bae <HAL_NVIC_SystemReset>
			}

			while (COMM_request.result==0){
 8002fa2:	e018      	b.n	8002fd6 <Task_GETREQUEST+0x29e>
				xSemaphoreGive(COMM_xSem); // i’m going out critical section
 8002fa4:	4b17      	ldr	r3, [pc, #92]	; (8003004 <Task_GETREQUEST+0x2cc>)
 8002fa6:	6818      	ldr	r0, [r3, #0]
 8002fa8:	2300      	movs	r3, #0
 8002faa:	2200      	movs	r2, #0
 8002fac:	2100      	movs	r1, #0
 8002fae:	f004 fa7d 	bl	80074ac <xQueueGenericSend>
				vTaskDelay(100/portTICK_RATE_MS );
 8002fb2:	2064      	movs	r0, #100	; 0x64
 8002fb4:	f005 f96a 	bl	800828c <vTaskDelay>
				if (xSemaphoreTake(COMM_xSem, 20000/portTICK_RATE_MS  ) != pdTRUE ){// si en 20 segundos no he continuado entrado en orion mmm mal rollito harakiri
 8002fb8:	4b12      	ldr	r3, [pc, #72]	; (8003004 <Task_GETREQUEST+0x2cc>)
 8002fba:	681b      	ldr	r3, [r3, #0]
 8002fbc:	f644 6120 	movw	r1, #20000	; 0x4e20
 8002fc0:	4618      	mov	r0, r3
 8002fc2:	f004 fced 	bl	80079a0 <xQueueSemaphoreTake>
 8002fc6:	4603      	mov	r3, r0
 8002fc8:	2b01      	cmp	r3, #1
 8002fca:	d004      	beq.n	8002fd6 <Task_GETREQUEST+0x29e>
					bprintf("\r\n\n\nHARAKIRI!!\n\n\n");
 8002fcc:	480e      	ldr	r0, [pc, #56]	; (8003008 <Task_GETREQUEST+0x2d0>)
 8002fce:	f7ff fe6b 	bl	8002ca8 <bprintf>
					HAL_NVIC_SystemReset();
 8002fd2:	f001 fdec 	bl	8004bae <HAL_NVIC_SystemReset>
			while (COMM_request.result==0){
 8002fd6:	4b0d      	ldr	r3, [pc, #52]	; (800300c <Task_GETREQUEST+0x2d4>)
 8002fd8:	689b      	ldr	r3, [r3, #8]
 8002fda:	2b00      	cmp	r3, #0
 8002fdc:	d0e2      	beq.n	8002fa4 <Task_GETREQUEST+0x26c>
				}
			}
		}
		while(COMM_request.result==0);
 8002fde:	4b0b      	ldr	r3, [pc, #44]	; (800300c <Task_GETREQUEST+0x2d4>)
 8002fe0:	689b      	ldr	r3, [r3, #8]
 8002fe2:	2b00      	cmp	r3, #0
 8002fe4:	d0ce      	beq.n	8002f84 <Task_GETREQUEST+0x24c>
	//bprintf("%s\r\n",COMM_request.HTTP_response);


	jsons1 = cJSON_Parse((const char *)COMM_request.HTTP_response);
 8002fe6:	4b09      	ldr	r3, [pc, #36]	; (800300c <Task_GETREQUEST+0x2d4>)
 8002fe8:	699b      	ldr	r3, [r3, #24]
 8002fea:	4618      	mov	r0, r3
 8002fec:	f7fe fd1c 	bl	8001a28 <cJSON_Parse>
 8002ff0:	f8c7 0c2c 	str.w	r0, [r7, #3116]	; 0xc2c
	if (jsons1) {
 8002ff4:	f8d7 3c2c 	ldr.w	r3, [r7, #3116]	; 0xc2c
 8002ff8:	2b00      	cmp	r3, #0
 8002ffa:	d029      	beq.n	8003050 <Task_GETREQUEST+0x318>
				// name = cJSON_GetObjectItem(jsons1, "utc_datetime");
				// bprintf("%s \r\n",name->valuestring);
				// cJSON_Delete(jsons1);
//		bprintf("%s",COMM_request.HTTP_response);
		bprintf("POSTEADO \r\n");
 8002ffc:	4813      	ldr	r0, [pc, #76]	; (800304c <Task_GETREQUEST+0x314>)
 8002ffe:	f7ff fe53 	bl	8002ca8 <bprintf>
 8003002:	e02a      	b.n	800305a <Task_GETREQUEST+0x322>
 8003004:	20001410 	.word	0x20001410
 8003008:	080106ec 	.word	0x080106ec
 800300c:	200013f4 	.word	0x200013f4
 8003010:	20000010 	.word	0x20000010
 8003014:	08010700 	.word	0x08010700
 8003018:	20001c38 	.word	0x20001c38
 800301c:	20001c20 	.word	0x20001c20
 8003020:	20001c28 	.word	0x20001c28
 8003024:	20001c30 	.word	0x20001c30
 8003028:	20001c4c 	.word	0x20001c4c
 800302c:	0801071c 	.word	0x0801071c
 8003030:	0801072c 	.word	0x0801072c
 8003034:	08010860 	.word	0x08010860
 8003038:	080108cc 	.word	0x080108cc
 800303c:	080108d8 	.word	0x080108d8
 8003040:	080108e8 	.word	0x080108e8
 8003044:	0801092c 	.word	0x0801092c
 8003048:	08010998 	.word	0x08010998
 800304c:	080109a4 	.word	0x080109a4
	}
	else
		bprintf("%s",jsons1);
 8003050:	f8d7 1c2c 	ldr.w	r1, [r7, #3116]	; 0xc2c
 8003054:	4809      	ldr	r0, [pc, #36]	; (800307c <Task_GETREQUEST+0x344>)
 8003056:	f7ff fe27 	bl	8002ca8 <bprintf>
		//bprintf("Response error \r\n");

////

		COMM_request.command=0;
 800305a:	4b09      	ldr	r3, [pc, #36]	; (8003080 <Task_GETREQUEST+0x348>)
 800305c:	2200      	movs	r2, #0
 800305e:	601a      	str	r2, [r3, #0]
		COMM_request.result=0;
 8003060:	4b07      	ldr	r3, [pc, #28]	; (8003080 <Task_GETREQUEST+0x348>)
 8003062:	2200      	movs	r2, #0
 8003064:	609a      	str	r2, [r3, #8]

		xSemaphoreGive(COMM_xSem); // i’m going out critical section
 8003066:	4b07      	ldr	r3, [pc, #28]	; (8003084 <Task_GETREQUEST+0x34c>)
 8003068:	6818      	ldr	r0, [r3, #0]
 800306a:	2300      	movs	r3, #0
 800306c:	2200      	movs	r2, #0
 800306e:	2100      	movs	r1, #0
 8003070:	f004 fa1c 	bl	80074ac <xQueueGenericSend>

		vTaskDelay(10/portTICK_RATE_MS );
 8003074:	200a      	movs	r0, #10
 8003076:	f005 f909 	bl	800828c <vTaskDelay>
		signal=1;
 800307a:	e66a      	b.n	8002d52 <Task_GETREQUEST+0x1a>
 800307c:	080109b0 	.word	0x080109b0
 8003080:	200013f4 	.word	0x200013f4
 8003084:	20001410 	.word	0x20001410

08003088 <Task_HW>:
uint32_t HZ_parpadeo;




void Task_HW( void *pvParameters ){
 8003088:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 800308c:	b090      	sub	sp, #64	; 0x40
 800308e:	af00      	add	r7, sp, #0
 8003090:	6078      	str	r0, [r7, #4]


	int t,hw_two_buttons;
	uint32_t valueAD;
	ADC_ChannelConfTypeDef sConfig = { 0 };
 8003092:	f107 0308 	add.w	r3, r7, #8
 8003096:	2200      	movs	r2, #0
 8003098:	601a      	str	r2, [r3, #0]
 800309a:	605a      	str	r2, [r3, #4]
 800309c:	609a      	str	r2, [r3, #8]
 800309e:	60da      	str	r2, [r3, #12]
	GPIO_PinState switch_1, switch_2, switch_1_ant, switch_2_ant;

    float aux;

    TickType_t last_time_alarm_change=0;
 80030a0:	2300      	movs	r3, #0
 80030a2:	62fb      	str	r3, [r7, #44]	; 0x2c

    hw_two_buttons=0;
 80030a4:	2300      	movs	r3, #0
 80030a6:	63bb      	str	r3, [r7, #56]	; 0x38

	switch_1_ant = GPIO_PIN_SET;
 80030a8:	2301      	movs	r3, #1
 80030aa:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
	switch_2_ant = GPIO_PIN_SET;
 80030ae:	2301      	movs	r3, #1
 80030b0:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
	global_hw_it = 0;
 80030b4:	4b41      	ldr	r3, [pc, #260]	; (80031bc <Task_HW+0x134>)
 80030b6:	2200      	movs	r2, #0
 80030b8:	601a      	str	r2, [r3, #0]

	HZ_parpadeo=100;
 80030ba:	4b41      	ldr	r3, [pc, #260]	; (80031c0 <Task_HW+0x138>)
 80030bc:	2264      	movs	r2, #100	; 0x64
 80030be:	601a      	str	r2, [r3, #0]

	global_sensor=0;
 80030c0:	4b40      	ldr	r3, [pc, #256]	; (80031c4 <Task_HW+0x13c>)
 80030c2:	2200      	movs	r2, #0
 80030c4:	701a      	strb	r2, [r3, #0]


	global_sensor_level_max[0]=30.0;
 80030c6:	4b40      	ldr	r3, [pc, #256]	; (80031c8 <Task_HW+0x140>)
 80030c8:	4a40      	ldr	r2, [pc, #256]	; (80031cc <Task_HW+0x144>)
 80030ca:	601a      	str	r2, [r3, #0]
	global_sensor_level_min[0]=25.0;
 80030cc:	4b40      	ldr	r3, [pc, #256]	; (80031d0 <Task_HW+0x148>)
 80030ce:	4a41      	ldr	r2, [pc, #260]	; (80031d4 <Task_HW+0x14c>)
 80030d0:	601a      	str	r2, [r3, #0]
	global_sensor_level_max[1]=100.0;
 80030d2:	4b3d      	ldr	r3, [pc, #244]	; (80031c8 <Task_HW+0x140>)
 80030d4:	4a40      	ldr	r2, [pc, #256]	; (80031d8 <Task_HW+0x150>)
 80030d6:	605a      	str	r2, [r3, #4]
	global_sensor_level_min[1]=0.0;
 80030d8:	4b3d      	ldr	r3, [pc, #244]	; (80031d0 <Task_HW+0x148>)
 80030da:	f04f 0200 	mov.w	r2, #0
 80030de:	605a      	str	r2, [r3, #4]
	global_sensor_level_alarm[0]=100.0;   // nivel de alarma por sensor
 80030e0:	4b3e      	ldr	r3, [pc, #248]	; (80031dc <Task_HW+0x154>)
 80030e2:	4a3d      	ldr	r2, [pc, #244]	; (80031d8 <Task_HW+0x150>)
 80030e4:	601a      	str	r2, [r3, #0]
	global_sensor_level_alarm[1]=100.0;   // nivel de alarma por sensor
 80030e6:	4b3d      	ldr	r3, [pc, #244]	; (80031dc <Task_HW+0x154>)
 80030e8:	4a3b      	ldr	r2, [pc, #236]	; (80031d8 <Task_HW+0x150>)
 80030ea:	605a      	str	r2, [r3, #4]

	global_alarm_trigger_time=xTaskGetTickCount();
 80030ec:	f005 fa1e 	bl	800852c <xTaskGetTickCount>
 80030f0:	4603      	mov	r3, r0
 80030f2:	4a3b      	ldr	r2, [pc, #236]	; (80031e0 <Task_HW+0x158>)
 80030f4:	6013      	str	r3, [r2, #0]


	bprintf (PASCU_PRJ " at "__TIME__ "\r\n");
 80030f6:	483b      	ldr	r0, [pc, #236]	; (80031e4 <Task_HW+0x15c>)
 80030f8:	f7ff fdd6 	bl	8002ca8 <bprintf>
	bprintf ("Module: " IoT_NAME "\r\n\r\n");
 80030fc:	483a      	ldr	r0, [pc, #232]	; (80031e8 <Task_HW+0x160>)
 80030fe:	f7ff fdd3 	bl	8002ca8 <bprintf>

	while (1) {
		global_hw_it++;
 8003102:	4b2e      	ldr	r3, [pc, #184]	; (80031bc <Task_HW+0x134>)
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	3301      	adds	r3, #1
 8003108:	4a2c      	ldr	r2, [pc, #176]	; (80031bc <Task_HW+0x134>)
 800310a:	6013      	str	r3, [r2, #0]

		//leer los microinterruptores
		switch_1 = HAL_GPIO_ReadPin(PULSADOR1_GPIO_Port, PULSADOR1_Pin);
 800310c:	2180      	movs	r1, #128	; 0x80
 800310e:	4837      	ldr	r0, [pc, #220]	; (80031ec <Task_HW+0x164>)
 8003110:	f002 fac2 	bl	8005698 <HAL_GPIO_ReadPin>
 8003114:	4603      	mov	r3, r0
 8003116:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
		switch_2 = HAL_GPIO_ReadPin(PULSADOR2_GPIO_Port, PULSADOR2_Pin);
 800311a:	2140      	movs	r1, #64	; 0x40
 800311c:	4834      	ldr	r0, [pc, #208]	; (80031f0 <Task_HW+0x168>)
 800311e:	f002 fabb 	bl	8005698 <HAL_GPIO_ReadPin>
 8003122:	4603      	mov	r3, r0
 8003124:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22

		if ((switch_1 == GPIO_PIN_RESET) && (switch_2 == GPIO_PIN_RESET))
 8003128:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800312c:	2b00      	cmp	r3, #0
 800312e:	d116      	bne.n	800315e <Task_HW+0xd6>
 8003130:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 8003134:	2b00      	cmp	r3, #0
 8003136:	d112      	bne.n	800315e <Task_HW+0xd6>
		{
			hw_two_buttons++;
 8003138:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800313a:	3301      	adds	r3, #1
 800313c:	63bb      	str	r3, [r7, #56]	; 0x38
			if (hw_two_buttons>20000){ // sin retardos
 800313e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003140:	f644 6220 	movw	r2, #20000	; 0x4e20
 8003144:	4293      	cmp	r3, r2
 8003146:	dd0c      	ble.n	8003162 <Task_HW+0xda>

				 bprintf("\r\n*** RESETTING ***\r\n      ",20);
 8003148:	2114      	movs	r1, #20
 800314a:	482a      	ldr	r0, [pc, #168]	; (80031f4 <Task_HW+0x16c>)
 800314c:	f7ff fdac 	bl	8002ca8 <bprintf>
				 WIFI_Boot();
 8003150:	f000 fcd0 	bl	8003af4 <WIFI_Boot>
				 HAL_NVIC_SystemReset();
 8003154:	f001 fd2b 	bl	8004bae <HAL_NVIC_SystemReset>
				 hw_two_buttons=0;
 8003158:	2300      	movs	r3, #0
 800315a:	63bb      	str	r3, [r7, #56]	; 0x38
			if (hw_two_buttons>20000){ // sin retardos
 800315c:	e001      	b.n	8003162 <Task_HW+0xda>
			}
		}
		else{

			hw_two_buttons=0;
 800315e:	2300      	movs	r3, #0
 8003160:	63bb      	str	r3, [r7, #56]	; 0x38
		}

		// DIGITAL INPUT

		if (switch_2 == GPIO_PIN_SET) {
 8003162:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 8003166:	2b01      	cmp	r3, #1
 8003168:	d112      	bne.n	8003190 <Task_HW+0x108>
			if ((switch_1_ant == GPIO_PIN_SET) && (switch_1 == GPIO_PIN_RESET)) {
 800316a:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800316e:	2b01      	cmp	r3, #1
 8003170:	d10e      	bne.n	8003190 <Task_HW+0x108>
 8003172:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8003176:	2b00      	cmp	r3, #0
 8003178:	d10a      	bne.n	8003190 <Task_HW+0x108>
				global_sensor = (global_sensor + 1) % 2; // 0 a 1
 800317a:	4b12      	ldr	r3, [pc, #72]	; (80031c4 <Task_HW+0x13c>)
 800317c:	781b      	ldrb	r3, [r3, #0]
 800317e:	3301      	adds	r3, #1
 8003180:	2b00      	cmp	r3, #0
 8003182:	f003 0301 	and.w	r3, r3, #1
 8003186:	bfb8      	it	lt
 8003188:	425b      	neglt	r3, r3
 800318a:	b2da      	uxtb	r2, r3
 800318c:	4b0d      	ldr	r3, [pc, #52]	; (80031c4 <Task_HW+0x13c>)
 800318e:	701a      	strb	r2, [r3, #0]
			}
	    }

		// fin alarma
		// si se pulsa el boton derecho para el buzzer y marca el momento
		if ((switch_2_ant == GPIO_PIN_SET) && (switch_2 == GPIO_PIN_RESET)) {
 8003190:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8003194:	2b01      	cmp	r3, #1
 8003196:	d13f      	bne.n	8003218 <Task_HW+0x190>
 8003198:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 800319c:	2b00      	cmp	r3, #0
 800319e:	d13b      	bne.n	8003218 <Task_HW+0x190>

				if (global_buzzer==1){
 80031a0:	4b15      	ldr	r3, [pc, #84]	; (80031f8 <Task_HW+0x170>)
 80031a2:	781b      	ldrb	r3, [r3, #0]
 80031a4:	2b01      	cmp	r3, #1
 80031a6:	d129      	bne.n	80031fc <Task_HW+0x174>
					/*al pulsar boton derecha se apaga y se toma el tiempo, no se puede encender si han pasado menos de 10 segundos*/
					global_alarm_trigger_time=xTaskGetTickCount();
 80031a8:	f005 f9c0 	bl	800852c <xTaskGetTickCount>
 80031ac:	4603      	mov	r3, r0
 80031ae:	4a0c      	ldr	r2, [pc, #48]	; (80031e0 <Task_HW+0x158>)
 80031b0:	6013      	str	r3, [r2, #0]
					global_buzzer=0;
 80031b2:	4b11      	ldr	r3, [pc, #68]	; (80031f8 <Task_HW+0x170>)
 80031b4:	2200      	movs	r2, #0
 80031b6:	701a      	strb	r2, [r3, #0]
 80031b8:	e02e      	b.n	8003218 <Task_HW+0x190>
 80031ba:	bf00      	nop
 80031bc:	20001c54 	.word	0x20001c54
 80031c0:	20001c58 	.word	0x20001c58
 80031c4:	20001c1c 	.word	0x20001c1c
 80031c8:	20001c20 	.word	0x20001c20
 80031cc:	41f00000 	.word	0x41f00000
 80031d0:	20001c28 	.word	0x20001c28
 80031d4:	41c80000 	.word	0x41c80000
 80031d8:	42c80000 	.word	0x42c80000
 80031dc:	20001c30 	.word	0x20001c30
 80031e0:	20001c50 	.word	0x20001c50
 80031e4:	080109b4 	.word	0x080109b4
 80031e8:	080109e4 	.word	0x080109e4
 80031ec:	40020800 	.word	0x40020800
 80031f0:	40020400 	.word	0x40020400
 80031f4:	08010a00 	.word	0x08010a00
 80031f8:	20001c4c 	.word	0x20001c4c

				}
				else{
					global_mode = (global_mode + 1) % 3; // 0 a 1
 80031fc:	4bc8      	ldr	r3, [pc, #800]	; (8003520 <Task_HW+0x498>)
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	1c59      	adds	r1, r3, #1
 8003202:	4bc8      	ldr	r3, [pc, #800]	; (8003524 <Task_HW+0x49c>)
 8003204:	fb83 3201 	smull	r3, r2, r3, r1
 8003208:	17cb      	asrs	r3, r1, #31
 800320a:	1ad2      	subs	r2, r2, r3
 800320c:	4613      	mov	r3, r2
 800320e:	005b      	lsls	r3, r3, #1
 8003210:	4413      	add	r3, r2
 8003212:	1aca      	subs	r2, r1, r3
 8003214:	4bc2      	ldr	r3, [pc, #776]	; (8003520 <Task_HW+0x498>)
 8003216:	601a      	str	r2, [r3, #0]
				}
		}
			// LDR
			// configuracion del canal de entrada A/D
			sConfig.Channel = ADC_CHANNEL_0;
 8003218:	2300      	movs	r3, #0
 800321a:	60bb      	str	r3, [r7, #8]
			sConfig.Rank = 1;
 800321c:	2301      	movs	r3, #1
 800321e:	60fb      	str	r3, [r7, #12]
			sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8003220:	2307      	movs	r3, #7
 8003222:	613b      	str	r3, [r7, #16]

			HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 8003224:	f107 0308 	add.w	r3, r7, #8
 8003228:	4619      	mov	r1, r3
 800322a:	48bf      	ldr	r0, [pc, #764]	; (8003528 <Task_HW+0x4a0>)
 800322c:	f001 f976 	bl	800451c <HAL_ADC_ConfigChannel>
			// Disparo la conversion
			HAL_ADC_Start(&hadc1);
 8003230:	48bd      	ldr	r0, [pc, #756]	; (8003528 <Task_HW+0x4a0>)
 8003232:	f001 f827 	bl	8004284 <HAL_ADC_Start>
			// Espero la finalización
			HAL_ADC_PollForConversion(&hadc1, 10000);
 8003236:	f242 7110 	movw	r1, #10000	; 0x2710
 800323a:	48bb      	ldr	r0, [pc, #748]	; (8003528 <Task_HW+0x4a0>)
 800323c:	f001 f8d6 	bl	80043ec <HAL_ADC_PollForConversion>
			// Leo el valor de la conversión 4095 y 0
			valueAD = HAL_ADC_GetValue(&hadc1);
 8003240:	48b9      	ldr	r0, [pc, #740]	; (8003528 <Task_HW+0x4a0>)
 8003242:	f001 f95e 	bl	8004502 <HAL_ADC_GetValue>
 8003246:	61f8      	str	r0, [r7, #28]

			aux=(3.1-valueAD * 3.3 / 4095.0)*100.0/3.1;
 8003248:	69f8      	ldr	r0, [r7, #28]
 800324a:	f7fd f963 	bl	8000514 <__aeabi_ui2d>
 800324e:	a3a2      	add	r3, pc, #648	; (adr r3, 80034d8 <Task_HW+0x450>)
 8003250:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003254:	f7fd f9d8 	bl	8000608 <__aeabi_dmul>
 8003258:	4602      	mov	r2, r0
 800325a:	460b      	mov	r3, r1
 800325c:	4610      	mov	r0, r2
 800325e:	4619      	mov	r1, r3
 8003260:	a39f      	add	r3, pc, #636	; (adr r3, 80034e0 <Task_HW+0x458>)
 8003262:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003266:	f7fd faf9 	bl	800085c <__aeabi_ddiv>
 800326a:	4602      	mov	r2, r0
 800326c:	460b      	mov	r3, r1
 800326e:	a19e      	add	r1, pc, #632	; (adr r1, 80034e8 <Task_HW+0x460>)
 8003270:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003274:	f7fd f810 	bl	8000298 <__aeabi_dsub>
 8003278:	4602      	mov	r2, r0
 800327a:	460b      	mov	r3, r1
 800327c:	4610      	mov	r0, r2
 800327e:	4619      	mov	r1, r3
 8003280:	f04f 0200 	mov.w	r2, #0
 8003284:	4ba9      	ldr	r3, [pc, #676]	; (800352c <Task_HW+0x4a4>)
 8003286:	f7fd f9bf 	bl	8000608 <__aeabi_dmul>
 800328a:	4602      	mov	r2, r0
 800328c:	460b      	mov	r3, r1
 800328e:	4610      	mov	r0, r2
 8003290:	4619      	mov	r1, r3
 8003292:	a395      	add	r3, pc, #596	; (adr r3, 80034e8 <Task_HW+0x460>)
 8003294:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003298:	f7fd fae0 	bl	800085c <__aeabi_ddiv>
 800329c:	4602      	mov	r2, r0
 800329e:	460b      	mov	r3, r1
 80032a0:	4610      	mov	r0, r2
 80032a2:	4619      	mov	r1, r3
 80032a4:	f7fd fca8 	bl	8000bf8 <__aeabi_d2f>
 80032a8:	4603      	mov	r3, r0
 80032aa:	633b      	str	r3, [r7, #48]	; 0x30
					if (aux<0.0)
 80032ac:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 80032b0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80032b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80032b8:	d502      	bpl.n	80032c0 <Task_HW+0x238>
						aux=0.0;
 80032ba:	f04f 0300 	mov.w	r3, #0
 80032be:	633b      	str	r3, [r7, #48]	; 0x30
					if (aux>100.0)
 80032c0:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 80032c4:	ed9f 7a9a 	vldr	s14, [pc, #616]	; 8003530 <Task_HW+0x4a8>
 80032c8:	eef4 7ac7 	vcmpe.f32	s15, s14
 80032cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80032d0:	dd01      	ble.n	80032d6 <Task_HW+0x24e>
						aux=100.0;
 80032d2:	4b98      	ldr	r3, [pc, #608]	; (8003534 <Task_HW+0x4ac>)
 80032d4:	633b      	str	r3, [r7, #48]	; 0x30

			global_sensor_level[1]=aux;   	   // nivel de sensor
 80032d6:	4a98      	ldr	r2, [pc, #608]	; (8003538 <Task_HW+0x4b0>)
 80032d8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80032da:	6053      	str	r3, [r2, #4]

			// Temperatura

			sConfig.Channel = ADC_CHANNEL_1;
 80032dc:	2301      	movs	r3, #1
 80032de:	60bb      	str	r3, [r7, #8]
			sConfig.Rank = 1;
 80032e0:	2301      	movs	r3, #1
 80032e2:	60fb      	str	r3, [r7, #12]
			sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 80032e4:	2307      	movs	r3, #7
 80032e6:	613b      	str	r3, [r7, #16]

			HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 80032e8:	f107 0308 	add.w	r3, r7, #8
 80032ec:	4619      	mov	r1, r3
 80032ee:	488e      	ldr	r0, [pc, #568]	; (8003528 <Task_HW+0x4a0>)
 80032f0:	f001 f914 	bl	800451c <HAL_ADC_ConfigChannel>
			// Disparo la conversion
			HAL_ADC_Start(&hadc1);
 80032f4:	488c      	ldr	r0, [pc, #560]	; (8003528 <Task_HW+0x4a0>)
 80032f6:	f000 ffc5 	bl	8004284 <HAL_ADC_Start>
			// Espero la finalización
			HAL_ADC_PollForConversion(&hadc1, 10000);
 80032fa:	f242 7110 	movw	r1, #10000	; 0x2710
 80032fe:	488a      	ldr	r0, [pc, #552]	; (8003528 <Task_HW+0x4a0>)
 8003300:	f001 f874 	bl	80043ec <HAL_ADC_PollForConversion>
			// Leo el valor de la conversión 4095 y 0
			valueAD = HAL_ADC_GetValue(&hadc1);
 8003304:	4888      	ldr	r0, [pc, #544]	; (8003528 <Task_HW+0x4a0>)
 8003306:	f001 f8fc 	bl	8004502 <HAL_ADC_GetValue>
 800330a:	61f8      	str	r0, [r7, #28]

			aux = BETA
					/ (log(
							(-10000.0 * 3.3 / (valueAD * 3.3 / 4095.9 - 3.3)
 800330c:	69f8      	ldr	r0, [r7, #28]
 800330e:	f7fd f901 	bl	8000514 <__aeabi_ui2d>
 8003312:	a371      	add	r3, pc, #452	; (adr r3, 80034d8 <Task_HW+0x450>)
 8003314:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003318:	f7fd f976 	bl	8000608 <__aeabi_dmul>
 800331c:	4602      	mov	r2, r0
 800331e:	460b      	mov	r3, r1
 8003320:	4610      	mov	r0, r2
 8003322:	4619      	mov	r1, r3
 8003324:	a372      	add	r3, pc, #456	; (adr r3, 80034f0 <Task_HW+0x468>)
 8003326:	e9d3 2300 	ldrd	r2, r3, [r3]
 800332a:	f7fd fa97 	bl	800085c <__aeabi_ddiv>
 800332e:	4602      	mov	r2, r0
 8003330:	460b      	mov	r3, r1
 8003332:	4610      	mov	r0, r2
 8003334:	4619      	mov	r1, r3
 8003336:	a368      	add	r3, pc, #416	; (adr r3, 80034d8 <Task_HW+0x450>)
 8003338:	e9d3 2300 	ldrd	r2, r3, [r3]
 800333c:	f7fc ffac 	bl	8000298 <__aeabi_dsub>
 8003340:	4602      	mov	r2, r0
 8003342:	460b      	mov	r3, r1
 8003344:	a16c      	add	r1, pc, #432	; (adr r1, 80034f8 <Task_HW+0x470>)
 8003346:	e9d1 0100 	ldrd	r0, r1, [r1]
 800334a:	f7fd fa87 	bl	800085c <__aeabi_ddiv>
 800334e:	4602      	mov	r2, r0
 8003350:	460b      	mov	r3, r1
 8003352:	4610      	mov	r0, r2
 8003354:	4619      	mov	r1, r3
									- 10000.0) / R25) + BETA / T25) - 273.18;
 8003356:	a36a      	add	r3, pc, #424	; (adr r3, 8003500 <Task_HW+0x478>)
 8003358:	e9d3 2300 	ldrd	r2, r3, [r3]
 800335c:	f7fc ff9c 	bl	8000298 <__aeabi_dsub>
 8003360:	4602      	mov	r2, r0
 8003362:	460b      	mov	r3, r1
 8003364:	4610      	mov	r0, r2
 8003366:	4619      	mov	r1, r3
					/ (log(
 8003368:	a365      	add	r3, pc, #404	; (adr r3, 8003500 <Task_HW+0x478>)
 800336a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800336e:	f7fd fa75 	bl	800085c <__aeabi_ddiv>
 8003372:	4602      	mov	r2, r0
 8003374:	460b      	mov	r3, r1
 8003376:	ec43 2b17 	vmov	d7, r2, r3
 800337a:	eeb0 0a47 	vmov.f32	s0, s14
 800337e:	eef0 0a67 	vmov.f32	s1, s15
 8003382:	f00c ff01 	bl	8010188 <log>
 8003386:	ec51 0b10 	vmov	r0, r1, d0
									- 10000.0) / R25) + BETA / T25) - 273.18;
 800338a:	a35f      	add	r3, pc, #380	; (adr r3, 8003508 <Task_HW+0x480>)
 800338c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003390:	f7fc ff84 	bl	800029c <__adddf3>
 8003394:	4602      	mov	r2, r0
 8003396:	460b      	mov	r3, r1
					/ (log(
 8003398:	a15d      	add	r1, pc, #372	; (adr r1, 8003510 <Task_HW+0x488>)
 800339a:	e9d1 0100 	ldrd	r0, r1, [r1]
 800339e:	f7fd fa5d 	bl	800085c <__aeabi_ddiv>
 80033a2:	4602      	mov	r2, r0
 80033a4:	460b      	mov	r3, r1
 80033a6:	4610      	mov	r0, r2
 80033a8:	4619      	mov	r1, r3
									- 10000.0) / R25) + BETA / T25) - 273.18;
 80033aa:	a35b      	add	r3, pc, #364	; (adr r3, 8003518 <Task_HW+0x490>)
 80033ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80033b0:	f7fc ff72 	bl	8000298 <__aeabi_dsub>
 80033b4:	4602      	mov	r2, r0
 80033b6:	460b      	mov	r3, r1
			aux = BETA
 80033b8:	4610      	mov	r0, r2
 80033ba:	4619      	mov	r1, r3
 80033bc:	f7fd fc1c 	bl	8000bf8 <__aeabi_d2f>
 80033c0:	4603      	mov	r3, r0
 80033c2:	633b      	str	r3, [r7, #48]	; 0x30
			global_sensor_level[0]=aux;   	   // nivel de sensor
 80033c4:	4a5c      	ldr	r2, [pc, #368]	; (8003538 <Task_HW+0x4b0>)
 80033c6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80033c8:	6013      	str	r3, [r2, #0]


			// POT
			// configuracion del canal de entrada A/D
			sConfig.Channel = ADC_CHANNEL_4;
 80033ca:	2304      	movs	r3, #4
 80033cc:	60bb      	str	r3, [r7, #8]
			sConfig.Rank = 1;
 80033ce:	2301      	movs	r3, #1
 80033d0:	60fb      	str	r3, [r7, #12]
			sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 80033d2:	2307      	movs	r3, #7
 80033d4:	613b      	str	r3, [r7, #16]

			HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 80033d6:	f107 0308 	add.w	r3, r7, #8
 80033da:	4619      	mov	r1, r3
 80033dc:	4852      	ldr	r0, [pc, #328]	; (8003528 <Task_HW+0x4a0>)
 80033de:	f001 f89d 	bl	800451c <HAL_ADC_ConfigChannel>
			// Disparo la conversion
			HAL_ADC_Start(&hadc1);
 80033e2:	4851      	ldr	r0, [pc, #324]	; (8003528 <Task_HW+0x4a0>)
 80033e4:	f000 ff4e 	bl	8004284 <HAL_ADC_Start>
			// Espero la finalización
			HAL_ADC_PollForConversion(&hadc1, 10000);
 80033e8:	f242 7110 	movw	r1, #10000	; 0x2710
 80033ec:	484e      	ldr	r0, [pc, #312]	; (8003528 <Task_HW+0x4a0>)
 80033ee:	f000 fffd 	bl	80043ec <HAL_ADC_PollForConversion>
			// Leo el valor de la conversión 4095 y 0
			valueAD = HAL_ADC_GetValue(&hadc1);
 80033f2:	484d      	ldr	r0, [pc, #308]	; (8003528 <Task_HW+0x4a0>)
 80033f4:	f001 f885 	bl	8004502 <HAL_ADC_GetValue>
 80033f8:	61f8      	str	r0, [r7, #28]
			if (fabs(global_pot-valueAD)>109.0){
 80033fa:	4b50      	ldr	r3, [pc, #320]	; (800353c <Task_HW+0x4b4>)
 80033fc:	ed93 7a00 	vldr	s14, [r3]
 8003400:	69fb      	ldr	r3, [r7, #28]
 8003402:	ee07 3a90 	vmov	s15, r3
 8003406:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800340a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800340e:	eef0 7ae7 	vabs.f32	s15, s15
 8003412:	ed9f 7a4b 	vldr	s14, [pc, #300]	; 8003540 <Task_HW+0x4b8>
 8003416:	eef4 7ac7 	vcmpe.f32	s15, s14
 800341a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800341e:	dd52      	ble.n	80034c6 <Task_HW+0x43e>

				HZ_parpadeo=40;
 8003420:	4b48      	ldr	r3, [pc, #288]	; (8003544 <Task_HW+0x4bc>)
 8003422:	2228      	movs	r2, #40	; 0x28
 8003424:	601a      	str	r2, [r3, #0]
				last_time_alarm_change=xTaskGetTickCount();
 8003426:	f005 f881 	bl	800852c <xTaskGetTickCount>
 800342a:	62f8      	str	r0, [r7, #44]	; 0x2c
				global_sensor_level_alarm[global_sensor]=global_sensor_level_min[global_sensor]+valueAD / 4095.0*(global_sensor_level_max[global_sensor]-global_sensor_level_min[global_sensor]);
 800342c:	4b46      	ldr	r3, [pc, #280]	; (8003548 <Task_HW+0x4c0>)
 800342e:	781b      	ldrb	r3, [r3, #0]
 8003430:	4a46      	ldr	r2, [pc, #280]	; (800354c <Task_HW+0x4c4>)
 8003432:	009b      	lsls	r3, r3, #2
 8003434:	4413      	add	r3, r2
 8003436:	681b      	ldr	r3, [r3, #0]
 8003438:	4618      	mov	r0, r3
 800343a:	f7fd f88d 	bl	8000558 <__aeabi_f2d>
 800343e:	4604      	mov	r4, r0
 8003440:	460d      	mov	r5, r1
 8003442:	69f8      	ldr	r0, [r7, #28]
 8003444:	f7fd f866 	bl	8000514 <__aeabi_ui2d>
 8003448:	a325      	add	r3, pc, #148	; (adr r3, 80034e0 <Task_HW+0x458>)
 800344a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800344e:	f7fd fa05 	bl	800085c <__aeabi_ddiv>
 8003452:	4602      	mov	r2, r0
 8003454:	460b      	mov	r3, r1
 8003456:	4690      	mov	r8, r2
 8003458:	4699      	mov	r9, r3
 800345a:	4b3b      	ldr	r3, [pc, #236]	; (8003548 <Task_HW+0x4c0>)
 800345c:	781b      	ldrb	r3, [r3, #0]
 800345e:	4a3c      	ldr	r2, [pc, #240]	; (8003550 <Task_HW+0x4c8>)
 8003460:	009b      	lsls	r3, r3, #2
 8003462:	4413      	add	r3, r2
 8003464:	ed93 7a00 	vldr	s14, [r3]
 8003468:	4b37      	ldr	r3, [pc, #220]	; (8003548 <Task_HW+0x4c0>)
 800346a:	781b      	ldrb	r3, [r3, #0]
 800346c:	4a37      	ldr	r2, [pc, #220]	; (800354c <Task_HW+0x4c4>)
 800346e:	009b      	lsls	r3, r3, #2
 8003470:	4413      	add	r3, r2
 8003472:	edd3 7a00 	vldr	s15, [r3]
 8003476:	ee77 7a67 	vsub.f32	s15, s14, s15
 800347a:	ee17 0a90 	vmov	r0, s15
 800347e:	f7fd f86b 	bl	8000558 <__aeabi_f2d>
 8003482:	4602      	mov	r2, r0
 8003484:	460b      	mov	r3, r1
 8003486:	4640      	mov	r0, r8
 8003488:	4649      	mov	r1, r9
 800348a:	f7fd f8bd 	bl	8000608 <__aeabi_dmul>
 800348e:	4602      	mov	r2, r0
 8003490:	460b      	mov	r3, r1
 8003492:	4620      	mov	r0, r4
 8003494:	4629      	mov	r1, r5
 8003496:	f7fc ff01 	bl	800029c <__adddf3>
 800349a:	4602      	mov	r2, r0
 800349c:	460b      	mov	r3, r1
 800349e:	492a      	ldr	r1, [pc, #168]	; (8003548 <Task_HW+0x4c0>)
 80034a0:	7809      	ldrb	r1, [r1, #0]
 80034a2:	460c      	mov	r4, r1
 80034a4:	4610      	mov	r0, r2
 80034a6:	4619      	mov	r1, r3
 80034a8:	f7fd fba6 	bl	8000bf8 <__aeabi_d2f>
 80034ac:	4602      	mov	r2, r0
 80034ae:	4929      	ldr	r1, [pc, #164]	; (8003554 <Task_HW+0x4cc>)
 80034b0:	00a3      	lsls	r3, r4, #2
 80034b2:	440b      	add	r3, r1
 80034b4:	601a      	str	r2, [r3, #0]
				global_pot=valueAD;
 80034b6:	69fb      	ldr	r3, [r7, #28]
 80034b8:	ee07 3a90 	vmov	s15, r3
 80034bc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80034c0:	4b1e      	ldr	r3, [pc, #120]	; (800353c <Task_HW+0x4b4>)
 80034c2:	edc3 7a00 	vstr	s15, [r3]
				}

			// DIGITAL_OUTPUT
			//Modo clon
			if(global_mode==2){
 80034c6:	4b16      	ldr	r3, [pc, #88]	; (8003520 <Task_HW+0x498>)
 80034c8:	681b      	ldr	r3, [r3, #0]
 80034ca:	2b02      	cmp	r3, #2
 80034cc:	d14f      	bne.n	800356e <Task_HW+0x4e6>
				for (int ct=0;ct<8;ct++)
 80034ce:	2300      	movs	r3, #0
 80034d0:	62bb      	str	r3, [r7, #40]	; 0x28
 80034d2:	e049      	b.n	8003568 <Task_HW+0x4e0>
 80034d4:	f3af 8000 	nop.w
 80034d8:	66666666 	.word	0x66666666
 80034dc:	400a6666 	.word	0x400a6666
 80034e0:	00000000 	.word	0x00000000
 80034e4:	40affe00 	.word	0x40affe00
 80034e8:	cccccccd 	.word	0xcccccccd
 80034ec:	4008cccc 	.word	0x4008cccc
 80034f0:	cccccccd 	.word	0xcccccccd
 80034f4:	40afffcc 	.word	0x40afffcc
 80034f8:	00000000 	.word	0x00000000
 80034fc:	c0e01d00 	.word	0xc0e01d00
 8003500:	00000000 	.word	0x00000000
 8003504:	40c38800 	.word	0x40c38800
 8003508:	cde627c2 	.word	0xcde627c2
 800350c:	402a294c 	.word	0x402a294c
 8003510:	00000000 	.word	0x00000000
 8003514:	40ae7800 	.word	0x40ae7800
 8003518:	47ae147b 	.word	0x47ae147b
 800351c:	407112e1 	.word	0x407112e1
 8003520:	20000010 	.word	0x20000010
 8003524:	55555556 	.word	0x55555556
 8003528:	200009fc 	.word	0x200009fc
 800352c:	40590000 	.word	0x40590000
 8003530:	42c80000 	.word	0x42c80000
 8003534:	42c80000 	.word	0x42c80000
 8003538:	20001c38 	.word	0x20001c38
 800353c:	20001c40 	.word	0x20001c40
 8003540:	42da0000 	.word	0x42da0000
 8003544:	20001c58 	.word	0x20001c58
 8003548:	20001c1c 	.word	0x20001c1c
 800354c:	20001c28 	.word	0x20001c28
 8003550:	20001c20 	.word	0x20001c20
 8003554:	20001c30 	.word	0x20001c30
						global_LEDS[ct]=0;
 8003558:	4a79      	ldr	r2, [pc, #484]	; (8003740 <Task_HW+0x6b8>)
 800355a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800355c:	4413      	add	r3, r2
 800355e:	2200      	movs	r2, #0
 8003560:	701a      	strb	r2, [r3, #0]
				for (int ct=0;ct<8;ct++)
 8003562:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003564:	3301      	adds	r3, #1
 8003566:	62bb      	str	r3, [r7, #40]	; 0x28
 8003568:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800356a:	2b07      	cmp	r3, #7
 800356c:	ddf4      	ble.n	8003558 <Task_HW+0x4d0>
				//clon(global_sensor, HZ_parpadeo);
			}
			// Modo conectado
			if(global_mode==1){
 800356e:	4b75      	ldr	r3, [pc, #468]	; (8003744 <Task_HW+0x6bc>)
 8003570:	681b      	ldr	r3, [r3, #0]
 8003572:	2b01      	cmp	r3, #1
 8003574:	d107      	bne.n	8003586 <Task_HW+0x4fe>
				pon_Nivel(global_sensor, HZ_parpadeo);
 8003576:	4b74      	ldr	r3, [pc, #464]	; (8003748 <Task_HW+0x6c0>)
 8003578:	781b      	ldrb	r3, [r3, #0]
 800357a:	4a74      	ldr	r2, [pc, #464]	; (800374c <Task_HW+0x6c4>)
 800357c:	6812      	ldr	r2, [r2, #0]
 800357e:	4611      	mov	r1, r2
 8003580:	4618      	mov	r0, r3
 8003582:	f000 f8f1 	bl	8003768 <pon_Nivel>
			}
			// Modo test
			if(global_mode==0){
 8003586:	4b6f      	ldr	r3, [pc, #444]	; (8003744 <Task_HW+0x6bc>)
 8003588:	681b      	ldr	r3, [r3, #0]
 800358a:	2b00      	cmp	r3, #0
 800358c:	d10d      	bne.n	80035aa <Task_HW+0x522>
				for (int ct=0;ct<8;ct++)
 800358e:	2300      	movs	r3, #0
 8003590:	627b      	str	r3, [r7, #36]	; 0x24
 8003592:	e007      	b.n	80035a4 <Task_HW+0x51c>
						global_LEDS[ct]=0;
 8003594:	4a6a      	ldr	r2, [pc, #424]	; (8003740 <Task_HW+0x6b8>)
 8003596:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003598:	4413      	add	r3, r2
 800359a:	2200      	movs	r2, #0
 800359c:	701a      	strb	r2, [r3, #0]
				for (int ct=0;ct<8;ct++)
 800359e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80035a0:	3301      	adds	r3, #1
 80035a2:	627b      	str	r3, [r7, #36]	; 0x24
 80035a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80035a6:	2b07      	cmp	r3, #7
 80035a8:	ddf4      	ble.n	8003594 <Task_HW+0x50c>
				//test(global_sensor, HZ_parpadeo);
			}


			for (t = 0; t < 8; t++){
 80035aa:	2300      	movs	r3, #0
 80035ac:	63fb      	str	r3, [r7, #60]	; 0x3c
 80035ae:	e06a      	b.n	8003686 <Task_HW+0x5fe>
					switch (t) {
 80035b0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80035b2:	2b07      	cmp	r3, #7
 80035b4:	d864      	bhi.n	8003680 <Task_HW+0x5f8>
 80035b6:	a201      	add	r2, pc, #4	; (adr r2, 80035bc <Task_HW+0x534>)
 80035b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80035bc:	080035dd 	.word	0x080035dd
 80035c0:	080035f1 	.word	0x080035f1
 80035c4:	08003607 	.word	0x08003607
 80035c8:	0800361d 	.word	0x0800361d
 80035cc:	08003631 	.word	0x08003631
 80035d0:	08003645 	.word	0x08003645
 80035d4:	08003659 	.word	0x08003659
 80035d8:	0800366d 	.word	0x0800366d
					case 0:
						HAL_GPIO_WritePin(D1_GPIO_Port, D1_Pin, global_LEDS[t]);
 80035dc:	4a58      	ldr	r2, [pc, #352]	; (8003740 <Task_HW+0x6b8>)
 80035de:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80035e0:	4413      	add	r3, r2
 80035e2:	781b      	ldrb	r3, [r3, #0]
 80035e4:	461a      	mov	r2, r3
 80035e6:	2110      	movs	r1, #16
 80035e8:	4859      	ldr	r0, [pc, #356]	; (8003750 <Task_HW+0x6c8>)
 80035ea:	f002 f86d 	bl	80056c8 <HAL_GPIO_WritePin>
						break;
 80035ee:	e047      	b.n	8003680 <Task_HW+0x5f8>
					case 1:
						HAL_GPIO_WritePin(D2_GPIO_Port, D2_Pin, global_LEDS[t]);
 80035f0:	4a53      	ldr	r2, [pc, #332]	; (8003740 <Task_HW+0x6b8>)
 80035f2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80035f4:	4413      	add	r3, r2
 80035f6:	781b      	ldrb	r3, [r3, #0]
 80035f8:	461a      	mov	r2, r3
 80035fa:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80035fe:	4854      	ldr	r0, [pc, #336]	; (8003750 <Task_HW+0x6c8>)
 8003600:	f002 f862 	bl	80056c8 <HAL_GPIO_WritePin>
						break;
 8003604:	e03c      	b.n	8003680 <Task_HW+0x5f8>
					case 2:
						HAL_GPIO_WritePin(D3_GPIO_Port, D3_Pin, global_LEDS[t]);
 8003606:	4a4e      	ldr	r2, [pc, #312]	; (8003740 <Task_HW+0x6b8>)
 8003608:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800360a:	4413      	add	r3, r2
 800360c:	781b      	ldrb	r3, [r3, #0]
 800360e:	461a      	mov	r2, r3
 8003610:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003614:	484f      	ldr	r0, [pc, #316]	; (8003754 <Task_HW+0x6cc>)
 8003616:	f002 f857 	bl	80056c8 <HAL_GPIO_WritePin>
						break;
 800361a:	e031      	b.n	8003680 <Task_HW+0x5f8>
					case 3:
						HAL_GPIO_WritePin(D4_GPIO_Port, D4_Pin, global_LEDS[t]);
 800361c:	4a48      	ldr	r2, [pc, #288]	; (8003740 <Task_HW+0x6b8>)
 800361e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003620:	4413      	add	r3, r2
 8003622:	781b      	ldrb	r3, [r3, #0]
 8003624:	461a      	mov	r2, r3
 8003626:	2120      	movs	r1, #32
 8003628:	4849      	ldr	r0, [pc, #292]	; (8003750 <Task_HW+0x6c8>)
 800362a:	f002 f84d 	bl	80056c8 <HAL_GPIO_WritePin>
						break;
 800362e:	e027      	b.n	8003680 <Task_HW+0x5f8>
					case 4:
						HAL_GPIO_WritePin(D5_GPIO_Port, D5_Pin, global_LEDS[t]);
 8003630:	4a43      	ldr	r2, [pc, #268]	; (8003740 <Task_HW+0x6b8>)
 8003632:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003634:	4413      	add	r3, r2
 8003636:	781b      	ldrb	r3, [r3, #0]
 8003638:	461a      	mov	r2, r3
 800363a:	2108      	movs	r1, #8
 800363c:	4844      	ldr	r0, [pc, #272]	; (8003750 <Task_HW+0x6c8>)
 800363e:	f002 f843 	bl	80056c8 <HAL_GPIO_WritePin>
						break;
 8003642:	e01d      	b.n	8003680 <Task_HW+0x5f8>
					case 5:
						HAL_GPIO_WritePin(D6_GPIO_Port, D6_Pin, global_LEDS[t]);
 8003644:	4a3e      	ldr	r2, [pc, #248]	; (8003740 <Task_HW+0x6b8>)
 8003646:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003648:	4413      	add	r3, r2
 800364a:	781b      	ldrb	r3, [r3, #0]
 800364c:	461a      	mov	r2, r3
 800364e:	2140      	movs	r1, #64	; 0x40
 8003650:	4840      	ldr	r0, [pc, #256]	; (8003754 <Task_HW+0x6cc>)
 8003652:	f002 f839 	bl	80056c8 <HAL_GPIO_WritePin>
						break;
 8003656:	e013      	b.n	8003680 <Task_HW+0x5f8>
					case 6:
						HAL_GPIO_WritePin(D7_GPIO_Port, D7_Pin, global_LEDS[t]);
 8003658:	4a39      	ldr	r2, [pc, #228]	; (8003740 <Task_HW+0x6b8>)
 800365a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800365c:	4413      	add	r3, r2
 800365e:	781b      	ldrb	r3, [r3, #0]
 8003660:	461a      	mov	r2, r3
 8003662:	2101      	movs	r1, #1
 8003664:	483a      	ldr	r0, [pc, #232]	; (8003750 <Task_HW+0x6c8>)
 8003666:	f002 f82f 	bl	80056c8 <HAL_GPIO_WritePin>
						break;
 800366a:	e009      	b.n	8003680 <Task_HW+0x5f8>
					case 7:
						HAL_GPIO_WritePin(D8_GPIO_Port, D8_Pin, global_LEDS[t]);
 800366c:	4a34      	ldr	r2, [pc, #208]	; (8003740 <Task_HW+0x6b8>)
 800366e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003670:	4413      	add	r3, r2
 8003672:	781b      	ldrb	r3, [r3, #0]
 8003674:	461a      	mov	r2, r3
 8003676:	2120      	movs	r1, #32
 8003678:	4836      	ldr	r0, [pc, #216]	; (8003754 <Task_HW+0x6cc>)
 800367a:	f002 f825 	bl	80056c8 <HAL_GPIO_WritePin>
						break;
 800367e:	bf00      	nop
			for (t = 0; t < 8; t++){
 8003680:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003682:	3301      	adds	r3, #1
 8003684:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003686:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003688:	2b07      	cmp	r3, #7
 800368a:	dd91      	ble.n	80035b0 <Task_HW+0x528>
					}
				}
			HAL_GPIO_WritePin(Buzzer_GPIO_Port,Buzzer_Pin, global_buzzer);
 800368c:	4b32      	ldr	r3, [pc, #200]	; (8003758 <Task_HW+0x6d0>)
 800368e:	781b      	ldrb	r3, [r3, #0]
 8003690:	461a      	mov	r2, r3
 8003692:	2180      	movs	r1, #128	; 0x80
 8003694:	482f      	ldr	r0, [pc, #188]	; (8003754 <Task_HW+0x6cc>)
 8003696:	f002 f817 	bl	80056c8 <HAL_GPIO_WritePin>


			int value=xTaskGetTickCount();
 800369a:	f004 ff47 	bl	800852c <xTaskGetTickCount>
 800369e:	4603      	mov	r3, r0
 80036a0:	61bb      	str	r3, [r7, #24]
			value=((value-last_time_alarm_change)/portTICK_RATE_MS);
 80036a2:	69ba      	ldr	r2, [r7, #24]
 80036a4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80036a6:	1ad3      	subs	r3, r2, r3
 80036a8:	61bb      	str	r3, [r7, #24]
			if (value>1500)
 80036aa:	69bb      	ldr	r3, [r7, #24]
 80036ac:	f240 52dc 	movw	r2, #1500	; 0x5dc
 80036b0:	4293      	cmp	r3, r2
 80036b2:	dd02      	ble.n	80036ba <Task_HW+0x632>
				HZ_parpadeo=5;
 80036b4:	4b25      	ldr	r3, [pc, #148]	; (800374c <Task_HW+0x6c4>)
 80036b6:	2205      	movs	r2, #5
 80036b8:	601a      	str	r2, [r3, #0]


			if (((xTaskGetTickCount()-global_alarm_trigger_time)/portTICK_RATE_MS)>10000){
 80036ba:	f004 ff37 	bl	800852c <xTaskGetTickCount>
 80036be:	4602      	mov	r2, r0
 80036c0:	4b26      	ldr	r3, [pc, #152]	; (800375c <Task_HW+0x6d4>)
 80036c2:	681b      	ldr	r3, [r3, #0]
 80036c4:	1ad3      	subs	r3, r2, r3
 80036c6:	f242 7210 	movw	r2, #10000	; 0x2710
 80036ca:	4293      	cmp	r3, r2
 80036cc:	d918      	bls.n	8003700 <Task_HW+0x678>
			if (
					(global_sensor_level[0]>global_sensor_level_alarm[0]) ||
 80036ce:	4b24      	ldr	r3, [pc, #144]	; (8003760 <Task_HW+0x6d8>)
 80036d0:	ed93 7a00 	vldr	s14, [r3]
 80036d4:	4b23      	ldr	r3, [pc, #140]	; (8003764 <Task_HW+0x6dc>)
 80036d6:	edd3 7a00 	vldr	s15, [r3]
			if (
 80036da:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80036de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036e2:	dc0a      	bgt.n	80036fa <Task_HW+0x672>
					(global_sensor_level[1]>global_sensor_level_alarm[1])
 80036e4:	4b1e      	ldr	r3, [pc, #120]	; (8003760 <Task_HW+0x6d8>)
 80036e6:	ed93 7a01 	vldr	s14, [r3, #4]
 80036ea:	4b1e      	ldr	r3, [pc, #120]	; (8003764 <Task_HW+0x6dc>)
 80036ec:	edd3 7a01 	vldr	s15, [r3, #4]
					(global_sensor_level[0]>global_sensor_level_alarm[0]) ||
 80036f0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80036f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036f8:	dd02      	ble.n	8003700 <Task_HW+0x678>
			   )
			global_buzzer=1;
 80036fa:	4b17      	ldr	r3, [pc, #92]	; (8003758 <Task_HW+0x6d0>)
 80036fc:	2201      	movs	r2, #1
 80036fe:	701a      	strb	r2, [r3, #0]

		}

	// gestión de alarmas
		if (global_buzzer==1){
 8003700:	4b15      	ldr	r3, [pc, #84]	; (8003758 <Task_HW+0x6d0>)
 8003702:	781b      	ldrb	r3, [r3, #0]
 8003704:	2b01      	cmp	r3, #1
 8003706:	d10f      	bne.n	8003728 <Task_HW+0x6a0>
			if ((switch_2_ant == GPIO_PIN_SET) && (switch_2 == GPIO_PIN_RESET)) {
 8003708:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 800370c:	2b01      	cmp	r3, #1
 800370e:	d10b      	bne.n	8003728 <Task_HW+0x6a0>
 8003710:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 8003714:	2b00      	cmp	r3, #0
 8003716:	d107      	bne.n	8003728 <Task_HW+0x6a0>
				/*al pulsar boton derecha se apaga y se toma el tiempo, no se puede encender si han pasado menos de 10 segundos*/
				global_alarm_trigger_time=xTaskGetTickCount();
 8003718:	f004 ff08 	bl	800852c <xTaskGetTickCount>
 800371c:	4603      	mov	r3, r0
 800371e:	4a0f      	ldr	r2, [pc, #60]	; (800375c <Task_HW+0x6d4>)
 8003720:	6013      	str	r3, [r2, #0]
				global_buzzer=0;
 8003722:	4b0d      	ldr	r3, [pc, #52]	; (8003758 <Task_HW+0x6d0>)
 8003724:	2200      	movs	r2, #0
 8003726:	701a      	strb	r2, [r3, #0]
			}
		}


		//detección de flancos
			switch_2_ant = switch_2;
 8003728:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 800372c:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
			switch_1_ant = switch_1;
 8003730:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8003734:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
	    vTaskDelay(10/portTICK_RATE_MS );
 8003738:	200a      	movs	r0, #10
 800373a:	f004 fda7 	bl	800828c <vTaskDelay>
	while (1) {
 800373e:	e4e0      	b.n	8003102 <Task_HW+0x7a>
 8003740:	20001c44 	.word	0x20001c44
 8003744:	20000010 	.word	0x20000010
 8003748:	20001c1c 	.word	0x20001c1c
 800374c:	20001c58 	.word	0x20001c58
 8003750:	40020400 	.word	0x40020400
 8003754:	40020000 	.word	0x40020000
 8003758:	20001c4c 	.word	0x20001c4c
 800375c:	20001c50 	.word	0x20001c50
 8003760:	20001c38 	.word	0x20001c38
 8003764:	20001c30 	.word	0x20001c30

08003768 <pon_Nivel>:
	}
}


void pon_Nivel(uint8_t sensor_sel, uint32_t Hz){
 8003768:	b580      	push	{r7, lr}
 800376a:	b086      	sub	sp, #24
 800376c:	af00      	add	r7, sp, #0
 800376e:	4603      	mov	r3, r0
 8003770:	6039      	str	r1, [r7, #0]
 8003772:	71fb      	strb	r3, [r7, #7]

	static int last_value_led=0;
	static int last_pos_led=0;


    global_LEDS[last_pos_led]=0;
 8003774:	4b72      	ldr	r3, [pc, #456]	; (8003940 <pon_Nivel+0x1d8>)
 8003776:	681b      	ldr	r3, [r3, #0]
 8003778:	4a72      	ldr	r2, [pc, #456]	; (8003944 <pon_Nivel+0x1dc>)
 800377a:	2100      	movs	r1, #0
 800377c:	54d1      	strb	r1, [r2, r3]
	for (ct=0;ct<8;ct++) global_LEDS[ct]=0; // borra el led alarma
 800377e:	2300      	movs	r3, #0
 8003780:	617b      	str	r3, [r7, #20]
 8003782:	e007      	b.n	8003794 <pon_Nivel+0x2c>
 8003784:	4a6f      	ldr	r2, [pc, #444]	; (8003944 <pon_Nivel+0x1dc>)
 8003786:	697b      	ldr	r3, [r7, #20]
 8003788:	4413      	add	r3, r2
 800378a:	2200      	movs	r2, #0
 800378c:	701a      	strb	r2, [r3, #0]
 800378e:	697b      	ldr	r3, [r7, #20]
 8003790:	3301      	adds	r3, #1
 8003792:	617b      	str	r3, [r7, #20]
 8003794:	697b      	ldr	r3, [r7, #20]
 8003796:	2b07      	cmp	r3, #7
 8003798:	ddf4      	ble.n	8003784 <pon_Nivel+0x1c>

	// pon nivel de señal
	nleds=trunc((global_sensor_level[sensor_sel]-global_sensor_level_min[sensor_sel])/(global_sensor_level_max[sensor_sel]-global_sensor_level_min[sensor_sel])*7.4);
 800379a:	79fb      	ldrb	r3, [r7, #7]
 800379c:	4a6a      	ldr	r2, [pc, #424]	; (8003948 <pon_Nivel+0x1e0>)
 800379e:	009b      	lsls	r3, r3, #2
 80037a0:	4413      	add	r3, r2
 80037a2:	ed93 7a00 	vldr	s14, [r3]
 80037a6:	79fb      	ldrb	r3, [r7, #7]
 80037a8:	4a68      	ldr	r2, [pc, #416]	; (800394c <pon_Nivel+0x1e4>)
 80037aa:	009b      	lsls	r3, r3, #2
 80037ac:	4413      	add	r3, r2
 80037ae:	edd3 7a00 	vldr	s15, [r3]
 80037b2:	ee37 7a67 	vsub.f32	s14, s14, s15
 80037b6:	79fb      	ldrb	r3, [r7, #7]
 80037b8:	4a65      	ldr	r2, [pc, #404]	; (8003950 <pon_Nivel+0x1e8>)
 80037ba:	009b      	lsls	r3, r3, #2
 80037bc:	4413      	add	r3, r2
 80037be:	edd3 6a00 	vldr	s13, [r3]
 80037c2:	79fb      	ldrb	r3, [r7, #7]
 80037c4:	4a61      	ldr	r2, [pc, #388]	; (800394c <pon_Nivel+0x1e4>)
 80037c6:	009b      	lsls	r3, r3, #2
 80037c8:	4413      	add	r3, r2
 80037ca:	edd3 7a00 	vldr	s15, [r3]
 80037ce:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80037d2:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80037d6:	ee16 0a90 	vmov	r0, s13
 80037da:	f7fc febd 	bl	8000558 <__aeabi_f2d>
 80037de:	a356      	add	r3, pc, #344	; (adr r3, 8003938 <pon_Nivel+0x1d0>)
 80037e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037e4:	f7fc ff10 	bl	8000608 <__aeabi_dmul>
 80037e8:	4602      	mov	r2, r0
 80037ea:	460b      	mov	r3, r1
 80037ec:	ec43 2b17 	vmov	d7, r2, r3
 80037f0:	eeb0 0a47 	vmov.f32	s0, s14
 80037f4:	eef0 0a67 	vmov.f32	s1, s15
 80037f8:	f00c fc94 	bl	8010124 <trunc>
 80037fc:	ec53 2b10 	vmov	r2, r3, d0
 8003800:	4610      	mov	r0, r2
 8003802:	4619      	mov	r1, r3
 8003804:	f7fd f9b0 	bl	8000b68 <__aeabi_d2iz>
 8003808:	4603      	mov	r3, r0
 800380a:	613b      	str	r3, [r7, #16]
	for (ct=0;ct<8;ct++)
 800380c:	2300      	movs	r3, #0
 800380e:	617b      	str	r3, [r7, #20]
 8003810:	e011      	b.n	8003836 <pon_Nivel+0xce>
	if (ct<nleds)
 8003812:	697a      	ldr	r2, [r7, #20]
 8003814:	693b      	ldr	r3, [r7, #16]
 8003816:	429a      	cmp	r2, r3
 8003818:	da05      	bge.n	8003826 <pon_Nivel+0xbe>
			global_LEDS[ct]=1;
 800381a:	4a4a      	ldr	r2, [pc, #296]	; (8003944 <pon_Nivel+0x1dc>)
 800381c:	697b      	ldr	r3, [r7, #20]
 800381e:	4413      	add	r3, r2
 8003820:	2201      	movs	r2, #1
 8003822:	701a      	strb	r2, [r3, #0]
 8003824:	e004      	b.n	8003830 <pon_Nivel+0xc8>
	else
			global_LEDS[ct]=0;
 8003826:	4a47      	ldr	r2, [pc, #284]	; (8003944 <pon_Nivel+0x1dc>)
 8003828:	697b      	ldr	r3, [r7, #20]
 800382a:	4413      	add	r3, r2
 800382c:	2200      	movs	r2, #0
 800382e:	701a      	strb	r2, [r3, #0]
	for (ct=0;ct<8;ct++)
 8003830:	697b      	ldr	r3, [r7, #20]
 8003832:	3301      	adds	r3, #1
 8003834:	617b      	str	r3, [r7, #20]
 8003836:	697b      	ldr	r3, [r7, #20]
 8003838:	2b07      	cmp	r3, #7
 800383a:	ddea      	ble.n	8003812 <pon_Nivel+0xaa>

	// este nivel tiene prioridad sobre el valor act, por eso va al final

	global_LEDS[last_pos_led]=last_value_led;
 800383c:	4b45      	ldr	r3, [pc, #276]	; (8003954 <pon_Nivel+0x1ec>)
 800383e:	681a      	ldr	r2, [r3, #0]
 8003840:	4b3f      	ldr	r3, [pc, #252]	; (8003940 <pon_Nivel+0x1d8>)
 8003842:	681b      	ldr	r3, [r3, #0]
 8003844:	b2d1      	uxtb	r1, r2
 8003846:	4a3f      	ldr	r2, [pc, #252]	; (8003944 <pon_Nivel+0x1dc>)
 8003848:	54d1      	strb	r1, [r2, r3]

 	if (((float)(xTaskGetTickCount()-last_time)/portTICK_RATE_MS)>(float)1000.0/(float)Hz){
 800384a:	f004 fe6f 	bl	800852c <xTaskGetTickCount>
 800384e:	4602      	mov	r2, r0
 8003850:	4b41      	ldr	r3, [pc, #260]	; (8003958 <pon_Nivel+0x1f0>)
 8003852:	681b      	ldr	r3, [r3, #0]
 8003854:	1ad3      	subs	r3, r2, r3
 8003856:	ee07 3a90 	vmov	s15, r3
 800385a:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800385e:	683b      	ldr	r3, [r7, #0]
 8003860:	ee07 3a90 	vmov	s15, r3
 8003864:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8003868:	ed9f 6a3c 	vldr	s12, [pc, #240]	; 800395c <pon_Nivel+0x1f4>
 800386c:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8003870:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8003874:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003878:	dc00      	bgt.n	800387c <pon_Nivel+0x114>
		else{
			global_LEDS[nled]=1;
		}

	}
}
 800387a:	e059      	b.n	8003930 <pon_Nivel+0x1c8>
		last_value_led=!last_value_led;
 800387c:	4b35      	ldr	r3, [pc, #212]	; (8003954 <pon_Nivel+0x1ec>)
 800387e:	681b      	ldr	r3, [r3, #0]
 8003880:	2b00      	cmp	r3, #0
 8003882:	bf0c      	ite	eq
 8003884:	2301      	moveq	r3, #1
 8003886:	2300      	movne	r3, #0
 8003888:	b2db      	uxtb	r3, r3
 800388a:	461a      	mov	r2, r3
 800388c:	4b31      	ldr	r3, [pc, #196]	; (8003954 <pon_Nivel+0x1ec>)
 800388e:	601a      	str	r2, [r3, #0]
		last_time= xTaskGetTickCount();
 8003890:	f004 fe4c 	bl	800852c <xTaskGetTickCount>
 8003894:	4603      	mov	r3, r0
 8003896:	4a30      	ldr	r2, [pc, #192]	; (8003958 <pon_Nivel+0x1f0>)
 8003898:	6013      	str	r3, [r2, #0]
		nled=trunc((global_sensor_level_alarm[sensor_sel]-global_sensor_level_min[sensor_sel])/(global_sensor_level_max[sensor_sel]-global_sensor_level_min[sensor_sel])*7.4);
 800389a:	79fb      	ldrb	r3, [r7, #7]
 800389c:	4a30      	ldr	r2, [pc, #192]	; (8003960 <pon_Nivel+0x1f8>)
 800389e:	009b      	lsls	r3, r3, #2
 80038a0:	4413      	add	r3, r2
 80038a2:	ed93 7a00 	vldr	s14, [r3]
 80038a6:	79fb      	ldrb	r3, [r7, #7]
 80038a8:	4a28      	ldr	r2, [pc, #160]	; (800394c <pon_Nivel+0x1e4>)
 80038aa:	009b      	lsls	r3, r3, #2
 80038ac:	4413      	add	r3, r2
 80038ae:	edd3 7a00 	vldr	s15, [r3]
 80038b2:	ee37 7a67 	vsub.f32	s14, s14, s15
 80038b6:	79fb      	ldrb	r3, [r7, #7]
 80038b8:	4a25      	ldr	r2, [pc, #148]	; (8003950 <pon_Nivel+0x1e8>)
 80038ba:	009b      	lsls	r3, r3, #2
 80038bc:	4413      	add	r3, r2
 80038be:	edd3 6a00 	vldr	s13, [r3]
 80038c2:	79fb      	ldrb	r3, [r7, #7]
 80038c4:	4a21      	ldr	r2, [pc, #132]	; (800394c <pon_Nivel+0x1e4>)
 80038c6:	009b      	lsls	r3, r3, #2
 80038c8:	4413      	add	r3, r2
 80038ca:	edd3 7a00 	vldr	s15, [r3]
 80038ce:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80038d2:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80038d6:	ee16 0a90 	vmov	r0, s13
 80038da:	f7fc fe3d 	bl	8000558 <__aeabi_f2d>
 80038de:	a316      	add	r3, pc, #88	; (adr r3, 8003938 <pon_Nivel+0x1d0>)
 80038e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038e4:	f7fc fe90 	bl	8000608 <__aeabi_dmul>
 80038e8:	4602      	mov	r2, r0
 80038ea:	460b      	mov	r3, r1
 80038ec:	ec43 2b17 	vmov	d7, r2, r3
 80038f0:	eeb0 0a47 	vmov.f32	s0, s14
 80038f4:	eef0 0a67 	vmov.f32	s1, s15
 80038f8:	f00c fc14 	bl	8010124 <trunc>
 80038fc:	ec53 2b10 	vmov	r2, r3, d0
 8003900:	4610      	mov	r0, r2
 8003902:	4619      	mov	r1, r3
 8003904:	f7fd f930 	bl	8000b68 <__aeabi_d2iz>
 8003908:	4603      	mov	r3, r0
 800390a:	60fb      	str	r3, [r7, #12]
		last_pos_led=nled;
 800390c:	4a0c      	ldr	r2, [pc, #48]	; (8003940 <pon_Nivel+0x1d8>)
 800390e:	68fb      	ldr	r3, [r7, #12]
 8003910:	6013      	str	r3, [r2, #0]
		if (last_value_led==1){
 8003912:	4b10      	ldr	r3, [pc, #64]	; (8003954 <pon_Nivel+0x1ec>)
 8003914:	681b      	ldr	r3, [r3, #0]
 8003916:	2b01      	cmp	r3, #1
 8003918:	d105      	bne.n	8003926 <pon_Nivel+0x1be>
			global_LEDS[nled]=0;
 800391a:	4a0a      	ldr	r2, [pc, #40]	; (8003944 <pon_Nivel+0x1dc>)
 800391c:	68fb      	ldr	r3, [r7, #12]
 800391e:	4413      	add	r3, r2
 8003920:	2200      	movs	r2, #0
 8003922:	701a      	strb	r2, [r3, #0]
}
 8003924:	e004      	b.n	8003930 <pon_Nivel+0x1c8>
			global_LEDS[nled]=1;
 8003926:	4a07      	ldr	r2, [pc, #28]	; (8003944 <pon_Nivel+0x1dc>)
 8003928:	68fb      	ldr	r3, [r7, #12]
 800392a:	4413      	add	r3, r2
 800392c:	2201      	movs	r2, #1
 800392e:	701a      	strb	r2, [r3, #0]
}
 8003930:	bf00      	nop
 8003932:	3718      	adds	r7, #24
 8003934:	46bd      	mov	sp, r7
 8003936:	bd80      	pop	{r7, pc}
 8003938:	9999999a 	.word	0x9999999a
 800393c:	401d9999 	.word	0x401d9999
 8003940:	20001c5c 	.word	0x20001c5c
 8003944:	20001c44 	.word	0x20001c44
 8003948:	20001c38 	.word	0x20001c38
 800394c:	20001c28 	.word	0x20001c28
 8003950:	20001c20 	.word	0x20001c20
 8003954:	20001c60 	.word	0x20001c60
 8003958:	20001c64 	.word	0x20001c64
 800395c:	447a0000 	.word	0x447a0000
 8003960:	20001c30 	.word	0x20001c30

08003964 <Task_WIFI_init>:
uint32_t global_wifi_ready;

 uint8_t aux_buff_WIFI[2048];
 uint8_t buff_WIFI_response[2048];

void Task_WIFI_init(void){
 8003964:	b580      	push	{r7, lr}
 8003966:	b084      	sub	sp, #16
 8003968:	af02      	add	r7, sp, #8
	BaseType_t res_task;
	global_wifi_ready=0;
 800396a:	4b0e      	ldr	r3, [pc, #56]	; (80039a4 <Task_WIFI_init+0x40>)
 800396c:	2200      	movs	r2, #0
 800396e:	601a      	str	r2, [r3, #0]
	res_task=xTaskCreate( Task_WIFI,"Tarea_WIFI",2048,NULL,	NORMAL_PRIORITY,NULL);
 8003970:	2300      	movs	r3, #0
 8003972:	9301      	str	r3, [sp, #4]
 8003974:	231b      	movs	r3, #27
 8003976:	9300      	str	r3, [sp, #0]
 8003978:	2300      	movs	r3, #0
 800397a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800397e:	490a      	ldr	r1, [pc, #40]	; (80039a8 <Task_WIFI_init+0x44>)
 8003980:	480a      	ldr	r0, [pc, #40]	; (80039ac <Task_WIFI_init+0x48>)
 8003982:	f004 fafe 	bl	8007f82 <xTaskCreate>
 8003986:	6078      	str	r0, [r7, #4]
	if( res_task != pdPASS ){
 8003988:	687b      	ldr	r3, [r7, #4]
 800398a:	2b01      	cmp	r3, #1
 800398c:	d006      	beq.n	800399c <Task_WIFI_init+0x38>
		printf("PANIC: Error al crear Tarea WIFI\r\n");
 800398e:	4808      	ldr	r0, [pc, #32]	; (80039b0 <Task_WIFI_init+0x4c>)
 8003990:	f006 ffc0 	bl	800a914 <puts>
		fflush(NULL);
 8003994:	2000      	movs	r0, #0
 8003996:	f006 fb2d 	bl	8009ff4 <fflush>
		while(1);
 800399a:	e7fe      	b.n	800399a <Task_WIFI_init+0x36>
}
}
 800399c:	bf00      	nop
 800399e:	3708      	adds	r7, #8
 80039a0:	46bd      	mov	sp, r7
 80039a2:	bd80      	pop	{r7, pc}
 80039a4:	20001c6c 	.word	0x20001c6c
 80039a8:	08010a1c 	.word	0x08010a1c
 80039ac:	080039b5 	.word	0x080039b5
 80039b0:	08010a28 	.word	0x08010a28

080039b4 <Task_WIFI>:
void Task_WIFI( void *pvParameters ){
 80039b4:	b580      	push	{r7, lr}
 80039b6:	b082      	sub	sp, #8
 80039b8:	af00      	add	r7, sp, #0
 80039ba:	6078      	str	r0, [r7, #4]

	global_wifi_it=0;
 80039bc:	4b08      	ldr	r3, [pc, #32]	; (80039e0 <Task_WIFI+0x2c>)
 80039be:	2200      	movs	r2, #0
 80039c0:	601a      	str	r2, [r3, #0]
	WIFI_Boot();
 80039c2:	f000 f897 	bl	8003af4 <WIFI_Boot>
	global_wifi_ready=1;
 80039c6:	4b07      	ldr	r3, [pc, #28]	; (80039e4 <Task_WIFI+0x30>)
 80039c8:	2201      	movs	r2, #1
 80039ca:	601a      	str	r2, [r3, #0]

	while (1) {
		global_wifi_it++;
 80039cc:	4b04      	ldr	r3, [pc, #16]	; (80039e0 <Task_WIFI+0x2c>)
 80039ce:	681b      	ldr	r3, [r3, #0]
 80039d0:	3301      	adds	r3, #1
 80039d2:	4a03      	ldr	r2, [pc, #12]	; (80039e0 <Task_WIFI+0x2c>)
 80039d4:	6013      	str	r3, [r2, #0]
	    vTaskDelay(10/portTICK_RATE_MS );
 80039d6:	200a      	movs	r0, #10
 80039d8:	f004 fc58 	bl	800828c <vTaskDelay>
		global_wifi_it++;
 80039dc:	e7f6      	b.n	80039cc <Task_WIFI+0x18>
 80039de:	bf00      	nop
 80039e0:	20001c68 	.word	0x20001c68
 80039e4:	20001c6c 	.word	0x20001c6c

080039e8 <WIFI_RESET>:
	}
}

void WIFI_RESET(void){
 80039e8:	b580      	push	{r7, lr}
 80039ea:	b082      	sub	sp, #8
 80039ec:	af00      	add	r7, sp, #0
	// RESET
	unsigned int ct;
	 HAL_GPIO_WritePin(ESP8266_RESET_GPIO_Port, ESP8266_RESET_Pin, GPIO_PIN_RESET);
 80039ee:	2200      	movs	r2, #0
 80039f0:	2102      	movs	r1, #2
 80039f2:	4838      	ldr	r0, [pc, #224]	; (8003ad4 <WIFI_RESET+0xec>)
 80039f4:	f001 fe68 	bl	80056c8 <HAL_GPIO_WritePin>
	 for (ct=0;ct<1000000;ct++);
 80039f8:	2300      	movs	r3, #0
 80039fa:	607b      	str	r3, [r7, #4]
 80039fc:	e002      	b.n	8003a04 <WIFI_RESET+0x1c>
 80039fe:	687b      	ldr	r3, [r7, #4]
 8003a00:	3301      	adds	r3, #1
 8003a02:	607b      	str	r3, [r7, #4]
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	4a34      	ldr	r2, [pc, #208]	; (8003ad8 <WIFI_RESET+0xf0>)
 8003a08:	4293      	cmp	r3, r2
 8003a0a:	d9f8      	bls.n	80039fe <WIFI_RESET+0x16>
	 HAL_UART_Init(&huart1);
 8003a0c:	4833      	ldr	r0, [pc, #204]	; (8003adc <WIFI_RESET+0xf4>)
 8003a0e:	f002 fb0d 	bl	800602c <HAL_UART_Init>
	 for (ct=0;ct<2048;ct++) buff_recv[ct]=0;
 8003a12:	2300      	movs	r3, #0
 8003a14:	607b      	str	r3, [r7, #4]
 8003a16:	e007      	b.n	8003a28 <WIFI_RESET+0x40>
 8003a18:	4a31      	ldr	r2, [pc, #196]	; (8003ae0 <WIFI_RESET+0xf8>)
 8003a1a:	687b      	ldr	r3, [r7, #4]
 8003a1c:	4413      	add	r3, r2
 8003a1e:	2200      	movs	r2, #0
 8003a20:	701a      	strb	r2, [r3, #0]
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	3301      	adds	r3, #1
 8003a26:	607b      	str	r3, [r7, #4]
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003a2e:	d3f3      	bcc.n	8003a18 <WIFI_RESET+0x30>
	 HAL_UART_Receive_DMA(&huart1, buff_recv,2048);
 8003a30:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8003a34:	492a      	ldr	r1, [pc, #168]	; (8003ae0 <WIFI_RESET+0xf8>)
 8003a36:	4829      	ldr	r0, [pc, #164]	; (8003adc <WIFI_RESET+0xf4>)
 8003a38:	f002 fbd7 	bl	80061ea <HAL_UART_Receive_DMA>

	 HAL_GPIO_WritePin(D1_GPIO_Port, D1_Pin, GPIO_PIN_RESET);
 8003a3c:	2200      	movs	r2, #0
 8003a3e:	2110      	movs	r1, #16
 8003a40:	4828      	ldr	r0, [pc, #160]	; (8003ae4 <WIFI_RESET+0xfc>)
 8003a42:	f001 fe41 	bl	80056c8 <HAL_GPIO_WritePin>
	 HAL_GPIO_WritePin(D2_GPIO_Port, D2_Pin, GPIO_PIN_RESET);
 8003a46:	2200      	movs	r2, #0
 8003a48:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003a4c:	4825      	ldr	r0, [pc, #148]	; (8003ae4 <WIFI_RESET+0xfc>)
 8003a4e:	f001 fe3b 	bl	80056c8 <HAL_GPIO_WritePin>
	 HAL_GPIO_WritePin(D3_GPIO_Port, D3_Pin, GPIO_PIN_RESET);
 8003a52:	2200      	movs	r2, #0
 8003a54:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003a58:	4823      	ldr	r0, [pc, #140]	; (8003ae8 <WIFI_RESET+0x100>)
 8003a5a:	f001 fe35 	bl	80056c8 <HAL_GPIO_WritePin>
	 HAL_GPIO_WritePin(D4_GPIO_Port, D4_Pin, GPIO_PIN_RESET);
 8003a5e:	2200      	movs	r2, #0
 8003a60:	2120      	movs	r1, #32
 8003a62:	4820      	ldr	r0, [pc, #128]	; (8003ae4 <WIFI_RESET+0xfc>)
 8003a64:	f001 fe30 	bl	80056c8 <HAL_GPIO_WritePin>
	 HAL_GPIO_WritePin(D5_GPIO_Port, D5_Pin, GPIO_PIN_RESET);
 8003a68:	2200      	movs	r2, #0
 8003a6a:	2108      	movs	r1, #8
 8003a6c:	481d      	ldr	r0, [pc, #116]	; (8003ae4 <WIFI_RESET+0xfc>)
 8003a6e:	f001 fe2b 	bl	80056c8 <HAL_GPIO_WritePin>
	 HAL_GPIO_WritePin(D6_GPIO_Port, D6_Pin, GPIO_PIN_RESET);
 8003a72:	2200      	movs	r2, #0
 8003a74:	2140      	movs	r1, #64	; 0x40
 8003a76:	481c      	ldr	r0, [pc, #112]	; (8003ae8 <WIFI_RESET+0x100>)
 8003a78:	f001 fe26 	bl	80056c8 <HAL_GPIO_WritePin>
	 HAL_GPIO_WritePin(D7_GPIO_Port, D7_Pin, GPIO_PIN_RESET);
 8003a7c:	2200      	movs	r2, #0
 8003a7e:	2101      	movs	r1, #1
 8003a80:	4818      	ldr	r0, [pc, #96]	; (8003ae4 <WIFI_RESET+0xfc>)
 8003a82:	f001 fe21 	bl	80056c8 <HAL_GPIO_WritePin>
	 HAL_GPIO_WritePin(D8_GPIO_Port, D8_Pin, GPIO_PIN_RESET);
 8003a86:	2200      	movs	r2, #0
 8003a88:	2120      	movs	r1, #32
 8003a8a:	4817      	ldr	r0, [pc, #92]	; (8003ae8 <WIFI_RESET+0x100>)
 8003a8c:	f001 fe1c 	bl	80056c8 <HAL_GPIO_WritePin>

	 HAL_GPIO_WritePin(D7_GPIO_Port, D7_Pin, GPIO_PIN_SET);
 8003a90:	2201      	movs	r2, #1
 8003a92:	2101      	movs	r1, #1
 8003a94:	4813      	ldr	r0, [pc, #76]	; (8003ae4 <WIFI_RESET+0xfc>)
 8003a96:	f001 fe17 	bl	80056c8 <HAL_GPIO_WritePin>
	 HAL_GPIO_WritePin(ESP8266_RESET_GPIO_Port, ESP8266_RESET_Pin, GPIO_PIN_SET);
 8003a9a:	2201      	movs	r2, #1
 8003a9c:	2102      	movs	r1, #2
 8003a9e:	480d      	ldr	r0, [pc, #52]	; (8003ad4 <WIFI_RESET+0xec>)
 8003aa0:	f001 fe12 	bl	80056c8 <HAL_GPIO_WritePin>

	 vTaskDelay(1000/portTICK_RATE_MS );
 8003aa4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8003aa8:	f004 fbf0 	bl	800828c <vTaskDelay>
	 HAL_GPIO_WritePin(D8_GPIO_Port, D8_Pin, GPIO_PIN_SET);
 8003aac:	2201      	movs	r2, #1
 8003aae:	2120      	movs	r1, #32
 8003ab0:	480d      	ldr	r0, [pc, #52]	; (8003ae8 <WIFI_RESET+0x100>)
 8003ab2:	f001 fe09 	bl	80056c8 <HAL_GPIO_WritePin>
   	 HAL_UART_DMAStop(&huart1);
 8003ab6:	4809      	ldr	r0, [pc, #36]	; (8003adc <WIFI_RESET+0xf4>)
 8003ab8:	f002 fbc7 	bl	800624a <HAL_UART_DMAStop>
	 bprintf("XXXXX %s",buff_recv);
 8003abc:	4908      	ldr	r1, [pc, #32]	; (8003ae0 <WIFI_RESET+0xf8>)
 8003abe:	480b      	ldr	r0, [pc, #44]	; (8003aec <WIFI_RESET+0x104>)
 8003ac0:	f7ff f8f2 	bl	8002ca8 <bprintf>
	 bprintf("XXXXX\r\n\n\n\n");
 8003ac4:	480a      	ldr	r0, [pc, #40]	; (8003af0 <WIFI_RESET+0x108>)
 8003ac6:	f7ff f8ef 	bl	8002ca8 <bprintf>
}
 8003aca:	bf00      	nop
 8003acc:	3708      	adds	r7, #8
 8003ace:	46bd      	mov	sp, r7
 8003ad0:	bd80      	pop	{r7, pc}
 8003ad2:	bf00      	nop
 8003ad4:	40020800 	.word	0x40020800
 8003ad8:	000f423f 	.word	0x000f423f
 8003adc:	20000a44 	.word	0x20000a44
 8003ae0:	20000bf4 	.word	0x20000bf4
 8003ae4:	40020400 	.word	0x40020400
 8003ae8:	40020000 	.word	0x40020000
 8003aec:	08010a4c 	.word	0x08010a4c
 8003af0:	08010a58 	.word	0x08010a58

08003af4 <WIFI_Boot>:


void WIFI_Boot(void)

{
 8003af4:	b580      	push	{r7, lr}
 8003af6:	b082      	sub	sp, #8
 8003af8:	af00      	add	r7, sp, #0
	unsigned int ct;

 	bprintf("Reseting...\r\n");
 8003afa:	484a      	ldr	r0, [pc, #296]	; (8003c24 <WIFI_Boot+0x130>)
 8003afc:	f7ff f8d4 	bl	8002ca8 <bprintf>

 	WIFI_RESET();
 8003b00:	f7ff ff72 	bl	80039e8 <WIFI_RESET>
 	bprintf("Init...\r\n");
 8003b04:	4848      	ldr	r0, [pc, #288]	; (8003c28 <WIFI_Boot+0x134>)
 8003b06:	f7ff f8cf 	bl	8002ca8 <bprintf>

 	HAL_UART_Init(&huart1);
 8003b0a:	4848      	ldr	r0, [pc, #288]	; (8003c2c <WIFI_Boot+0x138>)
 8003b0c:	f002 fa8e 	bl	800602c <HAL_UART_Init>

 	HAL_GPIO_WritePin(D7_GPIO_Port, D7_Pin, GPIO_PIN_RESET);
 8003b10:	2200      	movs	r2, #0
 8003b12:	2101      	movs	r1, #1
 8003b14:	4846      	ldr	r0, [pc, #280]	; (8003c30 <WIFI_Boot+0x13c>)
 8003b16:	f001 fdd7 	bl	80056c8 <HAL_GPIO_WritePin>
 	HAL_GPIO_WritePin(D8_GPIO_Port, D8_Pin, GPIO_PIN_RESET);
 8003b1a:	2200      	movs	r2, #0
 8003b1c:	2120      	movs	r1, #32
 8003b1e:	4845      	ldr	r0, [pc, #276]	; (8003c34 <WIFI_Boot+0x140>)
 8003b20:	f001 fdd2 	bl	80056c8 <HAL_GPIO_WritePin>

 	// version
 	for (ct=0;ct<2048;ct++) buff_recv[ct]=0;
 8003b24:	2300      	movs	r3, #0
 8003b26:	607b      	str	r3, [r7, #4]
 8003b28:	e007      	b.n	8003b3a <WIFI_Boot+0x46>
 8003b2a:	4a43      	ldr	r2, [pc, #268]	; (8003c38 <WIFI_Boot+0x144>)
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	4413      	add	r3, r2
 8003b30:	2200      	movs	r2, #0
 8003b32:	701a      	strb	r2, [r3, #0]
 8003b34:	687b      	ldr	r3, [r7, #4]
 8003b36:	3301      	adds	r3, #1
 8003b38:	607b      	str	r3, [r7, #4]
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003b40:	d3f3      	bcc.n	8003b2a <WIFI_Boot+0x36>
 	HAL_UART_Receive_DMA(&huart1, buff_recv,2048);
 8003b42:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8003b46:	493c      	ldr	r1, [pc, #240]	; (8003c38 <WIFI_Boot+0x144>)
 8003b48:	4838      	ldr	r0, [pc, #224]	; (8003c2c <WIFI_Boot+0x138>)
 8003b4a:	f002 fb4e 	bl	80061ea <HAL_UART_Receive_DMA>
 	HAL_UART_Transmit(&huart1, ( unsigned char *)"AT\r\n",strlen("AT\r\n"),10000);
 8003b4e:	f242 7310 	movw	r3, #10000	; 0x2710
 8003b52:	2204      	movs	r2, #4
 8003b54:	4939      	ldr	r1, [pc, #228]	; (8003c3c <WIFI_Boot+0x148>)
 8003b56:	4835      	ldr	r0, [pc, #212]	; (8003c2c <WIFI_Boot+0x138>)
 8003b58:	f002 fab5 	bl	80060c6 <HAL_UART_Transmit>
 	HAL_GPIO_WritePin(D7_GPIO_Port, D7_Pin, GPIO_PIN_SET);
 8003b5c:	2201      	movs	r2, #1
 8003b5e:	2101      	movs	r1, #1
 8003b60:	4833      	ldr	r0, [pc, #204]	; (8003c30 <WIFI_Boot+0x13c>)
 8003b62:	f001 fdb1 	bl	80056c8 <HAL_GPIO_WritePin>
	 vTaskDelay(100/portTICK_RATE_MS );
 8003b66:	2064      	movs	r0, #100	; 0x64
 8003b68:	f004 fb90 	bl	800828c <vTaskDelay>
 	HAL_UART_DMAStop(&huart1);
 8003b6c:	482f      	ldr	r0, [pc, #188]	; (8003c2c <WIFI_Boot+0x138>)
 8003b6e:	f002 fb6c 	bl	800624a <HAL_UART_DMAStop>
 	HAL_GPIO_WritePin(D8_GPIO_Port, D8_Pin, GPIO_PIN_SET);
 8003b72:	2201      	movs	r2, #1
 8003b74:	2120      	movs	r1, #32
 8003b76:	482f      	ldr	r0, [pc, #188]	; (8003c34 <WIFI_Boot+0x140>)
 8003b78:	f001 fda6 	bl	80056c8 <HAL_GPIO_WritePin>
	bprintf("1: %s",buff_recv);
 8003b7c:	492e      	ldr	r1, [pc, #184]	; (8003c38 <WIFI_Boot+0x144>)
 8003b7e:	4830      	ldr	r0, [pc, #192]	; (8003c40 <WIFI_Boot+0x14c>)
 8003b80:	f7ff f892 	bl	8002ca8 <bprintf>

	bprintf("2: %s",buff_recv);
*/

	// Pon en modo station=1,  station+access_point=3
	for (ct=0;ct<2048;ct++) buff_recv[ct]=0;
 8003b84:	2300      	movs	r3, #0
 8003b86:	607b      	str	r3, [r7, #4]
 8003b88:	e007      	b.n	8003b9a <WIFI_Boot+0xa6>
 8003b8a:	4a2b      	ldr	r2, [pc, #172]	; (8003c38 <WIFI_Boot+0x144>)
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	4413      	add	r3, r2
 8003b90:	2200      	movs	r2, #0
 8003b92:	701a      	strb	r2, [r3, #0]
 8003b94:	687b      	ldr	r3, [r7, #4]
 8003b96:	3301      	adds	r3, #1
 8003b98:	607b      	str	r3, [r7, #4]
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003ba0:	d3f3      	bcc.n	8003b8a <WIFI_Boot+0x96>
	HAL_UART_Receive_DMA(&huart1, buff_recv,2048);
 8003ba2:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8003ba6:	4924      	ldr	r1, [pc, #144]	; (8003c38 <WIFI_Boot+0x144>)
 8003ba8:	4820      	ldr	r0, [pc, #128]	; (8003c2c <WIFI_Boot+0x138>)
 8003baa:	f002 fb1e 	bl	80061ea <HAL_UART_Receive_DMA>
	HAL_UART_Transmit(&huart1, ( unsigned char *) "AT+CWMODE=1\r\n",strlen("AT+CWMODE=1\r\n"),100000);
 8003bae:	4b25      	ldr	r3, [pc, #148]	; (8003c44 <WIFI_Boot+0x150>)
 8003bb0:	220d      	movs	r2, #13
 8003bb2:	4925      	ldr	r1, [pc, #148]	; (8003c48 <WIFI_Boot+0x154>)
 8003bb4:	481d      	ldr	r0, [pc, #116]	; (8003c2c <WIFI_Boot+0x138>)
 8003bb6:	f002 fa86 	bl	80060c6 <HAL_UART_Transmit>
	 vTaskDelay(100/portTICK_RATE_MS );
 8003bba:	2064      	movs	r0, #100	; 0x64
 8003bbc:	f004 fb66 	bl	800828c <vTaskDelay>
	HAL_UART_DMAStop(&huart1);
 8003bc0:	481a      	ldr	r0, [pc, #104]	; (8003c2c <WIFI_Boot+0x138>)
 8003bc2:	f002 fb42 	bl	800624a <HAL_UART_DMAStop>
	bprintf("3: %s",buff_recv);
 8003bc6:	491c      	ldr	r1, [pc, #112]	; (8003c38 <WIFI_Boot+0x144>)
 8003bc8:	4820      	ldr	r0, [pc, #128]	; (8003c4c <WIFI_Boot+0x158>)
 8003bca:	f7ff f86d 	bl	8002ca8 <bprintf>

	// Programa la contraseña del access-point
	for (ct=0;ct<2048;ct++) buff_recv[ct]=0;
 8003bce:	2300      	movs	r3, #0
 8003bd0:	607b      	str	r3, [r7, #4]
 8003bd2:	e007      	b.n	8003be4 <WIFI_Boot+0xf0>
 8003bd4:	4a18      	ldr	r2, [pc, #96]	; (8003c38 <WIFI_Boot+0x144>)
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	4413      	add	r3, r2
 8003bda:	2200      	movs	r2, #0
 8003bdc:	701a      	strb	r2, [r3, #0]
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	3301      	adds	r3, #1
 8003be2:	607b      	str	r3, [r7, #4]
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003bea:	d3f3      	bcc.n	8003bd4 <WIFI_Boot+0xe0>
	HAL_UART_Receive_DMA(&huart1, buff_recv,2048);
 8003bec:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8003bf0:	4911      	ldr	r1, [pc, #68]	; (8003c38 <WIFI_Boot+0x144>)
 8003bf2:	480e      	ldr	r0, [pc, #56]	; (8003c2c <WIFI_Boot+0x138>)
 8003bf4:	f002 faf9 	bl	80061ea <HAL_UART_Receive_DMA>
	HAL_UART_Transmit(&huart1,( unsigned char *) "AT+CWJAP=\"" SSID "\",\"" SSID_PASS "\"\r\n",strlen("AT+CWJAP=\"" SSID "\",\"" SSID_PASS "\"\r\n"),10000);
 8003bf8:	f242 7310 	movw	r3, #10000	; 0x2710
 8003bfc:	2221      	movs	r2, #33	; 0x21
 8003bfe:	4914      	ldr	r1, [pc, #80]	; (8003c50 <WIFI_Boot+0x15c>)
 8003c00:	480a      	ldr	r0, [pc, #40]	; (8003c2c <WIFI_Boot+0x138>)
 8003c02:	f002 fa60 	bl	80060c6 <HAL_UART_Transmit>
	vTaskDelay(5000/portTICK_RATE_MS );
 8003c06:	f241 3088 	movw	r0, #5000	; 0x1388
 8003c0a:	f004 fb3f 	bl	800828c <vTaskDelay>
	HAL_UART_DMAStop(&huart1);
 8003c0e:	4807      	ldr	r0, [pc, #28]	; (8003c2c <WIFI_Boot+0x138>)
 8003c10:	f002 fb1b 	bl	800624a <HAL_UART_DMAStop>
	bprintf("4: %s",buff_recv);
 8003c14:	4908      	ldr	r1, [pc, #32]	; (8003c38 <WIFI_Boot+0x144>)
 8003c16:	480f      	ldr	r0, [pc, #60]	; (8003c54 <WIFI_Boot+0x160>)
 8003c18:	f7ff f846 	bl	8002ca8 <bprintf>
	HAL_UART_Transmit(&huart1, ( unsigned char *)"AT+CIFSR\r\n",strlen("AT+CIFSR\r\n"),10000);
	vTaskDelay(5000/portTICK_RATE_MS );
	HAL_UART_DMAStop(&huart1);
	bprintf("5: %s",buff_recv);*/

}
 8003c1c:	bf00      	nop
 8003c1e:	3708      	adds	r7, #8
 8003c20:	46bd      	mov	sp, r7
 8003c22:	bd80      	pop	{r7, pc}
 8003c24:	08010a64 	.word	0x08010a64
 8003c28:	08010a74 	.word	0x08010a74
 8003c2c:	20000a44 	.word	0x20000a44
 8003c30:	40020400 	.word	0x40020400
 8003c34:	40020000 	.word	0x40020000
 8003c38:	20000bf4 	.word	0x20000bf4
 8003c3c:	08010a80 	.word	0x08010a80
 8003c40:	08010a88 	.word	0x08010a88
 8003c44:	000186a0 	.word	0x000186a0
 8003c48:	08010a90 	.word	0x08010a90
 8003c4c:	08010aa0 	.word	0x08010aa0
 8003c50:	08010aa8 	.word	0x08010aa8
 8003c54:	08010acc 	.word	0x08010acc

08003c58 <ESP_Send_Request>:

uint8_t * ESP_Send_Request(uint8_t * dst_address, uint32_t dst_port, uint8_t * request){
 8003c58:	b580      	push	{r7, lr}
 8003c5a:	b086      	sub	sp, #24
 8003c5c:	af00      	add	r7, sp, #0
 8003c5e:	60f8      	str	r0, [r7, #12]
 8003c60:	60b9      	str	r1, [r7, #8]
 8003c62:	607a      	str	r2, [r7, #4]
    int ct;
	// abrir conexión con
	for (ct=0;ct<2048;ct++) buff_recv[ct]=0;
 8003c64:	2300      	movs	r3, #0
 8003c66:	617b      	str	r3, [r7, #20]
 8003c68:	e007      	b.n	8003c7a <ESP_Send_Request+0x22>
 8003c6a:	4a53      	ldr	r2, [pc, #332]	; (8003db8 <ESP_Send_Request+0x160>)
 8003c6c:	697b      	ldr	r3, [r7, #20]
 8003c6e:	4413      	add	r3, r2
 8003c70:	2200      	movs	r2, #0
 8003c72:	701a      	strb	r2, [r3, #0]
 8003c74:	697b      	ldr	r3, [r7, #20]
 8003c76:	3301      	adds	r3, #1
 8003c78:	617b      	str	r3, [r7, #20]
 8003c7a:	697b      	ldr	r3, [r7, #20]
 8003c7c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003c80:	dbf3      	blt.n	8003c6a <ESP_Send_Request+0x12>
	HAL_UART_Receive_DMA(&huart1, buff_recv,2048);
 8003c82:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8003c86:	494c      	ldr	r1, [pc, #304]	; (8003db8 <ESP_Send_Request+0x160>)
 8003c88:	484c      	ldr	r0, [pc, #304]	; (8003dbc <ESP_Send_Request+0x164>)
 8003c8a:	f002 faae 	bl	80061ea <HAL_UART_Receive_DMA>
	sprintf(( char *)aux_buff_WIFI,"AT+CIPSTART=\"TCP\",\"%s\",%d\r\n",dst_address,(int)dst_port);
 8003c8e:	68bb      	ldr	r3, [r7, #8]
 8003c90:	68fa      	ldr	r2, [r7, #12]
 8003c92:	494b      	ldr	r1, [pc, #300]	; (8003dc0 <ESP_Send_Request+0x168>)
 8003c94:	484b      	ldr	r0, [pc, #300]	; (8003dc4 <ESP_Send_Request+0x16c>)
 8003c96:	f007 f853 	bl	800ad40 <sprintf>
	HAL_UART_Transmit(&huart1, ( unsigned char *) aux_buff_WIFI,strlen((const char *)aux_buff_WIFI),10000);
 8003c9a:	484a      	ldr	r0, [pc, #296]	; (8003dc4 <ESP_Send_Request+0x16c>)
 8003c9c:	f7fc faa0 	bl	80001e0 <strlen>
 8003ca0:	4603      	mov	r3, r0
 8003ca2:	b29a      	uxth	r2, r3
 8003ca4:	f242 7310 	movw	r3, #10000	; 0x2710
 8003ca8:	4946      	ldr	r1, [pc, #280]	; (8003dc4 <ESP_Send_Request+0x16c>)
 8003caa:	4844      	ldr	r0, [pc, #272]	; (8003dbc <ESP_Send_Request+0x164>)
 8003cac:	f002 fa0b 	bl	80060c6 <HAL_UART_Transmit>
	vTaskDelay(200/portTICK_RATE_MS );
 8003cb0:	20c8      	movs	r0, #200	; 0xc8
 8003cb2:	f004 faeb 	bl	800828c <vTaskDelay>
	HAL_UART_DMAStop(&huart1);
 8003cb6:	4841      	ldr	r0, [pc, #260]	; (8003dbc <ESP_Send_Request+0x164>)
 8003cb8:	f002 fac7 	bl	800624a <HAL_UART_DMAStop>
	//bprintf("6e: %s",buff_recv);

	// enviar una peticion HTTP

	int lc=strlen((const char *)request);
 8003cbc:	6878      	ldr	r0, [r7, #4]
 8003cbe:	f7fc fa8f 	bl	80001e0 <strlen>
 8003cc2:	4603      	mov	r3, r0
 8003cc4:	613b      	str	r3, [r7, #16]
	sprintf((char *)aux_buff_WIFI,"AT+CIPSEND=%d\r\n",lc);
 8003cc6:	693a      	ldr	r2, [r7, #16]
 8003cc8:	493f      	ldr	r1, [pc, #252]	; (8003dc8 <ESP_Send_Request+0x170>)
 8003cca:	483e      	ldr	r0, [pc, #248]	; (8003dc4 <ESP_Send_Request+0x16c>)
 8003ccc:	f007 f838 	bl	800ad40 <sprintf>
	for (ct=0;ct<2048;ct++) buff_recv[ct]=0;
 8003cd0:	2300      	movs	r3, #0
 8003cd2:	617b      	str	r3, [r7, #20]
 8003cd4:	e007      	b.n	8003ce6 <ESP_Send_Request+0x8e>
 8003cd6:	4a38      	ldr	r2, [pc, #224]	; (8003db8 <ESP_Send_Request+0x160>)
 8003cd8:	697b      	ldr	r3, [r7, #20]
 8003cda:	4413      	add	r3, r2
 8003cdc:	2200      	movs	r2, #0
 8003cde:	701a      	strb	r2, [r3, #0]
 8003ce0:	697b      	ldr	r3, [r7, #20]
 8003ce2:	3301      	adds	r3, #1
 8003ce4:	617b      	str	r3, [r7, #20]
 8003ce6:	697b      	ldr	r3, [r7, #20]
 8003ce8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003cec:	dbf3      	blt.n	8003cd6 <ESP_Send_Request+0x7e>
	HAL_UART_Receive_DMA(&huart1, buff_recv,2048);
 8003cee:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8003cf2:	4931      	ldr	r1, [pc, #196]	; (8003db8 <ESP_Send_Request+0x160>)
 8003cf4:	4831      	ldr	r0, [pc, #196]	; (8003dbc <ESP_Send_Request+0x164>)
 8003cf6:	f002 fa78 	bl	80061ea <HAL_UART_Receive_DMA>
	HAL_UART_Transmit(&huart1,( const uint8_t *)aux_buff_WIFI,strlen((const char *)aux_buff_WIFI),10000);
 8003cfa:	4832      	ldr	r0, [pc, #200]	; (8003dc4 <ESP_Send_Request+0x16c>)
 8003cfc:	f7fc fa70 	bl	80001e0 <strlen>
 8003d00:	4603      	mov	r3, r0
 8003d02:	b29a      	uxth	r2, r3
 8003d04:	f242 7310 	movw	r3, #10000	; 0x2710
 8003d08:	492e      	ldr	r1, [pc, #184]	; (8003dc4 <ESP_Send_Request+0x16c>)
 8003d0a:	482c      	ldr	r0, [pc, #176]	; (8003dbc <ESP_Send_Request+0x164>)
 8003d0c:	f002 f9db 	bl	80060c6 <HAL_UART_Transmit>
	vTaskDelay(200/portTICK_RATE_MS );
 8003d10:	20c8      	movs	r0, #200	; 0xc8
 8003d12:	f004 fabb 	bl	800828c <vTaskDelay>
	HAL_UART_DMAStop(&huart1);
 8003d16:	4829      	ldr	r0, [pc, #164]	; (8003dbc <ESP_Send_Request+0x164>)
 8003d18:	f002 fa97 	bl	800624a <HAL_UART_DMAStop>
	//bprintf("AT+CIPSEND=%d\r\n",lc);
	//bprintf("6f:%s\r\n",buff_recv);
	// ahora HTTP

	for (ct=0;ct<2048;ct++) buff_WIFI_response[ct]=0;
 8003d1c:	2300      	movs	r3, #0
 8003d1e:	617b      	str	r3, [r7, #20]
 8003d20:	e007      	b.n	8003d32 <ESP_Send_Request+0xda>
 8003d22:	4a2a      	ldr	r2, [pc, #168]	; (8003dcc <ESP_Send_Request+0x174>)
 8003d24:	697b      	ldr	r3, [r7, #20]
 8003d26:	4413      	add	r3, r2
 8003d28:	2200      	movs	r2, #0
 8003d2a:	701a      	strb	r2, [r3, #0]
 8003d2c:	697b      	ldr	r3, [r7, #20]
 8003d2e:	3301      	adds	r3, #1
 8003d30:	617b      	str	r3, [r7, #20]
 8003d32:	697b      	ldr	r3, [r7, #20]
 8003d34:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003d38:	dbf3      	blt.n	8003d22 <ESP_Send_Request+0xca>
	HAL_UART_Receive_DMA(&huart1, buff_WIFI_response,2048);
 8003d3a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8003d3e:	4923      	ldr	r1, [pc, #140]	; (8003dcc <ESP_Send_Request+0x174>)
 8003d40:	481e      	ldr	r0, [pc, #120]	; (8003dbc <ESP_Send_Request+0x164>)
 8003d42:	f002 fa52 	bl	80061ea <HAL_UART_Receive_DMA>
	HAL_UART_Transmit(&huart1, request,strlen( (const char *)request),10000);
 8003d46:	6878      	ldr	r0, [r7, #4]
 8003d48:	f7fc fa4a 	bl	80001e0 <strlen>
 8003d4c:	4603      	mov	r3, r0
 8003d4e:	b29a      	uxth	r2, r3
 8003d50:	f242 7310 	movw	r3, #10000	; 0x2710
 8003d54:	6879      	ldr	r1, [r7, #4]
 8003d56:	4819      	ldr	r0, [pc, #100]	; (8003dbc <ESP_Send_Request+0x164>)
 8003d58:	f002 f9b5 	bl	80060c6 <HAL_UART_Transmit>
	vTaskDelay(1500/portTICK_RATE_MS );
 8003d5c:	f240 50dc 	movw	r0, #1500	; 0x5dc
 8003d60:	f004 fa94 	bl	800828c <vTaskDelay>
	HAL_UART_DMAStop(&huart1);
 8003d64:	4815      	ldr	r0, [pc, #84]	; (8003dbc <ESP_Send_Request+0x164>)
 8003d66:	f002 fa70 	bl	800624a <HAL_UART_DMAStop>
	//bprintf("8: %s----\r\n",buff_WIFI_response);
	//bprintf("%s\r\n",buff_WIFI_response);

	// cerrar conexión

	for (ct=0;ct<2048;ct++) buff_recv[ct]=0;
 8003d6a:	2300      	movs	r3, #0
 8003d6c:	617b      	str	r3, [r7, #20]
 8003d6e:	e007      	b.n	8003d80 <ESP_Send_Request+0x128>
 8003d70:	4a11      	ldr	r2, [pc, #68]	; (8003db8 <ESP_Send_Request+0x160>)
 8003d72:	697b      	ldr	r3, [r7, #20]
 8003d74:	4413      	add	r3, r2
 8003d76:	2200      	movs	r2, #0
 8003d78:	701a      	strb	r2, [r3, #0]
 8003d7a:	697b      	ldr	r3, [r7, #20]
 8003d7c:	3301      	adds	r3, #1
 8003d7e:	617b      	str	r3, [r7, #20]
 8003d80:	697b      	ldr	r3, [r7, #20]
 8003d82:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003d86:	dbf3      	blt.n	8003d70 <ESP_Send_Request+0x118>
	HAL_UART_Receive_DMA(&huart1, buff_recv,2048);
 8003d88:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8003d8c:	490a      	ldr	r1, [pc, #40]	; (8003db8 <ESP_Send_Request+0x160>)
 8003d8e:	480b      	ldr	r0, [pc, #44]	; (8003dbc <ESP_Send_Request+0x164>)
 8003d90:	f002 fa2b 	bl	80061ea <HAL_UART_Receive_DMA>
	HAL_UART_Transmit(&huart1, ( unsigned char *) "AT+CIPCLOSE\r\n",strlen("AT+CIPCLOSE\r\n"),10000);
 8003d94:	f242 7310 	movw	r3, #10000	; 0x2710
 8003d98:	220d      	movs	r2, #13
 8003d9a:	490d      	ldr	r1, [pc, #52]	; (8003dd0 <ESP_Send_Request+0x178>)
 8003d9c:	4807      	ldr	r0, [pc, #28]	; (8003dbc <ESP_Send_Request+0x164>)
 8003d9e:	f002 f992 	bl	80060c6 <HAL_UART_Transmit>
	vTaskDelay(200/portTICK_RATE_MS );
 8003da2:	20c8      	movs	r0, #200	; 0xc8
 8003da4:	f004 fa72 	bl	800828c <vTaskDelay>
	HAL_UART_DMAStop(&huart1);
 8003da8:	4804      	ldr	r0, [pc, #16]	; (8003dbc <ESP_Send_Request+0x164>)
 8003daa:	f002 fa4e 	bl	800624a <HAL_UART_DMAStop>
	//bprintf("9: %s",buff_recv);


	return buff_WIFI_response;
 8003dae:	4b07      	ldr	r3, [pc, #28]	; (8003dcc <ESP_Send_Request+0x174>)
}
 8003db0:	4618      	mov	r0, r3
 8003db2:	3718      	adds	r7, #24
 8003db4:	46bd      	mov	sp, r7
 8003db6:	bd80      	pop	{r7, pc}
 8003db8:	20000bf4 	.word	0x20000bf4
 8003dbc:	20000a44 	.word	0x20000a44
 8003dc0:	08010ad4 	.word	0x08010ad4
 8003dc4:	20001c70 	.word	0x20001c70
 8003dc8:	08010af0 	.word	0x08010af0
 8003dcc:	20002470 	.word	0x20002470
 8003dd0:	08010b00 	.word	0x08010b00

08003dd4 <BUFF_is_empty>:
#include <stdlib.h>


/////////////////////////////////////////////////////////////////////////////////////// BUFFER sin proteccion

uint32_t BUFF_is_empty(BUFF_BUFFER_t * buffer){
 8003dd4:	b480      	push	{r7}
 8003dd6:	b083      	sub	sp, #12
 8003dd8:	af00      	add	r7, sp, #0
 8003dda:	6078      	str	r0, [r7, #4]
	return (buffer->n_elem==0);
 8003ddc:	687b      	ldr	r3, [r7, #4]
 8003dde:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003de0:	2b00      	cmp	r3, #0
 8003de2:	bf0c      	ite	eq
 8003de4:	2301      	moveq	r3, #1
 8003de6:	2300      	movne	r3, #0
 8003de8:	b2db      	uxtb	r3, r3
}
 8003dea:	4618      	mov	r0, r3
 8003dec:	370c      	adds	r7, #12
 8003dee:	46bd      	mov	sp, r7
 8003df0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003df4:	4770      	bx	lr

08003df6 <BUFF_is_full>:

uint32_t BUFF_is_full(BUFF_BUFFER_t * buffer){
 8003df6:	b480      	push	{r7}
 8003df8:	b083      	sub	sp, #12
 8003dfa:	af00      	add	r7, sp, #0
 8003dfc:	6078      	str	r0, [r7, #4]
	return (buffer->n_elem==buffer->size);
 8003dfe:	687b      	ldr	r3, [r7, #4]
 8003e00:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	6a1b      	ldr	r3, [r3, #32]
 8003e06:	429a      	cmp	r2, r3
 8003e08:	bf0c      	ite	eq
 8003e0a:	2301      	moveq	r3, #1
 8003e0c:	2300      	movne	r3, #0
 8003e0e:	b2db      	uxtb	r3, r3
}
 8003e10:	4618      	mov	r0, r3
 8003e12:	370c      	adds	r7, #12
 8003e14:	46bd      	mov	sp, r7
 8003e16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e1a:	4770      	bx	lr

08003e1c <BUFF_inserta>:

uint32_t BUFF_inserta(BUFF_BUFFER_t * buffer,BUFF_ITEM_t item){
 8003e1c:	b580      	push	{r7, lr}
 8003e1e:	b082      	sub	sp, #8
 8003e20:	af00      	add	r7, sp, #0
 8003e22:	6078      	str	r0, [r7, #4]
 8003e24:	460b      	mov	r3, r1
 8003e26:	70fb      	strb	r3, [r7, #3]

	if (!buffer->isfull(buffer)){
 8003e28:	687b      	ldr	r3, [r7, #4]
 8003e2a:	68db      	ldr	r3, [r3, #12]
 8003e2c:	6878      	ldr	r0, [r7, #4]
 8003e2e:	4798      	blx	r3
 8003e30:	4603      	mov	r3, r0
 8003e32:	2b00      	cmp	r3, #0
 8003e34:	d119      	bne.n	8003e6a <BUFF_inserta+0x4e>
		buffer->buff[buffer->cabeza]=item;
 8003e36:	687b      	ldr	r3, [r7, #4]
 8003e38:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	699b      	ldr	r3, [r3, #24]
 8003e3e:	4413      	add	r3, r2
 8003e40:	78fa      	ldrb	r2, [r7, #3]
 8003e42:	701a      	strb	r2, [r3, #0]
		buffer->cabeza=((buffer->cabeza)+1)%(buffer->size);
 8003e44:	687b      	ldr	r3, [r7, #4]
 8003e46:	699b      	ldr	r3, [r3, #24]
 8003e48:	3301      	adds	r3, #1
 8003e4a:	687a      	ldr	r2, [r7, #4]
 8003e4c:	6a12      	ldr	r2, [r2, #32]
 8003e4e:	fbb3 f1f2 	udiv	r1, r3, r2
 8003e52:	fb01 f202 	mul.w	r2, r1, r2
 8003e56:	1a9a      	subs	r2, r3, r2
 8003e58:	687b      	ldr	r3, [r7, #4]
 8003e5a:	619a      	str	r2, [r3, #24]
		buffer->n_elem++;
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003e60:	1c5a      	adds	r2, r3, #1
 8003e62:	687b      	ldr	r3, [r7, #4]
 8003e64:	629a      	str	r2, [r3, #40]	; 0x28
		return 1;
 8003e66:	2301      	movs	r3, #1
 8003e68:	e000      	b.n	8003e6c <BUFF_inserta+0x50>
	} else return 0;
 8003e6a:	2300      	movs	r3, #0
}
 8003e6c:	4618      	mov	r0, r3
 8003e6e:	3708      	adds	r7, #8
 8003e70:	46bd      	mov	sp, r7
 8003e72:	bd80      	pop	{r7, pc}

08003e74 <BUFF_extrae>:

uint32_t BUFF_extrae(BUFF_BUFFER_t * buffer,BUFF_ITEM_t *item){
 8003e74:	b580      	push	{r7, lr}
 8003e76:	b082      	sub	sp, #8
 8003e78:	af00      	add	r7, sp, #0
 8003e7a:	6078      	str	r0, [r7, #4]
 8003e7c:	6039      	str	r1, [r7, #0]

	if (!buffer->isempty(buffer)){
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	689b      	ldr	r3, [r3, #8]
 8003e82:	6878      	ldr	r0, [r7, #4]
 8003e84:	4798      	blx	r3
 8003e86:	4603      	mov	r3, r0
 8003e88:	2b00      	cmp	r3, #0
 8003e8a:	d11a      	bne.n	8003ec2 <BUFF_extrae+0x4e>
			*item=buffer->buff[buffer->cola];
 8003e8c:	687b      	ldr	r3, [r7, #4]
 8003e8e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003e90:	687b      	ldr	r3, [r7, #4]
 8003e92:	69db      	ldr	r3, [r3, #28]
 8003e94:	4413      	add	r3, r2
 8003e96:	781a      	ldrb	r2, [r3, #0]
 8003e98:	683b      	ldr	r3, [r7, #0]
 8003e9a:	701a      	strb	r2, [r3, #0]
			buffer->cola=(buffer->cola+1)%(buffer->size);
 8003e9c:	687b      	ldr	r3, [r7, #4]
 8003e9e:	69db      	ldr	r3, [r3, #28]
 8003ea0:	3301      	adds	r3, #1
 8003ea2:	687a      	ldr	r2, [r7, #4]
 8003ea4:	6a12      	ldr	r2, [r2, #32]
 8003ea6:	fbb3 f1f2 	udiv	r1, r3, r2
 8003eaa:	fb01 f202 	mul.w	r2, r1, r2
 8003eae:	1a9a      	subs	r2, r3, r2
 8003eb0:	687b      	ldr	r3, [r7, #4]
 8003eb2:	61da      	str	r2, [r3, #28]
			buffer->n_elem--;
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003eb8:	1e5a      	subs	r2, r3, #1
 8003eba:	687b      	ldr	r3, [r7, #4]
 8003ebc:	629a      	str	r2, [r3, #40]	; 0x28

	} else return 0;

   return 1;
 8003ebe:	2301      	movs	r3, #1
 8003ec0:	e000      	b.n	8003ec4 <BUFF_extrae+0x50>
	} else return 0;
 8003ec2:	2300      	movs	r3, #0
}
 8003ec4:	4618      	mov	r0, r3
 8003ec6:	3708      	adds	r7, #8
 8003ec8:	46bd      	mov	sp, r7
 8003eca:	bd80      	pop	{r7, pc}

08003ecc <BUFF_extrae_prot>:

uint32_t BUFF_extrae_prot(BUFF_BUFFER_t * buffer,BUFF_ITEM_t *item)
{ //variable condicion
 8003ecc:	b580      	push	{r7, lr}
 8003ece:	b084      	sub	sp, #16
 8003ed0:	af00      	add	r7, sp, #0
 8003ed2:	6078      	str	r0, [r7, #4]
 8003ed4:	6039      	str	r1, [r7, #0]
	int it;

	it=0;
 8003ed6:	2300      	movs	r3, #0
 8003ed8:	60fb      	str	r3, [r7, #12]
	while (xSemaphoreTake(buffer->xSem, 10000/portTICK_RATE_MS  ) != pdTRUE );
 8003eda:	bf00      	nop
 8003edc:	687b      	ldr	r3, [r7, #4]
 8003ede:	695b      	ldr	r3, [r3, #20]
 8003ee0:	f242 7110 	movw	r1, #10000	; 0x2710
 8003ee4:	4618      	mov	r0, r3
 8003ee6:	f003 fd5b 	bl	80079a0 <xQueueSemaphoreTake>
 8003eea:	4603      	mov	r3, r0
 8003eec:	2b01      	cmp	r3, #1
 8003eee:	d1f5      	bne.n	8003edc <BUFF_extrae_prot+0x10>
	 // lock
	while(!BUFF_extrae(buffer,item)){
 8003ef0:	e017      	b.n	8003f22 <BUFF_extrae_prot+0x56>
			 xSemaphoreGive(buffer->xSem);
 8003ef2:	687b      	ldr	r3, [r7, #4]
 8003ef4:	6958      	ldr	r0, [r3, #20]
 8003ef6:	2300      	movs	r3, #0
 8003ef8:	2200      	movs	r2, #0
 8003efa:	2100      	movs	r1, #0
 8003efc:	f003 fad6 	bl	80074ac <xQueueGenericSend>
	 		 vTaskDelay(100/portTICK_RATE_MS );
 8003f00:	2064      	movs	r0, #100	; 0x64
 8003f02:	f004 f9c3 	bl	800828c <vTaskDelay>
	 		 while (xSemaphoreTake(buffer->xSem, 10000/portTICK_RATE_MS  ) != pdTRUE );
 8003f06:	bf00      	nop
 8003f08:	687b      	ldr	r3, [r7, #4]
 8003f0a:	695b      	ldr	r3, [r3, #20]
 8003f0c:	f242 7110 	movw	r1, #10000	; 0x2710
 8003f10:	4618      	mov	r0, r3
 8003f12:	f003 fd45 	bl	80079a0 <xQueueSemaphoreTake>
 8003f16:	4603      	mov	r3, r0
 8003f18:	2b01      	cmp	r3, #1
 8003f1a:	d1f5      	bne.n	8003f08 <BUFF_extrae_prot+0x3c>
	 		 it++;
 8003f1c:	68fb      	ldr	r3, [r7, #12]
 8003f1e:	3301      	adds	r3, #1
 8003f20:	60fb      	str	r3, [r7, #12]
	while(!BUFF_extrae(buffer,item)){
 8003f22:	6839      	ldr	r1, [r7, #0]
 8003f24:	6878      	ldr	r0, [r7, #4]
 8003f26:	f7ff ffa5 	bl	8003e74 <BUFF_extrae>
 8003f2a:	4603      	mov	r3, r0
 8003f2c:	2b00      	cmp	r3, #0
 8003f2e:	d0e0      	beq.n	8003ef2 <BUFF_extrae_prot+0x26>
	}
	xSemaphoreGive(buffer->xSem);
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	6958      	ldr	r0, [r3, #20]
 8003f34:	2300      	movs	r3, #0
 8003f36:	2200      	movs	r2, #0
 8003f38:	2100      	movs	r1, #0
 8003f3a:	f003 fab7 	bl	80074ac <xQueueGenericSend>
	return 1; // siempre tiene éxito
 8003f3e:	2301      	movs	r3, #1
}
 8003f40:	4618      	mov	r0, r3
 8003f42:	3710      	adds	r7, #16
 8003f44:	46bd      	mov	sp, r7
 8003f46:	bd80      	pop	{r7, pc}

08003f48 <BUFF_inserta_prot>:
uint32_t BUFF_inserta_prot(BUFF_BUFFER_t * buffer,BUFF_ITEM_t item)
{ //variable condicion
 8003f48:	b580      	push	{r7, lr}
 8003f4a:	b084      	sub	sp, #16
 8003f4c:	af00      	add	r7, sp, #0
 8003f4e:	6078      	str	r0, [r7, #4]
 8003f50:	460b      	mov	r3, r1
 8003f52:	70fb      	strb	r3, [r7, #3]
	int it;

	it=0;
 8003f54:	2300      	movs	r3, #0
 8003f56:	60fb      	str	r3, [r7, #12]
	while (xSemaphoreTake(buffer->xSem, 10000/portTICK_RATE_MS  ) != pdTRUE );
 8003f58:	bf00      	nop
 8003f5a:	687b      	ldr	r3, [r7, #4]
 8003f5c:	695b      	ldr	r3, [r3, #20]
 8003f5e:	f242 7110 	movw	r1, #10000	; 0x2710
 8003f62:	4618      	mov	r0, r3
 8003f64:	f003 fd1c 	bl	80079a0 <xQueueSemaphoreTake>
 8003f68:	4603      	mov	r3, r0
 8003f6a:	2b01      	cmp	r3, #1
 8003f6c:	d1f5      	bne.n	8003f5a <BUFF_inserta_prot+0x12>
	 // lock
	while(!BUFF_inserta(buffer,item)){
 8003f6e:	e017      	b.n	8003fa0 <BUFF_inserta_prot+0x58>
	 		 xSemaphoreGive(buffer->xSem);
 8003f70:	687b      	ldr	r3, [r7, #4]
 8003f72:	6958      	ldr	r0, [r3, #20]
 8003f74:	2300      	movs	r3, #0
 8003f76:	2200      	movs	r2, #0
 8003f78:	2100      	movs	r1, #0
 8003f7a:	f003 fa97 	bl	80074ac <xQueueGenericSend>
	 		 vTaskDelay(100/portTICK_RATE_MS );
 8003f7e:	2064      	movs	r0, #100	; 0x64
 8003f80:	f004 f984 	bl	800828c <vTaskDelay>
	 		 while (xSemaphoreTake(buffer->xSem, 10000/portTICK_RATE_MS  ) != pdTRUE );
 8003f84:	bf00      	nop
 8003f86:	687b      	ldr	r3, [r7, #4]
 8003f88:	695b      	ldr	r3, [r3, #20]
 8003f8a:	f242 7110 	movw	r1, #10000	; 0x2710
 8003f8e:	4618      	mov	r0, r3
 8003f90:	f003 fd06 	bl	80079a0 <xQueueSemaphoreTake>
 8003f94:	4603      	mov	r3, r0
 8003f96:	2b01      	cmp	r3, #1
 8003f98:	d1f5      	bne.n	8003f86 <BUFF_inserta_prot+0x3e>
	 		 it++;
 8003f9a:	68fb      	ldr	r3, [r7, #12]
 8003f9c:	3301      	adds	r3, #1
 8003f9e:	60fb      	str	r3, [r7, #12]
	while(!BUFF_inserta(buffer,item)){
 8003fa0:	78fb      	ldrb	r3, [r7, #3]
 8003fa2:	4619      	mov	r1, r3
 8003fa4:	6878      	ldr	r0, [r7, #4]
 8003fa6:	f7ff ff39 	bl	8003e1c <BUFF_inserta>
 8003faa:	4603      	mov	r3, r0
 8003fac:	2b00      	cmp	r3, #0
 8003fae:	d0df      	beq.n	8003f70 <BUFF_inserta_prot+0x28>
	}
	xSemaphoreGive(buffer->xSem);
 8003fb0:	687b      	ldr	r3, [r7, #4]
 8003fb2:	6958      	ldr	r0, [r3, #20]
 8003fb4:	2300      	movs	r3, #0
 8003fb6:	2200      	movs	r2, #0
 8003fb8:	2100      	movs	r1, #0
 8003fba:	f003 fa77 	bl	80074ac <xQueueGenericSend>
	return 1; // siempre tiene éxito
 8003fbe:	2301      	movs	r3, #1
}
 8003fc0:	4618      	mov	r0, r3
 8003fc2:	3710      	adds	r7, #16
 8003fc4:	46bd      	mov	sp, r7
 8003fc6:	bd80      	pop	{r7, pc}

08003fc8 <BUFF_inserta_cad>:

uint32_t BUFF_inserta_cad(BUFF_BUFFER_t * buffer,BUFF_ITEM_t * cad,uint32_t nitems)
{ //variable condicion
 8003fc8:	b580      	push	{r7, lr}
 8003fca:	b086      	sub	sp, #24
 8003fcc:	af00      	add	r7, sp, #0
 8003fce:	60f8      	str	r0, [r7, #12]
 8003fd0:	60b9      	str	r1, [r7, #8]
 8003fd2:	607a      	str	r2, [r7, #4]

	int it;
	uint32_t res;
	for (it=0;it<nitems;it++)
 8003fd4:	2300      	movs	r3, #0
 8003fd6:	617b      	str	r3, [r7, #20]
 8003fd8:	e010      	b.n	8003ffc <BUFF_inserta_cad+0x34>
	{
		res=BUFF_inserta_prot(buffer,cad[it]);
 8003fda:	697b      	ldr	r3, [r7, #20]
 8003fdc:	68ba      	ldr	r2, [r7, #8]
 8003fde:	4413      	add	r3, r2
 8003fe0:	781b      	ldrb	r3, [r3, #0]
 8003fe2:	4619      	mov	r1, r3
 8003fe4:	68f8      	ldr	r0, [r7, #12]
 8003fe6:	f7ff ffaf 	bl	8003f48 <BUFF_inserta_prot>
 8003fea:	6138      	str	r0, [r7, #16]
		if (!res) return it;
 8003fec:	693b      	ldr	r3, [r7, #16]
 8003fee:	2b00      	cmp	r3, #0
 8003ff0:	d101      	bne.n	8003ff6 <BUFF_inserta_cad+0x2e>
 8003ff2:	697b      	ldr	r3, [r7, #20]
 8003ff4:	e007      	b.n	8004006 <BUFF_inserta_cad+0x3e>
	for (it=0;it<nitems;it++)
 8003ff6:	697b      	ldr	r3, [r7, #20]
 8003ff8:	3301      	adds	r3, #1
 8003ffa:	617b      	str	r3, [r7, #20]
 8003ffc:	697b      	ldr	r3, [r7, #20]
 8003ffe:	687a      	ldr	r2, [r7, #4]
 8004000:	429a      	cmp	r2, r3
 8004002:	d8ea      	bhi.n	8003fda <BUFF_inserta_cad+0x12>
	}
	return 1; // siempre tiene éxito
 8004004:	2301      	movs	r3, #1
}
 8004006:	4618      	mov	r0, r3
 8004008:	3718      	adds	r7, #24
 800400a:	46bd      	mov	sp, r7
 800400c:	bd80      	pop	{r7, pc}
	...

08004010 <bufferCreat>:
} BUFF_BUFFER_t;
*/


// API
BUFF_BUFFER_t * bufferCreat(int size){
 8004010:	b580      	push	{r7, lr}
 8004012:	b084      	sub	sp, #16
 8004014:	af00      	add	r7, sp, #0
 8004016:	6078      	str	r0, [r7, #4]
	BUFF_BUFFER_t * tmp;
	void * bff;

	tmp=malloc(sizeof(BUFF_BUFFER_t));
 8004018:	202c      	movs	r0, #44	; 0x2c
 800401a:	f006 f9c7 	bl	800a3ac <malloc>
 800401e:	4603      	mov	r3, r0
 8004020:	60fb      	str	r3, [r7, #12]
	if (tmp){ // enought for structure
 8004022:	68fb      	ldr	r3, [r7, #12]
 8004024:	2b00      	cmp	r3, #0
 8004026:	d03d      	beq.n	80040a4 <bufferCreat+0x94>

		bff=malloc(sizeof(uint8_t)*size);
 8004028:	687b      	ldr	r3, [r7, #4]
 800402a:	4618      	mov	r0, r3
 800402c:	f006 f9be 	bl	800a3ac <malloc>
 8004030:	4603      	mov	r3, r0
 8004032:	60bb      	str	r3, [r7, #8]
		if (bff){ //enought for buffer
 8004034:	68bb      	ldr	r3, [r7, #8]
 8004036:	2b00      	cmp	r3, #0
 8004038:	d031      	beq.n	800409e <bufferCreat+0x8e>
			tmp->xSem=xSemaphoreCreateMutex();
 800403a:	2001      	movs	r0, #1
 800403c:	f003 fa1d 	bl	800747a <xQueueCreateMutex>
 8004040:	4602      	mov	r2, r0
 8004042:	68fb      	ldr	r3, [r7, #12]
 8004044:	615a      	str	r2, [r3, #20]
			if (!tmp->xSem){
 8004046:	68fb      	ldr	r3, [r7, #12]
 8004048:	695b      	ldr	r3, [r3, #20]
 800404a:	2b00      	cmp	r3, #0
 800404c:	d107      	bne.n	800405e <bufferCreat+0x4e>
				free(bff);
 800404e:	68b8      	ldr	r0, [r7, #8]
 8004050:	f006 f9b4 	bl	800a3bc <free>
				free(tmp);
 8004054:	68f8      	ldr	r0, [r7, #12]
 8004056:	f006 f9b1 	bl	800a3bc <free>
				return NULL;
 800405a:	2300      	movs	r3, #0
 800405c:	e023      	b.n	80040a6 <bufferCreat+0x96>
			};
            tmp->buff=bff;
 800405e:	68fb      	ldr	r3, [r7, #12]
 8004060:	68ba      	ldr	r2, [r7, #8]
 8004062:	625a      	str	r2, [r3, #36]	; 0x24
			tmp->cabeza=0;
 8004064:	68fb      	ldr	r3, [r7, #12]
 8004066:	2200      	movs	r2, #0
 8004068:	619a      	str	r2, [r3, #24]
			tmp->cola=0;
 800406a:	68fb      	ldr	r3, [r7, #12]
 800406c:	2200      	movs	r2, #0
 800406e:	61da      	str	r2, [r3, #28]
			tmp->size=size;
 8004070:	687a      	ldr	r2, [r7, #4]
 8004072:	68fb      	ldr	r3, [r7, #12]
 8004074:	621a      	str	r2, [r3, #32]
			tmp->n_elem=0;
 8004076:	68fb      	ldr	r3, [r7, #12]
 8004078:	2200      	movs	r2, #0
 800407a:	629a      	str	r2, [r3, #40]	; 0x28
			tmp->get=(void*)BUFF_extrae_prot;
 800407c:	68fb      	ldr	r3, [r7, #12]
 800407e:	4a0c      	ldr	r2, [pc, #48]	; (80040b0 <bufferCreat+0xa0>)
 8004080:	601a      	str	r2, [r3, #0]
			tmp->put=(void*)BUFF_inserta_prot;
 8004082:	68fb      	ldr	r3, [r7, #12]
 8004084:	4a0b      	ldr	r2, [pc, #44]	; (80040b4 <bufferCreat+0xa4>)
 8004086:	605a      	str	r2, [r3, #4]
			tmp->puts=(void*)BUFF_inserta_cad;
 8004088:	68fb      	ldr	r3, [r7, #12]
 800408a:	4a0b      	ldr	r2, [pc, #44]	; (80040b8 <bufferCreat+0xa8>)
 800408c:	611a      	str	r2, [r3, #16]

			tmp->isfull=(void*)BUFF_is_full;
 800408e:	68fb      	ldr	r3, [r7, #12]
 8004090:	4a0a      	ldr	r2, [pc, #40]	; (80040bc <bufferCreat+0xac>)
 8004092:	60da      	str	r2, [r3, #12]
			tmp->isempty=(void*)BUFF_is_empty;
 8004094:	68fb      	ldr	r3, [r7, #12]
 8004096:	4a0a      	ldr	r2, [pc, #40]	; (80040c0 <bufferCreat+0xb0>)
 8004098:	609a      	str	r2, [r3, #8]
			return tmp;
 800409a:	68fb      	ldr	r3, [r7, #12]
 800409c:	e003      	b.n	80040a6 <bufferCreat+0x96>
		}
		else
			free(tmp);
 800409e:	68f8      	ldr	r0, [r7, #12]
 80040a0:	f006 f98c 	bl	800a3bc <free>
	}
	return NULL;
 80040a4:	2300      	movs	r3, #0

}
 80040a6:	4618      	mov	r0, r3
 80040a8:	3710      	adds	r7, #16
 80040aa:	46bd      	mov	sp, r7
 80040ac:	bd80      	pop	{r7, pc}
 80040ae:	bf00      	nop
 80040b0:	08003ecd 	.word	0x08003ecd
 80040b4:	08003f49 	.word	0x08003f49
 80040b8:	08003fc9 	.word	0x08003fc9
 80040bc:	08003df7 	.word	0x08003df7
 80040c0:	08003dd5 	.word	0x08003dd5

080040c4 <Reset_Handler>:
 80040c4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80040fc <LoopFillZerobss+0x12>
 80040c8:	480d      	ldr	r0, [pc, #52]	; (8004100 <LoopFillZerobss+0x16>)
 80040ca:	490e      	ldr	r1, [pc, #56]	; (8004104 <LoopFillZerobss+0x1a>)
 80040cc:	4a0e      	ldr	r2, [pc, #56]	; (8004108 <LoopFillZerobss+0x1e>)
 80040ce:	2300      	movs	r3, #0
 80040d0:	e002      	b.n	80040d8 <LoopCopyDataInit>

080040d2 <CopyDataInit>:
 80040d2:	58d4      	ldr	r4, [r2, r3]
 80040d4:	50c4      	str	r4, [r0, r3]
 80040d6:	3304      	adds	r3, #4

080040d8 <LoopCopyDataInit>:
 80040d8:	18c4      	adds	r4, r0, r3
 80040da:	428c      	cmp	r4, r1
 80040dc:	d3f9      	bcc.n	80040d2 <CopyDataInit>
 80040de:	4a0b      	ldr	r2, [pc, #44]	; (800410c <LoopFillZerobss+0x22>)
 80040e0:	4c0b      	ldr	r4, [pc, #44]	; (8004110 <LoopFillZerobss+0x26>)
 80040e2:	2300      	movs	r3, #0
 80040e4:	e001      	b.n	80040ea <LoopFillZerobss>

080040e6 <FillZerobss>:
 80040e6:	6013      	str	r3, [r2, #0]
 80040e8:	3204      	adds	r2, #4

080040ea <LoopFillZerobss>:
 80040ea:	42a2      	cmp	r2, r4
 80040ec:	d3fb      	bcc.n	80040e6 <FillZerobss>
 80040ee:	f7fe fc2d 	bl	800294c <SystemInit>
 80040f2:	f006 f933 	bl	800a35c <__libc_init_array>
 80040f6:	f7fd ff55 	bl	8001fa4 <main>
 80040fa:	4770      	bx	lr
 80040fc:	20020000 	.word	0x20020000
 8004100:	20000000 	.word	0x20000000
 8004104:	200009d4 	.word	0x200009d4
 8004108:	08010fdc 	.word	0x08010fdc
 800410c:	200009d8 	.word	0x200009d8
 8004110:	20017ad8 	.word	0x20017ad8

08004114 <ADC_IRQHandler>:
 8004114:	e7fe      	b.n	8004114 <ADC_IRQHandler>
	...

08004118 <HAL_Init>:
 8004118:	b580      	push	{r7, lr}
 800411a:	af00      	add	r7, sp, #0
 800411c:	4b0e      	ldr	r3, [pc, #56]	; (8004158 <HAL_Init+0x40>)
 800411e:	681b      	ldr	r3, [r3, #0]
 8004120:	4a0d      	ldr	r2, [pc, #52]	; (8004158 <HAL_Init+0x40>)
 8004122:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004126:	6013      	str	r3, [r2, #0]
 8004128:	4b0b      	ldr	r3, [pc, #44]	; (8004158 <HAL_Init+0x40>)
 800412a:	681b      	ldr	r3, [r3, #0]
 800412c:	4a0a      	ldr	r2, [pc, #40]	; (8004158 <HAL_Init+0x40>)
 800412e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8004132:	6013      	str	r3, [r2, #0]
 8004134:	4b08      	ldr	r3, [pc, #32]	; (8004158 <HAL_Init+0x40>)
 8004136:	681b      	ldr	r3, [r3, #0]
 8004138:	4a07      	ldr	r2, [pc, #28]	; (8004158 <HAL_Init+0x40>)
 800413a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800413e:	6013      	str	r3, [r2, #0]
 8004140:	2003      	movs	r0, #3
 8004142:	f000 fcff 	bl	8004b44 <HAL_NVIC_SetPriorityGrouping>
 8004146:	200f      	movs	r0, #15
 8004148:	f000 f808 	bl	800415c <HAL_InitTick>
 800414c:	f7fe f972 	bl	8002434 <HAL_MspInit>
 8004150:	2300      	movs	r3, #0
 8004152:	4618      	mov	r0, r3
 8004154:	bd80      	pop	{r7, pc}
 8004156:	bf00      	nop
 8004158:	40023c00 	.word	0x40023c00

0800415c <HAL_InitTick>:
 800415c:	b580      	push	{r7, lr}
 800415e:	b082      	sub	sp, #8
 8004160:	af00      	add	r7, sp, #0
 8004162:	6078      	str	r0, [r7, #4]
 8004164:	4b12      	ldr	r3, [pc, #72]	; (80041b0 <HAL_InitTick+0x54>)
 8004166:	681a      	ldr	r2, [r3, #0]
 8004168:	4b12      	ldr	r3, [pc, #72]	; (80041b4 <HAL_InitTick+0x58>)
 800416a:	781b      	ldrb	r3, [r3, #0]
 800416c:	4619      	mov	r1, r3
 800416e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004172:	fbb3 f3f1 	udiv	r3, r3, r1
 8004176:	fbb2 f3f3 	udiv	r3, r2, r3
 800417a:	4618      	mov	r0, r3
 800417c:	f000 fd1b 	bl	8004bb6 <HAL_SYSTICK_Config>
 8004180:	4603      	mov	r3, r0
 8004182:	2b00      	cmp	r3, #0
 8004184:	d001      	beq.n	800418a <HAL_InitTick+0x2e>
 8004186:	2301      	movs	r3, #1
 8004188:	e00e      	b.n	80041a8 <HAL_InitTick+0x4c>
 800418a:	687b      	ldr	r3, [r7, #4]
 800418c:	2b0f      	cmp	r3, #15
 800418e:	d80a      	bhi.n	80041a6 <HAL_InitTick+0x4a>
 8004190:	2200      	movs	r2, #0
 8004192:	6879      	ldr	r1, [r7, #4]
 8004194:	f04f 30ff 	mov.w	r0, #4294967295
 8004198:	f000 fcdf 	bl	8004b5a <HAL_NVIC_SetPriority>
 800419c:	4a06      	ldr	r2, [pc, #24]	; (80041b8 <HAL_InitTick+0x5c>)
 800419e:	687b      	ldr	r3, [r7, #4]
 80041a0:	6013      	str	r3, [r2, #0]
 80041a2:	2300      	movs	r3, #0
 80041a4:	e000      	b.n	80041a8 <HAL_InitTick+0x4c>
 80041a6:	2301      	movs	r3, #1
 80041a8:	4618      	mov	r0, r3
 80041aa:	3708      	adds	r7, #8
 80041ac:	46bd      	mov	sp, r7
 80041ae:	bd80      	pop	{r7, pc}
 80041b0:	2000000c 	.word	0x2000000c
 80041b4:	20000018 	.word	0x20000018
 80041b8:	20000014 	.word	0x20000014

080041bc <HAL_IncTick>:
 80041bc:	b480      	push	{r7}
 80041be:	af00      	add	r7, sp, #0
 80041c0:	4b06      	ldr	r3, [pc, #24]	; (80041dc <HAL_IncTick+0x20>)
 80041c2:	781b      	ldrb	r3, [r3, #0]
 80041c4:	461a      	mov	r2, r3
 80041c6:	4b06      	ldr	r3, [pc, #24]	; (80041e0 <HAL_IncTick+0x24>)
 80041c8:	681b      	ldr	r3, [r3, #0]
 80041ca:	4413      	add	r3, r2
 80041cc:	4a04      	ldr	r2, [pc, #16]	; (80041e0 <HAL_IncTick+0x24>)
 80041ce:	6013      	str	r3, [r2, #0]
 80041d0:	bf00      	nop
 80041d2:	46bd      	mov	sp, r7
 80041d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041d8:	4770      	bx	lr
 80041da:	bf00      	nop
 80041dc:	20000018 	.word	0x20000018
 80041e0:	20002c70 	.word	0x20002c70

080041e4 <HAL_GetTick>:
 80041e4:	b480      	push	{r7}
 80041e6:	af00      	add	r7, sp, #0
 80041e8:	4b03      	ldr	r3, [pc, #12]	; (80041f8 <HAL_GetTick+0x14>)
 80041ea:	681b      	ldr	r3, [r3, #0]
 80041ec:	4618      	mov	r0, r3
 80041ee:	46bd      	mov	sp, r7
 80041f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041f4:	4770      	bx	lr
 80041f6:	bf00      	nop
 80041f8:	20002c70 	.word	0x20002c70

080041fc <HAL_ADC_Init>:
 80041fc:	b580      	push	{r7, lr}
 80041fe:	b084      	sub	sp, #16
 8004200:	af00      	add	r7, sp, #0
 8004202:	6078      	str	r0, [r7, #4]
 8004204:	2300      	movs	r3, #0
 8004206:	73fb      	strb	r3, [r7, #15]
 8004208:	687b      	ldr	r3, [r7, #4]
 800420a:	2b00      	cmp	r3, #0
 800420c:	d101      	bne.n	8004212 <HAL_ADC_Init+0x16>
 800420e:	2301      	movs	r3, #1
 8004210:	e033      	b.n	800427a <HAL_ADC_Init+0x7e>
 8004212:	687b      	ldr	r3, [r7, #4]
 8004214:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004216:	2b00      	cmp	r3, #0
 8004218:	d109      	bne.n	800422e <HAL_ADC_Init+0x32>
 800421a:	6878      	ldr	r0, [r7, #4]
 800421c:	f7fe f936 	bl	800248c <HAL_ADC_MspInit>
 8004220:	687b      	ldr	r3, [r7, #4]
 8004222:	2200      	movs	r2, #0
 8004224:	645a      	str	r2, [r3, #68]	; 0x44
 8004226:	687b      	ldr	r3, [r7, #4]
 8004228:	2200      	movs	r2, #0
 800422a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800422e:	687b      	ldr	r3, [r7, #4]
 8004230:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004232:	f003 0310 	and.w	r3, r3, #16
 8004236:	2b00      	cmp	r3, #0
 8004238:	d118      	bne.n	800426c <HAL_ADC_Init+0x70>
 800423a:	687b      	ldr	r3, [r7, #4]
 800423c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800423e:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8004242:	f023 0302 	bic.w	r3, r3, #2
 8004246:	f043 0202 	orr.w	r2, r3, #2
 800424a:	687b      	ldr	r3, [r7, #4]
 800424c:	641a      	str	r2, [r3, #64]	; 0x40
 800424e:	6878      	ldr	r0, [r7, #4]
 8004250:	f000 fa96 	bl	8004780 <ADC_Init>
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	2200      	movs	r2, #0
 8004258:	645a      	str	r2, [r3, #68]	; 0x44
 800425a:	687b      	ldr	r3, [r7, #4]
 800425c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800425e:	f023 0303 	bic.w	r3, r3, #3
 8004262:	f043 0201 	orr.w	r2, r3, #1
 8004266:	687b      	ldr	r3, [r7, #4]
 8004268:	641a      	str	r2, [r3, #64]	; 0x40
 800426a:	e001      	b.n	8004270 <HAL_ADC_Init+0x74>
 800426c:	2301      	movs	r3, #1
 800426e:	73fb      	strb	r3, [r7, #15]
 8004270:	687b      	ldr	r3, [r7, #4]
 8004272:	2200      	movs	r2, #0
 8004274:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004278:	7bfb      	ldrb	r3, [r7, #15]
 800427a:	4618      	mov	r0, r3
 800427c:	3710      	adds	r7, #16
 800427e:	46bd      	mov	sp, r7
 8004280:	bd80      	pop	{r7, pc}
	...

08004284 <HAL_ADC_Start>:
 8004284:	b480      	push	{r7}
 8004286:	b085      	sub	sp, #20
 8004288:	af00      	add	r7, sp, #0
 800428a:	6078      	str	r0, [r7, #4]
 800428c:	2300      	movs	r3, #0
 800428e:	60bb      	str	r3, [r7, #8]
 8004290:	687b      	ldr	r3, [r7, #4]
 8004292:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004296:	2b01      	cmp	r3, #1
 8004298:	d101      	bne.n	800429e <HAL_ADC_Start+0x1a>
 800429a:	2302      	movs	r3, #2
 800429c:	e097      	b.n	80043ce <HAL_ADC_Start+0x14a>
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	2201      	movs	r2, #1
 80042a2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80042a6:	687b      	ldr	r3, [r7, #4]
 80042a8:	681b      	ldr	r3, [r3, #0]
 80042aa:	689b      	ldr	r3, [r3, #8]
 80042ac:	f003 0301 	and.w	r3, r3, #1
 80042b0:	2b01      	cmp	r3, #1
 80042b2:	d018      	beq.n	80042e6 <HAL_ADC_Start+0x62>
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	681b      	ldr	r3, [r3, #0]
 80042b8:	689a      	ldr	r2, [r3, #8]
 80042ba:	687b      	ldr	r3, [r7, #4]
 80042bc:	681b      	ldr	r3, [r3, #0]
 80042be:	f042 0201 	orr.w	r2, r2, #1
 80042c2:	609a      	str	r2, [r3, #8]
 80042c4:	4b45      	ldr	r3, [pc, #276]	; (80043dc <HAL_ADC_Start+0x158>)
 80042c6:	681b      	ldr	r3, [r3, #0]
 80042c8:	4a45      	ldr	r2, [pc, #276]	; (80043e0 <HAL_ADC_Start+0x15c>)
 80042ca:	fba2 2303 	umull	r2, r3, r2, r3
 80042ce:	0c9a      	lsrs	r2, r3, #18
 80042d0:	4613      	mov	r3, r2
 80042d2:	005b      	lsls	r3, r3, #1
 80042d4:	4413      	add	r3, r2
 80042d6:	60bb      	str	r3, [r7, #8]
 80042d8:	e002      	b.n	80042e0 <HAL_ADC_Start+0x5c>
 80042da:	68bb      	ldr	r3, [r7, #8]
 80042dc:	3b01      	subs	r3, #1
 80042de:	60bb      	str	r3, [r7, #8]
 80042e0:	68bb      	ldr	r3, [r7, #8]
 80042e2:	2b00      	cmp	r3, #0
 80042e4:	d1f9      	bne.n	80042da <HAL_ADC_Start+0x56>
 80042e6:	687b      	ldr	r3, [r7, #4]
 80042e8:	681b      	ldr	r3, [r3, #0]
 80042ea:	689b      	ldr	r3, [r3, #8]
 80042ec:	f003 0301 	and.w	r3, r3, #1
 80042f0:	2b01      	cmp	r3, #1
 80042f2:	d15f      	bne.n	80043b4 <HAL_ADC_Start+0x130>
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80042f8:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80042fc:	f023 0301 	bic.w	r3, r3, #1
 8004300:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	641a      	str	r2, [r3, #64]	; 0x40
 8004308:	687b      	ldr	r3, [r7, #4]
 800430a:	681b      	ldr	r3, [r3, #0]
 800430c:	685b      	ldr	r3, [r3, #4]
 800430e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004312:	2b00      	cmp	r3, #0
 8004314:	d007      	beq.n	8004326 <HAL_ADC_Start+0xa2>
 8004316:	687b      	ldr	r3, [r7, #4]
 8004318:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800431a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800431e:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8004322:	687b      	ldr	r3, [r7, #4]
 8004324:	641a      	str	r2, [r3, #64]	; 0x40
 8004326:	687b      	ldr	r3, [r7, #4]
 8004328:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800432a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800432e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004332:	d106      	bne.n	8004342 <HAL_ADC_Start+0xbe>
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004338:	f023 0206 	bic.w	r2, r3, #6
 800433c:	687b      	ldr	r3, [r7, #4]
 800433e:	645a      	str	r2, [r3, #68]	; 0x44
 8004340:	e002      	b.n	8004348 <HAL_ADC_Start+0xc4>
 8004342:	687b      	ldr	r3, [r7, #4]
 8004344:	2200      	movs	r2, #0
 8004346:	645a      	str	r2, [r3, #68]	; 0x44
 8004348:	687b      	ldr	r3, [r7, #4]
 800434a:	2200      	movs	r2, #0
 800434c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004350:	4b24      	ldr	r3, [pc, #144]	; (80043e4 <HAL_ADC_Start+0x160>)
 8004352:	60fb      	str	r3, [r7, #12]
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	681b      	ldr	r3, [r3, #0]
 8004358:	f06f 0222 	mvn.w	r2, #34	; 0x22
 800435c:	601a      	str	r2, [r3, #0]
 800435e:	68fb      	ldr	r3, [r7, #12]
 8004360:	685b      	ldr	r3, [r3, #4]
 8004362:	f003 031f 	and.w	r3, r3, #31
 8004366:	2b00      	cmp	r3, #0
 8004368:	d10f      	bne.n	800438a <HAL_ADC_Start+0x106>
 800436a:	687b      	ldr	r3, [r7, #4]
 800436c:	681b      	ldr	r3, [r3, #0]
 800436e:	689b      	ldr	r3, [r3, #8]
 8004370:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8004374:	2b00      	cmp	r3, #0
 8004376:	d129      	bne.n	80043cc <HAL_ADC_Start+0x148>
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	681b      	ldr	r3, [r3, #0]
 800437c:	689a      	ldr	r2, [r3, #8]
 800437e:	687b      	ldr	r3, [r7, #4]
 8004380:	681b      	ldr	r3, [r3, #0]
 8004382:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8004386:	609a      	str	r2, [r3, #8]
 8004388:	e020      	b.n	80043cc <HAL_ADC_Start+0x148>
 800438a:	687b      	ldr	r3, [r7, #4]
 800438c:	681b      	ldr	r3, [r3, #0]
 800438e:	4a16      	ldr	r2, [pc, #88]	; (80043e8 <HAL_ADC_Start+0x164>)
 8004390:	4293      	cmp	r3, r2
 8004392:	d11b      	bne.n	80043cc <HAL_ADC_Start+0x148>
 8004394:	687b      	ldr	r3, [r7, #4]
 8004396:	681b      	ldr	r3, [r3, #0]
 8004398:	689b      	ldr	r3, [r3, #8]
 800439a:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800439e:	2b00      	cmp	r3, #0
 80043a0:	d114      	bne.n	80043cc <HAL_ADC_Start+0x148>
 80043a2:	687b      	ldr	r3, [r7, #4]
 80043a4:	681b      	ldr	r3, [r3, #0]
 80043a6:	689a      	ldr	r2, [r3, #8]
 80043a8:	687b      	ldr	r3, [r7, #4]
 80043aa:	681b      	ldr	r3, [r3, #0]
 80043ac:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80043b0:	609a      	str	r2, [r3, #8]
 80043b2:	e00b      	b.n	80043cc <HAL_ADC_Start+0x148>
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043b8:	f043 0210 	orr.w	r2, r3, #16
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	641a      	str	r2, [r3, #64]	; 0x40
 80043c0:	687b      	ldr	r3, [r7, #4]
 80043c2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80043c4:	f043 0201 	orr.w	r2, r3, #1
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	645a      	str	r2, [r3, #68]	; 0x44
 80043cc:	2300      	movs	r3, #0
 80043ce:	4618      	mov	r0, r3
 80043d0:	3714      	adds	r7, #20
 80043d2:	46bd      	mov	sp, r7
 80043d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043d8:	4770      	bx	lr
 80043da:	bf00      	nop
 80043dc:	2000000c 	.word	0x2000000c
 80043e0:	431bde83 	.word	0x431bde83
 80043e4:	40012300 	.word	0x40012300
 80043e8:	40012000 	.word	0x40012000

080043ec <HAL_ADC_PollForConversion>:
 80043ec:	b580      	push	{r7, lr}
 80043ee:	b084      	sub	sp, #16
 80043f0:	af00      	add	r7, sp, #0
 80043f2:	6078      	str	r0, [r7, #4]
 80043f4:	6039      	str	r1, [r7, #0]
 80043f6:	2300      	movs	r3, #0
 80043f8:	60fb      	str	r3, [r7, #12]
 80043fa:	687b      	ldr	r3, [r7, #4]
 80043fc:	681b      	ldr	r3, [r3, #0]
 80043fe:	689b      	ldr	r3, [r3, #8]
 8004400:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004404:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004408:	d113      	bne.n	8004432 <HAL_ADC_PollForConversion+0x46>
 800440a:	687b      	ldr	r3, [r7, #4]
 800440c:	681b      	ldr	r3, [r3, #0]
 800440e:	689b      	ldr	r3, [r3, #8]
 8004410:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004414:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8004418:	d10b      	bne.n	8004432 <HAL_ADC_PollForConversion+0x46>
 800441a:	687b      	ldr	r3, [r7, #4]
 800441c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800441e:	f043 0220 	orr.w	r2, r3, #32
 8004422:	687b      	ldr	r3, [r7, #4]
 8004424:	641a      	str	r2, [r3, #64]	; 0x40
 8004426:	687b      	ldr	r3, [r7, #4]
 8004428:	2200      	movs	r2, #0
 800442a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800442e:	2301      	movs	r3, #1
 8004430:	e063      	b.n	80044fa <HAL_ADC_PollForConversion+0x10e>
 8004432:	f7ff fed7 	bl	80041e4 <HAL_GetTick>
 8004436:	60f8      	str	r0, [r7, #12]
 8004438:	e021      	b.n	800447e <HAL_ADC_PollForConversion+0x92>
 800443a:	683b      	ldr	r3, [r7, #0]
 800443c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004440:	d01d      	beq.n	800447e <HAL_ADC_PollForConversion+0x92>
 8004442:	683b      	ldr	r3, [r7, #0]
 8004444:	2b00      	cmp	r3, #0
 8004446:	d007      	beq.n	8004458 <HAL_ADC_PollForConversion+0x6c>
 8004448:	f7ff fecc 	bl	80041e4 <HAL_GetTick>
 800444c:	4602      	mov	r2, r0
 800444e:	68fb      	ldr	r3, [r7, #12]
 8004450:	1ad3      	subs	r3, r2, r3
 8004452:	683a      	ldr	r2, [r7, #0]
 8004454:	429a      	cmp	r2, r3
 8004456:	d212      	bcs.n	800447e <HAL_ADC_PollForConversion+0x92>
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	681b      	ldr	r3, [r3, #0]
 800445c:	681b      	ldr	r3, [r3, #0]
 800445e:	f003 0302 	and.w	r3, r3, #2
 8004462:	2b02      	cmp	r3, #2
 8004464:	d00b      	beq.n	800447e <HAL_ADC_PollForConversion+0x92>
 8004466:	687b      	ldr	r3, [r7, #4]
 8004468:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800446a:	f043 0204 	orr.w	r2, r3, #4
 800446e:	687b      	ldr	r3, [r7, #4]
 8004470:	641a      	str	r2, [r3, #64]	; 0x40
 8004472:	687b      	ldr	r3, [r7, #4]
 8004474:	2200      	movs	r2, #0
 8004476:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800447a:	2303      	movs	r3, #3
 800447c:	e03d      	b.n	80044fa <HAL_ADC_PollForConversion+0x10e>
 800447e:	687b      	ldr	r3, [r7, #4]
 8004480:	681b      	ldr	r3, [r3, #0]
 8004482:	681b      	ldr	r3, [r3, #0]
 8004484:	f003 0302 	and.w	r3, r3, #2
 8004488:	2b02      	cmp	r3, #2
 800448a:	d1d6      	bne.n	800443a <HAL_ADC_PollForConversion+0x4e>
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	681b      	ldr	r3, [r3, #0]
 8004490:	f06f 0212 	mvn.w	r2, #18
 8004494:	601a      	str	r2, [r3, #0]
 8004496:	687b      	ldr	r3, [r7, #4]
 8004498:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800449a:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 800449e:	687b      	ldr	r3, [r7, #4]
 80044a0:	641a      	str	r2, [r3, #64]	; 0x40
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	681b      	ldr	r3, [r3, #0]
 80044a6:	689b      	ldr	r3, [r3, #8]
 80044a8:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80044ac:	2b00      	cmp	r3, #0
 80044ae:	d123      	bne.n	80044f8 <HAL_ADC_PollForConversion+0x10c>
 80044b0:	687b      	ldr	r3, [r7, #4]
 80044b2:	7e1b      	ldrb	r3, [r3, #24]
 80044b4:	2b00      	cmp	r3, #0
 80044b6:	d11f      	bne.n	80044f8 <HAL_ADC_PollForConversion+0x10c>
 80044b8:	687b      	ldr	r3, [r7, #4]
 80044ba:	681b      	ldr	r3, [r3, #0]
 80044bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80044be:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 80044c2:	2b00      	cmp	r3, #0
 80044c4:	d006      	beq.n	80044d4 <HAL_ADC_PollForConversion+0xe8>
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	681b      	ldr	r3, [r3, #0]
 80044ca:	689b      	ldr	r3, [r3, #8]
 80044cc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80044d0:	2b00      	cmp	r3, #0
 80044d2:	d111      	bne.n	80044f8 <HAL_ADC_PollForConversion+0x10c>
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044d8:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80044dc:	687b      	ldr	r3, [r7, #4]
 80044de:	641a      	str	r2, [r3, #64]	; 0x40
 80044e0:	687b      	ldr	r3, [r7, #4]
 80044e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044e4:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80044e8:	2b00      	cmp	r3, #0
 80044ea:	d105      	bne.n	80044f8 <HAL_ADC_PollForConversion+0x10c>
 80044ec:	687b      	ldr	r3, [r7, #4]
 80044ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044f0:	f043 0201 	orr.w	r2, r3, #1
 80044f4:	687b      	ldr	r3, [r7, #4]
 80044f6:	641a      	str	r2, [r3, #64]	; 0x40
 80044f8:	2300      	movs	r3, #0
 80044fa:	4618      	mov	r0, r3
 80044fc:	3710      	adds	r7, #16
 80044fe:	46bd      	mov	sp, r7
 8004500:	bd80      	pop	{r7, pc}

08004502 <HAL_ADC_GetValue>:
 8004502:	b480      	push	{r7}
 8004504:	b083      	sub	sp, #12
 8004506:	af00      	add	r7, sp, #0
 8004508:	6078      	str	r0, [r7, #4]
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	681b      	ldr	r3, [r3, #0]
 800450e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004510:	4618      	mov	r0, r3
 8004512:	370c      	adds	r7, #12
 8004514:	46bd      	mov	sp, r7
 8004516:	f85d 7b04 	ldr.w	r7, [sp], #4
 800451a:	4770      	bx	lr

0800451c <HAL_ADC_ConfigChannel>:
 800451c:	b480      	push	{r7}
 800451e:	b085      	sub	sp, #20
 8004520:	af00      	add	r7, sp, #0
 8004522:	6078      	str	r0, [r7, #4]
 8004524:	6039      	str	r1, [r7, #0]
 8004526:	2300      	movs	r3, #0
 8004528:	60bb      	str	r3, [r7, #8]
 800452a:	687b      	ldr	r3, [r7, #4]
 800452c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004530:	2b01      	cmp	r3, #1
 8004532:	d101      	bne.n	8004538 <HAL_ADC_ConfigChannel+0x1c>
 8004534:	2302      	movs	r3, #2
 8004536:	e113      	b.n	8004760 <HAL_ADC_ConfigChannel+0x244>
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	2201      	movs	r2, #1
 800453c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004540:	683b      	ldr	r3, [r7, #0]
 8004542:	681b      	ldr	r3, [r3, #0]
 8004544:	2b09      	cmp	r3, #9
 8004546:	d925      	bls.n	8004594 <HAL_ADC_ConfigChannel+0x78>
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	68d9      	ldr	r1, [r3, #12]
 800454e:	683b      	ldr	r3, [r7, #0]
 8004550:	681b      	ldr	r3, [r3, #0]
 8004552:	b29b      	uxth	r3, r3
 8004554:	461a      	mov	r2, r3
 8004556:	4613      	mov	r3, r2
 8004558:	005b      	lsls	r3, r3, #1
 800455a:	4413      	add	r3, r2
 800455c:	3b1e      	subs	r3, #30
 800455e:	2207      	movs	r2, #7
 8004560:	fa02 f303 	lsl.w	r3, r2, r3
 8004564:	43da      	mvns	r2, r3
 8004566:	687b      	ldr	r3, [r7, #4]
 8004568:	681b      	ldr	r3, [r3, #0]
 800456a:	400a      	ands	r2, r1
 800456c:	60da      	str	r2, [r3, #12]
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	681b      	ldr	r3, [r3, #0]
 8004572:	68d9      	ldr	r1, [r3, #12]
 8004574:	683b      	ldr	r3, [r7, #0]
 8004576:	689a      	ldr	r2, [r3, #8]
 8004578:	683b      	ldr	r3, [r7, #0]
 800457a:	681b      	ldr	r3, [r3, #0]
 800457c:	b29b      	uxth	r3, r3
 800457e:	4618      	mov	r0, r3
 8004580:	4603      	mov	r3, r0
 8004582:	005b      	lsls	r3, r3, #1
 8004584:	4403      	add	r3, r0
 8004586:	3b1e      	subs	r3, #30
 8004588:	409a      	lsls	r2, r3
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	430a      	orrs	r2, r1
 8004590:	60da      	str	r2, [r3, #12]
 8004592:	e022      	b.n	80045da <HAL_ADC_ConfigChannel+0xbe>
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	681b      	ldr	r3, [r3, #0]
 8004598:	6919      	ldr	r1, [r3, #16]
 800459a:	683b      	ldr	r3, [r7, #0]
 800459c:	681b      	ldr	r3, [r3, #0]
 800459e:	b29b      	uxth	r3, r3
 80045a0:	461a      	mov	r2, r3
 80045a2:	4613      	mov	r3, r2
 80045a4:	005b      	lsls	r3, r3, #1
 80045a6:	4413      	add	r3, r2
 80045a8:	2207      	movs	r2, #7
 80045aa:	fa02 f303 	lsl.w	r3, r2, r3
 80045ae:	43da      	mvns	r2, r3
 80045b0:	687b      	ldr	r3, [r7, #4]
 80045b2:	681b      	ldr	r3, [r3, #0]
 80045b4:	400a      	ands	r2, r1
 80045b6:	611a      	str	r2, [r3, #16]
 80045b8:	687b      	ldr	r3, [r7, #4]
 80045ba:	681b      	ldr	r3, [r3, #0]
 80045bc:	6919      	ldr	r1, [r3, #16]
 80045be:	683b      	ldr	r3, [r7, #0]
 80045c0:	689a      	ldr	r2, [r3, #8]
 80045c2:	683b      	ldr	r3, [r7, #0]
 80045c4:	681b      	ldr	r3, [r3, #0]
 80045c6:	b29b      	uxth	r3, r3
 80045c8:	4618      	mov	r0, r3
 80045ca:	4603      	mov	r3, r0
 80045cc:	005b      	lsls	r3, r3, #1
 80045ce:	4403      	add	r3, r0
 80045d0:	409a      	lsls	r2, r3
 80045d2:	687b      	ldr	r3, [r7, #4]
 80045d4:	681b      	ldr	r3, [r3, #0]
 80045d6:	430a      	orrs	r2, r1
 80045d8:	611a      	str	r2, [r3, #16]
 80045da:	683b      	ldr	r3, [r7, #0]
 80045dc:	685b      	ldr	r3, [r3, #4]
 80045de:	2b06      	cmp	r3, #6
 80045e0:	d824      	bhi.n	800462c <HAL_ADC_ConfigChannel+0x110>
 80045e2:	687b      	ldr	r3, [r7, #4]
 80045e4:	681b      	ldr	r3, [r3, #0]
 80045e6:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80045e8:	683b      	ldr	r3, [r7, #0]
 80045ea:	685a      	ldr	r2, [r3, #4]
 80045ec:	4613      	mov	r3, r2
 80045ee:	009b      	lsls	r3, r3, #2
 80045f0:	4413      	add	r3, r2
 80045f2:	3b05      	subs	r3, #5
 80045f4:	221f      	movs	r2, #31
 80045f6:	fa02 f303 	lsl.w	r3, r2, r3
 80045fa:	43da      	mvns	r2, r3
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	681b      	ldr	r3, [r3, #0]
 8004600:	400a      	ands	r2, r1
 8004602:	635a      	str	r2, [r3, #52]	; 0x34
 8004604:	687b      	ldr	r3, [r7, #4]
 8004606:	681b      	ldr	r3, [r3, #0]
 8004608:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800460a:	683b      	ldr	r3, [r7, #0]
 800460c:	681b      	ldr	r3, [r3, #0]
 800460e:	b29b      	uxth	r3, r3
 8004610:	4618      	mov	r0, r3
 8004612:	683b      	ldr	r3, [r7, #0]
 8004614:	685a      	ldr	r2, [r3, #4]
 8004616:	4613      	mov	r3, r2
 8004618:	009b      	lsls	r3, r3, #2
 800461a:	4413      	add	r3, r2
 800461c:	3b05      	subs	r3, #5
 800461e:	fa00 f203 	lsl.w	r2, r0, r3
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	681b      	ldr	r3, [r3, #0]
 8004626:	430a      	orrs	r2, r1
 8004628:	635a      	str	r2, [r3, #52]	; 0x34
 800462a:	e04c      	b.n	80046c6 <HAL_ADC_ConfigChannel+0x1aa>
 800462c:	683b      	ldr	r3, [r7, #0]
 800462e:	685b      	ldr	r3, [r3, #4]
 8004630:	2b0c      	cmp	r3, #12
 8004632:	d824      	bhi.n	800467e <HAL_ADC_ConfigChannel+0x162>
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	681b      	ldr	r3, [r3, #0]
 8004638:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800463a:	683b      	ldr	r3, [r7, #0]
 800463c:	685a      	ldr	r2, [r3, #4]
 800463e:	4613      	mov	r3, r2
 8004640:	009b      	lsls	r3, r3, #2
 8004642:	4413      	add	r3, r2
 8004644:	3b23      	subs	r3, #35	; 0x23
 8004646:	221f      	movs	r2, #31
 8004648:	fa02 f303 	lsl.w	r3, r2, r3
 800464c:	43da      	mvns	r2, r3
 800464e:	687b      	ldr	r3, [r7, #4]
 8004650:	681b      	ldr	r3, [r3, #0]
 8004652:	400a      	ands	r2, r1
 8004654:	631a      	str	r2, [r3, #48]	; 0x30
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	681b      	ldr	r3, [r3, #0]
 800465a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800465c:	683b      	ldr	r3, [r7, #0]
 800465e:	681b      	ldr	r3, [r3, #0]
 8004660:	b29b      	uxth	r3, r3
 8004662:	4618      	mov	r0, r3
 8004664:	683b      	ldr	r3, [r7, #0]
 8004666:	685a      	ldr	r2, [r3, #4]
 8004668:	4613      	mov	r3, r2
 800466a:	009b      	lsls	r3, r3, #2
 800466c:	4413      	add	r3, r2
 800466e:	3b23      	subs	r3, #35	; 0x23
 8004670:	fa00 f203 	lsl.w	r2, r0, r3
 8004674:	687b      	ldr	r3, [r7, #4]
 8004676:	681b      	ldr	r3, [r3, #0]
 8004678:	430a      	orrs	r2, r1
 800467a:	631a      	str	r2, [r3, #48]	; 0x30
 800467c:	e023      	b.n	80046c6 <HAL_ADC_ConfigChannel+0x1aa>
 800467e:	687b      	ldr	r3, [r7, #4]
 8004680:	681b      	ldr	r3, [r3, #0]
 8004682:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8004684:	683b      	ldr	r3, [r7, #0]
 8004686:	685a      	ldr	r2, [r3, #4]
 8004688:	4613      	mov	r3, r2
 800468a:	009b      	lsls	r3, r3, #2
 800468c:	4413      	add	r3, r2
 800468e:	3b41      	subs	r3, #65	; 0x41
 8004690:	221f      	movs	r2, #31
 8004692:	fa02 f303 	lsl.w	r3, r2, r3
 8004696:	43da      	mvns	r2, r3
 8004698:	687b      	ldr	r3, [r7, #4]
 800469a:	681b      	ldr	r3, [r3, #0]
 800469c:	400a      	ands	r2, r1
 800469e:	62da      	str	r2, [r3, #44]	; 0x2c
 80046a0:	687b      	ldr	r3, [r7, #4]
 80046a2:	681b      	ldr	r3, [r3, #0]
 80046a4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80046a6:	683b      	ldr	r3, [r7, #0]
 80046a8:	681b      	ldr	r3, [r3, #0]
 80046aa:	b29b      	uxth	r3, r3
 80046ac:	4618      	mov	r0, r3
 80046ae:	683b      	ldr	r3, [r7, #0]
 80046b0:	685a      	ldr	r2, [r3, #4]
 80046b2:	4613      	mov	r3, r2
 80046b4:	009b      	lsls	r3, r3, #2
 80046b6:	4413      	add	r3, r2
 80046b8:	3b41      	subs	r3, #65	; 0x41
 80046ba:	fa00 f203 	lsl.w	r2, r0, r3
 80046be:	687b      	ldr	r3, [r7, #4]
 80046c0:	681b      	ldr	r3, [r3, #0]
 80046c2:	430a      	orrs	r2, r1
 80046c4:	62da      	str	r2, [r3, #44]	; 0x2c
 80046c6:	4b29      	ldr	r3, [pc, #164]	; (800476c <HAL_ADC_ConfigChannel+0x250>)
 80046c8:	60fb      	str	r3, [r7, #12]
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	681b      	ldr	r3, [r3, #0]
 80046ce:	4a28      	ldr	r2, [pc, #160]	; (8004770 <HAL_ADC_ConfigChannel+0x254>)
 80046d0:	4293      	cmp	r3, r2
 80046d2:	d10f      	bne.n	80046f4 <HAL_ADC_ConfigChannel+0x1d8>
 80046d4:	683b      	ldr	r3, [r7, #0]
 80046d6:	681b      	ldr	r3, [r3, #0]
 80046d8:	2b12      	cmp	r3, #18
 80046da:	d10b      	bne.n	80046f4 <HAL_ADC_ConfigChannel+0x1d8>
 80046dc:	68fb      	ldr	r3, [r7, #12]
 80046de:	685b      	ldr	r3, [r3, #4]
 80046e0:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 80046e4:	68fb      	ldr	r3, [r7, #12]
 80046e6:	605a      	str	r2, [r3, #4]
 80046e8:	68fb      	ldr	r3, [r7, #12]
 80046ea:	685b      	ldr	r3, [r3, #4]
 80046ec:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 80046f0:	68fb      	ldr	r3, [r7, #12]
 80046f2:	605a      	str	r2, [r3, #4]
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	681b      	ldr	r3, [r3, #0]
 80046f8:	4a1d      	ldr	r2, [pc, #116]	; (8004770 <HAL_ADC_ConfigChannel+0x254>)
 80046fa:	4293      	cmp	r3, r2
 80046fc:	d12b      	bne.n	8004756 <HAL_ADC_ConfigChannel+0x23a>
 80046fe:	683b      	ldr	r3, [r7, #0]
 8004700:	681b      	ldr	r3, [r3, #0]
 8004702:	4a1c      	ldr	r2, [pc, #112]	; (8004774 <HAL_ADC_ConfigChannel+0x258>)
 8004704:	4293      	cmp	r3, r2
 8004706:	d003      	beq.n	8004710 <HAL_ADC_ConfigChannel+0x1f4>
 8004708:	683b      	ldr	r3, [r7, #0]
 800470a:	681b      	ldr	r3, [r3, #0]
 800470c:	2b11      	cmp	r3, #17
 800470e:	d122      	bne.n	8004756 <HAL_ADC_ConfigChannel+0x23a>
 8004710:	68fb      	ldr	r3, [r7, #12]
 8004712:	685b      	ldr	r3, [r3, #4]
 8004714:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8004718:	68fb      	ldr	r3, [r7, #12]
 800471a:	605a      	str	r2, [r3, #4]
 800471c:	68fb      	ldr	r3, [r7, #12]
 800471e:	685b      	ldr	r3, [r3, #4]
 8004720:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8004724:	68fb      	ldr	r3, [r7, #12]
 8004726:	605a      	str	r2, [r3, #4]
 8004728:	683b      	ldr	r3, [r7, #0]
 800472a:	681b      	ldr	r3, [r3, #0]
 800472c:	4a11      	ldr	r2, [pc, #68]	; (8004774 <HAL_ADC_ConfigChannel+0x258>)
 800472e:	4293      	cmp	r3, r2
 8004730:	d111      	bne.n	8004756 <HAL_ADC_ConfigChannel+0x23a>
 8004732:	4b11      	ldr	r3, [pc, #68]	; (8004778 <HAL_ADC_ConfigChannel+0x25c>)
 8004734:	681b      	ldr	r3, [r3, #0]
 8004736:	4a11      	ldr	r2, [pc, #68]	; (800477c <HAL_ADC_ConfigChannel+0x260>)
 8004738:	fba2 2303 	umull	r2, r3, r2, r3
 800473c:	0c9a      	lsrs	r2, r3, #18
 800473e:	4613      	mov	r3, r2
 8004740:	009b      	lsls	r3, r3, #2
 8004742:	4413      	add	r3, r2
 8004744:	005b      	lsls	r3, r3, #1
 8004746:	60bb      	str	r3, [r7, #8]
 8004748:	e002      	b.n	8004750 <HAL_ADC_ConfigChannel+0x234>
 800474a:	68bb      	ldr	r3, [r7, #8]
 800474c:	3b01      	subs	r3, #1
 800474e:	60bb      	str	r3, [r7, #8]
 8004750:	68bb      	ldr	r3, [r7, #8]
 8004752:	2b00      	cmp	r3, #0
 8004754:	d1f9      	bne.n	800474a <HAL_ADC_ConfigChannel+0x22e>
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	2200      	movs	r2, #0
 800475a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800475e:	2300      	movs	r3, #0
 8004760:	4618      	mov	r0, r3
 8004762:	3714      	adds	r7, #20
 8004764:	46bd      	mov	sp, r7
 8004766:	f85d 7b04 	ldr.w	r7, [sp], #4
 800476a:	4770      	bx	lr
 800476c:	40012300 	.word	0x40012300
 8004770:	40012000 	.word	0x40012000
 8004774:	10000012 	.word	0x10000012
 8004778:	2000000c 	.word	0x2000000c
 800477c:	431bde83 	.word	0x431bde83

08004780 <ADC_Init>:
 8004780:	b480      	push	{r7}
 8004782:	b085      	sub	sp, #20
 8004784:	af00      	add	r7, sp, #0
 8004786:	6078      	str	r0, [r7, #4]
 8004788:	4b79      	ldr	r3, [pc, #484]	; (8004970 <ADC_Init+0x1f0>)
 800478a:	60fb      	str	r3, [r7, #12]
 800478c:	68fb      	ldr	r3, [r7, #12]
 800478e:	685b      	ldr	r3, [r3, #4]
 8004790:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8004794:	68fb      	ldr	r3, [r7, #12]
 8004796:	605a      	str	r2, [r3, #4]
 8004798:	68fb      	ldr	r3, [r7, #12]
 800479a:	685a      	ldr	r2, [r3, #4]
 800479c:	687b      	ldr	r3, [r7, #4]
 800479e:	685b      	ldr	r3, [r3, #4]
 80047a0:	431a      	orrs	r2, r3
 80047a2:	68fb      	ldr	r3, [r7, #12]
 80047a4:	605a      	str	r2, [r3, #4]
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	681b      	ldr	r3, [r3, #0]
 80047aa:	685a      	ldr	r2, [r3, #4]
 80047ac:	687b      	ldr	r3, [r7, #4]
 80047ae:	681b      	ldr	r3, [r3, #0]
 80047b0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80047b4:	605a      	str	r2, [r3, #4]
 80047b6:	687b      	ldr	r3, [r7, #4]
 80047b8:	681b      	ldr	r3, [r3, #0]
 80047ba:	6859      	ldr	r1, [r3, #4]
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	691b      	ldr	r3, [r3, #16]
 80047c0:	021a      	lsls	r2, r3, #8
 80047c2:	687b      	ldr	r3, [r7, #4]
 80047c4:	681b      	ldr	r3, [r3, #0]
 80047c6:	430a      	orrs	r2, r1
 80047c8:	605a      	str	r2, [r3, #4]
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	685a      	ldr	r2, [r3, #4]
 80047d0:	687b      	ldr	r3, [r7, #4]
 80047d2:	681b      	ldr	r3, [r3, #0]
 80047d4:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80047d8:	605a      	str	r2, [r3, #4]
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	6859      	ldr	r1, [r3, #4]
 80047e0:	687b      	ldr	r3, [r7, #4]
 80047e2:	689a      	ldr	r2, [r3, #8]
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	681b      	ldr	r3, [r3, #0]
 80047e8:	430a      	orrs	r2, r1
 80047ea:	605a      	str	r2, [r3, #4]
 80047ec:	687b      	ldr	r3, [r7, #4]
 80047ee:	681b      	ldr	r3, [r3, #0]
 80047f0:	689a      	ldr	r2, [r3, #8]
 80047f2:	687b      	ldr	r3, [r7, #4]
 80047f4:	681b      	ldr	r3, [r3, #0]
 80047f6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80047fa:	609a      	str	r2, [r3, #8]
 80047fc:	687b      	ldr	r3, [r7, #4]
 80047fe:	681b      	ldr	r3, [r3, #0]
 8004800:	6899      	ldr	r1, [r3, #8]
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	68da      	ldr	r2, [r3, #12]
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	430a      	orrs	r2, r1
 800480c:	609a      	str	r2, [r3, #8]
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004812:	4a58      	ldr	r2, [pc, #352]	; (8004974 <ADC_Init+0x1f4>)
 8004814:	4293      	cmp	r3, r2
 8004816:	d022      	beq.n	800485e <ADC_Init+0xde>
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	681b      	ldr	r3, [r3, #0]
 800481c:	689a      	ldr	r2, [r3, #8]
 800481e:	687b      	ldr	r3, [r7, #4]
 8004820:	681b      	ldr	r3, [r3, #0]
 8004822:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8004826:	609a      	str	r2, [r3, #8]
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	681b      	ldr	r3, [r3, #0]
 800482c:	6899      	ldr	r1, [r3, #8]
 800482e:	687b      	ldr	r3, [r7, #4]
 8004830:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004832:	687b      	ldr	r3, [r7, #4]
 8004834:	681b      	ldr	r3, [r3, #0]
 8004836:	430a      	orrs	r2, r1
 8004838:	609a      	str	r2, [r3, #8]
 800483a:	687b      	ldr	r3, [r7, #4]
 800483c:	681b      	ldr	r3, [r3, #0]
 800483e:	689a      	ldr	r2, [r3, #8]
 8004840:	687b      	ldr	r3, [r7, #4]
 8004842:	681b      	ldr	r3, [r3, #0]
 8004844:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8004848:	609a      	str	r2, [r3, #8]
 800484a:	687b      	ldr	r3, [r7, #4]
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	6899      	ldr	r1, [r3, #8]
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004854:	687b      	ldr	r3, [r7, #4]
 8004856:	681b      	ldr	r3, [r3, #0]
 8004858:	430a      	orrs	r2, r1
 800485a:	609a      	str	r2, [r3, #8]
 800485c:	e00f      	b.n	800487e <ADC_Init+0xfe>
 800485e:	687b      	ldr	r3, [r7, #4]
 8004860:	681b      	ldr	r3, [r3, #0]
 8004862:	689a      	ldr	r2, [r3, #8]
 8004864:	687b      	ldr	r3, [r7, #4]
 8004866:	681b      	ldr	r3, [r3, #0]
 8004868:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800486c:	609a      	str	r2, [r3, #8]
 800486e:	687b      	ldr	r3, [r7, #4]
 8004870:	681b      	ldr	r3, [r3, #0]
 8004872:	689a      	ldr	r2, [r3, #8]
 8004874:	687b      	ldr	r3, [r7, #4]
 8004876:	681b      	ldr	r3, [r3, #0]
 8004878:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800487c:	609a      	str	r2, [r3, #8]
 800487e:	687b      	ldr	r3, [r7, #4]
 8004880:	681b      	ldr	r3, [r3, #0]
 8004882:	689a      	ldr	r2, [r3, #8]
 8004884:	687b      	ldr	r3, [r7, #4]
 8004886:	681b      	ldr	r3, [r3, #0]
 8004888:	f022 0202 	bic.w	r2, r2, #2
 800488c:	609a      	str	r2, [r3, #8]
 800488e:	687b      	ldr	r3, [r7, #4]
 8004890:	681b      	ldr	r3, [r3, #0]
 8004892:	6899      	ldr	r1, [r3, #8]
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	7e1b      	ldrb	r3, [r3, #24]
 8004898:	005a      	lsls	r2, r3, #1
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	681b      	ldr	r3, [r3, #0]
 800489e:	430a      	orrs	r2, r1
 80048a0:	609a      	str	r2, [r3, #8]
 80048a2:	687b      	ldr	r3, [r7, #4]
 80048a4:	f893 3020 	ldrb.w	r3, [r3, #32]
 80048a8:	2b00      	cmp	r3, #0
 80048aa:	d01b      	beq.n	80048e4 <ADC_Init+0x164>
 80048ac:	687b      	ldr	r3, [r7, #4]
 80048ae:	681b      	ldr	r3, [r3, #0]
 80048b0:	685a      	ldr	r2, [r3, #4]
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	681b      	ldr	r3, [r3, #0]
 80048b6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80048ba:	605a      	str	r2, [r3, #4]
 80048bc:	687b      	ldr	r3, [r7, #4]
 80048be:	681b      	ldr	r3, [r3, #0]
 80048c0:	685a      	ldr	r2, [r3, #4]
 80048c2:	687b      	ldr	r3, [r7, #4]
 80048c4:	681b      	ldr	r3, [r3, #0]
 80048c6:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 80048ca:	605a      	str	r2, [r3, #4]
 80048cc:	687b      	ldr	r3, [r7, #4]
 80048ce:	681b      	ldr	r3, [r3, #0]
 80048d0:	6859      	ldr	r1, [r3, #4]
 80048d2:	687b      	ldr	r3, [r7, #4]
 80048d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048d6:	3b01      	subs	r3, #1
 80048d8:	035a      	lsls	r2, r3, #13
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	681b      	ldr	r3, [r3, #0]
 80048de:	430a      	orrs	r2, r1
 80048e0:	605a      	str	r2, [r3, #4]
 80048e2:	e007      	b.n	80048f4 <ADC_Init+0x174>
 80048e4:	687b      	ldr	r3, [r7, #4]
 80048e6:	681b      	ldr	r3, [r3, #0]
 80048e8:	685a      	ldr	r2, [r3, #4]
 80048ea:	687b      	ldr	r3, [r7, #4]
 80048ec:	681b      	ldr	r3, [r3, #0]
 80048ee:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80048f2:	605a      	str	r2, [r3, #4]
 80048f4:	687b      	ldr	r3, [r7, #4]
 80048f6:	681b      	ldr	r3, [r3, #0]
 80048f8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80048fa:	687b      	ldr	r3, [r7, #4]
 80048fc:	681b      	ldr	r3, [r3, #0]
 80048fe:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8004902:	62da      	str	r2, [r3, #44]	; 0x2c
 8004904:	687b      	ldr	r3, [r7, #4]
 8004906:	681b      	ldr	r3, [r3, #0]
 8004908:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800490a:	687b      	ldr	r3, [r7, #4]
 800490c:	69db      	ldr	r3, [r3, #28]
 800490e:	3b01      	subs	r3, #1
 8004910:	051a      	lsls	r2, r3, #20
 8004912:	687b      	ldr	r3, [r7, #4]
 8004914:	681b      	ldr	r3, [r3, #0]
 8004916:	430a      	orrs	r2, r1
 8004918:	62da      	str	r2, [r3, #44]	; 0x2c
 800491a:	687b      	ldr	r3, [r7, #4]
 800491c:	681b      	ldr	r3, [r3, #0]
 800491e:	689a      	ldr	r2, [r3, #8]
 8004920:	687b      	ldr	r3, [r7, #4]
 8004922:	681b      	ldr	r3, [r3, #0]
 8004924:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004928:	609a      	str	r2, [r3, #8]
 800492a:	687b      	ldr	r3, [r7, #4]
 800492c:	681b      	ldr	r3, [r3, #0]
 800492e:	6899      	ldr	r1, [r3, #8]
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8004936:	025a      	lsls	r2, r3, #9
 8004938:	687b      	ldr	r3, [r7, #4]
 800493a:	681b      	ldr	r3, [r3, #0]
 800493c:	430a      	orrs	r2, r1
 800493e:	609a      	str	r2, [r3, #8]
 8004940:	687b      	ldr	r3, [r7, #4]
 8004942:	681b      	ldr	r3, [r3, #0]
 8004944:	689a      	ldr	r2, [r3, #8]
 8004946:	687b      	ldr	r3, [r7, #4]
 8004948:	681b      	ldr	r3, [r3, #0]
 800494a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800494e:	609a      	str	r2, [r3, #8]
 8004950:	687b      	ldr	r3, [r7, #4]
 8004952:	681b      	ldr	r3, [r3, #0]
 8004954:	6899      	ldr	r1, [r3, #8]
 8004956:	687b      	ldr	r3, [r7, #4]
 8004958:	695b      	ldr	r3, [r3, #20]
 800495a:	029a      	lsls	r2, r3, #10
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	681b      	ldr	r3, [r3, #0]
 8004960:	430a      	orrs	r2, r1
 8004962:	609a      	str	r2, [r3, #8]
 8004964:	bf00      	nop
 8004966:	3714      	adds	r7, #20
 8004968:	46bd      	mov	sp, r7
 800496a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800496e:	4770      	bx	lr
 8004970:	40012300 	.word	0x40012300
 8004974:	0f000001 	.word	0x0f000001

08004978 <__NVIC_SetPriorityGrouping>:
 8004978:	b480      	push	{r7}
 800497a:	b085      	sub	sp, #20
 800497c:	af00      	add	r7, sp, #0
 800497e:	6078      	str	r0, [r7, #4]
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	f003 0307 	and.w	r3, r3, #7
 8004986:	60fb      	str	r3, [r7, #12]
 8004988:	4b0c      	ldr	r3, [pc, #48]	; (80049bc <__NVIC_SetPriorityGrouping+0x44>)
 800498a:	68db      	ldr	r3, [r3, #12]
 800498c:	60bb      	str	r3, [r7, #8]
 800498e:	68ba      	ldr	r2, [r7, #8]
 8004990:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8004994:	4013      	ands	r3, r2
 8004996:	60bb      	str	r3, [r7, #8]
 8004998:	68fb      	ldr	r3, [r7, #12]
 800499a:	021a      	lsls	r2, r3, #8
 800499c:	68bb      	ldr	r3, [r7, #8]
 800499e:	4313      	orrs	r3, r2
 80049a0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80049a4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80049a8:	60bb      	str	r3, [r7, #8]
 80049aa:	4a04      	ldr	r2, [pc, #16]	; (80049bc <__NVIC_SetPriorityGrouping+0x44>)
 80049ac:	68bb      	ldr	r3, [r7, #8]
 80049ae:	60d3      	str	r3, [r2, #12]
 80049b0:	bf00      	nop
 80049b2:	3714      	adds	r7, #20
 80049b4:	46bd      	mov	sp, r7
 80049b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049ba:	4770      	bx	lr
 80049bc:	e000ed00 	.word	0xe000ed00

080049c0 <__NVIC_GetPriorityGrouping>:
 80049c0:	b480      	push	{r7}
 80049c2:	af00      	add	r7, sp, #0
 80049c4:	4b04      	ldr	r3, [pc, #16]	; (80049d8 <__NVIC_GetPriorityGrouping+0x18>)
 80049c6:	68db      	ldr	r3, [r3, #12]
 80049c8:	0a1b      	lsrs	r3, r3, #8
 80049ca:	f003 0307 	and.w	r3, r3, #7
 80049ce:	4618      	mov	r0, r3
 80049d0:	46bd      	mov	sp, r7
 80049d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049d6:	4770      	bx	lr
 80049d8:	e000ed00 	.word	0xe000ed00

080049dc <__NVIC_EnableIRQ>:
 80049dc:	b480      	push	{r7}
 80049de:	b083      	sub	sp, #12
 80049e0:	af00      	add	r7, sp, #0
 80049e2:	4603      	mov	r3, r0
 80049e4:	71fb      	strb	r3, [r7, #7]
 80049e6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80049ea:	2b00      	cmp	r3, #0
 80049ec:	db0b      	blt.n	8004a06 <__NVIC_EnableIRQ+0x2a>
 80049ee:	79fb      	ldrb	r3, [r7, #7]
 80049f0:	f003 021f 	and.w	r2, r3, #31
 80049f4:	4907      	ldr	r1, [pc, #28]	; (8004a14 <__NVIC_EnableIRQ+0x38>)
 80049f6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80049fa:	095b      	lsrs	r3, r3, #5
 80049fc:	2001      	movs	r0, #1
 80049fe:	fa00 f202 	lsl.w	r2, r0, r2
 8004a02:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004a06:	bf00      	nop
 8004a08:	370c      	adds	r7, #12
 8004a0a:	46bd      	mov	sp, r7
 8004a0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a10:	4770      	bx	lr
 8004a12:	bf00      	nop
 8004a14:	e000e100 	.word	0xe000e100

08004a18 <__NVIC_SetPriority>:
 8004a18:	b480      	push	{r7}
 8004a1a:	b083      	sub	sp, #12
 8004a1c:	af00      	add	r7, sp, #0
 8004a1e:	4603      	mov	r3, r0
 8004a20:	6039      	str	r1, [r7, #0]
 8004a22:	71fb      	strb	r3, [r7, #7]
 8004a24:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004a28:	2b00      	cmp	r3, #0
 8004a2a:	db0a      	blt.n	8004a42 <__NVIC_SetPriority+0x2a>
 8004a2c:	683b      	ldr	r3, [r7, #0]
 8004a2e:	b2da      	uxtb	r2, r3
 8004a30:	490c      	ldr	r1, [pc, #48]	; (8004a64 <__NVIC_SetPriority+0x4c>)
 8004a32:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004a36:	0112      	lsls	r2, r2, #4
 8004a38:	b2d2      	uxtb	r2, r2
 8004a3a:	440b      	add	r3, r1
 8004a3c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8004a40:	e00a      	b.n	8004a58 <__NVIC_SetPriority+0x40>
 8004a42:	683b      	ldr	r3, [r7, #0]
 8004a44:	b2da      	uxtb	r2, r3
 8004a46:	4908      	ldr	r1, [pc, #32]	; (8004a68 <__NVIC_SetPriority+0x50>)
 8004a48:	79fb      	ldrb	r3, [r7, #7]
 8004a4a:	f003 030f 	and.w	r3, r3, #15
 8004a4e:	3b04      	subs	r3, #4
 8004a50:	0112      	lsls	r2, r2, #4
 8004a52:	b2d2      	uxtb	r2, r2
 8004a54:	440b      	add	r3, r1
 8004a56:	761a      	strb	r2, [r3, #24]
 8004a58:	bf00      	nop
 8004a5a:	370c      	adds	r7, #12
 8004a5c:	46bd      	mov	sp, r7
 8004a5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a62:	4770      	bx	lr
 8004a64:	e000e100 	.word	0xe000e100
 8004a68:	e000ed00 	.word	0xe000ed00

08004a6c <NVIC_EncodePriority>:
 8004a6c:	b480      	push	{r7}
 8004a6e:	b089      	sub	sp, #36	; 0x24
 8004a70:	af00      	add	r7, sp, #0
 8004a72:	60f8      	str	r0, [r7, #12]
 8004a74:	60b9      	str	r1, [r7, #8]
 8004a76:	607a      	str	r2, [r7, #4]
 8004a78:	68fb      	ldr	r3, [r7, #12]
 8004a7a:	f003 0307 	and.w	r3, r3, #7
 8004a7e:	61fb      	str	r3, [r7, #28]
 8004a80:	69fb      	ldr	r3, [r7, #28]
 8004a82:	f1c3 0307 	rsb	r3, r3, #7
 8004a86:	2b04      	cmp	r3, #4
 8004a88:	bf28      	it	cs
 8004a8a:	2304      	movcs	r3, #4
 8004a8c:	61bb      	str	r3, [r7, #24]
 8004a8e:	69fb      	ldr	r3, [r7, #28]
 8004a90:	3304      	adds	r3, #4
 8004a92:	2b06      	cmp	r3, #6
 8004a94:	d902      	bls.n	8004a9c <NVIC_EncodePriority+0x30>
 8004a96:	69fb      	ldr	r3, [r7, #28]
 8004a98:	3b03      	subs	r3, #3
 8004a9a:	e000      	b.n	8004a9e <NVIC_EncodePriority+0x32>
 8004a9c:	2300      	movs	r3, #0
 8004a9e:	617b      	str	r3, [r7, #20]
 8004aa0:	f04f 32ff 	mov.w	r2, #4294967295
 8004aa4:	69bb      	ldr	r3, [r7, #24]
 8004aa6:	fa02 f303 	lsl.w	r3, r2, r3
 8004aaa:	43da      	mvns	r2, r3
 8004aac:	68bb      	ldr	r3, [r7, #8]
 8004aae:	401a      	ands	r2, r3
 8004ab0:	697b      	ldr	r3, [r7, #20]
 8004ab2:	409a      	lsls	r2, r3
 8004ab4:	f04f 31ff 	mov.w	r1, #4294967295
 8004ab8:	697b      	ldr	r3, [r7, #20]
 8004aba:	fa01 f303 	lsl.w	r3, r1, r3
 8004abe:	43d9      	mvns	r1, r3
 8004ac0:	687b      	ldr	r3, [r7, #4]
 8004ac2:	400b      	ands	r3, r1
 8004ac4:	4313      	orrs	r3, r2
 8004ac6:	4618      	mov	r0, r3
 8004ac8:	3724      	adds	r7, #36	; 0x24
 8004aca:	46bd      	mov	sp, r7
 8004acc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ad0:	4770      	bx	lr
	...

08004ad4 <__NVIC_SystemReset>:
 8004ad4:	b480      	push	{r7}
 8004ad6:	af00      	add	r7, sp, #0
 8004ad8:	f3bf 8f4f 	dsb	sy
 8004adc:	bf00      	nop
 8004ade:	4b06      	ldr	r3, [pc, #24]	; (8004af8 <__NVIC_SystemReset+0x24>)
 8004ae0:	68db      	ldr	r3, [r3, #12]
 8004ae2:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8004ae6:	4904      	ldr	r1, [pc, #16]	; (8004af8 <__NVIC_SystemReset+0x24>)
 8004ae8:	4b04      	ldr	r3, [pc, #16]	; (8004afc <__NVIC_SystemReset+0x28>)
 8004aea:	4313      	orrs	r3, r2
 8004aec:	60cb      	str	r3, [r1, #12]
 8004aee:	f3bf 8f4f 	dsb	sy
 8004af2:	bf00      	nop
 8004af4:	bf00      	nop
 8004af6:	e7fd      	b.n	8004af4 <__NVIC_SystemReset+0x20>
 8004af8:	e000ed00 	.word	0xe000ed00
 8004afc:	05fa0004 	.word	0x05fa0004

08004b00 <SysTick_Config>:
 8004b00:	b580      	push	{r7, lr}
 8004b02:	b082      	sub	sp, #8
 8004b04:	af00      	add	r7, sp, #0
 8004b06:	6078      	str	r0, [r7, #4]
 8004b08:	687b      	ldr	r3, [r7, #4]
 8004b0a:	3b01      	subs	r3, #1
 8004b0c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004b10:	d301      	bcc.n	8004b16 <SysTick_Config+0x16>
 8004b12:	2301      	movs	r3, #1
 8004b14:	e00f      	b.n	8004b36 <SysTick_Config+0x36>
 8004b16:	4a0a      	ldr	r2, [pc, #40]	; (8004b40 <SysTick_Config+0x40>)
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	3b01      	subs	r3, #1
 8004b1c:	6053      	str	r3, [r2, #4]
 8004b1e:	210f      	movs	r1, #15
 8004b20:	f04f 30ff 	mov.w	r0, #4294967295
 8004b24:	f7ff ff78 	bl	8004a18 <__NVIC_SetPriority>
 8004b28:	4b05      	ldr	r3, [pc, #20]	; (8004b40 <SysTick_Config+0x40>)
 8004b2a:	2200      	movs	r2, #0
 8004b2c:	609a      	str	r2, [r3, #8]
 8004b2e:	4b04      	ldr	r3, [pc, #16]	; (8004b40 <SysTick_Config+0x40>)
 8004b30:	2207      	movs	r2, #7
 8004b32:	601a      	str	r2, [r3, #0]
 8004b34:	2300      	movs	r3, #0
 8004b36:	4618      	mov	r0, r3
 8004b38:	3708      	adds	r7, #8
 8004b3a:	46bd      	mov	sp, r7
 8004b3c:	bd80      	pop	{r7, pc}
 8004b3e:	bf00      	nop
 8004b40:	e000e010 	.word	0xe000e010

08004b44 <HAL_NVIC_SetPriorityGrouping>:
 8004b44:	b580      	push	{r7, lr}
 8004b46:	b082      	sub	sp, #8
 8004b48:	af00      	add	r7, sp, #0
 8004b4a:	6078      	str	r0, [r7, #4]
 8004b4c:	6878      	ldr	r0, [r7, #4]
 8004b4e:	f7ff ff13 	bl	8004978 <__NVIC_SetPriorityGrouping>
 8004b52:	bf00      	nop
 8004b54:	3708      	adds	r7, #8
 8004b56:	46bd      	mov	sp, r7
 8004b58:	bd80      	pop	{r7, pc}

08004b5a <HAL_NVIC_SetPriority>:
 8004b5a:	b580      	push	{r7, lr}
 8004b5c:	b086      	sub	sp, #24
 8004b5e:	af00      	add	r7, sp, #0
 8004b60:	4603      	mov	r3, r0
 8004b62:	60b9      	str	r1, [r7, #8]
 8004b64:	607a      	str	r2, [r7, #4]
 8004b66:	73fb      	strb	r3, [r7, #15]
 8004b68:	2300      	movs	r3, #0
 8004b6a:	617b      	str	r3, [r7, #20]
 8004b6c:	f7ff ff28 	bl	80049c0 <__NVIC_GetPriorityGrouping>
 8004b70:	6178      	str	r0, [r7, #20]
 8004b72:	687a      	ldr	r2, [r7, #4]
 8004b74:	68b9      	ldr	r1, [r7, #8]
 8004b76:	6978      	ldr	r0, [r7, #20]
 8004b78:	f7ff ff78 	bl	8004a6c <NVIC_EncodePriority>
 8004b7c:	4602      	mov	r2, r0
 8004b7e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004b82:	4611      	mov	r1, r2
 8004b84:	4618      	mov	r0, r3
 8004b86:	f7ff ff47 	bl	8004a18 <__NVIC_SetPriority>
 8004b8a:	bf00      	nop
 8004b8c:	3718      	adds	r7, #24
 8004b8e:	46bd      	mov	sp, r7
 8004b90:	bd80      	pop	{r7, pc}

08004b92 <HAL_NVIC_EnableIRQ>:
 8004b92:	b580      	push	{r7, lr}
 8004b94:	b082      	sub	sp, #8
 8004b96:	af00      	add	r7, sp, #0
 8004b98:	4603      	mov	r3, r0
 8004b9a:	71fb      	strb	r3, [r7, #7]
 8004b9c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004ba0:	4618      	mov	r0, r3
 8004ba2:	f7ff ff1b 	bl	80049dc <__NVIC_EnableIRQ>
 8004ba6:	bf00      	nop
 8004ba8:	3708      	adds	r7, #8
 8004baa:	46bd      	mov	sp, r7
 8004bac:	bd80      	pop	{r7, pc}

08004bae <HAL_NVIC_SystemReset>:
 8004bae:	b580      	push	{r7, lr}
 8004bb0:	af00      	add	r7, sp, #0
 8004bb2:	f7ff ff8f 	bl	8004ad4 <__NVIC_SystemReset>

08004bb6 <HAL_SYSTICK_Config>:
 8004bb6:	b580      	push	{r7, lr}
 8004bb8:	b082      	sub	sp, #8
 8004bba:	af00      	add	r7, sp, #0
 8004bbc:	6078      	str	r0, [r7, #4]
 8004bbe:	6878      	ldr	r0, [r7, #4]
 8004bc0:	f7ff ff9e 	bl	8004b00 <SysTick_Config>
 8004bc4:	4603      	mov	r3, r0
 8004bc6:	4618      	mov	r0, r3
 8004bc8:	3708      	adds	r7, #8
 8004bca:	46bd      	mov	sp, r7
 8004bcc:	bd80      	pop	{r7, pc}
	...

08004bd0 <HAL_DMA_Init>:
 8004bd0:	b580      	push	{r7, lr}
 8004bd2:	b086      	sub	sp, #24
 8004bd4:	af00      	add	r7, sp, #0
 8004bd6:	6078      	str	r0, [r7, #4]
 8004bd8:	2300      	movs	r3, #0
 8004bda:	617b      	str	r3, [r7, #20]
 8004bdc:	f7ff fb02 	bl	80041e4 <HAL_GetTick>
 8004be0:	6138      	str	r0, [r7, #16]
 8004be2:	687b      	ldr	r3, [r7, #4]
 8004be4:	2b00      	cmp	r3, #0
 8004be6:	d101      	bne.n	8004bec <HAL_DMA_Init+0x1c>
 8004be8:	2301      	movs	r3, #1
 8004bea:	e099      	b.n	8004d20 <HAL_DMA_Init+0x150>
 8004bec:	687b      	ldr	r3, [r7, #4]
 8004bee:	2202      	movs	r2, #2
 8004bf0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004bf4:	687b      	ldr	r3, [r7, #4]
 8004bf6:	2200      	movs	r2, #0
 8004bf8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004bfc:	687b      	ldr	r3, [r7, #4]
 8004bfe:	681b      	ldr	r3, [r3, #0]
 8004c00:	681a      	ldr	r2, [r3, #0]
 8004c02:	687b      	ldr	r3, [r7, #4]
 8004c04:	681b      	ldr	r3, [r3, #0]
 8004c06:	f022 0201 	bic.w	r2, r2, #1
 8004c0a:	601a      	str	r2, [r3, #0]
 8004c0c:	e00f      	b.n	8004c2e <HAL_DMA_Init+0x5e>
 8004c0e:	f7ff fae9 	bl	80041e4 <HAL_GetTick>
 8004c12:	4602      	mov	r2, r0
 8004c14:	693b      	ldr	r3, [r7, #16]
 8004c16:	1ad3      	subs	r3, r2, r3
 8004c18:	2b05      	cmp	r3, #5
 8004c1a:	d908      	bls.n	8004c2e <HAL_DMA_Init+0x5e>
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	2220      	movs	r2, #32
 8004c20:	655a      	str	r2, [r3, #84]	; 0x54
 8004c22:	687b      	ldr	r3, [r7, #4]
 8004c24:	2203      	movs	r2, #3
 8004c26:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004c2a:	2303      	movs	r3, #3
 8004c2c:	e078      	b.n	8004d20 <HAL_DMA_Init+0x150>
 8004c2e:	687b      	ldr	r3, [r7, #4]
 8004c30:	681b      	ldr	r3, [r3, #0]
 8004c32:	681b      	ldr	r3, [r3, #0]
 8004c34:	f003 0301 	and.w	r3, r3, #1
 8004c38:	2b00      	cmp	r3, #0
 8004c3a:	d1e8      	bne.n	8004c0e <HAL_DMA_Init+0x3e>
 8004c3c:	687b      	ldr	r3, [r7, #4]
 8004c3e:	681b      	ldr	r3, [r3, #0]
 8004c40:	681b      	ldr	r3, [r3, #0]
 8004c42:	617b      	str	r3, [r7, #20]
 8004c44:	697a      	ldr	r2, [r7, #20]
 8004c46:	4b38      	ldr	r3, [pc, #224]	; (8004d28 <HAL_DMA_Init+0x158>)
 8004c48:	4013      	ands	r3, r2
 8004c4a:	617b      	str	r3, [r7, #20]
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	685a      	ldr	r2, [r3, #4]
 8004c50:	687b      	ldr	r3, [r7, #4]
 8004c52:	689b      	ldr	r3, [r3, #8]
 8004c54:	431a      	orrs	r2, r3
 8004c56:	687b      	ldr	r3, [r7, #4]
 8004c58:	68db      	ldr	r3, [r3, #12]
 8004c5a:	431a      	orrs	r2, r3
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	691b      	ldr	r3, [r3, #16]
 8004c60:	431a      	orrs	r2, r3
 8004c62:	687b      	ldr	r3, [r7, #4]
 8004c64:	695b      	ldr	r3, [r3, #20]
 8004c66:	431a      	orrs	r2, r3
 8004c68:	687b      	ldr	r3, [r7, #4]
 8004c6a:	699b      	ldr	r3, [r3, #24]
 8004c6c:	431a      	orrs	r2, r3
 8004c6e:	687b      	ldr	r3, [r7, #4]
 8004c70:	69db      	ldr	r3, [r3, #28]
 8004c72:	431a      	orrs	r2, r3
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	6a1b      	ldr	r3, [r3, #32]
 8004c78:	4313      	orrs	r3, r2
 8004c7a:	697a      	ldr	r2, [r7, #20]
 8004c7c:	4313      	orrs	r3, r2
 8004c7e:	617b      	str	r3, [r7, #20]
 8004c80:	687b      	ldr	r3, [r7, #4]
 8004c82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c84:	2b04      	cmp	r3, #4
 8004c86:	d107      	bne.n	8004c98 <HAL_DMA_Init+0xc8>
 8004c88:	687b      	ldr	r3, [r7, #4]
 8004c8a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004c8c:	687b      	ldr	r3, [r7, #4]
 8004c8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c90:	4313      	orrs	r3, r2
 8004c92:	697a      	ldr	r2, [r7, #20]
 8004c94:	4313      	orrs	r3, r2
 8004c96:	617b      	str	r3, [r7, #20]
 8004c98:	687b      	ldr	r3, [r7, #4]
 8004c9a:	681b      	ldr	r3, [r3, #0]
 8004c9c:	697a      	ldr	r2, [r7, #20]
 8004c9e:	601a      	str	r2, [r3, #0]
 8004ca0:	687b      	ldr	r3, [r7, #4]
 8004ca2:	681b      	ldr	r3, [r3, #0]
 8004ca4:	695b      	ldr	r3, [r3, #20]
 8004ca6:	617b      	str	r3, [r7, #20]
 8004ca8:	697b      	ldr	r3, [r7, #20]
 8004caa:	f023 0307 	bic.w	r3, r3, #7
 8004cae:	617b      	str	r3, [r7, #20]
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cb4:	697a      	ldr	r2, [r7, #20]
 8004cb6:	4313      	orrs	r3, r2
 8004cb8:	617b      	str	r3, [r7, #20]
 8004cba:	687b      	ldr	r3, [r7, #4]
 8004cbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cbe:	2b04      	cmp	r3, #4
 8004cc0:	d117      	bne.n	8004cf2 <HAL_DMA_Init+0x122>
 8004cc2:	687b      	ldr	r3, [r7, #4]
 8004cc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004cc6:	697a      	ldr	r2, [r7, #20]
 8004cc8:	4313      	orrs	r3, r2
 8004cca:	617b      	str	r3, [r7, #20]
 8004ccc:	687b      	ldr	r3, [r7, #4]
 8004cce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004cd0:	2b00      	cmp	r3, #0
 8004cd2:	d00e      	beq.n	8004cf2 <HAL_DMA_Init+0x122>
 8004cd4:	6878      	ldr	r0, [r7, #4]
 8004cd6:	f000 fadf 	bl	8005298 <DMA_CheckFifoParam>
 8004cda:	4603      	mov	r3, r0
 8004cdc:	2b00      	cmp	r3, #0
 8004cde:	d008      	beq.n	8004cf2 <HAL_DMA_Init+0x122>
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	2240      	movs	r2, #64	; 0x40
 8004ce4:	655a      	str	r2, [r3, #84]	; 0x54
 8004ce6:	687b      	ldr	r3, [r7, #4]
 8004ce8:	2201      	movs	r2, #1
 8004cea:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004cee:	2301      	movs	r3, #1
 8004cf0:	e016      	b.n	8004d20 <HAL_DMA_Init+0x150>
 8004cf2:	687b      	ldr	r3, [r7, #4]
 8004cf4:	681b      	ldr	r3, [r3, #0]
 8004cf6:	697a      	ldr	r2, [r7, #20]
 8004cf8:	615a      	str	r2, [r3, #20]
 8004cfa:	6878      	ldr	r0, [r7, #4]
 8004cfc:	f000 fa96 	bl	800522c <DMA_CalcBaseAndBitshift>
 8004d00:	4603      	mov	r3, r0
 8004d02:	60fb      	str	r3, [r7, #12]
 8004d04:	687b      	ldr	r3, [r7, #4]
 8004d06:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004d08:	223f      	movs	r2, #63	; 0x3f
 8004d0a:	409a      	lsls	r2, r3
 8004d0c:	68fb      	ldr	r3, [r7, #12]
 8004d0e:	609a      	str	r2, [r3, #8]
 8004d10:	687b      	ldr	r3, [r7, #4]
 8004d12:	2200      	movs	r2, #0
 8004d14:	655a      	str	r2, [r3, #84]	; 0x54
 8004d16:	687b      	ldr	r3, [r7, #4]
 8004d18:	2201      	movs	r2, #1
 8004d1a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004d1e:	2300      	movs	r3, #0
 8004d20:	4618      	mov	r0, r3
 8004d22:	3718      	adds	r7, #24
 8004d24:	46bd      	mov	sp, r7
 8004d26:	bd80      	pop	{r7, pc}
 8004d28:	f010803f 	.word	0xf010803f

08004d2c <HAL_DMA_Start_IT>:
 8004d2c:	b580      	push	{r7, lr}
 8004d2e:	b086      	sub	sp, #24
 8004d30:	af00      	add	r7, sp, #0
 8004d32:	60f8      	str	r0, [r7, #12]
 8004d34:	60b9      	str	r1, [r7, #8]
 8004d36:	607a      	str	r2, [r7, #4]
 8004d38:	603b      	str	r3, [r7, #0]
 8004d3a:	2300      	movs	r3, #0
 8004d3c:	75fb      	strb	r3, [r7, #23]
 8004d3e:	68fb      	ldr	r3, [r7, #12]
 8004d40:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004d42:	613b      	str	r3, [r7, #16]
 8004d44:	68fb      	ldr	r3, [r7, #12]
 8004d46:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8004d4a:	2b01      	cmp	r3, #1
 8004d4c:	d101      	bne.n	8004d52 <HAL_DMA_Start_IT+0x26>
 8004d4e:	2302      	movs	r3, #2
 8004d50:	e040      	b.n	8004dd4 <HAL_DMA_Start_IT+0xa8>
 8004d52:	68fb      	ldr	r3, [r7, #12]
 8004d54:	2201      	movs	r2, #1
 8004d56:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004d5a:	68fb      	ldr	r3, [r7, #12]
 8004d5c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004d60:	b2db      	uxtb	r3, r3
 8004d62:	2b01      	cmp	r3, #1
 8004d64:	d12f      	bne.n	8004dc6 <HAL_DMA_Start_IT+0x9a>
 8004d66:	68fb      	ldr	r3, [r7, #12]
 8004d68:	2202      	movs	r2, #2
 8004d6a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004d6e:	68fb      	ldr	r3, [r7, #12]
 8004d70:	2200      	movs	r2, #0
 8004d72:	655a      	str	r2, [r3, #84]	; 0x54
 8004d74:	683b      	ldr	r3, [r7, #0]
 8004d76:	687a      	ldr	r2, [r7, #4]
 8004d78:	68b9      	ldr	r1, [r7, #8]
 8004d7a:	68f8      	ldr	r0, [r7, #12]
 8004d7c:	f000 fa28 	bl	80051d0 <DMA_SetConfig>
 8004d80:	68fb      	ldr	r3, [r7, #12]
 8004d82:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004d84:	223f      	movs	r2, #63	; 0x3f
 8004d86:	409a      	lsls	r2, r3
 8004d88:	693b      	ldr	r3, [r7, #16]
 8004d8a:	609a      	str	r2, [r3, #8]
 8004d8c:	68fb      	ldr	r3, [r7, #12]
 8004d8e:	681b      	ldr	r3, [r3, #0]
 8004d90:	681a      	ldr	r2, [r3, #0]
 8004d92:	68fb      	ldr	r3, [r7, #12]
 8004d94:	681b      	ldr	r3, [r3, #0]
 8004d96:	f042 0216 	orr.w	r2, r2, #22
 8004d9a:	601a      	str	r2, [r3, #0]
 8004d9c:	68fb      	ldr	r3, [r7, #12]
 8004d9e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004da0:	2b00      	cmp	r3, #0
 8004da2:	d007      	beq.n	8004db4 <HAL_DMA_Start_IT+0x88>
 8004da4:	68fb      	ldr	r3, [r7, #12]
 8004da6:	681b      	ldr	r3, [r3, #0]
 8004da8:	681a      	ldr	r2, [r3, #0]
 8004daa:	68fb      	ldr	r3, [r7, #12]
 8004dac:	681b      	ldr	r3, [r3, #0]
 8004dae:	f042 0208 	orr.w	r2, r2, #8
 8004db2:	601a      	str	r2, [r3, #0]
 8004db4:	68fb      	ldr	r3, [r7, #12]
 8004db6:	681b      	ldr	r3, [r3, #0]
 8004db8:	681a      	ldr	r2, [r3, #0]
 8004dba:	68fb      	ldr	r3, [r7, #12]
 8004dbc:	681b      	ldr	r3, [r3, #0]
 8004dbe:	f042 0201 	orr.w	r2, r2, #1
 8004dc2:	601a      	str	r2, [r3, #0]
 8004dc4:	e005      	b.n	8004dd2 <HAL_DMA_Start_IT+0xa6>
 8004dc6:	68fb      	ldr	r3, [r7, #12]
 8004dc8:	2200      	movs	r2, #0
 8004dca:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004dce:	2302      	movs	r3, #2
 8004dd0:	75fb      	strb	r3, [r7, #23]
 8004dd2:	7dfb      	ldrb	r3, [r7, #23]
 8004dd4:	4618      	mov	r0, r3
 8004dd6:	3718      	adds	r7, #24
 8004dd8:	46bd      	mov	sp, r7
 8004dda:	bd80      	pop	{r7, pc}

08004ddc <HAL_DMA_Abort>:
 8004ddc:	b580      	push	{r7, lr}
 8004dde:	b084      	sub	sp, #16
 8004de0:	af00      	add	r7, sp, #0
 8004de2:	6078      	str	r0, [r7, #4]
 8004de4:	687b      	ldr	r3, [r7, #4]
 8004de6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004de8:	60fb      	str	r3, [r7, #12]
 8004dea:	f7ff f9fb 	bl	80041e4 <HAL_GetTick>
 8004dee:	60b8      	str	r0, [r7, #8]
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004df6:	b2db      	uxtb	r3, r3
 8004df8:	2b02      	cmp	r3, #2
 8004dfa:	d008      	beq.n	8004e0e <HAL_DMA_Abort+0x32>
 8004dfc:	687b      	ldr	r3, [r7, #4]
 8004dfe:	2280      	movs	r2, #128	; 0x80
 8004e00:	655a      	str	r2, [r3, #84]	; 0x54
 8004e02:	687b      	ldr	r3, [r7, #4]
 8004e04:	2200      	movs	r2, #0
 8004e06:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004e0a:	2301      	movs	r3, #1
 8004e0c:	e052      	b.n	8004eb4 <HAL_DMA_Abort+0xd8>
 8004e0e:	687b      	ldr	r3, [r7, #4]
 8004e10:	681b      	ldr	r3, [r3, #0]
 8004e12:	681a      	ldr	r2, [r3, #0]
 8004e14:	687b      	ldr	r3, [r7, #4]
 8004e16:	681b      	ldr	r3, [r3, #0]
 8004e18:	f022 0216 	bic.w	r2, r2, #22
 8004e1c:	601a      	str	r2, [r3, #0]
 8004e1e:	687b      	ldr	r3, [r7, #4]
 8004e20:	681b      	ldr	r3, [r3, #0]
 8004e22:	695a      	ldr	r2, [r3, #20]
 8004e24:	687b      	ldr	r3, [r7, #4]
 8004e26:	681b      	ldr	r3, [r3, #0]
 8004e28:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004e2c:	615a      	str	r2, [r3, #20]
 8004e2e:	687b      	ldr	r3, [r7, #4]
 8004e30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e32:	2b00      	cmp	r3, #0
 8004e34:	d103      	bne.n	8004e3e <HAL_DMA_Abort+0x62>
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004e3a:	2b00      	cmp	r3, #0
 8004e3c:	d007      	beq.n	8004e4e <HAL_DMA_Abort+0x72>
 8004e3e:	687b      	ldr	r3, [r7, #4]
 8004e40:	681b      	ldr	r3, [r3, #0]
 8004e42:	681a      	ldr	r2, [r3, #0]
 8004e44:	687b      	ldr	r3, [r7, #4]
 8004e46:	681b      	ldr	r3, [r3, #0]
 8004e48:	f022 0208 	bic.w	r2, r2, #8
 8004e4c:	601a      	str	r2, [r3, #0]
 8004e4e:	687b      	ldr	r3, [r7, #4]
 8004e50:	681b      	ldr	r3, [r3, #0]
 8004e52:	681a      	ldr	r2, [r3, #0]
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	681b      	ldr	r3, [r3, #0]
 8004e58:	f022 0201 	bic.w	r2, r2, #1
 8004e5c:	601a      	str	r2, [r3, #0]
 8004e5e:	e013      	b.n	8004e88 <HAL_DMA_Abort+0xac>
 8004e60:	f7ff f9c0 	bl	80041e4 <HAL_GetTick>
 8004e64:	4602      	mov	r2, r0
 8004e66:	68bb      	ldr	r3, [r7, #8]
 8004e68:	1ad3      	subs	r3, r2, r3
 8004e6a:	2b05      	cmp	r3, #5
 8004e6c:	d90c      	bls.n	8004e88 <HAL_DMA_Abort+0xac>
 8004e6e:	687b      	ldr	r3, [r7, #4]
 8004e70:	2220      	movs	r2, #32
 8004e72:	655a      	str	r2, [r3, #84]	; 0x54
 8004e74:	687b      	ldr	r3, [r7, #4]
 8004e76:	2203      	movs	r2, #3
 8004e78:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	2200      	movs	r2, #0
 8004e80:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004e84:	2303      	movs	r3, #3
 8004e86:	e015      	b.n	8004eb4 <HAL_DMA_Abort+0xd8>
 8004e88:	687b      	ldr	r3, [r7, #4]
 8004e8a:	681b      	ldr	r3, [r3, #0]
 8004e8c:	681b      	ldr	r3, [r3, #0]
 8004e8e:	f003 0301 	and.w	r3, r3, #1
 8004e92:	2b00      	cmp	r3, #0
 8004e94:	d1e4      	bne.n	8004e60 <HAL_DMA_Abort+0x84>
 8004e96:	687b      	ldr	r3, [r7, #4]
 8004e98:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004e9a:	223f      	movs	r2, #63	; 0x3f
 8004e9c:	409a      	lsls	r2, r3
 8004e9e:	68fb      	ldr	r3, [r7, #12]
 8004ea0:	609a      	str	r2, [r3, #8]
 8004ea2:	687b      	ldr	r3, [r7, #4]
 8004ea4:	2201      	movs	r2, #1
 8004ea6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	2200      	movs	r2, #0
 8004eae:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004eb2:	2300      	movs	r3, #0
 8004eb4:	4618      	mov	r0, r3
 8004eb6:	3710      	adds	r7, #16
 8004eb8:	46bd      	mov	sp, r7
 8004eba:	bd80      	pop	{r7, pc}

08004ebc <HAL_DMA_IRQHandler>:
 8004ebc:	b580      	push	{r7, lr}
 8004ebe:	b086      	sub	sp, #24
 8004ec0:	af00      	add	r7, sp, #0
 8004ec2:	6078      	str	r0, [r7, #4]
 8004ec4:	2300      	movs	r3, #0
 8004ec6:	60bb      	str	r3, [r7, #8]
 8004ec8:	4b8e      	ldr	r3, [pc, #568]	; (8005104 <HAL_DMA_IRQHandler+0x248>)
 8004eca:	681b      	ldr	r3, [r3, #0]
 8004ecc:	4a8e      	ldr	r2, [pc, #568]	; (8005108 <HAL_DMA_IRQHandler+0x24c>)
 8004ece:	fba2 2303 	umull	r2, r3, r2, r3
 8004ed2:	0a9b      	lsrs	r3, r3, #10
 8004ed4:	617b      	str	r3, [r7, #20]
 8004ed6:	687b      	ldr	r3, [r7, #4]
 8004ed8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004eda:	613b      	str	r3, [r7, #16]
 8004edc:	693b      	ldr	r3, [r7, #16]
 8004ede:	681b      	ldr	r3, [r3, #0]
 8004ee0:	60fb      	str	r3, [r7, #12]
 8004ee2:	687b      	ldr	r3, [r7, #4]
 8004ee4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004ee6:	2208      	movs	r2, #8
 8004ee8:	409a      	lsls	r2, r3
 8004eea:	68fb      	ldr	r3, [r7, #12]
 8004eec:	4013      	ands	r3, r2
 8004eee:	2b00      	cmp	r3, #0
 8004ef0:	d01a      	beq.n	8004f28 <HAL_DMA_IRQHandler+0x6c>
 8004ef2:	687b      	ldr	r3, [r7, #4]
 8004ef4:	681b      	ldr	r3, [r3, #0]
 8004ef6:	681b      	ldr	r3, [r3, #0]
 8004ef8:	f003 0304 	and.w	r3, r3, #4
 8004efc:	2b00      	cmp	r3, #0
 8004efe:	d013      	beq.n	8004f28 <HAL_DMA_IRQHandler+0x6c>
 8004f00:	687b      	ldr	r3, [r7, #4]
 8004f02:	681b      	ldr	r3, [r3, #0]
 8004f04:	681a      	ldr	r2, [r3, #0]
 8004f06:	687b      	ldr	r3, [r7, #4]
 8004f08:	681b      	ldr	r3, [r3, #0]
 8004f0a:	f022 0204 	bic.w	r2, r2, #4
 8004f0e:	601a      	str	r2, [r3, #0]
 8004f10:	687b      	ldr	r3, [r7, #4]
 8004f12:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004f14:	2208      	movs	r2, #8
 8004f16:	409a      	lsls	r2, r3
 8004f18:	693b      	ldr	r3, [r7, #16]
 8004f1a:	609a      	str	r2, [r3, #8]
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004f20:	f043 0201 	orr.w	r2, r3, #1
 8004f24:	687b      	ldr	r3, [r7, #4]
 8004f26:	655a      	str	r2, [r3, #84]	; 0x54
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004f2c:	2201      	movs	r2, #1
 8004f2e:	409a      	lsls	r2, r3
 8004f30:	68fb      	ldr	r3, [r7, #12]
 8004f32:	4013      	ands	r3, r2
 8004f34:	2b00      	cmp	r3, #0
 8004f36:	d012      	beq.n	8004f5e <HAL_DMA_IRQHandler+0xa2>
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	681b      	ldr	r3, [r3, #0]
 8004f3c:	695b      	ldr	r3, [r3, #20]
 8004f3e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004f42:	2b00      	cmp	r3, #0
 8004f44:	d00b      	beq.n	8004f5e <HAL_DMA_IRQHandler+0xa2>
 8004f46:	687b      	ldr	r3, [r7, #4]
 8004f48:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004f4a:	2201      	movs	r2, #1
 8004f4c:	409a      	lsls	r2, r3
 8004f4e:	693b      	ldr	r3, [r7, #16]
 8004f50:	609a      	str	r2, [r3, #8]
 8004f52:	687b      	ldr	r3, [r7, #4]
 8004f54:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004f56:	f043 0202 	orr.w	r2, r3, #2
 8004f5a:	687b      	ldr	r3, [r7, #4]
 8004f5c:	655a      	str	r2, [r3, #84]	; 0x54
 8004f5e:	687b      	ldr	r3, [r7, #4]
 8004f60:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004f62:	2204      	movs	r2, #4
 8004f64:	409a      	lsls	r2, r3
 8004f66:	68fb      	ldr	r3, [r7, #12]
 8004f68:	4013      	ands	r3, r2
 8004f6a:	2b00      	cmp	r3, #0
 8004f6c:	d012      	beq.n	8004f94 <HAL_DMA_IRQHandler+0xd8>
 8004f6e:	687b      	ldr	r3, [r7, #4]
 8004f70:	681b      	ldr	r3, [r3, #0]
 8004f72:	681b      	ldr	r3, [r3, #0]
 8004f74:	f003 0302 	and.w	r3, r3, #2
 8004f78:	2b00      	cmp	r3, #0
 8004f7a:	d00b      	beq.n	8004f94 <HAL_DMA_IRQHandler+0xd8>
 8004f7c:	687b      	ldr	r3, [r7, #4]
 8004f7e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004f80:	2204      	movs	r2, #4
 8004f82:	409a      	lsls	r2, r3
 8004f84:	693b      	ldr	r3, [r7, #16]
 8004f86:	609a      	str	r2, [r3, #8]
 8004f88:	687b      	ldr	r3, [r7, #4]
 8004f8a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004f8c:	f043 0204 	orr.w	r2, r3, #4
 8004f90:	687b      	ldr	r3, [r7, #4]
 8004f92:	655a      	str	r2, [r3, #84]	; 0x54
 8004f94:	687b      	ldr	r3, [r7, #4]
 8004f96:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004f98:	2210      	movs	r2, #16
 8004f9a:	409a      	lsls	r2, r3
 8004f9c:	68fb      	ldr	r3, [r7, #12]
 8004f9e:	4013      	ands	r3, r2
 8004fa0:	2b00      	cmp	r3, #0
 8004fa2:	d043      	beq.n	800502c <HAL_DMA_IRQHandler+0x170>
 8004fa4:	687b      	ldr	r3, [r7, #4]
 8004fa6:	681b      	ldr	r3, [r3, #0]
 8004fa8:	681b      	ldr	r3, [r3, #0]
 8004faa:	f003 0308 	and.w	r3, r3, #8
 8004fae:	2b00      	cmp	r3, #0
 8004fb0:	d03c      	beq.n	800502c <HAL_DMA_IRQHandler+0x170>
 8004fb2:	687b      	ldr	r3, [r7, #4]
 8004fb4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004fb6:	2210      	movs	r2, #16
 8004fb8:	409a      	lsls	r2, r3
 8004fba:	693b      	ldr	r3, [r7, #16]
 8004fbc:	609a      	str	r2, [r3, #8]
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	681b      	ldr	r3, [r3, #0]
 8004fc2:	681b      	ldr	r3, [r3, #0]
 8004fc4:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004fc8:	2b00      	cmp	r3, #0
 8004fca:	d018      	beq.n	8004ffe <HAL_DMA_IRQHandler+0x142>
 8004fcc:	687b      	ldr	r3, [r7, #4]
 8004fce:	681b      	ldr	r3, [r3, #0]
 8004fd0:	681b      	ldr	r3, [r3, #0]
 8004fd2:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004fd6:	2b00      	cmp	r3, #0
 8004fd8:	d108      	bne.n	8004fec <HAL_DMA_IRQHandler+0x130>
 8004fda:	687b      	ldr	r3, [r7, #4]
 8004fdc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fde:	2b00      	cmp	r3, #0
 8004fe0:	d024      	beq.n	800502c <HAL_DMA_IRQHandler+0x170>
 8004fe2:	687b      	ldr	r3, [r7, #4]
 8004fe4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fe6:	6878      	ldr	r0, [r7, #4]
 8004fe8:	4798      	blx	r3
 8004fea:	e01f      	b.n	800502c <HAL_DMA_IRQHandler+0x170>
 8004fec:	687b      	ldr	r3, [r7, #4]
 8004fee:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004ff0:	2b00      	cmp	r3, #0
 8004ff2:	d01b      	beq.n	800502c <HAL_DMA_IRQHandler+0x170>
 8004ff4:	687b      	ldr	r3, [r7, #4]
 8004ff6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004ff8:	6878      	ldr	r0, [r7, #4]
 8004ffa:	4798      	blx	r3
 8004ffc:	e016      	b.n	800502c <HAL_DMA_IRQHandler+0x170>
 8004ffe:	687b      	ldr	r3, [r7, #4]
 8005000:	681b      	ldr	r3, [r3, #0]
 8005002:	681b      	ldr	r3, [r3, #0]
 8005004:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005008:	2b00      	cmp	r3, #0
 800500a:	d107      	bne.n	800501c <HAL_DMA_IRQHandler+0x160>
 800500c:	687b      	ldr	r3, [r7, #4]
 800500e:	681b      	ldr	r3, [r3, #0]
 8005010:	681a      	ldr	r2, [r3, #0]
 8005012:	687b      	ldr	r3, [r7, #4]
 8005014:	681b      	ldr	r3, [r3, #0]
 8005016:	f022 0208 	bic.w	r2, r2, #8
 800501a:	601a      	str	r2, [r3, #0]
 800501c:	687b      	ldr	r3, [r7, #4]
 800501e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005020:	2b00      	cmp	r3, #0
 8005022:	d003      	beq.n	800502c <HAL_DMA_IRQHandler+0x170>
 8005024:	687b      	ldr	r3, [r7, #4]
 8005026:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005028:	6878      	ldr	r0, [r7, #4]
 800502a:	4798      	blx	r3
 800502c:	687b      	ldr	r3, [r7, #4]
 800502e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005030:	2220      	movs	r2, #32
 8005032:	409a      	lsls	r2, r3
 8005034:	68fb      	ldr	r3, [r7, #12]
 8005036:	4013      	ands	r3, r2
 8005038:	2b00      	cmp	r3, #0
 800503a:	f000 808f 	beq.w	800515c <HAL_DMA_IRQHandler+0x2a0>
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	681b      	ldr	r3, [r3, #0]
 8005042:	681b      	ldr	r3, [r3, #0]
 8005044:	f003 0310 	and.w	r3, r3, #16
 8005048:	2b00      	cmp	r3, #0
 800504a:	f000 8087 	beq.w	800515c <HAL_DMA_IRQHandler+0x2a0>
 800504e:	687b      	ldr	r3, [r7, #4]
 8005050:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005052:	2220      	movs	r2, #32
 8005054:	409a      	lsls	r2, r3
 8005056:	693b      	ldr	r3, [r7, #16]
 8005058:	609a      	str	r2, [r3, #8]
 800505a:	687b      	ldr	r3, [r7, #4]
 800505c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8005060:	b2db      	uxtb	r3, r3
 8005062:	2b05      	cmp	r3, #5
 8005064:	d136      	bne.n	80050d4 <HAL_DMA_IRQHandler+0x218>
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	681b      	ldr	r3, [r3, #0]
 800506a:	681a      	ldr	r2, [r3, #0]
 800506c:	687b      	ldr	r3, [r7, #4]
 800506e:	681b      	ldr	r3, [r3, #0]
 8005070:	f022 0216 	bic.w	r2, r2, #22
 8005074:	601a      	str	r2, [r3, #0]
 8005076:	687b      	ldr	r3, [r7, #4]
 8005078:	681b      	ldr	r3, [r3, #0]
 800507a:	695a      	ldr	r2, [r3, #20]
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	681b      	ldr	r3, [r3, #0]
 8005080:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005084:	615a      	str	r2, [r3, #20]
 8005086:	687b      	ldr	r3, [r7, #4]
 8005088:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800508a:	2b00      	cmp	r3, #0
 800508c:	d103      	bne.n	8005096 <HAL_DMA_IRQHandler+0x1da>
 800508e:	687b      	ldr	r3, [r7, #4]
 8005090:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005092:	2b00      	cmp	r3, #0
 8005094:	d007      	beq.n	80050a6 <HAL_DMA_IRQHandler+0x1ea>
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	681b      	ldr	r3, [r3, #0]
 800509a:	681a      	ldr	r2, [r3, #0]
 800509c:	687b      	ldr	r3, [r7, #4]
 800509e:	681b      	ldr	r3, [r3, #0]
 80050a0:	f022 0208 	bic.w	r2, r2, #8
 80050a4:	601a      	str	r2, [r3, #0]
 80050a6:	687b      	ldr	r3, [r7, #4]
 80050a8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80050aa:	223f      	movs	r2, #63	; 0x3f
 80050ac:	409a      	lsls	r2, r3
 80050ae:	693b      	ldr	r3, [r7, #16]
 80050b0:	609a      	str	r2, [r3, #8]
 80050b2:	687b      	ldr	r3, [r7, #4]
 80050b4:	2201      	movs	r2, #1
 80050b6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80050ba:	687b      	ldr	r3, [r7, #4]
 80050bc:	2200      	movs	r2, #0
 80050be:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80050c2:	687b      	ldr	r3, [r7, #4]
 80050c4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80050c6:	2b00      	cmp	r3, #0
 80050c8:	d07e      	beq.n	80051c8 <HAL_DMA_IRQHandler+0x30c>
 80050ca:	687b      	ldr	r3, [r7, #4]
 80050cc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80050ce:	6878      	ldr	r0, [r7, #4]
 80050d0:	4798      	blx	r3
 80050d2:	e079      	b.n	80051c8 <HAL_DMA_IRQHandler+0x30c>
 80050d4:	687b      	ldr	r3, [r7, #4]
 80050d6:	681b      	ldr	r3, [r3, #0]
 80050d8:	681b      	ldr	r3, [r3, #0]
 80050da:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80050de:	2b00      	cmp	r3, #0
 80050e0:	d01d      	beq.n	800511e <HAL_DMA_IRQHandler+0x262>
 80050e2:	687b      	ldr	r3, [r7, #4]
 80050e4:	681b      	ldr	r3, [r3, #0]
 80050e6:	681b      	ldr	r3, [r3, #0]
 80050e8:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80050ec:	2b00      	cmp	r3, #0
 80050ee:	d10d      	bne.n	800510c <HAL_DMA_IRQHandler+0x250>
 80050f0:	687b      	ldr	r3, [r7, #4]
 80050f2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80050f4:	2b00      	cmp	r3, #0
 80050f6:	d031      	beq.n	800515c <HAL_DMA_IRQHandler+0x2a0>
 80050f8:	687b      	ldr	r3, [r7, #4]
 80050fa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80050fc:	6878      	ldr	r0, [r7, #4]
 80050fe:	4798      	blx	r3
 8005100:	e02c      	b.n	800515c <HAL_DMA_IRQHandler+0x2a0>
 8005102:	bf00      	nop
 8005104:	2000000c 	.word	0x2000000c
 8005108:	1b4e81b5 	.word	0x1b4e81b5
 800510c:	687b      	ldr	r3, [r7, #4]
 800510e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005110:	2b00      	cmp	r3, #0
 8005112:	d023      	beq.n	800515c <HAL_DMA_IRQHandler+0x2a0>
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005118:	6878      	ldr	r0, [r7, #4]
 800511a:	4798      	blx	r3
 800511c:	e01e      	b.n	800515c <HAL_DMA_IRQHandler+0x2a0>
 800511e:	687b      	ldr	r3, [r7, #4]
 8005120:	681b      	ldr	r3, [r3, #0]
 8005122:	681b      	ldr	r3, [r3, #0]
 8005124:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005128:	2b00      	cmp	r3, #0
 800512a:	d10f      	bne.n	800514c <HAL_DMA_IRQHandler+0x290>
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	681b      	ldr	r3, [r3, #0]
 8005130:	681a      	ldr	r2, [r3, #0]
 8005132:	687b      	ldr	r3, [r7, #4]
 8005134:	681b      	ldr	r3, [r3, #0]
 8005136:	f022 0210 	bic.w	r2, r2, #16
 800513a:	601a      	str	r2, [r3, #0]
 800513c:	687b      	ldr	r3, [r7, #4]
 800513e:	2201      	movs	r2, #1
 8005140:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005144:	687b      	ldr	r3, [r7, #4]
 8005146:	2200      	movs	r2, #0
 8005148:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005150:	2b00      	cmp	r3, #0
 8005152:	d003      	beq.n	800515c <HAL_DMA_IRQHandler+0x2a0>
 8005154:	687b      	ldr	r3, [r7, #4]
 8005156:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005158:	6878      	ldr	r0, [r7, #4]
 800515a:	4798      	blx	r3
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005160:	2b00      	cmp	r3, #0
 8005162:	d032      	beq.n	80051ca <HAL_DMA_IRQHandler+0x30e>
 8005164:	687b      	ldr	r3, [r7, #4]
 8005166:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005168:	f003 0301 	and.w	r3, r3, #1
 800516c:	2b00      	cmp	r3, #0
 800516e:	d022      	beq.n	80051b6 <HAL_DMA_IRQHandler+0x2fa>
 8005170:	687b      	ldr	r3, [r7, #4]
 8005172:	2205      	movs	r2, #5
 8005174:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005178:	687b      	ldr	r3, [r7, #4]
 800517a:	681b      	ldr	r3, [r3, #0]
 800517c:	681a      	ldr	r2, [r3, #0]
 800517e:	687b      	ldr	r3, [r7, #4]
 8005180:	681b      	ldr	r3, [r3, #0]
 8005182:	f022 0201 	bic.w	r2, r2, #1
 8005186:	601a      	str	r2, [r3, #0]
 8005188:	68bb      	ldr	r3, [r7, #8]
 800518a:	3301      	adds	r3, #1
 800518c:	60bb      	str	r3, [r7, #8]
 800518e:	697a      	ldr	r2, [r7, #20]
 8005190:	429a      	cmp	r2, r3
 8005192:	d307      	bcc.n	80051a4 <HAL_DMA_IRQHandler+0x2e8>
 8005194:	687b      	ldr	r3, [r7, #4]
 8005196:	681b      	ldr	r3, [r3, #0]
 8005198:	681b      	ldr	r3, [r3, #0]
 800519a:	f003 0301 	and.w	r3, r3, #1
 800519e:	2b00      	cmp	r3, #0
 80051a0:	d1f2      	bne.n	8005188 <HAL_DMA_IRQHandler+0x2cc>
 80051a2:	e000      	b.n	80051a6 <HAL_DMA_IRQHandler+0x2ea>
 80051a4:	bf00      	nop
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	2201      	movs	r2, #1
 80051aa:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	2200      	movs	r2, #0
 80051b2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80051ba:	2b00      	cmp	r3, #0
 80051bc:	d005      	beq.n	80051ca <HAL_DMA_IRQHandler+0x30e>
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80051c2:	6878      	ldr	r0, [r7, #4]
 80051c4:	4798      	blx	r3
 80051c6:	e000      	b.n	80051ca <HAL_DMA_IRQHandler+0x30e>
 80051c8:	bf00      	nop
 80051ca:	3718      	adds	r7, #24
 80051cc:	46bd      	mov	sp, r7
 80051ce:	bd80      	pop	{r7, pc}

080051d0 <DMA_SetConfig>:
 80051d0:	b480      	push	{r7}
 80051d2:	b085      	sub	sp, #20
 80051d4:	af00      	add	r7, sp, #0
 80051d6:	60f8      	str	r0, [r7, #12]
 80051d8:	60b9      	str	r1, [r7, #8]
 80051da:	607a      	str	r2, [r7, #4]
 80051dc:	603b      	str	r3, [r7, #0]
 80051de:	68fb      	ldr	r3, [r7, #12]
 80051e0:	681b      	ldr	r3, [r3, #0]
 80051e2:	681a      	ldr	r2, [r3, #0]
 80051e4:	68fb      	ldr	r3, [r7, #12]
 80051e6:	681b      	ldr	r3, [r3, #0]
 80051e8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80051ec:	601a      	str	r2, [r3, #0]
 80051ee:	68fb      	ldr	r3, [r7, #12]
 80051f0:	681b      	ldr	r3, [r3, #0]
 80051f2:	683a      	ldr	r2, [r7, #0]
 80051f4:	605a      	str	r2, [r3, #4]
 80051f6:	68fb      	ldr	r3, [r7, #12]
 80051f8:	689b      	ldr	r3, [r3, #8]
 80051fa:	2b40      	cmp	r3, #64	; 0x40
 80051fc:	d108      	bne.n	8005210 <DMA_SetConfig+0x40>
 80051fe:	68fb      	ldr	r3, [r7, #12]
 8005200:	681b      	ldr	r3, [r3, #0]
 8005202:	687a      	ldr	r2, [r7, #4]
 8005204:	609a      	str	r2, [r3, #8]
 8005206:	68fb      	ldr	r3, [r7, #12]
 8005208:	681b      	ldr	r3, [r3, #0]
 800520a:	68ba      	ldr	r2, [r7, #8]
 800520c:	60da      	str	r2, [r3, #12]
 800520e:	e007      	b.n	8005220 <DMA_SetConfig+0x50>
 8005210:	68fb      	ldr	r3, [r7, #12]
 8005212:	681b      	ldr	r3, [r3, #0]
 8005214:	68ba      	ldr	r2, [r7, #8]
 8005216:	609a      	str	r2, [r3, #8]
 8005218:	68fb      	ldr	r3, [r7, #12]
 800521a:	681b      	ldr	r3, [r3, #0]
 800521c:	687a      	ldr	r2, [r7, #4]
 800521e:	60da      	str	r2, [r3, #12]
 8005220:	bf00      	nop
 8005222:	3714      	adds	r7, #20
 8005224:	46bd      	mov	sp, r7
 8005226:	f85d 7b04 	ldr.w	r7, [sp], #4
 800522a:	4770      	bx	lr

0800522c <DMA_CalcBaseAndBitshift>:
 800522c:	b480      	push	{r7}
 800522e:	b085      	sub	sp, #20
 8005230:	af00      	add	r7, sp, #0
 8005232:	6078      	str	r0, [r7, #4]
 8005234:	687b      	ldr	r3, [r7, #4]
 8005236:	681b      	ldr	r3, [r3, #0]
 8005238:	b2db      	uxtb	r3, r3
 800523a:	3b10      	subs	r3, #16
 800523c:	4a14      	ldr	r2, [pc, #80]	; (8005290 <DMA_CalcBaseAndBitshift+0x64>)
 800523e:	fba2 2303 	umull	r2, r3, r2, r3
 8005242:	091b      	lsrs	r3, r3, #4
 8005244:	60fb      	str	r3, [r7, #12]
 8005246:	4a13      	ldr	r2, [pc, #76]	; (8005294 <DMA_CalcBaseAndBitshift+0x68>)
 8005248:	68fb      	ldr	r3, [r7, #12]
 800524a:	4413      	add	r3, r2
 800524c:	781b      	ldrb	r3, [r3, #0]
 800524e:	461a      	mov	r2, r3
 8005250:	687b      	ldr	r3, [r7, #4]
 8005252:	65da      	str	r2, [r3, #92]	; 0x5c
 8005254:	68fb      	ldr	r3, [r7, #12]
 8005256:	2b03      	cmp	r3, #3
 8005258:	d909      	bls.n	800526e <DMA_CalcBaseAndBitshift+0x42>
 800525a:	687b      	ldr	r3, [r7, #4]
 800525c:	681b      	ldr	r3, [r3, #0]
 800525e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8005262:	f023 0303 	bic.w	r3, r3, #3
 8005266:	1d1a      	adds	r2, r3, #4
 8005268:	687b      	ldr	r3, [r7, #4]
 800526a:	659a      	str	r2, [r3, #88]	; 0x58
 800526c:	e007      	b.n	800527e <DMA_CalcBaseAndBitshift+0x52>
 800526e:	687b      	ldr	r3, [r7, #4]
 8005270:	681b      	ldr	r3, [r3, #0]
 8005272:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8005276:	f023 0303 	bic.w	r3, r3, #3
 800527a:	687a      	ldr	r2, [r7, #4]
 800527c:	6593      	str	r3, [r2, #88]	; 0x58
 800527e:	687b      	ldr	r3, [r7, #4]
 8005280:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005282:	4618      	mov	r0, r3
 8005284:	3714      	adds	r7, #20
 8005286:	46bd      	mov	sp, r7
 8005288:	f85d 7b04 	ldr.w	r7, [sp], #4
 800528c:	4770      	bx	lr
 800528e:	bf00      	nop
 8005290:	aaaaaaab 	.word	0xaaaaaaab
 8005294:	08010b64 	.word	0x08010b64

08005298 <DMA_CheckFifoParam>:
 8005298:	b480      	push	{r7}
 800529a:	b085      	sub	sp, #20
 800529c:	af00      	add	r7, sp, #0
 800529e:	6078      	str	r0, [r7, #4]
 80052a0:	2300      	movs	r3, #0
 80052a2:	73fb      	strb	r3, [r7, #15]
 80052a4:	687b      	ldr	r3, [r7, #4]
 80052a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80052a8:	60bb      	str	r3, [r7, #8]
 80052aa:	687b      	ldr	r3, [r7, #4]
 80052ac:	699b      	ldr	r3, [r3, #24]
 80052ae:	2b00      	cmp	r3, #0
 80052b0:	d11f      	bne.n	80052f2 <DMA_CheckFifoParam+0x5a>
 80052b2:	68bb      	ldr	r3, [r7, #8]
 80052b4:	2b03      	cmp	r3, #3
 80052b6:	d856      	bhi.n	8005366 <DMA_CheckFifoParam+0xce>
 80052b8:	a201      	add	r2, pc, #4	; (adr r2, 80052c0 <DMA_CheckFifoParam+0x28>)
 80052ba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80052be:	bf00      	nop
 80052c0:	080052d1 	.word	0x080052d1
 80052c4:	080052e3 	.word	0x080052e3
 80052c8:	080052d1 	.word	0x080052d1
 80052cc:	08005367 	.word	0x08005367
 80052d0:	687b      	ldr	r3, [r7, #4]
 80052d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80052d4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80052d8:	2b00      	cmp	r3, #0
 80052da:	d046      	beq.n	800536a <DMA_CheckFifoParam+0xd2>
 80052dc:	2301      	movs	r3, #1
 80052de:	73fb      	strb	r3, [r7, #15]
 80052e0:	e043      	b.n	800536a <DMA_CheckFifoParam+0xd2>
 80052e2:	687b      	ldr	r3, [r7, #4]
 80052e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80052e6:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80052ea:	d140      	bne.n	800536e <DMA_CheckFifoParam+0xd6>
 80052ec:	2301      	movs	r3, #1
 80052ee:	73fb      	strb	r3, [r7, #15]
 80052f0:	e03d      	b.n	800536e <DMA_CheckFifoParam+0xd6>
 80052f2:	687b      	ldr	r3, [r7, #4]
 80052f4:	699b      	ldr	r3, [r3, #24]
 80052f6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80052fa:	d121      	bne.n	8005340 <DMA_CheckFifoParam+0xa8>
 80052fc:	68bb      	ldr	r3, [r7, #8]
 80052fe:	2b03      	cmp	r3, #3
 8005300:	d837      	bhi.n	8005372 <DMA_CheckFifoParam+0xda>
 8005302:	a201      	add	r2, pc, #4	; (adr r2, 8005308 <DMA_CheckFifoParam+0x70>)
 8005304:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005308:	08005319 	.word	0x08005319
 800530c:	0800531f 	.word	0x0800531f
 8005310:	08005319 	.word	0x08005319
 8005314:	08005331 	.word	0x08005331
 8005318:	2301      	movs	r3, #1
 800531a:	73fb      	strb	r3, [r7, #15]
 800531c:	e030      	b.n	8005380 <DMA_CheckFifoParam+0xe8>
 800531e:	687b      	ldr	r3, [r7, #4]
 8005320:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005322:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005326:	2b00      	cmp	r3, #0
 8005328:	d025      	beq.n	8005376 <DMA_CheckFifoParam+0xde>
 800532a:	2301      	movs	r3, #1
 800532c:	73fb      	strb	r3, [r7, #15]
 800532e:	e022      	b.n	8005376 <DMA_CheckFifoParam+0xde>
 8005330:	687b      	ldr	r3, [r7, #4]
 8005332:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005334:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8005338:	d11f      	bne.n	800537a <DMA_CheckFifoParam+0xe2>
 800533a:	2301      	movs	r3, #1
 800533c:	73fb      	strb	r3, [r7, #15]
 800533e:	e01c      	b.n	800537a <DMA_CheckFifoParam+0xe2>
 8005340:	68bb      	ldr	r3, [r7, #8]
 8005342:	2b02      	cmp	r3, #2
 8005344:	d903      	bls.n	800534e <DMA_CheckFifoParam+0xb6>
 8005346:	68bb      	ldr	r3, [r7, #8]
 8005348:	2b03      	cmp	r3, #3
 800534a:	d003      	beq.n	8005354 <DMA_CheckFifoParam+0xbc>
 800534c:	e018      	b.n	8005380 <DMA_CheckFifoParam+0xe8>
 800534e:	2301      	movs	r3, #1
 8005350:	73fb      	strb	r3, [r7, #15]
 8005352:	e015      	b.n	8005380 <DMA_CheckFifoParam+0xe8>
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005358:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800535c:	2b00      	cmp	r3, #0
 800535e:	d00e      	beq.n	800537e <DMA_CheckFifoParam+0xe6>
 8005360:	2301      	movs	r3, #1
 8005362:	73fb      	strb	r3, [r7, #15]
 8005364:	e00b      	b.n	800537e <DMA_CheckFifoParam+0xe6>
 8005366:	bf00      	nop
 8005368:	e00a      	b.n	8005380 <DMA_CheckFifoParam+0xe8>
 800536a:	bf00      	nop
 800536c:	e008      	b.n	8005380 <DMA_CheckFifoParam+0xe8>
 800536e:	bf00      	nop
 8005370:	e006      	b.n	8005380 <DMA_CheckFifoParam+0xe8>
 8005372:	bf00      	nop
 8005374:	e004      	b.n	8005380 <DMA_CheckFifoParam+0xe8>
 8005376:	bf00      	nop
 8005378:	e002      	b.n	8005380 <DMA_CheckFifoParam+0xe8>
 800537a:	bf00      	nop
 800537c:	e000      	b.n	8005380 <DMA_CheckFifoParam+0xe8>
 800537e:	bf00      	nop
 8005380:	7bfb      	ldrb	r3, [r7, #15]
 8005382:	4618      	mov	r0, r3
 8005384:	3714      	adds	r7, #20
 8005386:	46bd      	mov	sp, r7
 8005388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800538c:	4770      	bx	lr
 800538e:	bf00      	nop

08005390 <HAL_GPIO_Init>:
 8005390:	b480      	push	{r7}
 8005392:	b089      	sub	sp, #36	; 0x24
 8005394:	af00      	add	r7, sp, #0
 8005396:	6078      	str	r0, [r7, #4]
 8005398:	6039      	str	r1, [r7, #0]
 800539a:	2300      	movs	r3, #0
 800539c:	617b      	str	r3, [r7, #20]
 800539e:	2300      	movs	r3, #0
 80053a0:	613b      	str	r3, [r7, #16]
 80053a2:	2300      	movs	r3, #0
 80053a4:	61bb      	str	r3, [r7, #24]
 80053a6:	2300      	movs	r3, #0
 80053a8:	61fb      	str	r3, [r7, #28]
 80053aa:	e159      	b.n	8005660 <HAL_GPIO_Init+0x2d0>
 80053ac:	2201      	movs	r2, #1
 80053ae:	69fb      	ldr	r3, [r7, #28]
 80053b0:	fa02 f303 	lsl.w	r3, r2, r3
 80053b4:	617b      	str	r3, [r7, #20]
 80053b6:	683b      	ldr	r3, [r7, #0]
 80053b8:	681b      	ldr	r3, [r3, #0]
 80053ba:	697a      	ldr	r2, [r7, #20]
 80053bc:	4013      	ands	r3, r2
 80053be:	613b      	str	r3, [r7, #16]
 80053c0:	693a      	ldr	r2, [r7, #16]
 80053c2:	697b      	ldr	r3, [r7, #20]
 80053c4:	429a      	cmp	r2, r3
 80053c6:	f040 8148 	bne.w	800565a <HAL_GPIO_Init+0x2ca>
 80053ca:	683b      	ldr	r3, [r7, #0]
 80053cc:	685b      	ldr	r3, [r3, #4]
 80053ce:	f003 0303 	and.w	r3, r3, #3
 80053d2:	2b01      	cmp	r3, #1
 80053d4:	d005      	beq.n	80053e2 <HAL_GPIO_Init+0x52>
 80053d6:	683b      	ldr	r3, [r7, #0]
 80053d8:	685b      	ldr	r3, [r3, #4]
 80053da:	f003 0303 	and.w	r3, r3, #3
 80053de:	2b02      	cmp	r3, #2
 80053e0:	d130      	bne.n	8005444 <HAL_GPIO_Init+0xb4>
 80053e2:	687b      	ldr	r3, [r7, #4]
 80053e4:	689b      	ldr	r3, [r3, #8]
 80053e6:	61bb      	str	r3, [r7, #24]
 80053e8:	69fb      	ldr	r3, [r7, #28]
 80053ea:	005b      	lsls	r3, r3, #1
 80053ec:	2203      	movs	r2, #3
 80053ee:	fa02 f303 	lsl.w	r3, r2, r3
 80053f2:	43db      	mvns	r3, r3
 80053f4:	69ba      	ldr	r2, [r7, #24]
 80053f6:	4013      	ands	r3, r2
 80053f8:	61bb      	str	r3, [r7, #24]
 80053fa:	683b      	ldr	r3, [r7, #0]
 80053fc:	68da      	ldr	r2, [r3, #12]
 80053fe:	69fb      	ldr	r3, [r7, #28]
 8005400:	005b      	lsls	r3, r3, #1
 8005402:	fa02 f303 	lsl.w	r3, r2, r3
 8005406:	69ba      	ldr	r2, [r7, #24]
 8005408:	4313      	orrs	r3, r2
 800540a:	61bb      	str	r3, [r7, #24]
 800540c:	687b      	ldr	r3, [r7, #4]
 800540e:	69ba      	ldr	r2, [r7, #24]
 8005410:	609a      	str	r2, [r3, #8]
 8005412:	687b      	ldr	r3, [r7, #4]
 8005414:	685b      	ldr	r3, [r3, #4]
 8005416:	61bb      	str	r3, [r7, #24]
 8005418:	2201      	movs	r2, #1
 800541a:	69fb      	ldr	r3, [r7, #28]
 800541c:	fa02 f303 	lsl.w	r3, r2, r3
 8005420:	43db      	mvns	r3, r3
 8005422:	69ba      	ldr	r2, [r7, #24]
 8005424:	4013      	ands	r3, r2
 8005426:	61bb      	str	r3, [r7, #24]
 8005428:	683b      	ldr	r3, [r7, #0]
 800542a:	685b      	ldr	r3, [r3, #4]
 800542c:	091b      	lsrs	r3, r3, #4
 800542e:	f003 0201 	and.w	r2, r3, #1
 8005432:	69fb      	ldr	r3, [r7, #28]
 8005434:	fa02 f303 	lsl.w	r3, r2, r3
 8005438:	69ba      	ldr	r2, [r7, #24]
 800543a:	4313      	orrs	r3, r2
 800543c:	61bb      	str	r3, [r7, #24]
 800543e:	687b      	ldr	r3, [r7, #4]
 8005440:	69ba      	ldr	r2, [r7, #24]
 8005442:	605a      	str	r2, [r3, #4]
 8005444:	683b      	ldr	r3, [r7, #0]
 8005446:	685b      	ldr	r3, [r3, #4]
 8005448:	f003 0303 	and.w	r3, r3, #3
 800544c:	2b03      	cmp	r3, #3
 800544e:	d017      	beq.n	8005480 <HAL_GPIO_Init+0xf0>
 8005450:	687b      	ldr	r3, [r7, #4]
 8005452:	68db      	ldr	r3, [r3, #12]
 8005454:	61bb      	str	r3, [r7, #24]
 8005456:	69fb      	ldr	r3, [r7, #28]
 8005458:	005b      	lsls	r3, r3, #1
 800545a:	2203      	movs	r2, #3
 800545c:	fa02 f303 	lsl.w	r3, r2, r3
 8005460:	43db      	mvns	r3, r3
 8005462:	69ba      	ldr	r2, [r7, #24]
 8005464:	4013      	ands	r3, r2
 8005466:	61bb      	str	r3, [r7, #24]
 8005468:	683b      	ldr	r3, [r7, #0]
 800546a:	689a      	ldr	r2, [r3, #8]
 800546c:	69fb      	ldr	r3, [r7, #28]
 800546e:	005b      	lsls	r3, r3, #1
 8005470:	fa02 f303 	lsl.w	r3, r2, r3
 8005474:	69ba      	ldr	r2, [r7, #24]
 8005476:	4313      	orrs	r3, r2
 8005478:	61bb      	str	r3, [r7, #24]
 800547a:	687b      	ldr	r3, [r7, #4]
 800547c:	69ba      	ldr	r2, [r7, #24]
 800547e:	60da      	str	r2, [r3, #12]
 8005480:	683b      	ldr	r3, [r7, #0]
 8005482:	685b      	ldr	r3, [r3, #4]
 8005484:	f003 0303 	and.w	r3, r3, #3
 8005488:	2b02      	cmp	r3, #2
 800548a:	d123      	bne.n	80054d4 <HAL_GPIO_Init+0x144>
 800548c:	69fb      	ldr	r3, [r7, #28]
 800548e:	08da      	lsrs	r2, r3, #3
 8005490:	687b      	ldr	r3, [r7, #4]
 8005492:	3208      	adds	r2, #8
 8005494:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005498:	61bb      	str	r3, [r7, #24]
 800549a:	69fb      	ldr	r3, [r7, #28]
 800549c:	f003 0307 	and.w	r3, r3, #7
 80054a0:	009b      	lsls	r3, r3, #2
 80054a2:	220f      	movs	r2, #15
 80054a4:	fa02 f303 	lsl.w	r3, r2, r3
 80054a8:	43db      	mvns	r3, r3
 80054aa:	69ba      	ldr	r2, [r7, #24]
 80054ac:	4013      	ands	r3, r2
 80054ae:	61bb      	str	r3, [r7, #24]
 80054b0:	683b      	ldr	r3, [r7, #0]
 80054b2:	691a      	ldr	r2, [r3, #16]
 80054b4:	69fb      	ldr	r3, [r7, #28]
 80054b6:	f003 0307 	and.w	r3, r3, #7
 80054ba:	009b      	lsls	r3, r3, #2
 80054bc:	fa02 f303 	lsl.w	r3, r2, r3
 80054c0:	69ba      	ldr	r2, [r7, #24]
 80054c2:	4313      	orrs	r3, r2
 80054c4:	61bb      	str	r3, [r7, #24]
 80054c6:	69fb      	ldr	r3, [r7, #28]
 80054c8:	08da      	lsrs	r2, r3, #3
 80054ca:	687b      	ldr	r3, [r7, #4]
 80054cc:	3208      	adds	r2, #8
 80054ce:	69b9      	ldr	r1, [r7, #24]
 80054d0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80054d4:	687b      	ldr	r3, [r7, #4]
 80054d6:	681b      	ldr	r3, [r3, #0]
 80054d8:	61bb      	str	r3, [r7, #24]
 80054da:	69fb      	ldr	r3, [r7, #28]
 80054dc:	005b      	lsls	r3, r3, #1
 80054de:	2203      	movs	r2, #3
 80054e0:	fa02 f303 	lsl.w	r3, r2, r3
 80054e4:	43db      	mvns	r3, r3
 80054e6:	69ba      	ldr	r2, [r7, #24]
 80054e8:	4013      	ands	r3, r2
 80054ea:	61bb      	str	r3, [r7, #24]
 80054ec:	683b      	ldr	r3, [r7, #0]
 80054ee:	685b      	ldr	r3, [r3, #4]
 80054f0:	f003 0203 	and.w	r2, r3, #3
 80054f4:	69fb      	ldr	r3, [r7, #28]
 80054f6:	005b      	lsls	r3, r3, #1
 80054f8:	fa02 f303 	lsl.w	r3, r2, r3
 80054fc:	69ba      	ldr	r2, [r7, #24]
 80054fe:	4313      	orrs	r3, r2
 8005500:	61bb      	str	r3, [r7, #24]
 8005502:	687b      	ldr	r3, [r7, #4]
 8005504:	69ba      	ldr	r2, [r7, #24]
 8005506:	601a      	str	r2, [r3, #0]
 8005508:	683b      	ldr	r3, [r7, #0]
 800550a:	685b      	ldr	r3, [r3, #4]
 800550c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005510:	2b00      	cmp	r3, #0
 8005512:	f000 80a2 	beq.w	800565a <HAL_GPIO_Init+0x2ca>
 8005516:	2300      	movs	r3, #0
 8005518:	60fb      	str	r3, [r7, #12]
 800551a:	4b57      	ldr	r3, [pc, #348]	; (8005678 <HAL_GPIO_Init+0x2e8>)
 800551c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800551e:	4a56      	ldr	r2, [pc, #344]	; (8005678 <HAL_GPIO_Init+0x2e8>)
 8005520:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005524:	6453      	str	r3, [r2, #68]	; 0x44
 8005526:	4b54      	ldr	r3, [pc, #336]	; (8005678 <HAL_GPIO_Init+0x2e8>)
 8005528:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800552a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800552e:	60fb      	str	r3, [r7, #12]
 8005530:	68fb      	ldr	r3, [r7, #12]
 8005532:	4a52      	ldr	r2, [pc, #328]	; (800567c <HAL_GPIO_Init+0x2ec>)
 8005534:	69fb      	ldr	r3, [r7, #28]
 8005536:	089b      	lsrs	r3, r3, #2
 8005538:	3302      	adds	r3, #2
 800553a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800553e:	61bb      	str	r3, [r7, #24]
 8005540:	69fb      	ldr	r3, [r7, #28]
 8005542:	f003 0303 	and.w	r3, r3, #3
 8005546:	009b      	lsls	r3, r3, #2
 8005548:	220f      	movs	r2, #15
 800554a:	fa02 f303 	lsl.w	r3, r2, r3
 800554e:	43db      	mvns	r3, r3
 8005550:	69ba      	ldr	r2, [r7, #24]
 8005552:	4013      	ands	r3, r2
 8005554:	61bb      	str	r3, [r7, #24]
 8005556:	687b      	ldr	r3, [r7, #4]
 8005558:	4a49      	ldr	r2, [pc, #292]	; (8005680 <HAL_GPIO_Init+0x2f0>)
 800555a:	4293      	cmp	r3, r2
 800555c:	d019      	beq.n	8005592 <HAL_GPIO_Init+0x202>
 800555e:	687b      	ldr	r3, [r7, #4]
 8005560:	4a48      	ldr	r2, [pc, #288]	; (8005684 <HAL_GPIO_Init+0x2f4>)
 8005562:	4293      	cmp	r3, r2
 8005564:	d013      	beq.n	800558e <HAL_GPIO_Init+0x1fe>
 8005566:	687b      	ldr	r3, [r7, #4]
 8005568:	4a47      	ldr	r2, [pc, #284]	; (8005688 <HAL_GPIO_Init+0x2f8>)
 800556a:	4293      	cmp	r3, r2
 800556c:	d00d      	beq.n	800558a <HAL_GPIO_Init+0x1fa>
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	4a46      	ldr	r2, [pc, #280]	; (800568c <HAL_GPIO_Init+0x2fc>)
 8005572:	4293      	cmp	r3, r2
 8005574:	d007      	beq.n	8005586 <HAL_GPIO_Init+0x1f6>
 8005576:	687b      	ldr	r3, [r7, #4]
 8005578:	4a45      	ldr	r2, [pc, #276]	; (8005690 <HAL_GPIO_Init+0x300>)
 800557a:	4293      	cmp	r3, r2
 800557c:	d101      	bne.n	8005582 <HAL_GPIO_Init+0x1f2>
 800557e:	2304      	movs	r3, #4
 8005580:	e008      	b.n	8005594 <HAL_GPIO_Init+0x204>
 8005582:	2307      	movs	r3, #7
 8005584:	e006      	b.n	8005594 <HAL_GPIO_Init+0x204>
 8005586:	2303      	movs	r3, #3
 8005588:	e004      	b.n	8005594 <HAL_GPIO_Init+0x204>
 800558a:	2302      	movs	r3, #2
 800558c:	e002      	b.n	8005594 <HAL_GPIO_Init+0x204>
 800558e:	2301      	movs	r3, #1
 8005590:	e000      	b.n	8005594 <HAL_GPIO_Init+0x204>
 8005592:	2300      	movs	r3, #0
 8005594:	69fa      	ldr	r2, [r7, #28]
 8005596:	f002 0203 	and.w	r2, r2, #3
 800559a:	0092      	lsls	r2, r2, #2
 800559c:	4093      	lsls	r3, r2
 800559e:	69ba      	ldr	r2, [r7, #24]
 80055a0:	4313      	orrs	r3, r2
 80055a2:	61bb      	str	r3, [r7, #24]
 80055a4:	4935      	ldr	r1, [pc, #212]	; (800567c <HAL_GPIO_Init+0x2ec>)
 80055a6:	69fb      	ldr	r3, [r7, #28]
 80055a8:	089b      	lsrs	r3, r3, #2
 80055aa:	3302      	adds	r3, #2
 80055ac:	69ba      	ldr	r2, [r7, #24]
 80055ae:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80055b2:	4b38      	ldr	r3, [pc, #224]	; (8005694 <HAL_GPIO_Init+0x304>)
 80055b4:	689b      	ldr	r3, [r3, #8]
 80055b6:	61bb      	str	r3, [r7, #24]
 80055b8:	693b      	ldr	r3, [r7, #16]
 80055ba:	43db      	mvns	r3, r3
 80055bc:	69ba      	ldr	r2, [r7, #24]
 80055be:	4013      	ands	r3, r2
 80055c0:	61bb      	str	r3, [r7, #24]
 80055c2:	683b      	ldr	r3, [r7, #0]
 80055c4:	685b      	ldr	r3, [r3, #4]
 80055c6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80055ca:	2b00      	cmp	r3, #0
 80055cc:	d003      	beq.n	80055d6 <HAL_GPIO_Init+0x246>
 80055ce:	69ba      	ldr	r2, [r7, #24]
 80055d0:	693b      	ldr	r3, [r7, #16]
 80055d2:	4313      	orrs	r3, r2
 80055d4:	61bb      	str	r3, [r7, #24]
 80055d6:	4a2f      	ldr	r2, [pc, #188]	; (8005694 <HAL_GPIO_Init+0x304>)
 80055d8:	69bb      	ldr	r3, [r7, #24]
 80055da:	6093      	str	r3, [r2, #8]
 80055dc:	4b2d      	ldr	r3, [pc, #180]	; (8005694 <HAL_GPIO_Init+0x304>)
 80055de:	68db      	ldr	r3, [r3, #12]
 80055e0:	61bb      	str	r3, [r7, #24]
 80055e2:	693b      	ldr	r3, [r7, #16]
 80055e4:	43db      	mvns	r3, r3
 80055e6:	69ba      	ldr	r2, [r7, #24]
 80055e8:	4013      	ands	r3, r2
 80055ea:	61bb      	str	r3, [r7, #24]
 80055ec:	683b      	ldr	r3, [r7, #0]
 80055ee:	685b      	ldr	r3, [r3, #4]
 80055f0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80055f4:	2b00      	cmp	r3, #0
 80055f6:	d003      	beq.n	8005600 <HAL_GPIO_Init+0x270>
 80055f8:	69ba      	ldr	r2, [r7, #24]
 80055fa:	693b      	ldr	r3, [r7, #16]
 80055fc:	4313      	orrs	r3, r2
 80055fe:	61bb      	str	r3, [r7, #24]
 8005600:	4a24      	ldr	r2, [pc, #144]	; (8005694 <HAL_GPIO_Init+0x304>)
 8005602:	69bb      	ldr	r3, [r7, #24]
 8005604:	60d3      	str	r3, [r2, #12]
 8005606:	4b23      	ldr	r3, [pc, #140]	; (8005694 <HAL_GPIO_Init+0x304>)
 8005608:	685b      	ldr	r3, [r3, #4]
 800560a:	61bb      	str	r3, [r7, #24]
 800560c:	693b      	ldr	r3, [r7, #16]
 800560e:	43db      	mvns	r3, r3
 8005610:	69ba      	ldr	r2, [r7, #24]
 8005612:	4013      	ands	r3, r2
 8005614:	61bb      	str	r3, [r7, #24]
 8005616:	683b      	ldr	r3, [r7, #0]
 8005618:	685b      	ldr	r3, [r3, #4]
 800561a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800561e:	2b00      	cmp	r3, #0
 8005620:	d003      	beq.n	800562a <HAL_GPIO_Init+0x29a>
 8005622:	69ba      	ldr	r2, [r7, #24]
 8005624:	693b      	ldr	r3, [r7, #16]
 8005626:	4313      	orrs	r3, r2
 8005628:	61bb      	str	r3, [r7, #24]
 800562a:	4a1a      	ldr	r2, [pc, #104]	; (8005694 <HAL_GPIO_Init+0x304>)
 800562c:	69bb      	ldr	r3, [r7, #24]
 800562e:	6053      	str	r3, [r2, #4]
 8005630:	4b18      	ldr	r3, [pc, #96]	; (8005694 <HAL_GPIO_Init+0x304>)
 8005632:	681b      	ldr	r3, [r3, #0]
 8005634:	61bb      	str	r3, [r7, #24]
 8005636:	693b      	ldr	r3, [r7, #16]
 8005638:	43db      	mvns	r3, r3
 800563a:	69ba      	ldr	r2, [r7, #24]
 800563c:	4013      	ands	r3, r2
 800563e:	61bb      	str	r3, [r7, #24]
 8005640:	683b      	ldr	r3, [r7, #0]
 8005642:	685b      	ldr	r3, [r3, #4]
 8005644:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005648:	2b00      	cmp	r3, #0
 800564a:	d003      	beq.n	8005654 <HAL_GPIO_Init+0x2c4>
 800564c:	69ba      	ldr	r2, [r7, #24]
 800564e:	693b      	ldr	r3, [r7, #16]
 8005650:	4313      	orrs	r3, r2
 8005652:	61bb      	str	r3, [r7, #24]
 8005654:	4a0f      	ldr	r2, [pc, #60]	; (8005694 <HAL_GPIO_Init+0x304>)
 8005656:	69bb      	ldr	r3, [r7, #24]
 8005658:	6013      	str	r3, [r2, #0]
 800565a:	69fb      	ldr	r3, [r7, #28]
 800565c:	3301      	adds	r3, #1
 800565e:	61fb      	str	r3, [r7, #28]
 8005660:	69fb      	ldr	r3, [r7, #28]
 8005662:	2b0f      	cmp	r3, #15
 8005664:	f67f aea2 	bls.w	80053ac <HAL_GPIO_Init+0x1c>
 8005668:	bf00      	nop
 800566a:	bf00      	nop
 800566c:	3724      	adds	r7, #36	; 0x24
 800566e:	46bd      	mov	sp, r7
 8005670:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005674:	4770      	bx	lr
 8005676:	bf00      	nop
 8005678:	40023800 	.word	0x40023800
 800567c:	40013800 	.word	0x40013800
 8005680:	40020000 	.word	0x40020000
 8005684:	40020400 	.word	0x40020400
 8005688:	40020800 	.word	0x40020800
 800568c:	40020c00 	.word	0x40020c00
 8005690:	40021000 	.word	0x40021000
 8005694:	40013c00 	.word	0x40013c00

08005698 <HAL_GPIO_ReadPin>:
 8005698:	b480      	push	{r7}
 800569a:	b085      	sub	sp, #20
 800569c:	af00      	add	r7, sp, #0
 800569e:	6078      	str	r0, [r7, #4]
 80056a0:	460b      	mov	r3, r1
 80056a2:	807b      	strh	r3, [r7, #2]
 80056a4:	687b      	ldr	r3, [r7, #4]
 80056a6:	691a      	ldr	r2, [r3, #16]
 80056a8:	887b      	ldrh	r3, [r7, #2]
 80056aa:	4013      	ands	r3, r2
 80056ac:	2b00      	cmp	r3, #0
 80056ae:	d002      	beq.n	80056b6 <HAL_GPIO_ReadPin+0x1e>
 80056b0:	2301      	movs	r3, #1
 80056b2:	73fb      	strb	r3, [r7, #15]
 80056b4:	e001      	b.n	80056ba <HAL_GPIO_ReadPin+0x22>
 80056b6:	2300      	movs	r3, #0
 80056b8:	73fb      	strb	r3, [r7, #15]
 80056ba:	7bfb      	ldrb	r3, [r7, #15]
 80056bc:	4618      	mov	r0, r3
 80056be:	3714      	adds	r7, #20
 80056c0:	46bd      	mov	sp, r7
 80056c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056c6:	4770      	bx	lr

080056c8 <HAL_GPIO_WritePin>:
 80056c8:	b480      	push	{r7}
 80056ca:	b083      	sub	sp, #12
 80056cc:	af00      	add	r7, sp, #0
 80056ce:	6078      	str	r0, [r7, #4]
 80056d0:	460b      	mov	r3, r1
 80056d2:	807b      	strh	r3, [r7, #2]
 80056d4:	4613      	mov	r3, r2
 80056d6:	707b      	strb	r3, [r7, #1]
 80056d8:	787b      	ldrb	r3, [r7, #1]
 80056da:	2b00      	cmp	r3, #0
 80056dc:	d003      	beq.n	80056e6 <HAL_GPIO_WritePin+0x1e>
 80056de:	887a      	ldrh	r2, [r7, #2]
 80056e0:	687b      	ldr	r3, [r7, #4]
 80056e2:	619a      	str	r2, [r3, #24]
 80056e4:	e003      	b.n	80056ee <HAL_GPIO_WritePin+0x26>
 80056e6:	887b      	ldrh	r3, [r7, #2]
 80056e8:	041a      	lsls	r2, r3, #16
 80056ea:	687b      	ldr	r3, [r7, #4]
 80056ec:	619a      	str	r2, [r3, #24]
 80056ee:	bf00      	nop
 80056f0:	370c      	adds	r7, #12
 80056f2:	46bd      	mov	sp, r7
 80056f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056f8:	4770      	bx	lr
	...

080056fc <HAL_RCC_OscConfig>:
 80056fc:	b580      	push	{r7, lr}
 80056fe:	b086      	sub	sp, #24
 8005700:	af00      	add	r7, sp, #0
 8005702:	6078      	str	r0, [r7, #4]
 8005704:	687b      	ldr	r3, [r7, #4]
 8005706:	2b00      	cmp	r3, #0
 8005708:	d101      	bne.n	800570e <HAL_RCC_OscConfig+0x12>
 800570a:	2301      	movs	r3, #1
 800570c:	e267      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	681b      	ldr	r3, [r3, #0]
 8005712:	f003 0301 	and.w	r3, r3, #1
 8005716:	2b00      	cmp	r3, #0
 8005718:	d075      	beq.n	8005806 <HAL_RCC_OscConfig+0x10a>
 800571a:	4b88      	ldr	r3, [pc, #544]	; (800593c <HAL_RCC_OscConfig+0x240>)
 800571c:	689b      	ldr	r3, [r3, #8]
 800571e:	f003 030c 	and.w	r3, r3, #12
 8005722:	2b04      	cmp	r3, #4
 8005724:	d00c      	beq.n	8005740 <HAL_RCC_OscConfig+0x44>
 8005726:	4b85      	ldr	r3, [pc, #532]	; (800593c <HAL_RCC_OscConfig+0x240>)
 8005728:	689b      	ldr	r3, [r3, #8]
 800572a:	f003 030c 	and.w	r3, r3, #12
 800572e:	2b08      	cmp	r3, #8
 8005730:	d112      	bne.n	8005758 <HAL_RCC_OscConfig+0x5c>
 8005732:	4b82      	ldr	r3, [pc, #520]	; (800593c <HAL_RCC_OscConfig+0x240>)
 8005734:	685b      	ldr	r3, [r3, #4]
 8005736:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800573a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800573e:	d10b      	bne.n	8005758 <HAL_RCC_OscConfig+0x5c>
 8005740:	4b7e      	ldr	r3, [pc, #504]	; (800593c <HAL_RCC_OscConfig+0x240>)
 8005742:	681b      	ldr	r3, [r3, #0]
 8005744:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005748:	2b00      	cmp	r3, #0
 800574a:	d05b      	beq.n	8005804 <HAL_RCC_OscConfig+0x108>
 800574c:	687b      	ldr	r3, [r7, #4]
 800574e:	685b      	ldr	r3, [r3, #4]
 8005750:	2b00      	cmp	r3, #0
 8005752:	d157      	bne.n	8005804 <HAL_RCC_OscConfig+0x108>
 8005754:	2301      	movs	r3, #1
 8005756:	e242      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 8005758:	687b      	ldr	r3, [r7, #4]
 800575a:	685b      	ldr	r3, [r3, #4]
 800575c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005760:	d106      	bne.n	8005770 <HAL_RCC_OscConfig+0x74>
 8005762:	4b76      	ldr	r3, [pc, #472]	; (800593c <HAL_RCC_OscConfig+0x240>)
 8005764:	681b      	ldr	r3, [r3, #0]
 8005766:	4a75      	ldr	r2, [pc, #468]	; (800593c <HAL_RCC_OscConfig+0x240>)
 8005768:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800576c:	6013      	str	r3, [r2, #0]
 800576e:	e01d      	b.n	80057ac <HAL_RCC_OscConfig+0xb0>
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	685b      	ldr	r3, [r3, #4]
 8005774:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8005778:	d10c      	bne.n	8005794 <HAL_RCC_OscConfig+0x98>
 800577a:	4b70      	ldr	r3, [pc, #448]	; (800593c <HAL_RCC_OscConfig+0x240>)
 800577c:	681b      	ldr	r3, [r3, #0]
 800577e:	4a6f      	ldr	r2, [pc, #444]	; (800593c <HAL_RCC_OscConfig+0x240>)
 8005780:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005784:	6013      	str	r3, [r2, #0]
 8005786:	4b6d      	ldr	r3, [pc, #436]	; (800593c <HAL_RCC_OscConfig+0x240>)
 8005788:	681b      	ldr	r3, [r3, #0]
 800578a:	4a6c      	ldr	r2, [pc, #432]	; (800593c <HAL_RCC_OscConfig+0x240>)
 800578c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005790:	6013      	str	r3, [r2, #0]
 8005792:	e00b      	b.n	80057ac <HAL_RCC_OscConfig+0xb0>
 8005794:	4b69      	ldr	r3, [pc, #420]	; (800593c <HAL_RCC_OscConfig+0x240>)
 8005796:	681b      	ldr	r3, [r3, #0]
 8005798:	4a68      	ldr	r2, [pc, #416]	; (800593c <HAL_RCC_OscConfig+0x240>)
 800579a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800579e:	6013      	str	r3, [r2, #0]
 80057a0:	4b66      	ldr	r3, [pc, #408]	; (800593c <HAL_RCC_OscConfig+0x240>)
 80057a2:	681b      	ldr	r3, [r3, #0]
 80057a4:	4a65      	ldr	r2, [pc, #404]	; (800593c <HAL_RCC_OscConfig+0x240>)
 80057a6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80057aa:	6013      	str	r3, [r2, #0]
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	685b      	ldr	r3, [r3, #4]
 80057b0:	2b00      	cmp	r3, #0
 80057b2:	d013      	beq.n	80057dc <HAL_RCC_OscConfig+0xe0>
 80057b4:	f7fe fd16 	bl	80041e4 <HAL_GetTick>
 80057b8:	6138      	str	r0, [r7, #16]
 80057ba:	e008      	b.n	80057ce <HAL_RCC_OscConfig+0xd2>
 80057bc:	f7fe fd12 	bl	80041e4 <HAL_GetTick>
 80057c0:	4602      	mov	r2, r0
 80057c2:	693b      	ldr	r3, [r7, #16]
 80057c4:	1ad3      	subs	r3, r2, r3
 80057c6:	2b64      	cmp	r3, #100	; 0x64
 80057c8:	d901      	bls.n	80057ce <HAL_RCC_OscConfig+0xd2>
 80057ca:	2303      	movs	r3, #3
 80057cc:	e207      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 80057ce:	4b5b      	ldr	r3, [pc, #364]	; (800593c <HAL_RCC_OscConfig+0x240>)
 80057d0:	681b      	ldr	r3, [r3, #0]
 80057d2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80057d6:	2b00      	cmp	r3, #0
 80057d8:	d0f0      	beq.n	80057bc <HAL_RCC_OscConfig+0xc0>
 80057da:	e014      	b.n	8005806 <HAL_RCC_OscConfig+0x10a>
 80057dc:	f7fe fd02 	bl	80041e4 <HAL_GetTick>
 80057e0:	6138      	str	r0, [r7, #16]
 80057e2:	e008      	b.n	80057f6 <HAL_RCC_OscConfig+0xfa>
 80057e4:	f7fe fcfe 	bl	80041e4 <HAL_GetTick>
 80057e8:	4602      	mov	r2, r0
 80057ea:	693b      	ldr	r3, [r7, #16]
 80057ec:	1ad3      	subs	r3, r2, r3
 80057ee:	2b64      	cmp	r3, #100	; 0x64
 80057f0:	d901      	bls.n	80057f6 <HAL_RCC_OscConfig+0xfa>
 80057f2:	2303      	movs	r3, #3
 80057f4:	e1f3      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 80057f6:	4b51      	ldr	r3, [pc, #324]	; (800593c <HAL_RCC_OscConfig+0x240>)
 80057f8:	681b      	ldr	r3, [r3, #0]
 80057fa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80057fe:	2b00      	cmp	r3, #0
 8005800:	d1f0      	bne.n	80057e4 <HAL_RCC_OscConfig+0xe8>
 8005802:	e000      	b.n	8005806 <HAL_RCC_OscConfig+0x10a>
 8005804:	bf00      	nop
 8005806:	687b      	ldr	r3, [r7, #4]
 8005808:	681b      	ldr	r3, [r3, #0]
 800580a:	f003 0302 	and.w	r3, r3, #2
 800580e:	2b00      	cmp	r3, #0
 8005810:	d063      	beq.n	80058da <HAL_RCC_OscConfig+0x1de>
 8005812:	4b4a      	ldr	r3, [pc, #296]	; (800593c <HAL_RCC_OscConfig+0x240>)
 8005814:	689b      	ldr	r3, [r3, #8]
 8005816:	f003 030c 	and.w	r3, r3, #12
 800581a:	2b00      	cmp	r3, #0
 800581c:	d00b      	beq.n	8005836 <HAL_RCC_OscConfig+0x13a>
 800581e:	4b47      	ldr	r3, [pc, #284]	; (800593c <HAL_RCC_OscConfig+0x240>)
 8005820:	689b      	ldr	r3, [r3, #8]
 8005822:	f003 030c 	and.w	r3, r3, #12
 8005826:	2b08      	cmp	r3, #8
 8005828:	d11c      	bne.n	8005864 <HAL_RCC_OscConfig+0x168>
 800582a:	4b44      	ldr	r3, [pc, #272]	; (800593c <HAL_RCC_OscConfig+0x240>)
 800582c:	685b      	ldr	r3, [r3, #4]
 800582e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005832:	2b00      	cmp	r3, #0
 8005834:	d116      	bne.n	8005864 <HAL_RCC_OscConfig+0x168>
 8005836:	4b41      	ldr	r3, [pc, #260]	; (800593c <HAL_RCC_OscConfig+0x240>)
 8005838:	681b      	ldr	r3, [r3, #0]
 800583a:	f003 0302 	and.w	r3, r3, #2
 800583e:	2b00      	cmp	r3, #0
 8005840:	d005      	beq.n	800584e <HAL_RCC_OscConfig+0x152>
 8005842:	687b      	ldr	r3, [r7, #4]
 8005844:	68db      	ldr	r3, [r3, #12]
 8005846:	2b01      	cmp	r3, #1
 8005848:	d001      	beq.n	800584e <HAL_RCC_OscConfig+0x152>
 800584a:	2301      	movs	r3, #1
 800584c:	e1c7      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 800584e:	4b3b      	ldr	r3, [pc, #236]	; (800593c <HAL_RCC_OscConfig+0x240>)
 8005850:	681b      	ldr	r3, [r3, #0]
 8005852:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8005856:	687b      	ldr	r3, [r7, #4]
 8005858:	691b      	ldr	r3, [r3, #16]
 800585a:	00db      	lsls	r3, r3, #3
 800585c:	4937      	ldr	r1, [pc, #220]	; (800593c <HAL_RCC_OscConfig+0x240>)
 800585e:	4313      	orrs	r3, r2
 8005860:	600b      	str	r3, [r1, #0]
 8005862:	e03a      	b.n	80058da <HAL_RCC_OscConfig+0x1de>
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	68db      	ldr	r3, [r3, #12]
 8005868:	2b00      	cmp	r3, #0
 800586a:	d020      	beq.n	80058ae <HAL_RCC_OscConfig+0x1b2>
 800586c:	4b34      	ldr	r3, [pc, #208]	; (8005940 <HAL_RCC_OscConfig+0x244>)
 800586e:	2201      	movs	r2, #1
 8005870:	601a      	str	r2, [r3, #0]
 8005872:	f7fe fcb7 	bl	80041e4 <HAL_GetTick>
 8005876:	6138      	str	r0, [r7, #16]
 8005878:	e008      	b.n	800588c <HAL_RCC_OscConfig+0x190>
 800587a:	f7fe fcb3 	bl	80041e4 <HAL_GetTick>
 800587e:	4602      	mov	r2, r0
 8005880:	693b      	ldr	r3, [r7, #16]
 8005882:	1ad3      	subs	r3, r2, r3
 8005884:	2b02      	cmp	r3, #2
 8005886:	d901      	bls.n	800588c <HAL_RCC_OscConfig+0x190>
 8005888:	2303      	movs	r3, #3
 800588a:	e1a8      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 800588c:	4b2b      	ldr	r3, [pc, #172]	; (800593c <HAL_RCC_OscConfig+0x240>)
 800588e:	681b      	ldr	r3, [r3, #0]
 8005890:	f003 0302 	and.w	r3, r3, #2
 8005894:	2b00      	cmp	r3, #0
 8005896:	d0f0      	beq.n	800587a <HAL_RCC_OscConfig+0x17e>
 8005898:	4b28      	ldr	r3, [pc, #160]	; (800593c <HAL_RCC_OscConfig+0x240>)
 800589a:	681b      	ldr	r3, [r3, #0]
 800589c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80058a0:	687b      	ldr	r3, [r7, #4]
 80058a2:	691b      	ldr	r3, [r3, #16]
 80058a4:	00db      	lsls	r3, r3, #3
 80058a6:	4925      	ldr	r1, [pc, #148]	; (800593c <HAL_RCC_OscConfig+0x240>)
 80058a8:	4313      	orrs	r3, r2
 80058aa:	600b      	str	r3, [r1, #0]
 80058ac:	e015      	b.n	80058da <HAL_RCC_OscConfig+0x1de>
 80058ae:	4b24      	ldr	r3, [pc, #144]	; (8005940 <HAL_RCC_OscConfig+0x244>)
 80058b0:	2200      	movs	r2, #0
 80058b2:	601a      	str	r2, [r3, #0]
 80058b4:	f7fe fc96 	bl	80041e4 <HAL_GetTick>
 80058b8:	6138      	str	r0, [r7, #16]
 80058ba:	e008      	b.n	80058ce <HAL_RCC_OscConfig+0x1d2>
 80058bc:	f7fe fc92 	bl	80041e4 <HAL_GetTick>
 80058c0:	4602      	mov	r2, r0
 80058c2:	693b      	ldr	r3, [r7, #16]
 80058c4:	1ad3      	subs	r3, r2, r3
 80058c6:	2b02      	cmp	r3, #2
 80058c8:	d901      	bls.n	80058ce <HAL_RCC_OscConfig+0x1d2>
 80058ca:	2303      	movs	r3, #3
 80058cc:	e187      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 80058ce:	4b1b      	ldr	r3, [pc, #108]	; (800593c <HAL_RCC_OscConfig+0x240>)
 80058d0:	681b      	ldr	r3, [r3, #0]
 80058d2:	f003 0302 	and.w	r3, r3, #2
 80058d6:	2b00      	cmp	r3, #0
 80058d8:	d1f0      	bne.n	80058bc <HAL_RCC_OscConfig+0x1c0>
 80058da:	687b      	ldr	r3, [r7, #4]
 80058dc:	681b      	ldr	r3, [r3, #0]
 80058de:	f003 0308 	and.w	r3, r3, #8
 80058e2:	2b00      	cmp	r3, #0
 80058e4:	d036      	beq.n	8005954 <HAL_RCC_OscConfig+0x258>
 80058e6:	687b      	ldr	r3, [r7, #4]
 80058e8:	695b      	ldr	r3, [r3, #20]
 80058ea:	2b00      	cmp	r3, #0
 80058ec:	d016      	beq.n	800591c <HAL_RCC_OscConfig+0x220>
 80058ee:	4b15      	ldr	r3, [pc, #84]	; (8005944 <HAL_RCC_OscConfig+0x248>)
 80058f0:	2201      	movs	r2, #1
 80058f2:	601a      	str	r2, [r3, #0]
 80058f4:	f7fe fc76 	bl	80041e4 <HAL_GetTick>
 80058f8:	6138      	str	r0, [r7, #16]
 80058fa:	e008      	b.n	800590e <HAL_RCC_OscConfig+0x212>
 80058fc:	f7fe fc72 	bl	80041e4 <HAL_GetTick>
 8005900:	4602      	mov	r2, r0
 8005902:	693b      	ldr	r3, [r7, #16]
 8005904:	1ad3      	subs	r3, r2, r3
 8005906:	2b02      	cmp	r3, #2
 8005908:	d901      	bls.n	800590e <HAL_RCC_OscConfig+0x212>
 800590a:	2303      	movs	r3, #3
 800590c:	e167      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 800590e:	4b0b      	ldr	r3, [pc, #44]	; (800593c <HAL_RCC_OscConfig+0x240>)
 8005910:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005912:	f003 0302 	and.w	r3, r3, #2
 8005916:	2b00      	cmp	r3, #0
 8005918:	d0f0      	beq.n	80058fc <HAL_RCC_OscConfig+0x200>
 800591a:	e01b      	b.n	8005954 <HAL_RCC_OscConfig+0x258>
 800591c:	4b09      	ldr	r3, [pc, #36]	; (8005944 <HAL_RCC_OscConfig+0x248>)
 800591e:	2200      	movs	r2, #0
 8005920:	601a      	str	r2, [r3, #0]
 8005922:	f7fe fc5f 	bl	80041e4 <HAL_GetTick>
 8005926:	6138      	str	r0, [r7, #16]
 8005928:	e00e      	b.n	8005948 <HAL_RCC_OscConfig+0x24c>
 800592a:	f7fe fc5b 	bl	80041e4 <HAL_GetTick>
 800592e:	4602      	mov	r2, r0
 8005930:	693b      	ldr	r3, [r7, #16]
 8005932:	1ad3      	subs	r3, r2, r3
 8005934:	2b02      	cmp	r3, #2
 8005936:	d907      	bls.n	8005948 <HAL_RCC_OscConfig+0x24c>
 8005938:	2303      	movs	r3, #3
 800593a:	e150      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 800593c:	40023800 	.word	0x40023800
 8005940:	42470000 	.word	0x42470000
 8005944:	42470e80 	.word	0x42470e80
 8005948:	4b88      	ldr	r3, [pc, #544]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 800594a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800594c:	f003 0302 	and.w	r3, r3, #2
 8005950:	2b00      	cmp	r3, #0
 8005952:	d1ea      	bne.n	800592a <HAL_RCC_OscConfig+0x22e>
 8005954:	687b      	ldr	r3, [r7, #4]
 8005956:	681b      	ldr	r3, [r3, #0]
 8005958:	f003 0304 	and.w	r3, r3, #4
 800595c:	2b00      	cmp	r3, #0
 800595e:	f000 8097 	beq.w	8005a90 <HAL_RCC_OscConfig+0x394>
 8005962:	2300      	movs	r3, #0
 8005964:	75fb      	strb	r3, [r7, #23]
 8005966:	4b81      	ldr	r3, [pc, #516]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005968:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800596a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800596e:	2b00      	cmp	r3, #0
 8005970:	d10f      	bne.n	8005992 <HAL_RCC_OscConfig+0x296>
 8005972:	2300      	movs	r3, #0
 8005974:	60bb      	str	r3, [r7, #8]
 8005976:	4b7d      	ldr	r3, [pc, #500]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005978:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800597a:	4a7c      	ldr	r2, [pc, #496]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 800597c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005980:	6413      	str	r3, [r2, #64]	; 0x40
 8005982:	4b7a      	ldr	r3, [pc, #488]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005984:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005986:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800598a:	60bb      	str	r3, [r7, #8]
 800598c:	68bb      	ldr	r3, [r7, #8]
 800598e:	2301      	movs	r3, #1
 8005990:	75fb      	strb	r3, [r7, #23]
 8005992:	4b77      	ldr	r3, [pc, #476]	; (8005b70 <HAL_RCC_OscConfig+0x474>)
 8005994:	681b      	ldr	r3, [r3, #0]
 8005996:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800599a:	2b00      	cmp	r3, #0
 800599c:	d118      	bne.n	80059d0 <HAL_RCC_OscConfig+0x2d4>
 800599e:	4b74      	ldr	r3, [pc, #464]	; (8005b70 <HAL_RCC_OscConfig+0x474>)
 80059a0:	681b      	ldr	r3, [r3, #0]
 80059a2:	4a73      	ldr	r2, [pc, #460]	; (8005b70 <HAL_RCC_OscConfig+0x474>)
 80059a4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80059a8:	6013      	str	r3, [r2, #0]
 80059aa:	f7fe fc1b 	bl	80041e4 <HAL_GetTick>
 80059ae:	6138      	str	r0, [r7, #16]
 80059b0:	e008      	b.n	80059c4 <HAL_RCC_OscConfig+0x2c8>
 80059b2:	f7fe fc17 	bl	80041e4 <HAL_GetTick>
 80059b6:	4602      	mov	r2, r0
 80059b8:	693b      	ldr	r3, [r7, #16]
 80059ba:	1ad3      	subs	r3, r2, r3
 80059bc:	2b02      	cmp	r3, #2
 80059be:	d901      	bls.n	80059c4 <HAL_RCC_OscConfig+0x2c8>
 80059c0:	2303      	movs	r3, #3
 80059c2:	e10c      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 80059c4:	4b6a      	ldr	r3, [pc, #424]	; (8005b70 <HAL_RCC_OscConfig+0x474>)
 80059c6:	681b      	ldr	r3, [r3, #0]
 80059c8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80059cc:	2b00      	cmp	r3, #0
 80059ce:	d0f0      	beq.n	80059b2 <HAL_RCC_OscConfig+0x2b6>
 80059d0:	687b      	ldr	r3, [r7, #4]
 80059d2:	689b      	ldr	r3, [r3, #8]
 80059d4:	2b01      	cmp	r3, #1
 80059d6:	d106      	bne.n	80059e6 <HAL_RCC_OscConfig+0x2ea>
 80059d8:	4b64      	ldr	r3, [pc, #400]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 80059da:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80059dc:	4a63      	ldr	r2, [pc, #396]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 80059de:	f043 0301 	orr.w	r3, r3, #1
 80059e2:	6713      	str	r3, [r2, #112]	; 0x70
 80059e4:	e01c      	b.n	8005a20 <HAL_RCC_OscConfig+0x324>
 80059e6:	687b      	ldr	r3, [r7, #4]
 80059e8:	689b      	ldr	r3, [r3, #8]
 80059ea:	2b05      	cmp	r3, #5
 80059ec:	d10c      	bne.n	8005a08 <HAL_RCC_OscConfig+0x30c>
 80059ee:	4b5f      	ldr	r3, [pc, #380]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 80059f0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80059f2:	4a5e      	ldr	r2, [pc, #376]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 80059f4:	f043 0304 	orr.w	r3, r3, #4
 80059f8:	6713      	str	r3, [r2, #112]	; 0x70
 80059fa:	4b5c      	ldr	r3, [pc, #368]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 80059fc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80059fe:	4a5b      	ldr	r2, [pc, #364]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005a00:	f043 0301 	orr.w	r3, r3, #1
 8005a04:	6713      	str	r3, [r2, #112]	; 0x70
 8005a06:	e00b      	b.n	8005a20 <HAL_RCC_OscConfig+0x324>
 8005a08:	4b58      	ldr	r3, [pc, #352]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005a0a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005a0c:	4a57      	ldr	r2, [pc, #348]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005a0e:	f023 0301 	bic.w	r3, r3, #1
 8005a12:	6713      	str	r3, [r2, #112]	; 0x70
 8005a14:	4b55      	ldr	r3, [pc, #340]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005a16:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005a18:	4a54      	ldr	r2, [pc, #336]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005a1a:	f023 0304 	bic.w	r3, r3, #4
 8005a1e:	6713      	str	r3, [r2, #112]	; 0x70
 8005a20:	687b      	ldr	r3, [r7, #4]
 8005a22:	689b      	ldr	r3, [r3, #8]
 8005a24:	2b00      	cmp	r3, #0
 8005a26:	d015      	beq.n	8005a54 <HAL_RCC_OscConfig+0x358>
 8005a28:	f7fe fbdc 	bl	80041e4 <HAL_GetTick>
 8005a2c:	6138      	str	r0, [r7, #16]
 8005a2e:	e00a      	b.n	8005a46 <HAL_RCC_OscConfig+0x34a>
 8005a30:	f7fe fbd8 	bl	80041e4 <HAL_GetTick>
 8005a34:	4602      	mov	r2, r0
 8005a36:	693b      	ldr	r3, [r7, #16]
 8005a38:	1ad3      	subs	r3, r2, r3
 8005a3a:	f241 3288 	movw	r2, #5000	; 0x1388
 8005a3e:	4293      	cmp	r3, r2
 8005a40:	d901      	bls.n	8005a46 <HAL_RCC_OscConfig+0x34a>
 8005a42:	2303      	movs	r3, #3
 8005a44:	e0cb      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 8005a46:	4b49      	ldr	r3, [pc, #292]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005a48:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005a4a:	f003 0302 	and.w	r3, r3, #2
 8005a4e:	2b00      	cmp	r3, #0
 8005a50:	d0ee      	beq.n	8005a30 <HAL_RCC_OscConfig+0x334>
 8005a52:	e014      	b.n	8005a7e <HAL_RCC_OscConfig+0x382>
 8005a54:	f7fe fbc6 	bl	80041e4 <HAL_GetTick>
 8005a58:	6138      	str	r0, [r7, #16]
 8005a5a:	e00a      	b.n	8005a72 <HAL_RCC_OscConfig+0x376>
 8005a5c:	f7fe fbc2 	bl	80041e4 <HAL_GetTick>
 8005a60:	4602      	mov	r2, r0
 8005a62:	693b      	ldr	r3, [r7, #16]
 8005a64:	1ad3      	subs	r3, r2, r3
 8005a66:	f241 3288 	movw	r2, #5000	; 0x1388
 8005a6a:	4293      	cmp	r3, r2
 8005a6c:	d901      	bls.n	8005a72 <HAL_RCC_OscConfig+0x376>
 8005a6e:	2303      	movs	r3, #3
 8005a70:	e0b5      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 8005a72:	4b3e      	ldr	r3, [pc, #248]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005a74:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005a76:	f003 0302 	and.w	r3, r3, #2
 8005a7a:	2b00      	cmp	r3, #0
 8005a7c:	d1ee      	bne.n	8005a5c <HAL_RCC_OscConfig+0x360>
 8005a7e:	7dfb      	ldrb	r3, [r7, #23]
 8005a80:	2b01      	cmp	r3, #1
 8005a82:	d105      	bne.n	8005a90 <HAL_RCC_OscConfig+0x394>
 8005a84:	4b39      	ldr	r3, [pc, #228]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005a86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a88:	4a38      	ldr	r2, [pc, #224]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005a8a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005a8e:	6413      	str	r3, [r2, #64]	; 0x40
 8005a90:	687b      	ldr	r3, [r7, #4]
 8005a92:	699b      	ldr	r3, [r3, #24]
 8005a94:	2b00      	cmp	r3, #0
 8005a96:	f000 80a1 	beq.w	8005bdc <HAL_RCC_OscConfig+0x4e0>
 8005a9a:	4b34      	ldr	r3, [pc, #208]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005a9c:	689b      	ldr	r3, [r3, #8]
 8005a9e:	f003 030c 	and.w	r3, r3, #12
 8005aa2:	2b08      	cmp	r3, #8
 8005aa4:	d05c      	beq.n	8005b60 <HAL_RCC_OscConfig+0x464>
 8005aa6:	687b      	ldr	r3, [r7, #4]
 8005aa8:	699b      	ldr	r3, [r3, #24]
 8005aaa:	2b02      	cmp	r3, #2
 8005aac:	d141      	bne.n	8005b32 <HAL_RCC_OscConfig+0x436>
 8005aae:	4b31      	ldr	r3, [pc, #196]	; (8005b74 <HAL_RCC_OscConfig+0x478>)
 8005ab0:	2200      	movs	r2, #0
 8005ab2:	601a      	str	r2, [r3, #0]
 8005ab4:	f7fe fb96 	bl	80041e4 <HAL_GetTick>
 8005ab8:	6138      	str	r0, [r7, #16]
 8005aba:	e008      	b.n	8005ace <HAL_RCC_OscConfig+0x3d2>
 8005abc:	f7fe fb92 	bl	80041e4 <HAL_GetTick>
 8005ac0:	4602      	mov	r2, r0
 8005ac2:	693b      	ldr	r3, [r7, #16]
 8005ac4:	1ad3      	subs	r3, r2, r3
 8005ac6:	2b02      	cmp	r3, #2
 8005ac8:	d901      	bls.n	8005ace <HAL_RCC_OscConfig+0x3d2>
 8005aca:	2303      	movs	r3, #3
 8005acc:	e087      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 8005ace:	4b27      	ldr	r3, [pc, #156]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005ad0:	681b      	ldr	r3, [r3, #0]
 8005ad2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005ad6:	2b00      	cmp	r3, #0
 8005ad8:	d1f0      	bne.n	8005abc <HAL_RCC_OscConfig+0x3c0>
 8005ada:	687b      	ldr	r3, [r7, #4]
 8005adc:	69da      	ldr	r2, [r3, #28]
 8005ade:	687b      	ldr	r3, [r7, #4]
 8005ae0:	6a1b      	ldr	r3, [r3, #32]
 8005ae2:	431a      	orrs	r2, r3
 8005ae4:	687b      	ldr	r3, [r7, #4]
 8005ae6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ae8:	019b      	lsls	r3, r3, #6
 8005aea:	431a      	orrs	r2, r3
 8005aec:	687b      	ldr	r3, [r7, #4]
 8005aee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005af0:	085b      	lsrs	r3, r3, #1
 8005af2:	3b01      	subs	r3, #1
 8005af4:	041b      	lsls	r3, r3, #16
 8005af6:	431a      	orrs	r2, r3
 8005af8:	687b      	ldr	r3, [r7, #4]
 8005afa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005afc:	061b      	lsls	r3, r3, #24
 8005afe:	491b      	ldr	r1, [pc, #108]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005b00:	4313      	orrs	r3, r2
 8005b02:	604b      	str	r3, [r1, #4]
 8005b04:	4b1b      	ldr	r3, [pc, #108]	; (8005b74 <HAL_RCC_OscConfig+0x478>)
 8005b06:	2201      	movs	r2, #1
 8005b08:	601a      	str	r2, [r3, #0]
 8005b0a:	f7fe fb6b 	bl	80041e4 <HAL_GetTick>
 8005b0e:	6138      	str	r0, [r7, #16]
 8005b10:	e008      	b.n	8005b24 <HAL_RCC_OscConfig+0x428>
 8005b12:	f7fe fb67 	bl	80041e4 <HAL_GetTick>
 8005b16:	4602      	mov	r2, r0
 8005b18:	693b      	ldr	r3, [r7, #16]
 8005b1a:	1ad3      	subs	r3, r2, r3
 8005b1c:	2b02      	cmp	r3, #2
 8005b1e:	d901      	bls.n	8005b24 <HAL_RCC_OscConfig+0x428>
 8005b20:	2303      	movs	r3, #3
 8005b22:	e05c      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 8005b24:	4b11      	ldr	r3, [pc, #68]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005b26:	681b      	ldr	r3, [r3, #0]
 8005b28:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005b2c:	2b00      	cmp	r3, #0
 8005b2e:	d0f0      	beq.n	8005b12 <HAL_RCC_OscConfig+0x416>
 8005b30:	e054      	b.n	8005bdc <HAL_RCC_OscConfig+0x4e0>
 8005b32:	4b10      	ldr	r3, [pc, #64]	; (8005b74 <HAL_RCC_OscConfig+0x478>)
 8005b34:	2200      	movs	r2, #0
 8005b36:	601a      	str	r2, [r3, #0]
 8005b38:	f7fe fb54 	bl	80041e4 <HAL_GetTick>
 8005b3c:	6138      	str	r0, [r7, #16]
 8005b3e:	e008      	b.n	8005b52 <HAL_RCC_OscConfig+0x456>
 8005b40:	f7fe fb50 	bl	80041e4 <HAL_GetTick>
 8005b44:	4602      	mov	r2, r0
 8005b46:	693b      	ldr	r3, [r7, #16]
 8005b48:	1ad3      	subs	r3, r2, r3
 8005b4a:	2b02      	cmp	r3, #2
 8005b4c:	d901      	bls.n	8005b52 <HAL_RCC_OscConfig+0x456>
 8005b4e:	2303      	movs	r3, #3
 8005b50:	e045      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 8005b52:	4b06      	ldr	r3, [pc, #24]	; (8005b6c <HAL_RCC_OscConfig+0x470>)
 8005b54:	681b      	ldr	r3, [r3, #0]
 8005b56:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005b5a:	2b00      	cmp	r3, #0
 8005b5c:	d1f0      	bne.n	8005b40 <HAL_RCC_OscConfig+0x444>
 8005b5e:	e03d      	b.n	8005bdc <HAL_RCC_OscConfig+0x4e0>
 8005b60:	687b      	ldr	r3, [r7, #4]
 8005b62:	699b      	ldr	r3, [r3, #24]
 8005b64:	2b01      	cmp	r3, #1
 8005b66:	d107      	bne.n	8005b78 <HAL_RCC_OscConfig+0x47c>
 8005b68:	2301      	movs	r3, #1
 8005b6a:	e038      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 8005b6c:	40023800 	.word	0x40023800
 8005b70:	40007000 	.word	0x40007000
 8005b74:	42470060 	.word	0x42470060
 8005b78:	4b1b      	ldr	r3, [pc, #108]	; (8005be8 <HAL_RCC_OscConfig+0x4ec>)
 8005b7a:	685b      	ldr	r3, [r3, #4]
 8005b7c:	60fb      	str	r3, [r7, #12]
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	699b      	ldr	r3, [r3, #24]
 8005b82:	2b01      	cmp	r3, #1
 8005b84:	d028      	beq.n	8005bd8 <HAL_RCC_OscConfig+0x4dc>
 8005b86:	68fb      	ldr	r3, [r7, #12]
 8005b88:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8005b8c:	687b      	ldr	r3, [r7, #4]
 8005b8e:	69db      	ldr	r3, [r3, #28]
 8005b90:	429a      	cmp	r2, r3
 8005b92:	d121      	bne.n	8005bd8 <HAL_RCC_OscConfig+0x4dc>
 8005b94:	68fb      	ldr	r3, [r7, #12]
 8005b96:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8005b9a:	687b      	ldr	r3, [r7, #4]
 8005b9c:	6a1b      	ldr	r3, [r3, #32]
 8005b9e:	429a      	cmp	r2, r3
 8005ba0:	d11a      	bne.n	8005bd8 <HAL_RCC_OscConfig+0x4dc>
 8005ba2:	68fa      	ldr	r2, [r7, #12]
 8005ba4:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8005ba8:	4013      	ands	r3, r2
 8005baa:	687a      	ldr	r2, [r7, #4]
 8005bac:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8005bae:	0192      	lsls	r2, r2, #6
 8005bb0:	4293      	cmp	r3, r2
 8005bb2:	d111      	bne.n	8005bd8 <HAL_RCC_OscConfig+0x4dc>
 8005bb4:	68fb      	ldr	r3, [r7, #12]
 8005bb6:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8005bba:	687b      	ldr	r3, [r7, #4]
 8005bbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005bbe:	085b      	lsrs	r3, r3, #1
 8005bc0:	3b01      	subs	r3, #1
 8005bc2:	041b      	lsls	r3, r3, #16
 8005bc4:	429a      	cmp	r2, r3
 8005bc6:	d107      	bne.n	8005bd8 <HAL_RCC_OscConfig+0x4dc>
 8005bc8:	68fb      	ldr	r3, [r7, #12]
 8005bca:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8005bce:	687b      	ldr	r3, [r7, #4]
 8005bd0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005bd2:	061b      	lsls	r3, r3, #24
 8005bd4:	429a      	cmp	r2, r3
 8005bd6:	d001      	beq.n	8005bdc <HAL_RCC_OscConfig+0x4e0>
 8005bd8:	2301      	movs	r3, #1
 8005bda:	e000      	b.n	8005bde <HAL_RCC_OscConfig+0x4e2>
 8005bdc:	2300      	movs	r3, #0
 8005bde:	4618      	mov	r0, r3
 8005be0:	3718      	adds	r7, #24
 8005be2:	46bd      	mov	sp, r7
 8005be4:	bd80      	pop	{r7, pc}
 8005be6:	bf00      	nop
 8005be8:	40023800 	.word	0x40023800

08005bec <HAL_RCC_ClockConfig>:
 8005bec:	b580      	push	{r7, lr}
 8005bee:	b084      	sub	sp, #16
 8005bf0:	af00      	add	r7, sp, #0
 8005bf2:	6078      	str	r0, [r7, #4]
 8005bf4:	6039      	str	r1, [r7, #0]
 8005bf6:	687b      	ldr	r3, [r7, #4]
 8005bf8:	2b00      	cmp	r3, #0
 8005bfa:	d101      	bne.n	8005c00 <HAL_RCC_ClockConfig+0x14>
 8005bfc:	2301      	movs	r3, #1
 8005bfe:	e0cc      	b.n	8005d9a <HAL_RCC_ClockConfig+0x1ae>
 8005c00:	4b68      	ldr	r3, [pc, #416]	; (8005da4 <HAL_RCC_ClockConfig+0x1b8>)
 8005c02:	681b      	ldr	r3, [r3, #0]
 8005c04:	f003 0307 	and.w	r3, r3, #7
 8005c08:	683a      	ldr	r2, [r7, #0]
 8005c0a:	429a      	cmp	r2, r3
 8005c0c:	d90c      	bls.n	8005c28 <HAL_RCC_ClockConfig+0x3c>
 8005c0e:	4b65      	ldr	r3, [pc, #404]	; (8005da4 <HAL_RCC_ClockConfig+0x1b8>)
 8005c10:	683a      	ldr	r2, [r7, #0]
 8005c12:	b2d2      	uxtb	r2, r2
 8005c14:	701a      	strb	r2, [r3, #0]
 8005c16:	4b63      	ldr	r3, [pc, #396]	; (8005da4 <HAL_RCC_ClockConfig+0x1b8>)
 8005c18:	681b      	ldr	r3, [r3, #0]
 8005c1a:	f003 0307 	and.w	r3, r3, #7
 8005c1e:	683a      	ldr	r2, [r7, #0]
 8005c20:	429a      	cmp	r2, r3
 8005c22:	d001      	beq.n	8005c28 <HAL_RCC_ClockConfig+0x3c>
 8005c24:	2301      	movs	r3, #1
 8005c26:	e0b8      	b.n	8005d9a <HAL_RCC_ClockConfig+0x1ae>
 8005c28:	687b      	ldr	r3, [r7, #4]
 8005c2a:	681b      	ldr	r3, [r3, #0]
 8005c2c:	f003 0302 	and.w	r3, r3, #2
 8005c30:	2b00      	cmp	r3, #0
 8005c32:	d020      	beq.n	8005c76 <HAL_RCC_ClockConfig+0x8a>
 8005c34:	687b      	ldr	r3, [r7, #4]
 8005c36:	681b      	ldr	r3, [r3, #0]
 8005c38:	f003 0304 	and.w	r3, r3, #4
 8005c3c:	2b00      	cmp	r3, #0
 8005c3e:	d005      	beq.n	8005c4c <HAL_RCC_ClockConfig+0x60>
 8005c40:	4b59      	ldr	r3, [pc, #356]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005c42:	689b      	ldr	r3, [r3, #8]
 8005c44:	4a58      	ldr	r2, [pc, #352]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005c46:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8005c4a:	6093      	str	r3, [r2, #8]
 8005c4c:	687b      	ldr	r3, [r7, #4]
 8005c4e:	681b      	ldr	r3, [r3, #0]
 8005c50:	f003 0308 	and.w	r3, r3, #8
 8005c54:	2b00      	cmp	r3, #0
 8005c56:	d005      	beq.n	8005c64 <HAL_RCC_ClockConfig+0x78>
 8005c58:	4b53      	ldr	r3, [pc, #332]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005c5a:	689b      	ldr	r3, [r3, #8]
 8005c5c:	4a52      	ldr	r2, [pc, #328]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005c5e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8005c62:	6093      	str	r3, [r2, #8]
 8005c64:	4b50      	ldr	r3, [pc, #320]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005c66:	689b      	ldr	r3, [r3, #8]
 8005c68:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	689b      	ldr	r3, [r3, #8]
 8005c70:	494d      	ldr	r1, [pc, #308]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005c72:	4313      	orrs	r3, r2
 8005c74:	608b      	str	r3, [r1, #8]
 8005c76:	687b      	ldr	r3, [r7, #4]
 8005c78:	681b      	ldr	r3, [r3, #0]
 8005c7a:	f003 0301 	and.w	r3, r3, #1
 8005c7e:	2b00      	cmp	r3, #0
 8005c80:	d044      	beq.n	8005d0c <HAL_RCC_ClockConfig+0x120>
 8005c82:	687b      	ldr	r3, [r7, #4]
 8005c84:	685b      	ldr	r3, [r3, #4]
 8005c86:	2b01      	cmp	r3, #1
 8005c88:	d107      	bne.n	8005c9a <HAL_RCC_ClockConfig+0xae>
 8005c8a:	4b47      	ldr	r3, [pc, #284]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005c8c:	681b      	ldr	r3, [r3, #0]
 8005c8e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005c92:	2b00      	cmp	r3, #0
 8005c94:	d119      	bne.n	8005cca <HAL_RCC_ClockConfig+0xde>
 8005c96:	2301      	movs	r3, #1
 8005c98:	e07f      	b.n	8005d9a <HAL_RCC_ClockConfig+0x1ae>
 8005c9a:	687b      	ldr	r3, [r7, #4]
 8005c9c:	685b      	ldr	r3, [r3, #4]
 8005c9e:	2b02      	cmp	r3, #2
 8005ca0:	d003      	beq.n	8005caa <HAL_RCC_ClockConfig+0xbe>
 8005ca2:	687b      	ldr	r3, [r7, #4]
 8005ca4:	685b      	ldr	r3, [r3, #4]
 8005ca6:	2b03      	cmp	r3, #3
 8005ca8:	d107      	bne.n	8005cba <HAL_RCC_ClockConfig+0xce>
 8005caa:	4b3f      	ldr	r3, [pc, #252]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005cac:	681b      	ldr	r3, [r3, #0]
 8005cae:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005cb2:	2b00      	cmp	r3, #0
 8005cb4:	d109      	bne.n	8005cca <HAL_RCC_ClockConfig+0xde>
 8005cb6:	2301      	movs	r3, #1
 8005cb8:	e06f      	b.n	8005d9a <HAL_RCC_ClockConfig+0x1ae>
 8005cba:	4b3b      	ldr	r3, [pc, #236]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005cbc:	681b      	ldr	r3, [r3, #0]
 8005cbe:	f003 0302 	and.w	r3, r3, #2
 8005cc2:	2b00      	cmp	r3, #0
 8005cc4:	d101      	bne.n	8005cca <HAL_RCC_ClockConfig+0xde>
 8005cc6:	2301      	movs	r3, #1
 8005cc8:	e067      	b.n	8005d9a <HAL_RCC_ClockConfig+0x1ae>
 8005cca:	4b37      	ldr	r3, [pc, #220]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005ccc:	689b      	ldr	r3, [r3, #8]
 8005cce:	f023 0203 	bic.w	r2, r3, #3
 8005cd2:	687b      	ldr	r3, [r7, #4]
 8005cd4:	685b      	ldr	r3, [r3, #4]
 8005cd6:	4934      	ldr	r1, [pc, #208]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005cd8:	4313      	orrs	r3, r2
 8005cda:	608b      	str	r3, [r1, #8]
 8005cdc:	f7fe fa82 	bl	80041e4 <HAL_GetTick>
 8005ce0:	60f8      	str	r0, [r7, #12]
 8005ce2:	e00a      	b.n	8005cfa <HAL_RCC_ClockConfig+0x10e>
 8005ce4:	f7fe fa7e 	bl	80041e4 <HAL_GetTick>
 8005ce8:	4602      	mov	r2, r0
 8005cea:	68fb      	ldr	r3, [r7, #12]
 8005cec:	1ad3      	subs	r3, r2, r3
 8005cee:	f241 3288 	movw	r2, #5000	; 0x1388
 8005cf2:	4293      	cmp	r3, r2
 8005cf4:	d901      	bls.n	8005cfa <HAL_RCC_ClockConfig+0x10e>
 8005cf6:	2303      	movs	r3, #3
 8005cf8:	e04f      	b.n	8005d9a <HAL_RCC_ClockConfig+0x1ae>
 8005cfa:	4b2b      	ldr	r3, [pc, #172]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005cfc:	689b      	ldr	r3, [r3, #8]
 8005cfe:	f003 020c 	and.w	r2, r3, #12
 8005d02:	687b      	ldr	r3, [r7, #4]
 8005d04:	685b      	ldr	r3, [r3, #4]
 8005d06:	009b      	lsls	r3, r3, #2
 8005d08:	429a      	cmp	r2, r3
 8005d0a:	d1eb      	bne.n	8005ce4 <HAL_RCC_ClockConfig+0xf8>
 8005d0c:	4b25      	ldr	r3, [pc, #148]	; (8005da4 <HAL_RCC_ClockConfig+0x1b8>)
 8005d0e:	681b      	ldr	r3, [r3, #0]
 8005d10:	f003 0307 	and.w	r3, r3, #7
 8005d14:	683a      	ldr	r2, [r7, #0]
 8005d16:	429a      	cmp	r2, r3
 8005d18:	d20c      	bcs.n	8005d34 <HAL_RCC_ClockConfig+0x148>
 8005d1a:	4b22      	ldr	r3, [pc, #136]	; (8005da4 <HAL_RCC_ClockConfig+0x1b8>)
 8005d1c:	683a      	ldr	r2, [r7, #0]
 8005d1e:	b2d2      	uxtb	r2, r2
 8005d20:	701a      	strb	r2, [r3, #0]
 8005d22:	4b20      	ldr	r3, [pc, #128]	; (8005da4 <HAL_RCC_ClockConfig+0x1b8>)
 8005d24:	681b      	ldr	r3, [r3, #0]
 8005d26:	f003 0307 	and.w	r3, r3, #7
 8005d2a:	683a      	ldr	r2, [r7, #0]
 8005d2c:	429a      	cmp	r2, r3
 8005d2e:	d001      	beq.n	8005d34 <HAL_RCC_ClockConfig+0x148>
 8005d30:	2301      	movs	r3, #1
 8005d32:	e032      	b.n	8005d9a <HAL_RCC_ClockConfig+0x1ae>
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	681b      	ldr	r3, [r3, #0]
 8005d38:	f003 0304 	and.w	r3, r3, #4
 8005d3c:	2b00      	cmp	r3, #0
 8005d3e:	d008      	beq.n	8005d52 <HAL_RCC_ClockConfig+0x166>
 8005d40:	4b19      	ldr	r3, [pc, #100]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005d42:	689b      	ldr	r3, [r3, #8]
 8005d44:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8005d48:	687b      	ldr	r3, [r7, #4]
 8005d4a:	68db      	ldr	r3, [r3, #12]
 8005d4c:	4916      	ldr	r1, [pc, #88]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005d4e:	4313      	orrs	r3, r2
 8005d50:	608b      	str	r3, [r1, #8]
 8005d52:	687b      	ldr	r3, [r7, #4]
 8005d54:	681b      	ldr	r3, [r3, #0]
 8005d56:	f003 0308 	and.w	r3, r3, #8
 8005d5a:	2b00      	cmp	r3, #0
 8005d5c:	d009      	beq.n	8005d72 <HAL_RCC_ClockConfig+0x186>
 8005d5e:	4b12      	ldr	r3, [pc, #72]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005d60:	689b      	ldr	r3, [r3, #8]
 8005d62:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8005d66:	687b      	ldr	r3, [r7, #4]
 8005d68:	691b      	ldr	r3, [r3, #16]
 8005d6a:	00db      	lsls	r3, r3, #3
 8005d6c:	490e      	ldr	r1, [pc, #56]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005d6e:	4313      	orrs	r3, r2
 8005d70:	608b      	str	r3, [r1, #8]
 8005d72:	f000 f821 	bl	8005db8 <HAL_RCC_GetSysClockFreq>
 8005d76:	4602      	mov	r2, r0
 8005d78:	4b0b      	ldr	r3, [pc, #44]	; (8005da8 <HAL_RCC_ClockConfig+0x1bc>)
 8005d7a:	689b      	ldr	r3, [r3, #8]
 8005d7c:	091b      	lsrs	r3, r3, #4
 8005d7e:	f003 030f 	and.w	r3, r3, #15
 8005d82:	490a      	ldr	r1, [pc, #40]	; (8005dac <HAL_RCC_ClockConfig+0x1c0>)
 8005d84:	5ccb      	ldrb	r3, [r1, r3]
 8005d86:	fa22 f303 	lsr.w	r3, r2, r3
 8005d8a:	4a09      	ldr	r2, [pc, #36]	; (8005db0 <HAL_RCC_ClockConfig+0x1c4>)
 8005d8c:	6013      	str	r3, [r2, #0]
 8005d8e:	4b09      	ldr	r3, [pc, #36]	; (8005db4 <HAL_RCC_ClockConfig+0x1c8>)
 8005d90:	681b      	ldr	r3, [r3, #0]
 8005d92:	4618      	mov	r0, r3
 8005d94:	f7fe f9e2 	bl	800415c <HAL_InitTick>
 8005d98:	2300      	movs	r3, #0
 8005d9a:	4618      	mov	r0, r3
 8005d9c:	3710      	adds	r7, #16
 8005d9e:	46bd      	mov	sp, r7
 8005da0:	bd80      	pop	{r7, pc}
 8005da2:	bf00      	nop
 8005da4:	40023c00 	.word	0x40023c00
 8005da8:	40023800 	.word	0x40023800
 8005dac:	08010b4c 	.word	0x08010b4c
 8005db0:	2000000c 	.word	0x2000000c
 8005db4:	20000014 	.word	0x20000014

08005db8 <HAL_RCC_GetSysClockFreq>:
 8005db8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005dbc:	b094      	sub	sp, #80	; 0x50
 8005dbe:	af00      	add	r7, sp, #0
 8005dc0:	2300      	movs	r3, #0
 8005dc2:	647b      	str	r3, [r7, #68]	; 0x44
 8005dc4:	2300      	movs	r3, #0
 8005dc6:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005dc8:	2300      	movs	r3, #0
 8005dca:	643b      	str	r3, [r7, #64]	; 0x40
 8005dcc:	2300      	movs	r3, #0
 8005dce:	64bb      	str	r3, [r7, #72]	; 0x48
 8005dd0:	4b79      	ldr	r3, [pc, #484]	; (8005fb8 <HAL_RCC_GetSysClockFreq+0x200>)
 8005dd2:	689b      	ldr	r3, [r3, #8]
 8005dd4:	f003 030c 	and.w	r3, r3, #12
 8005dd8:	2b08      	cmp	r3, #8
 8005dda:	d00d      	beq.n	8005df8 <HAL_RCC_GetSysClockFreq+0x40>
 8005ddc:	2b08      	cmp	r3, #8
 8005dde:	f200 80e1 	bhi.w	8005fa4 <HAL_RCC_GetSysClockFreq+0x1ec>
 8005de2:	2b00      	cmp	r3, #0
 8005de4:	d002      	beq.n	8005dec <HAL_RCC_GetSysClockFreq+0x34>
 8005de6:	2b04      	cmp	r3, #4
 8005de8:	d003      	beq.n	8005df2 <HAL_RCC_GetSysClockFreq+0x3a>
 8005dea:	e0db      	b.n	8005fa4 <HAL_RCC_GetSysClockFreq+0x1ec>
 8005dec:	4b73      	ldr	r3, [pc, #460]	; (8005fbc <HAL_RCC_GetSysClockFreq+0x204>)
 8005dee:	64bb      	str	r3, [r7, #72]	; 0x48
 8005df0:	e0db      	b.n	8005faa <HAL_RCC_GetSysClockFreq+0x1f2>
 8005df2:	4b73      	ldr	r3, [pc, #460]	; (8005fc0 <HAL_RCC_GetSysClockFreq+0x208>)
 8005df4:	64bb      	str	r3, [r7, #72]	; 0x48
 8005df6:	e0d8      	b.n	8005faa <HAL_RCC_GetSysClockFreq+0x1f2>
 8005df8:	4b6f      	ldr	r3, [pc, #444]	; (8005fb8 <HAL_RCC_GetSysClockFreq+0x200>)
 8005dfa:	685b      	ldr	r3, [r3, #4]
 8005dfc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8005e00:	647b      	str	r3, [r7, #68]	; 0x44
 8005e02:	4b6d      	ldr	r3, [pc, #436]	; (8005fb8 <HAL_RCC_GetSysClockFreq+0x200>)
 8005e04:	685b      	ldr	r3, [r3, #4]
 8005e06:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005e0a:	2b00      	cmp	r3, #0
 8005e0c:	d063      	beq.n	8005ed6 <HAL_RCC_GetSysClockFreq+0x11e>
 8005e0e:	4b6a      	ldr	r3, [pc, #424]	; (8005fb8 <HAL_RCC_GetSysClockFreq+0x200>)
 8005e10:	685b      	ldr	r3, [r3, #4]
 8005e12:	099b      	lsrs	r3, r3, #6
 8005e14:	2200      	movs	r2, #0
 8005e16:	63bb      	str	r3, [r7, #56]	; 0x38
 8005e18:	63fa      	str	r2, [r7, #60]	; 0x3c
 8005e1a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005e1c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005e20:	633b      	str	r3, [r7, #48]	; 0x30
 8005e22:	2300      	movs	r3, #0
 8005e24:	637b      	str	r3, [r7, #52]	; 0x34
 8005e26:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8005e2a:	4622      	mov	r2, r4
 8005e2c:	462b      	mov	r3, r5
 8005e2e:	f04f 0000 	mov.w	r0, #0
 8005e32:	f04f 0100 	mov.w	r1, #0
 8005e36:	0159      	lsls	r1, r3, #5
 8005e38:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005e3c:	0150      	lsls	r0, r2, #5
 8005e3e:	4602      	mov	r2, r0
 8005e40:	460b      	mov	r3, r1
 8005e42:	4621      	mov	r1, r4
 8005e44:	1a51      	subs	r1, r2, r1
 8005e46:	6139      	str	r1, [r7, #16]
 8005e48:	4629      	mov	r1, r5
 8005e4a:	eb63 0301 	sbc.w	r3, r3, r1
 8005e4e:	617b      	str	r3, [r7, #20]
 8005e50:	f04f 0200 	mov.w	r2, #0
 8005e54:	f04f 0300 	mov.w	r3, #0
 8005e58:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8005e5c:	4659      	mov	r1, fp
 8005e5e:	018b      	lsls	r3, r1, #6
 8005e60:	4651      	mov	r1, sl
 8005e62:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005e66:	4651      	mov	r1, sl
 8005e68:	018a      	lsls	r2, r1, #6
 8005e6a:	4651      	mov	r1, sl
 8005e6c:	ebb2 0801 	subs.w	r8, r2, r1
 8005e70:	4659      	mov	r1, fp
 8005e72:	eb63 0901 	sbc.w	r9, r3, r1
 8005e76:	f04f 0200 	mov.w	r2, #0
 8005e7a:	f04f 0300 	mov.w	r3, #0
 8005e7e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8005e82:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005e86:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005e8a:	4690      	mov	r8, r2
 8005e8c:	4699      	mov	r9, r3
 8005e8e:	4623      	mov	r3, r4
 8005e90:	eb18 0303 	adds.w	r3, r8, r3
 8005e94:	60bb      	str	r3, [r7, #8]
 8005e96:	462b      	mov	r3, r5
 8005e98:	eb49 0303 	adc.w	r3, r9, r3
 8005e9c:	60fb      	str	r3, [r7, #12]
 8005e9e:	f04f 0200 	mov.w	r2, #0
 8005ea2:	f04f 0300 	mov.w	r3, #0
 8005ea6:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8005eaa:	4629      	mov	r1, r5
 8005eac:	024b      	lsls	r3, r1, #9
 8005eae:	4621      	mov	r1, r4
 8005eb0:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8005eb4:	4621      	mov	r1, r4
 8005eb6:	024a      	lsls	r2, r1, #9
 8005eb8:	4610      	mov	r0, r2
 8005eba:	4619      	mov	r1, r3
 8005ebc:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8005ebe:	2200      	movs	r2, #0
 8005ec0:	62bb      	str	r3, [r7, #40]	; 0x28
 8005ec2:	62fa      	str	r2, [r7, #44]	; 0x2c
 8005ec4:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8005ec8:	f7fa fee6 	bl	8000c98 <__aeabi_uldivmod>
 8005ecc:	4602      	mov	r2, r0
 8005ece:	460b      	mov	r3, r1
 8005ed0:	4613      	mov	r3, r2
 8005ed2:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005ed4:	e058      	b.n	8005f88 <HAL_RCC_GetSysClockFreq+0x1d0>
 8005ed6:	4b38      	ldr	r3, [pc, #224]	; (8005fb8 <HAL_RCC_GetSysClockFreq+0x200>)
 8005ed8:	685b      	ldr	r3, [r3, #4]
 8005eda:	099b      	lsrs	r3, r3, #6
 8005edc:	2200      	movs	r2, #0
 8005ede:	4618      	mov	r0, r3
 8005ee0:	4611      	mov	r1, r2
 8005ee2:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8005ee6:	623b      	str	r3, [r7, #32]
 8005ee8:	2300      	movs	r3, #0
 8005eea:	627b      	str	r3, [r7, #36]	; 0x24
 8005eec:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8005ef0:	4642      	mov	r2, r8
 8005ef2:	464b      	mov	r3, r9
 8005ef4:	f04f 0000 	mov.w	r0, #0
 8005ef8:	f04f 0100 	mov.w	r1, #0
 8005efc:	0159      	lsls	r1, r3, #5
 8005efe:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005f02:	0150      	lsls	r0, r2, #5
 8005f04:	4602      	mov	r2, r0
 8005f06:	460b      	mov	r3, r1
 8005f08:	4641      	mov	r1, r8
 8005f0a:	ebb2 0a01 	subs.w	sl, r2, r1
 8005f0e:	4649      	mov	r1, r9
 8005f10:	eb63 0b01 	sbc.w	fp, r3, r1
 8005f14:	f04f 0200 	mov.w	r2, #0
 8005f18:	f04f 0300 	mov.w	r3, #0
 8005f1c:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8005f20:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8005f24:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8005f28:	ebb2 040a 	subs.w	r4, r2, sl
 8005f2c:	eb63 050b 	sbc.w	r5, r3, fp
 8005f30:	f04f 0200 	mov.w	r2, #0
 8005f34:	f04f 0300 	mov.w	r3, #0
 8005f38:	00eb      	lsls	r3, r5, #3
 8005f3a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8005f3e:	00e2      	lsls	r2, r4, #3
 8005f40:	4614      	mov	r4, r2
 8005f42:	461d      	mov	r5, r3
 8005f44:	4643      	mov	r3, r8
 8005f46:	18e3      	adds	r3, r4, r3
 8005f48:	603b      	str	r3, [r7, #0]
 8005f4a:	464b      	mov	r3, r9
 8005f4c:	eb45 0303 	adc.w	r3, r5, r3
 8005f50:	607b      	str	r3, [r7, #4]
 8005f52:	f04f 0200 	mov.w	r2, #0
 8005f56:	f04f 0300 	mov.w	r3, #0
 8005f5a:	e9d7 4500 	ldrd	r4, r5, [r7]
 8005f5e:	4629      	mov	r1, r5
 8005f60:	028b      	lsls	r3, r1, #10
 8005f62:	4621      	mov	r1, r4
 8005f64:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005f68:	4621      	mov	r1, r4
 8005f6a:	028a      	lsls	r2, r1, #10
 8005f6c:	4610      	mov	r0, r2
 8005f6e:	4619      	mov	r1, r3
 8005f70:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8005f72:	2200      	movs	r2, #0
 8005f74:	61bb      	str	r3, [r7, #24]
 8005f76:	61fa      	str	r2, [r7, #28]
 8005f78:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8005f7c:	f7fa fe8c 	bl	8000c98 <__aeabi_uldivmod>
 8005f80:	4602      	mov	r2, r0
 8005f82:	460b      	mov	r3, r1
 8005f84:	4613      	mov	r3, r2
 8005f86:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005f88:	4b0b      	ldr	r3, [pc, #44]	; (8005fb8 <HAL_RCC_GetSysClockFreq+0x200>)
 8005f8a:	685b      	ldr	r3, [r3, #4]
 8005f8c:	0c1b      	lsrs	r3, r3, #16
 8005f8e:	f003 0303 	and.w	r3, r3, #3
 8005f92:	3301      	adds	r3, #1
 8005f94:	005b      	lsls	r3, r3, #1
 8005f96:	643b      	str	r3, [r7, #64]	; 0x40
 8005f98:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8005f9a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8005f9c:	fbb2 f3f3 	udiv	r3, r2, r3
 8005fa0:	64bb      	str	r3, [r7, #72]	; 0x48
 8005fa2:	e002      	b.n	8005faa <HAL_RCC_GetSysClockFreq+0x1f2>
 8005fa4:	4b05      	ldr	r3, [pc, #20]	; (8005fbc <HAL_RCC_GetSysClockFreq+0x204>)
 8005fa6:	64bb      	str	r3, [r7, #72]	; 0x48
 8005fa8:	bf00      	nop
 8005faa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005fac:	4618      	mov	r0, r3
 8005fae:	3750      	adds	r7, #80	; 0x50
 8005fb0:	46bd      	mov	sp, r7
 8005fb2:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005fb6:	bf00      	nop
 8005fb8:	40023800 	.word	0x40023800
 8005fbc:	00f42400 	.word	0x00f42400
 8005fc0:	007a1200 	.word	0x007a1200

08005fc4 <HAL_RCC_GetHCLKFreq>:
 8005fc4:	b480      	push	{r7}
 8005fc6:	af00      	add	r7, sp, #0
 8005fc8:	4b03      	ldr	r3, [pc, #12]	; (8005fd8 <HAL_RCC_GetHCLKFreq+0x14>)
 8005fca:	681b      	ldr	r3, [r3, #0]
 8005fcc:	4618      	mov	r0, r3
 8005fce:	46bd      	mov	sp, r7
 8005fd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fd4:	4770      	bx	lr
 8005fd6:	bf00      	nop
 8005fd8:	2000000c 	.word	0x2000000c

08005fdc <HAL_RCC_GetPCLK1Freq>:
 8005fdc:	b580      	push	{r7, lr}
 8005fde:	af00      	add	r7, sp, #0
 8005fe0:	f7ff fff0 	bl	8005fc4 <HAL_RCC_GetHCLKFreq>
 8005fe4:	4602      	mov	r2, r0
 8005fe6:	4b05      	ldr	r3, [pc, #20]	; (8005ffc <HAL_RCC_GetPCLK1Freq+0x20>)
 8005fe8:	689b      	ldr	r3, [r3, #8]
 8005fea:	0a9b      	lsrs	r3, r3, #10
 8005fec:	f003 0307 	and.w	r3, r3, #7
 8005ff0:	4903      	ldr	r1, [pc, #12]	; (8006000 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005ff2:	5ccb      	ldrb	r3, [r1, r3]
 8005ff4:	fa22 f303 	lsr.w	r3, r2, r3
 8005ff8:	4618      	mov	r0, r3
 8005ffa:	bd80      	pop	{r7, pc}
 8005ffc:	40023800 	.word	0x40023800
 8006000:	08010b5c 	.word	0x08010b5c

08006004 <HAL_RCC_GetPCLK2Freq>:
 8006004:	b580      	push	{r7, lr}
 8006006:	af00      	add	r7, sp, #0
 8006008:	f7ff ffdc 	bl	8005fc4 <HAL_RCC_GetHCLKFreq>
 800600c:	4602      	mov	r2, r0
 800600e:	4b05      	ldr	r3, [pc, #20]	; (8006024 <HAL_RCC_GetPCLK2Freq+0x20>)
 8006010:	689b      	ldr	r3, [r3, #8]
 8006012:	0b5b      	lsrs	r3, r3, #13
 8006014:	f003 0307 	and.w	r3, r3, #7
 8006018:	4903      	ldr	r1, [pc, #12]	; (8006028 <HAL_RCC_GetPCLK2Freq+0x24>)
 800601a:	5ccb      	ldrb	r3, [r1, r3]
 800601c:	fa22 f303 	lsr.w	r3, r2, r3
 8006020:	4618      	mov	r0, r3
 8006022:	bd80      	pop	{r7, pc}
 8006024:	40023800 	.word	0x40023800
 8006028:	08010b5c 	.word	0x08010b5c

0800602c <HAL_UART_Init>:
 800602c:	b580      	push	{r7, lr}
 800602e:	b082      	sub	sp, #8
 8006030:	af00      	add	r7, sp, #0
 8006032:	6078      	str	r0, [r7, #4]
 8006034:	687b      	ldr	r3, [r7, #4]
 8006036:	2b00      	cmp	r3, #0
 8006038:	d101      	bne.n	800603e <HAL_UART_Init+0x12>
 800603a:	2301      	movs	r3, #1
 800603c:	e03f      	b.n	80060be <HAL_UART_Init+0x92>
 800603e:	687b      	ldr	r3, [r7, #4]
 8006040:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006044:	b2db      	uxtb	r3, r3
 8006046:	2b00      	cmp	r3, #0
 8006048:	d106      	bne.n	8006058 <HAL_UART_Init+0x2c>
 800604a:	687b      	ldr	r3, [r7, #4]
 800604c:	2200      	movs	r2, #0
 800604e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006052:	6878      	ldr	r0, [r7, #4]
 8006054:	f7fc fa5e 	bl	8002514 <HAL_UART_MspInit>
 8006058:	687b      	ldr	r3, [r7, #4]
 800605a:	2224      	movs	r2, #36	; 0x24
 800605c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006060:	687b      	ldr	r3, [r7, #4]
 8006062:	681b      	ldr	r3, [r3, #0]
 8006064:	68da      	ldr	r2, [r3, #12]
 8006066:	687b      	ldr	r3, [r7, #4]
 8006068:	681b      	ldr	r3, [r3, #0]
 800606a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800606e:	60da      	str	r2, [r3, #12]
 8006070:	6878      	ldr	r0, [r7, #4]
 8006072:	f000 fc23 	bl	80068bc <UART_SetConfig>
 8006076:	687b      	ldr	r3, [r7, #4]
 8006078:	681b      	ldr	r3, [r3, #0]
 800607a:	691a      	ldr	r2, [r3, #16]
 800607c:	687b      	ldr	r3, [r7, #4]
 800607e:	681b      	ldr	r3, [r3, #0]
 8006080:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8006084:	611a      	str	r2, [r3, #16]
 8006086:	687b      	ldr	r3, [r7, #4]
 8006088:	681b      	ldr	r3, [r3, #0]
 800608a:	695a      	ldr	r2, [r3, #20]
 800608c:	687b      	ldr	r3, [r7, #4]
 800608e:	681b      	ldr	r3, [r3, #0]
 8006090:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8006094:	615a      	str	r2, [r3, #20]
 8006096:	687b      	ldr	r3, [r7, #4]
 8006098:	681b      	ldr	r3, [r3, #0]
 800609a:	68da      	ldr	r2, [r3, #12]
 800609c:	687b      	ldr	r3, [r7, #4]
 800609e:	681b      	ldr	r3, [r3, #0]
 80060a0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80060a4:	60da      	str	r2, [r3, #12]
 80060a6:	687b      	ldr	r3, [r7, #4]
 80060a8:	2200      	movs	r2, #0
 80060aa:	641a      	str	r2, [r3, #64]	; 0x40
 80060ac:	687b      	ldr	r3, [r7, #4]
 80060ae:	2220      	movs	r2, #32
 80060b0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80060b4:	687b      	ldr	r3, [r7, #4]
 80060b6:	2220      	movs	r2, #32
 80060b8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80060bc:	2300      	movs	r3, #0
 80060be:	4618      	mov	r0, r3
 80060c0:	3708      	adds	r7, #8
 80060c2:	46bd      	mov	sp, r7
 80060c4:	bd80      	pop	{r7, pc}

080060c6 <HAL_UART_Transmit>:
 80060c6:	b580      	push	{r7, lr}
 80060c8:	b08a      	sub	sp, #40	; 0x28
 80060ca:	af02      	add	r7, sp, #8
 80060cc:	60f8      	str	r0, [r7, #12]
 80060ce:	60b9      	str	r1, [r7, #8]
 80060d0:	603b      	str	r3, [r7, #0]
 80060d2:	4613      	mov	r3, r2
 80060d4:	80fb      	strh	r3, [r7, #6]
 80060d6:	2300      	movs	r3, #0
 80060d8:	617b      	str	r3, [r7, #20]
 80060da:	68fb      	ldr	r3, [r7, #12]
 80060dc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80060e0:	b2db      	uxtb	r3, r3
 80060e2:	2b20      	cmp	r3, #32
 80060e4:	d17c      	bne.n	80061e0 <HAL_UART_Transmit+0x11a>
 80060e6:	68bb      	ldr	r3, [r7, #8]
 80060e8:	2b00      	cmp	r3, #0
 80060ea:	d002      	beq.n	80060f2 <HAL_UART_Transmit+0x2c>
 80060ec:	88fb      	ldrh	r3, [r7, #6]
 80060ee:	2b00      	cmp	r3, #0
 80060f0:	d101      	bne.n	80060f6 <HAL_UART_Transmit+0x30>
 80060f2:	2301      	movs	r3, #1
 80060f4:	e075      	b.n	80061e2 <HAL_UART_Transmit+0x11c>
 80060f6:	68fb      	ldr	r3, [r7, #12]
 80060f8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80060fc:	2b01      	cmp	r3, #1
 80060fe:	d101      	bne.n	8006104 <HAL_UART_Transmit+0x3e>
 8006100:	2302      	movs	r3, #2
 8006102:	e06e      	b.n	80061e2 <HAL_UART_Transmit+0x11c>
 8006104:	68fb      	ldr	r3, [r7, #12]
 8006106:	2201      	movs	r2, #1
 8006108:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800610c:	68fb      	ldr	r3, [r7, #12]
 800610e:	2200      	movs	r2, #0
 8006110:	641a      	str	r2, [r3, #64]	; 0x40
 8006112:	68fb      	ldr	r3, [r7, #12]
 8006114:	2221      	movs	r2, #33	; 0x21
 8006116:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800611a:	f7fe f863 	bl	80041e4 <HAL_GetTick>
 800611e:	6178      	str	r0, [r7, #20]
 8006120:	68fb      	ldr	r3, [r7, #12]
 8006122:	88fa      	ldrh	r2, [r7, #6]
 8006124:	849a      	strh	r2, [r3, #36]	; 0x24
 8006126:	68fb      	ldr	r3, [r7, #12]
 8006128:	88fa      	ldrh	r2, [r7, #6]
 800612a:	84da      	strh	r2, [r3, #38]	; 0x26
 800612c:	68fb      	ldr	r3, [r7, #12]
 800612e:	689b      	ldr	r3, [r3, #8]
 8006130:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006134:	d108      	bne.n	8006148 <HAL_UART_Transmit+0x82>
 8006136:	68fb      	ldr	r3, [r7, #12]
 8006138:	691b      	ldr	r3, [r3, #16]
 800613a:	2b00      	cmp	r3, #0
 800613c:	d104      	bne.n	8006148 <HAL_UART_Transmit+0x82>
 800613e:	2300      	movs	r3, #0
 8006140:	61fb      	str	r3, [r7, #28]
 8006142:	68bb      	ldr	r3, [r7, #8]
 8006144:	61bb      	str	r3, [r7, #24]
 8006146:	e003      	b.n	8006150 <HAL_UART_Transmit+0x8a>
 8006148:	68bb      	ldr	r3, [r7, #8]
 800614a:	61fb      	str	r3, [r7, #28]
 800614c:	2300      	movs	r3, #0
 800614e:	61bb      	str	r3, [r7, #24]
 8006150:	68fb      	ldr	r3, [r7, #12]
 8006152:	2200      	movs	r2, #0
 8006154:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006158:	e02a      	b.n	80061b0 <HAL_UART_Transmit+0xea>
 800615a:	683b      	ldr	r3, [r7, #0]
 800615c:	9300      	str	r3, [sp, #0]
 800615e:	697b      	ldr	r3, [r7, #20]
 8006160:	2200      	movs	r2, #0
 8006162:	2180      	movs	r1, #128	; 0x80
 8006164:	68f8      	ldr	r0, [r7, #12]
 8006166:	f000 fa11 	bl	800658c <UART_WaitOnFlagUntilTimeout>
 800616a:	4603      	mov	r3, r0
 800616c:	2b00      	cmp	r3, #0
 800616e:	d001      	beq.n	8006174 <HAL_UART_Transmit+0xae>
 8006170:	2303      	movs	r3, #3
 8006172:	e036      	b.n	80061e2 <HAL_UART_Transmit+0x11c>
 8006174:	69fb      	ldr	r3, [r7, #28]
 8006176:	2b00      	cmp	r3, #0
 8006178:	d10b      	bne.n	8006192 <HAL_UART_Transmit+0xcc>
 800617a:	69bb      	ldr	r3, [r7, #24]
 800617c:	881b      	ldrh	r3, [r3, #0]
 800617e:	461a      	mov	r2, r3
 8006180:	68fb      	ldr	r3, [r7, #12]
 8006182:	681b      	ldr	r3, [r3, #0]
 8006184:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006188:	605a      	str	r2, [r3, #4]
 800618a:	69bb      	ldr	r3, [r7, #24]
 800618c:	3302      	adds	r3, #2
 800618e:	61bb      	str	r3, [r7, #24]
 8006190:	e007      	b.n	80061a2 <HAL_UART_Transmit+0xdc>
 8006192:	69fb      	ldr	r3, [r7, #28]
 8006194:	781a      	ldrb	r2, [r3, #0]
 8006196:	68fb      	ldr	r3, [r7, #12]
 8006198:	681b      	ldr	r3, [r3, #0]
 800619a:	605a      	str	r2, [r3, #4]
 800619c:	69fb      	ldr	r3, [r7, #28]
 800619e:	3301      	adds	r3, #1
 80061a0:	61fb      	str	r3, [r7, #28]
 80061a2:	68fb      	ldr	r3, [r7, #12]
 80061a4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80061a6:	b29b      	uxth	r3, r3
 80061a8:	3b01      	subs	r3, #1
 80061aa:	b29a      	uxth	r2, r3
 80061ac:	68fb      	ldr	r3, [r7, #12]
 80061ae:	84da      	strh	r2, [r3, #38]	; 0x26
 80061b0:	68fb      	ldr	r3, [r7, #12]
 80061b2:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80061b4:	b29b      	uxth	r3, r3
 80061b6:	2b00      	cmp	r3, #0
 80061b8:	d1cf      	bne.n	800615a <HAL_UART_Transmit+0x94>
 80061ba:	683b      	ldr	r3, [r7, #0]
 80061bc:	9300      	str	r3, [sp, #0]
 80061be:	697b      	ldr	r3, [r7, #20]
 80061c0:	2200      	movs	r2, #0
 80061c2:	2140      	movs	r1, #64	; 0x40
 80061c4:	68f8      	ldr	r0, [r7, #12]
 80061c6:	f000 f9e1 	bl	800658c <UART_WaitOnFlagUntilTimeout>
 80061ca:	4603      	mov	r3, r0
 80061cc:	2b00      	cmp	r3, #0
 80061ce:	d001      	beq.n	80061d4 <HAL_UART_Transmit+0x10e>
 80061d0:	2303      	movs	r3, #3
 80061d2:	e006      	b.n	80061e2 <HAL_UART_Transmit+0x11c>
 80061d4:	68fb      	ldr	r3, [r7, #12]
 80061d6:	2220      	movs	r2, #32
 80061d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80061dc:	2300      	movs	r3, #0
 80061de:	e000      	b.n	80061e2 <HAL_UART_Transmit+0x11c>
 80061e0:	2302      	movs	r3, #2
 80061e2:	4618      	mov	r0, r3
 80061e4:	3720      	adds	r7, #32
 80061e6:	46bd      	mov	sp, r7
 80061e8:	bd80      	pop	{r7, pc}

080061ea <HAL_UART_Receive_DMA>:
 80061ea:	b580      	push	{r7, lr}
 80061ec:	b084      	sub	sp, #16
 80061ee:	af00      	add	r7, sp, #0
 80061f0:	60f8      	str	r0, [r7, #12]
 80061f2:	60b9      	str	r1, [r7, #8]
 80061f4:	4613      	mov	r3, r2
 80061f6:	80fb      	strh	r3, [r7, #6]
 80061f8:	68fb      	ldr	r3, [r7, #12]
 80061fa:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80061fe:	b2db      	uxtb	r3, r3
 8006200:	2b20      	cmp	r3, #32
 8006202:	d11d      	bne.n	8006240 <HAL_UART_Receive_DMA+0x56>
 8006204:	68bb      	ldr	r3, [r7, #8]
 8006206:	2b00      	cmp	r3, #0
 8006208:	d002      	beq.n	8006210 <HAL_UART_Receive_DMA+0x26>
 800620a:	88fb      	ldrh	r3, [r7, #6]
 800620c:	2b00      	cmp	r3, #0
 800620e:	d101      	bne.n	8006214 <HAL_UART_Receive_DMA+0x2a>
 8006210:	2301      	movs	r3, #1
 8006212:	e016      	b.n	8006242 <HAL_UART_Receive_DMA+0x58>
 8006214:	68fb      	ldr	r3, [r7, #12]
 8006216:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800621a:	2b01      	cmp	r3, #1
 800621c:	d101      	bne.n	8006222 <HAL_UART_Receive_DMA+0x38>
 800621e:	2302      	movs	r3, #2
 8006220:	e00f      	b.n	8006242 <HAL_UART_Receive_DMA+0x58>
 8006222:	68fb      	ldr	r3, [r7, #12]
 8006224:	2201      	movs	r2, #1
 8006226:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800622a:	68fb      	ldr	r3, [r7, #12]
 800622c:	2200      	movs	r2, #0
 800622e:	631a      	str	r2, [r3, #48]	; 0x30
 8006230:	88fb      	ldrh	r3, [r7, #6]
 8006232:	461a      	mov	r2, r3
 8006234:	68b9      	ldr	r1, [r7, #8]
 8006236:	68f8      	ldr	r0, [r7, #12]
 8006238:	f000 fa16 	bl	8006668 <UART_Start_Receive_DMA>
 800623c:	4603      	mov	r3, r0
 800623e:	e000      	b.n	8006242 <HAL_UART_Receive_DMA+0x58>
 8006240:	2302      	movs	r3, #2
 8006242:	4618      	mov	r0, r3
 8006244:	3710      	adds	r7, #16
 8006246:	46bd      	mov	sp, r7
 8006248:	bd80      	pop	{r7, pc}

0800624a <HAL_UART_DMAStop>:
 800624a:	b580      	push	{r7, lr}
 800624c:	b090      	sub	sp, #64	; 0x40
 800624e:	af00      	add	r7, sp, #0
 8006250:	6078      	str	r0, [r7, #4]
 8006252:	2300      	movs	r3, #0
 8006254:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006256:	687b      	ldr	r3, [r7, #4]
 8006258:	681b      	ldr	r3, [r3, #0]
 800625a:	695b      	ldr	r3, [r3, #20]
 800625c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006260:	2b80      	cmp	r3, #128	; 0x80
 8006262:	bf0c      	ite	eq
 8006264:	2301      	moveq	r3, #1
 8006266:	2300      	movne	r3, #0
 8006268:	b2db      	uxtb	r3, r3
 800626a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800626c:	687b      	ldr	r3, [r7, #4]
 800626e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006272:	b2db      	uxtb	r3, r3
 8006274:	2b21      	cmp	r3, #33	; 0x21
 8006276:	d128      	bne.n	80062ca <HAL_UART_DMAStop+0x80>
 8006278:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800627a:	2b00      	cmp	r3, #0
 800627c:	d025      	beq.n	80062ca <HAL_UART_DMAStop+0x80>
 800627e:	687b      	ldr	r3, [r7, #4]
 8006280:	681b      	ldr	r3, [r3, #0]
 8006282:	3314      	adds	r3, #20
 8006284:	627b      	str	r3, [r7, #36]	; 0x24
 8006286:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006288:	e853 3f00 	ldrex	r3, [r3]
 800628c:	623b      	str	r3, [r7, #32]
 800628e:	6a3b      	ldr	r3, [r7, #32]
 8006290:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006294:	63bb      	str	r3, [r7, #56]	; 0x38
 8006296:	687b      	ldr	r3, [r7, #4]
 8006298:	681b      	ldr	r3, [r3, #0]
 800629a:	3314      	adds	r3, #20
 800629c:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800629e:	633a      	str	r2, [r7, #48]	; 0x30
 80062a0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80062a2:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80062a4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80062a6:	e841 2300 	strex	r3, r2, [r1]
 80062aa:	62bb      	str	r3, [r7, #40]	; 0x28
 80062ac:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80062ae:	2b00      	cmp	r3, #0
 80062b0:	d1e5      	bne.n	800627e <HAL_UART_DMAStop+0x34>
 80062b2:	687b      	ldr	r3, [r7, #4]
 80062b4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80062b6:	2b00      	cmp	r3, #0
 80062b8:	d004      	beq.n	80062c4 <HAL_UART_DMAStop+0x7a>
 80062ba:	687b      	ldr	r3, [r7, #4]
 80062bc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80062be:	4618      	mov	r0, r3
 80062c0:	f7fe fd8c 	bl	8004ddc <HAL_DMA_Abort>
 80062c4:	6878      	ldr	r0, [r7, #4]
 80062c6:	f000 fa6d 	bl	80067a4 <UART_EndTxTransfer>
 80062ca:	687b      	ldr	r3, [r7, #4]
 80062cc:	681b      	ldr	r3, [r3, #0]
 80062ce:	695b      	ldr	r3, [r3, #20]
 80062d0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80062d4:	2b40      	cmp	r3, #64	; 0x40
 80062d6:	bf0c      	ite	eq
 80062d8:	2301      	moveq	r3, #1
 80062da:	2300      	movne	r3, #0
 80062dc:	b2db      	uxtb	r3, r3
 80062de:	63fb      	str	r3, [r7, #60]	; 0x3c
 80062e0:	687b      	ldr	r3, [r7, #4]
 80062e2:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80062e6:	b2db      	uxtb	r3, r3
 80062e8:	2b22      	cmp	r3, #34	; 0x22
 80062ea:	d128      	bne.n	800633e <HAL_UART_DMAStop+0xf4>
 80062ec:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80062ee:	2b00      	cmp	r3, #0
 80062f0:	d025      	beq.n	800633e <HAL_UART_DMAStop+0xf4>
 80062f2:	687b      	ldr	r3, [r7, #4]
 80062f4:	681b      	ldr	r3, [r3, #0]
 80062f6:	3314      	adds	r3, #20
 80062f8:	613b      	str	r3, [r7, #16]
 80062fa:	693b      	ldr	r3, [r7, #16]
 80062fc:	e853 3f00 	ldrex	r3, [r3]
 8006300:	60fb      	str	r3, [r7, #12]
 8006302:	68fb      	ldr	r3, [r7, #12]
 8006304:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006308:	637b      	str	r3, [r7, #52]	; 0x34
 800630a:	687b      	ldr	r3, [r7, #4]
 800630c:	681b      	ldr	r3, [r3, #0]
 800630e:	3314      	adds	r3, #20
 8006310:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8006312:	61fa      	str	r2, [r7, #28]
 8006314:	61bb      	str	r3, [r7, #24]
 8006316:	69b9      	ldr	r1, [r7, #24]
 8006318:	69fa      	ldr	r2, [r7, #28]
 800631a:	e841 2300 	strex	r3, r2, [r1]
 800631e:	617b      	str	r3, [r7, #20]
 8006320:	697b      	ldr	r3, [r7, #20]
 8006322:	2b00      	cmp	r3, #0
 8006324:	d1e5      	bne.n	80062f2 <HAL_UART_DMAStop+0xa8>
 8006326:	687b      	ldr	r3, [r7, #4]
 8006328:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800632a:	2b00      	cmp	r3, #0
 800632c:	d004      	beq.n	8006338 <HAL_UART_DMAStop+0xee>
 800632e:	687b      	ldr	r3, [r7, #4]
 8006330:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006332:	4618      	mov	r0, r3
 8006334:	f7fe fd52 	bl	8004ddc <HAL_DMA_Abort>
 8006338:	6878      	ldr	r0, [r7, #4]
 800633a:	f000 fa5b 	bl	80067f4 <UART_EndRxTransfer>
 800633e:	2300      	movs	r3, #0
 8006340:	4618      	mov	r0, r3
 8006342:	3740      	adds	r7, #64	; 0x40
 8006344:	46bd      	mov	sp, r7
 8006346:	bd80      	pop	{r7, pc}

08006348 <HAL_UART_RxCpltCallback>:
 8006348:	b480      	push	{r7}
 800634a:	b083      	sub	sp, #12
 800634c:	af00      	add	r7, sp, #0
 800634e:	6078      	str	r0, [r7, #4]
 8006350:	bf00      	nop
 8006352:	370c      	adds	r7, #12
 8006354:	46bd      	mov	sp, r7
 8006356:	f85d 7b04 	ldr.w	r7, [sp], #4
 800635a:	4770      	bx	lr

0800635c <HAL_UART_RxHalfCpltCallback>:
 800635c:	b480      	push	{r7}
 800635e:	b083      	sub	sp, #12
 8006360:	af00      	add	r7, sp, #0
 8006362:	6078      	str	r0, [r7, #4]
 8006364:	bf00      	nop
 8006366:	370c      	adds	r7, #12
 8006368:	46bd      	mov	sp, r7
 800636a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800636e:	4770      	bx	lr

08006370 <HAL_UART_ErrorCallback>:
 8006370:	b480      	push	{r7}
 8006372:	b083      	sub	sp, #12
 8006374:	af00      	add	r7, sp, #0
 8006376:	6078      	str	r0, [r7, #4]
 8006378:	bf00      	nop
 800637a:	370c      	adds	r7, #12
 800637c:	46bd      	mov	sp, r7
 800637e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006382:	4770      	bx	lr

08006384 <HAL_UARTEx_RxEventCallback>:
 8006384:	b480      	push	{r7}
 8006386:	b083      	sub	sp, #12
 8006388:	af00      	add	r7, sp, #0
 800638a:	6078      	str	r0, [r7, #4]
 800638c:	460b      	mov	r3, r1
 800638e:	807b      	strh	r3, [r7, #2]
 8006390:	bf00      	nop
 8006392:	370c      	adds	r7, #12
 8006394:	46bd      	mov	sp, r7
 8006396:	f85d 7b04 	ldr.w	r7, [sp], #4
 800639a:	4770      	bx	lr

0800639c <UART_DMAReceiveCplt>:
 800639c:	b580      	push	{r7, lr}
 800639e:	b09c      	sub	sp, #112	; 0x70
 80063a0:	af00      	add	r7, sp, #0
 80063a2:	6078      	str	r0, [r7, #4]
 80063a4:	687b      	ldr	r3, [r7, #4]
 80063a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80063a8:	66fb      	str	r3, [r7, #108]	; 0x6c
 80063aa:	687b      	ldr	r3, [r7, #4]
 80063ac:	681b      	ldr	r3, [r3, #0]
 80063ae:	681b      	ldr	r3, [r3, #0]
 80063b0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80063b4:	2b00      	cmp	r3, #0
 80063b6:	d172      	bne.n	800649e <UART_DMAReceiveCplt+0x102>
 80063b8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80063ba:	2200      	movs	r2, #0
 80063bc:	85da      	strh	r2, [r3, #46]	; 0x2e
 80063be:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80063c0:	681b      	ldr	r3, [r3, #0]
 80063c2:	330c      	adds	r3, #12
 80063c4:	64fb      	str	r3, [r7, #76]	; 0x4c
 80063c6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80063c8:	e853 3f00 	ldrex	r3, [r3]
 80063cc:	64bb      	str	r3, [r7, #72]	; 0x48
 80063ce:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80063d0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80063d4:	66bb      	str	r3, [r7, #104]	; 0x68
 80063d6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80063d8:	681b      	ldr	r3, [r3, #0]
 80063da:	330c      	adds	r3, #12
 80063dc:	6eba      	ldr	r2, [r7, #104]	; 0x68
 80063de:	65ba      	str	r2, [r7, #88]	; 0x58
 80063e0:	657b      	str	r3, [r7, #84]	; 0x54
 80063e2:	6d79      	ldr	r1, [r7, #84]	; 0x54
 80063e4:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80063e6:	e841 2300 	strex	r3, r2, [r1]
 80063ea:	653b      	str	r3, [r7, #80]	; 0x50
 80063ec:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80063ee:	2b00      	cmp	r3, #0
 80063f0:	d1e5      	bne.n	80063be <UART_DMAReceiveCplt+0x22>
 80063f2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80063f4:	681b      	ldr	r3, [r3, #0]
 80063f6:	3314      	adds	r3, #20
 80063f8:	63bb      	str	r3, [r7, #56]	; 0x38
 80063fa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80063fc:	e853 3f00 	ldrex	r3, [r3]
 8006400:	637b      	str	r3, [r7, #52]	; 0x34
 8006402:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006404:	f023 0301 	bic.w	r3, r3, #1
 8006408:	667b      	str	r3, [r7, #100]	; 0x64
 800640a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800640c:	681b      	ldr	r3, [r3, #0]
 800640e:	3314      	adds	r3, #20
 8006410:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 8006412:	647a      	str	r2, [r7, #68]	; 0x44
 8006414:	643b      	str	r3, [r7, #64]	; 0x40
 8006416:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8006418:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800641a:	e841 2300 	strex	r3, r2, [r1]
 800641e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006420:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006422:	2b00      	cmp	r3, #0
 8006424:	d1e5      	bne.n	80063f2 <UART_DMAReceiveCplt+0x56>
 8006426:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006428:	681b      	ldr	r3, [r3, #0]
 800642a:	3314      	adds	r3, #20
 800642c:	627b      	str	r3, [r7, #36]	; 0x24
 800642e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006430:	e853 3f00 	ldrex	r3, [r3]
 8006434:	623b      	str	r3, [r7, #32]
 8006436:	6a3b      	ldr	r3, [r7, #32]
 8006438:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800643c:	663b      	str	r3, [r7, #96]	; 0x60
 800643e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006440:	681b      	ldr	r3, [r3, #0]
 8006442:	3314      	adds	r3, #20
 8006444:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8006446:	633a      	str	r2, [r7, #48]	; 0x30
 8006448:	62fb      	str	r3, [r7, #44]	; 0x2c
 800644a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800644c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800644e:	e841 2300 	strex	r3, r2, [r1]
 8006452:	62bb      	str	r3, [r7, #40]	; 0x28
 8006454:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006456:	2b00      	cmp	r3, #0
 8006458:	d1e5      	bne.n	8006426 <UART_DMAReceiveCplt+0x8a>
 800645a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800645c:	2220      	movs	r2, #32
 800645e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006462:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006464:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006466:	2b01      	cmp	r3, #1
 8006468:	d119      	bne.n	800649e <UART_DMAReceiveCplt+0x102>
 800646a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800646c:	681b      	ldr	r3, [r3, #0]
 800646e:	330c      	adds	r3, #12
 8006470:	613b      	str	r3, [r7, #16]
 8006472:	693b      	ldr	r3, [r7, #16]
 8006474:	e853 3f00 	ldrex	r3, [r3]
 8006478:	60fb      	str	r3, [r7, #12]
 800647a:	68fb      	ldr	r3, [r7, #12]
 800647c:	f023 0310 	bic.w	r3, r3, #16
 8006480:	65fb      	str	r3, [r7, #92]	; 0x5c
 8006482:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006484:	681b      	ldr	r3, [r3, #0]
 8006486:	330c      	adds	r3, #12
 8006488:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800648a:	61fa      	str	r2, [r7, #28]
 800648c:	61bb      	str	r3, [r7, #24]
 800648e:	69b9      	ldr	r1, [r7, #24]
 8006490:	69fa      	ldr	r2, [r7, #28]
 8006492:	e841 2300 	strex	r3, r2, [r1]
 8006496:	617b      	str	r3, [r7, #20]
 8006498:	697b      	ldr	r3, [r7, #20]
 800649a:	2b00      	cmp	r3, #0
 800649c:	d1e5      	bne.n	800646a <UART_DMAReceiveCplt+0xce>
 800649e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80064a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064a2:	2b01      	cmp	r3, #1
 80064a4:	d106      	bne.n	80064b4 <UART_DMAReceiveCplt+0x118>
 80064a6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80064a8:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80064aa:	4619      	mov	r1, r3
 80064ac:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 80064ae:	f7ff ff69 	bl	8006384 <HAL_UARTEx_RxEventCallback>
 80064b2:	e002      	b.n	80064ba <UART_DMAReceiveCplt+0x11e>
 80064b4:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 80064b6:	f7ff ff47 	bl	8006348 <HAL_UART_RxCpltCallback>
 80064ba:	bf00      	nop
 80064bc:	3770      	adds	r7, #112	; 0x70
 80064be:	46bd      	mov	sp, r7
 80064c0:	bd80      	pop	{r7, pc}

080064c2 <UART_DMARxHalfCplt>:
 80064c2:	b580      	push	{r7, lr}
 80064c4:	b084      	sub	sp, #16
 80064c6:	af00      	add	r7, sp, #0
 80064c8:	6078      	str	r0, [r7, #4]
 80064ca:	687b      	ldr	r3, [r7, #4]
 80064cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80064ce:	60fb      	str	r3, [r7, #12]
 80064d0:	68fb      	ldr	r3, [r7, #12]
 80064d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064d4:	2b01      	cmp	r3, #1
 80064d6:	d108      	bne.n	80064ea <UART_DMARxHalfCplt+0x28>
 80064d8:	68fb      	ldr	r3, [r7, #12]
 80064da:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80064dc:	085b      	lsrs	r3, r3, #1
 80064de:	b29b      	uxth	r3, r3
 80064e0:	4619      	mov	r1, r3
 80064e2:	68f8      	ldr	r0, [r7, #12]
 80064e4:	f7ff ff4e 	bl	8006384 <HAL_UARTEx_RxEventCallback>
 80064e8:	e002      	b.n	80064f0 <UART_DMARxHalfCplt+0x2e>
 80064ea:	68f8      	ldr	r0, [r7, #12]
 80064ec:	f7ff ff36 	bl	800635c <HAL_UART_RxHalfCpltCallback>
 80064f0:	bf00      	nop
 80064f2:	3710      	adds	r7, #16
 80064f4:	46bd      	mov	sp, r7
 80064f6:	bd80      	pop	{r7, pc}

080064f8 <UART_DMAError>:
 80064f8:	b580      	push	{r7, lr}
 80064fa:	b084      	sub	sp, #16
 80064fc:	af00      	add	r7, sp, #0
 80064fe:	6078      	str	r0, [r7, #4]
 8006500:	2300      	movs	r3, #0
 8006502:	60fb      	str	r3, [r7, #12]
 8006504:	687b      	ldr	r3, [r7, #4]
 8006506:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006508:	60bb      	str	r3, [r7, #8]
 800650a:	68bb      	ldr	r3, [r7, #8]
 800650c:	681b      	ldr	r3, [r3, #0]
 800650e:	695b      	ldr	r3, [r3, #20]
 8006510:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006514:	2b80      	cmp	r3, #128	; 0x80
 8006516:	bf0c      	ite	eq
 8006518:	2301      	moveq	r3, #1
 800651a:	2300      	movne	r3, #0
 800651c:	b2db      	uxtb	r3, r3
 800651e:	60fb      	str	r3, [r7, #12]
 8006520:	68bb      	ldr	r3, [r7, #8]
 8006522:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006526:	b2db      	uxtb	r3, r3
 8006528:	2b21      	cmp	r3, #33	; 0x21
 800652a:	d108      	bne.n	800653e <UART_DMAError+0x46>
 800652c:	68fb      	ldr	r3, [r7, #12]
 800652e:	2b00      	cmp	r3, #0
 8006530:	d005      	beq.n	800653e <UART_DMAError+0x46>
 8006532:	68bb      	ldr	r3, [r7, #8]
 8006534:	2200      	movs	r2, #0
 8006536:	84da      	strh	r2, [r3, #38]	; 0x26
 8006538:	68b8      	ldr	r0, [r7, #8]
 800653a:	f000 f933 	bl	80067a4 <UART_EndTxTransfer>
 800653e:	68bb      	ldr	r3, [r7, #8]
 8006540:	681b      	ldr	r3, [r3, #0]
 8006542:	695b      	ldr	r3, [r3, #20]
 8006544:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006548:	2b40      	cmp	r3, #64	; 0x40
 800654a:	bf0c      	ite	eq
 800654c:	2301      	moveq	r3, #1
 800654e:	2300      	movne	r3, #0
 8006550:	b2db      	uxtb	r3, r3
 8006552:	60fb      	str	r3, [r7, #12]
 8006554:	68bb      	ldr	r3, [r7, #8]
 8006556:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800655a:	b2db      	uxtb	r3, r3
 800655c:	2b22      	cmp	r3, #34	; 0x22
 800655e:	d108      	bne.n	8006572 <UART_DMAError+0x7a>
 8006560:	68fb      	ldr	r3, [r7, #12]
 8006562:	2b00      	cmp	r3, #0
 8006564:	d005      	beq.n	8006572 <UART_DMAError+0x7a>
 8006566:	68bb      	ldr	r3, [r7, #8]
 8006568:	2200      	movs	r2, #0
 800656a:	85da      	strh	r2, [r3, #46]	; 0x2e
 800656c:	68b8      	ldr	r0, [r7, #8]
 800656e:	f000 f941 	bl	80067f4 <UART_EndRxTransfer>
 8006572:	68bb      	ldr	r3, [r7, #8]
 8006574:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006576:	f043 0210 	orr.w	r2, r3, #16
 800657a:	68bb      	ldr	r3, [r7, #8]
 800657c:	641a      	str	r2, [r3, #64]	; 0x40
 800657e:	68b8      	ldr	r0, [r7, #8]
 8006580:	f7ff fef6 	bl	8006370 <HAL_UART_ErrorCallback>
 8006584:	bf00      	nop
 8006586:	3710      	adds	r7, #16
 8006588:	46bd      	mov	sp, r7
 800658a:	bd80      	pop	{r7, pc}

0800658c <UART_WaitOnFlagUntilTimeout>:
 800658c:	b580      	push	{r7, lr}
 800658e:	b090      	sub	sp, #64	; 0x40
 8006590:	af00      	add	r7, sp, #0
 8006592:	60f8      	str	r0, [r7, #12]
 8006594:	60b9      	str	r1, [r7, #8]
 8006596:	603b      	str	r3, [r7, #0]
 8006598:	4613      	mov	r3, r2
 800659a:	71fb      	strb	r3, [r7, #7]
 800659c:	e050      	b.n	8006640 <UART_WaitOnFlagUntilTimeout+0xb4>
 800659e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80065a0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80065a4:	d04c      	beq.n	8006640 <UART_WaitOnFlagUntilTimeout+0xb4>
 80065a6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80065a8:	2b00      	cmp	r3, #0
 80065aa:	d007      	beq.n	80065bc <UART_WaitOnFlagUntilTimeout+0x30>
 80065ac:	f7fd fe1a 	bl	80041e4 <HAL_GetTick>
 80065b0:	4602      	mov	r2, r0
 80065b2:	683b      	ldr	r3, [r7, #0]
 80065b4:	1ad3      	subs	r3, r2, r3
 80065b6:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80065b8:	429a      	cmp	r2, r3
 80065ba:	d241      	bcs.n	8006640 <UART_WaitOnFlagUntilTimeout+0xb4>
 80065bc:	68fb      	ldr	r3, [r7, #12]
 80065be:	681b      	ldr	r3, [r3, #0]
 80065c0:	330c      	adds	r3, #12
 80065c2:	62bb      	str	r3, [r7, #40]	; 0x28
 80065c4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80065c6:	e853 3f00 	ldrex	r3, [r3]
 80065ca:	627b      	str	r3, [r7, #36]	; 0x24
 80065cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80065ce:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 80065d2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80065d4:	68fb      	ldr	r3, [r7, #12]
 80065d6:	681b      	ldr	r3, [r3, #0]
 80065d8:	330c      	adds	r3, #12
 80065da:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80065dc:	637a      	str	r2, [r7, #52]	; 0x34
 80065de:	633b      	str	r3, [r7, #48]	; 0x30
 80065e0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80065e2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80065e4:	e841 2300 	strex	r3, r2, [r1]
 80065e8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80065ea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80065ec:	2b00      	cmp	r3, #0
 80065ee:	d1e5      	bne.n	80065bc <UART_WaitOnFlagUntilTimeout+0x30>
 80065f0:	68fb      	ldr	r3, [r7, #12]
 80065f2:	681b      	ldr	r3, [r3, #0]
 80065f4:	3314      	adds	r3, #20
 80065f6:	617b      	str	r3, [r7, #20]
 80065f8:	697b      	ldr	r3, [r7, #20]
 80065fa:	e853 3f00 	ldrex	r3, [r3]
 80065fe:	613b      	str	r3, [r7, #16]
 8006600:	693b      	ldr	r3, [r7, #16]
 8006602:	f023 0301 	bic.w	r3, r3, #1
 8006606:	63bb      	str	r3, [r7, #56]	; 0x38
 8006608:	68fb      	ldr	r3, [r7, #12]
 800660a:	681b      	ldr	r3, [r3, #0]
 800660c:	3314      	adds	r3, #20
 800660e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8006610:	623a      	str	r2, [r7, #32]
 8006612:	61fb      	str	r3, [r7, #28]
 8006614:	69f9      	ldr	r1, [r7, #28]
 8006616:	6a3a      	ldr	r2, [r7, #32]
 8006618:	e841 2300 	strex	r3, r2, [r1]
 800661c:	61bb      	str	r3, [r7, #24]
 800661e:	69bb      	ldr	r3, [r7, #24]
 8006620:	2b00      	cmp	r3, #0
 8006622:	d1e5      	bne.n	80065f0 <UART_WaitOnFlagUntilTimeout+0x64>
 8006624:	68fb      	ldr	r3, [r7, #12]
 8006626:	2220      	movs	r2, #32
 8006628:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800662c:	68fb      	ldr	r3, [r7, #12]
 800662e:	2220      	movs	r2, #32
 8006630:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006634:	68fb      	ldr	r3, [r7, #12]
 8006636:	2200      	movs	r2, #0
 8006638:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800663c:	2303      	movs	r3, #3
 800663e:	e00f      	b.n	8006660 <UART_WaitOnFlagUntilTimeout+0xd4>
 8006640:	68fb      	ldr	r3, [r7, #12]
 8006642:	681b      	ldr	r3, [r3, #0]
 8006644:	681a      	ldr	r2, [r3, #0]
 8006646:	68bb      	ldr	r3, [r7, #8]
 8006648:	4013      	ands	r3, r2
 800664a:	68ba      	ldr	r2, [r7, #8]
 800664c:	429a      	cmp	r2, r3
 800664e:	bf0c      	ite	eq
 8006650:	2301      	moveq	r3, #1
 8006652:	2300      	movne	r3, #0
 8006654:	b2db      	uxtb	r3, r3
 8006656:	461a      	mov	r2, r3
 8006658:	79fb      	ldrb	r3, [r7, #7]
 800665a:	429a      	cmp	r2, r3
 800665c:	d09f      	beq.n	800659e <UART_WaitOnFlagUntilTimeout+0x12>
 800665e:	2300      	movs	r3, #0
 8006660:	4618      	mov	r0, r3
 8006662:	3740      	adds	r7, #64	; 0x40
 8006664:	46bd      	mov	sp, r7
 8006666:	bd80      	pop	{r7, pc}

08006668 <UART_Start_Receive_DMA>:
 8006668:	b580      	push	{r7, lr}
 800666a:	b098      	sub	sp, #96	; 0x60
 800666c:	af00      	add	r7, sp, #0
 800666e:	60f8      	str	r0, [r7, #12]
 8006670:	60b9      	str	r1, [r7, #8]
 8006672:	4613      	mov	r3, r2
 8006674:	80fb      	strh	r3, [r7, #6]
 8006676:	68ba      	ldr	r2, [r7, #8]
 8006678:	68fb      	ldr	r3, [r7, #12]
 800667a:	629a      	str	r2, [r3, #40]	; 0x28
 800667c:	68fb      	ldr	r3, [r7, #12]
 800667e:	88fa      	ldrh	r2, [r7, #6]
 8006680:	859a      	strh	r2, [r3, #44]	; 0x2c
 8006682:	68fb      	ldr	r3, [r7, #12]
 8006684:	2200      	movs	r2, #0
 8006686:	641a      	str	r2, [r3, #64]	; 0x40
 8006688:	68fb      	ldr	r3, [r7, #12]
 800668a:	2222      	movs	r2, #34	; 0x22
 800668c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006690:	68fb      	ldr	r3, [r7, #12]
 8006692:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006694:	4a40      	ldr	r2, [pc, #256]	; (8006798 <UART_Start_Receive_DMA+0x130>)
 8006696:	63da      	str	r2, [r3, #60]	; 0x3c
 8006698:	68fb      	ldr	r3, [r7, #12]
 800669a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800669c:	4a3f      	ldr	r2, [pc, #252]	; (800679c <UART_Start_Receive_DMA+0x134>)
 800669e:	641a      	str	r2, [r3, #64]	; 0x40
 80066a0:	68fb      	ldr	r3, [r7, #12]
 80066a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80066a4:	4a3e      	ldr	r2, [pc, #248]	; (80067a0 <UART_Start_Receive_DMA+0x138>)
 80066a6:	64da      	str	r2, [r3, #76]	; 0x4c
 80066a8:	68fb      	ldr	r3, [r7, #12]
 80066aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80066ac:	2200      	movs	r2, #0
 80066ae:	651a      	str	r2, [r3, #80]	; 0x50
 80066b0:	f107 0308 	add.w	r3, r7, #8
 80066b4:	65fb      	str	r3, [r7, #92]	; 0x5c
 80066b6:	68fb      	ldr	r3, [r7, #12]
 80066b8:	6b98      	ldr	r0, [r3, #56]	; 0x38
 80066ba:	68fb      	ldr	r3, [r7, #12]
 80066bc:	681b      	ldr	r3, [r3, #0]
 80066be:	3304      	adds	r3, #4
 80066c0:	4619      	mov	r1, r3
 80066c2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80066c4:	681a      	ldr	r2, [r3, #0]
 80066c6:	88fb      	ldrh	r3, [r7, #6]
 80066c8:	f7fe fb30 	bl	8004d2c <HAL_DMA_Start_IT>
 80066cc:	2300      	movs	r3, #0
 80066ce:	613b      	str	r3, [r7, #16]
 80066d0:	68fb      	ldr	r3, [r7, #12]
 80066d2:	681b      	ldr	r3, [r3, #0]
 80066d4:	681b      	ldr	r3, [r3, #0]
 80066d6:	613b      	str	r3, [r7, #16]
 80066d8:	68fb      	ldr	r3, [r7, #12]
 80066da:	681b      	ldr	r3, [r3, #0]
 80066dc:	685b      	ldr	r3, [r3, #4]
 80066de:	613b      	str	r3, [r7, #16]
 80066e0:	693b      	ldr	r3, [r7, #16]
 80066e2:	68fb      	ldr	r3, [r7, #12]
 80066e4:	2200      	movs	r2, #0
 80066e6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80066ea:	68fb      	ldr	r3, [r7, #12]
 80066ec:	691b      	ldr	r3, [r3, #16]
 80066ee:	2b00      	cmp	r3, #0
 80066f0:	d019      	beq.n	8006726 <UART_Start_Receive_DMA+0xbe>
 80066f2:	68fb      	ldr	r3, [r7, #12]
 80066f4:	681b      	ldr	r3, [r3, #0]
 80066f6:	330c      	adds	r3, #12
 80066f8:	643b      	str	r3, [r7, #64]	; 0x40
 80066fa:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80066fc:	e853 3f00 	ldrex	r3, [r3]
 8006700:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006702:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006704:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006708:	65bb      	str	r3, [r7, #88]	; 0x58
 800670a:	68fb      	ldr	r3, [r7, #12]
 800670c:	681b      	ldr	r3, [r3, #0]
 800670e:	330c      	adds	r3, #12
 8006710:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8006712:	64fa      	str	r2, [r7, #76]	; 0x4c
 8006714:	64bb      	str	r3, [r7, #72]	; 0x48
 8006716:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8006718:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800671a:	e841 2300 	strex	r3, r2, [r1]
 800671e:	647b      	str	r3, [r7, #68]	; 0x44
 8006720:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8006722:	2b00      	cmp	r3, #0
 8006724:	d1e5      	bne.n	80066f2 <UART_Start_Receive_DMA+0x8a>
 8006726:	68fb      	ldr	r3, [r7, #12]
 8006728:	681b      	ldr	r3, [r3, #0]
 800672a:	3314      	adds	r3, #20
 800672c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800672e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006730:	e853 3f00 	ldrex	r3, [r3]
 8006734:	62bb      	str	r3, [r7, #40]	; 0x28
 8006736:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006738:	f043 0301 	orr.w	r3, r3, #1
 800673c:	657b      	str	r3, [r7, #84]	; 0x54
 800673e:	68fb      	ldr	r3, [r7, #12]
 8006740:	681b      	ldr	r3, [r3, #0]
 8006742:	3314      	adds	r3, #20
 8006744:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8006746:	63ba      	str	r2, [r7, #56]	; 0x38
 8006748:	637b      	str	r3, [r7, #52]	; 0x34
 800674a:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800674c:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800674e:	e841 2300 	strex	r3, r2, [r1]
 8006752:	633b      	str	r3, [r7, #48]	; 0x30
 8006754:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006756:	2b00      	cmp	r3, #0
 8006758:	d1e5      	bne.n	8006726 <UART_Start_Receive_DMA+0xbe>
 800675a:	68fb      	ldr	r3, [r7, #12]
 800675c:	681b      	ldr	r3, [r3, #0]
 800675e:	3314      	adds	r3, #20
 8006760:	61bb      	str	r3, [r7, #24]
 8006762:	69bb      	ldr	r3, [r7, #24]
 8006764:	e853 3f00 	ldrex	r3, [r3]
 8006768:	617b      	str	r3, [r7, #20]
 800676a:	697b      	ldr	r3, [r7, #20]
 800676c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006770:	653b      	str	r3, [r7, #80]	; 0x50
 8006772:	68fb      	ldr	r3, [r7, #12]
 8006774:	681b      	ldr	r3, [r3, #0]
 8006776:	3314      	adds	r3, #20
 8006778:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800677a:	627a      	str	r2, [r7, #36]	; 0x24
 800677c:	623b      	str	r3, [r7, #32]
 800677e:	6a39      	ldr	r1, [r7, #32]
 8006780:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006782:	e841 2300 	strex	r3, r2, [r1]
 8006786:	61fb      	str	r3, [r7, #28]
 8006788:	69fb      	ldr	r3, [r7, #28]
 800678a:	2b00      	cmp	r3, #0
 800678c:	d1e5      	bne.n	800675a <UART_Start_Receive_DMA+0xf2>
 800678e:	2300      	movs	r3, #0
 8006790:	4618      	mov	r0, r3
 8006792:	3760      	adds	r7, #96	; 0x60
 8006794:	46bd      	mov	sp, r7
 8006796:	bd80      	pop	{r7, pc}
 8006798:	0800639d 	.word	0x0800639d
 800679c:	080064c3 	.word	0x080064c3
 80067a0:	080064f9 	.word	0x080064f9

080067a4 <UART_EndTxTransfer>:
 80067a4:	b480      	push	{r7}
 80067a6:	b089      	sub	sp, #36	; 0x24
 80067a8:	af00      	add	r7, sp, #0
 80067aa:	6078      	str	r0, [r7, #4]
 80067ac:	687b      	ldr	r3, [r7, #4]
 80067ae:	681b      	ldr	r3, [r3, #0]
 80067b0:	330c      	adds	r3, #12
 80067b2:	60fb      	str	r3, [r7, #12]
 80067b4:	68fb      	ldr	r3, [r7, #12]
 80067b6:	e853 3f00 	ldrex	r3, [r3]
 80067ba:	60bb      	str	r3, [r7, #8]
 80067bc:	68bb      	ldr	r3, [r7, #8]
 80067be:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80067c2:	61fb      	str	r3, [r7, #28]
 80067c4:	687b      	ldr	r3, [r7, #4]
 80067c6:	681b      	ldr	r3, [r3, #0]
 80067c8:	330c      	adds	r3, #12
 80067ca:	69fa      	ldr	r2, [r7, #28]
 80067cc:	61ba      	str	r2, [r7, #24]
 80067ce:	617b      	str	r3, [r7, #20]
 80067d0:	6979      	ldr	r1, [r7, #20]
 80067d2:	69ba      	ldr	r2, [r7, #24]
 80067d4:	e841 2300 	strex	r3, r2, [r1]
 80067d8:	613b      	str	r3, [r7, #16]
 80067da:	693b      	ldr	r3, [r7, #16]
 80067dc:	2b00      	cmp	r3, #0
 80067de:	d1e5      	bne.n	80067ac <UART_EndTxTransfer+0x8>
 80067e0:	687b      	ldr	r3, [r7, #4]
 80067e2:	2220      	movs	r2, #32
 80067e4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80067e8:	bf00      	nop
 80067ea:	3724      	adds	r7, #36	; 0x24
 80067ec:	46bd      	mov	sp, r7
 80067ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067f2:	4770      	bx	lr

080067f4 <UART_EndRxTransfer>:
 80067f4:	b480      	push	{r7}
 80067f6:	b095      	sub	sp, #84	; 0x54
 80067f8:	af00      	add	r7, sp, #0
 80067fa:	6078      	str	r0, [r7, #4]
 80067fc:	687b      	ldr	r3, [r7, #4]
 80067fe:	681b      	ldr	r3, [r3, #0]
 8006800:	330c      	adds	r3, #12
 8006802:	637b      	str	r3, [r7, #52]	; 0x34
 8006804:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006806:	e853 3f00 	ldrex	r3, [r3]
 800680a:	633b      	str	r3, [r7, #48]	; 0x30
 800680c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800680e:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8006812:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	681b      	ldr	r3, [r3, #0]
 8006818:	330c      	adds	r3, #12
 800681a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800681c:	643a      	str	r2, [r7, #64]	; 0x40
 800681e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006820:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8006822:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8006824:	e841 2300 	strex	r3, r2, [r1]
 8006828:	63bb      	str	r3, [r7, #56]	; 0x38
 800682a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800682c:	2b00      	cmp	r3, #0
 800682e:	d1e5      	bne.n	80067fc <UART_EndRxTransfer+0x8>
 8006830:	687b      	ldr	r3, [r7, #4]
 8006832:	681b      	ldr	r3, [r3, #0]
 8006834:	3314      	adds	r3, #20
 8006836:	623b      	str	r3, [r7, #32]
 8006838:	6a3b      	ldr	r3, [r7, #32]
 800683a:	e853 3f00 	ldrex	r3, [r3]
 800683e:	61fb      	str	r3, [r7, #28]
 8006840:	69fb      	ldr	r3, [r7, #28]
 8006842:	f023 0301 	bic.w	r3, r3, #1
 8006846:	64bb      	str	r3, [r7, #72]	; 0x48
 8006848:	687b      	ldr	r3, [r7, #4]
 800684a:	681b      	ldr	r3, [r3, #0]
 800684c:	3314      	adds	r3, #20
 800684e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006850:	62fa      	str	r2, [r7, #44]	; 0x2c
 8006852:	62bb      	str	r3, [r7, #40]	; 0x28
 8006854:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8006856:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006858:	e841 2300 	strex	r3, r2, [r1]
 800685c:	627b      	str	r3, [r7, #36]	; 0x24
 800685e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006860:	2b00      	cmp	r3, #0
 8006862:	d1e5      	bne.n	8006830 <UART_EndRxTransfer+0x3c>
 8006864:	687b      	ldr	r3, [r7, #4]
 8006866:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006868:	2b01      	cmp	r3, #1
 800686a:	d119      	bne.n	80068a0 <UART_EndRxTransfer+0xac>
 800686c:	687b      	ldr	r3, [r7, #4]
 800686e:	681b      	ldr	r3, [r3, #0]
 8006870:	330c      	adds	r3, #12
 8006872:	60fb      	str	r3, [r7, #12]
 8006874:	68fb      	ldr	r3, [r7, #12]
 8006876:	e853 3f00 	ldrex	r3, [r3]
 800687a:	60bb      	str	r3, [r7, #8]
 800687c:	68bb      	ldr	r3, [r7, #8]
 800687e:	f023 0310 	bic.w	r3, r3, #16
 8006882:	647b      	str	r3, [r7, #68]	; 0x44
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	681b      	ldr	r3, [r3, #0]
 8006888:	330c      	adds	r3, #12
 800688a:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800688c:	61ba      	str	r2, [r7, #24]
 800688e:	617b      	str	r3, [r7, #20]
 8006890:	6979      	ldr	r1, [r7, #20]
 8006892:	69ba      	ldr	r2, [r7, #24]
 8006894:	e841 2300 	strex	r3, r2, [r1]
 8006898:	613b      	str	r3, [r7, #16]
 800689a:	693b      	ldr	r3, [r7, #16]
 800689c:	2b00      	cmp	r3, #0
 800689e:	d1e5      	bne.n	800686c <UART_EndRxTransfer+0x78>
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	2220      	movs	r2, #32
 80068a4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80068a8:	687b      	ldr	r3, [r7, #4]
 80068aa:	2200      	movs	r2, #0
 80068ac:	631a      	str	r2, [r3, #48]	; 0x30
 80068ae:	bf00      	nop
 80068b0:	3754      	adds	r7, #84	; 0x54
 80068b2:	46bd      	mov	sp, r7
 80068b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068b8:	4770      	bx	lr
	...

080068bc <UART_SetConfig>:
 80068bc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80068c0:	b0c0      	sub	sp, #256	; 0x100
 80068c2:	af00      	add	r7, sp, #0
 80068c4:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 80068c8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80068cc:	681b      	ldr	r3, [r3, #0]
 80068ce:	691b      	ldr	r3, [r3, #16]
 80068d0:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 80068d4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80068d8:	68d9      	ldr	r1, [r3, #12]
 80068da:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80068de:	681a      	ldr	r2, [r3, #0]
 80068e0:	ea40 0301 	orr.w	r3, r0, r1
 80068e4:	6113      	str	r3, [r2, #16]
 80068e6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80068ea:	689a      	ldr	r2, [r3, #8]
 80068ec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80068f0:	691b      	ldr	r3, [r3, #16]
 80068f2:	431a      	orrs	r2, r3
 80068f4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80068f8:	695b      	ldr	r3, [r3, #20]
 80068fa:	431a      	orrs	r2, r3
 80068fc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006900:	69db      	ldr	r3, [r3, #28]
 8006902:	4313      	orrs	r3, r2
 8006904:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8006908:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800690c:	681b      	ldr	r3, [r3, #0]
 800690e:	68db      	ldr	r3, [r3, #12]
 8006910:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8006914:	f021 010c 	bic.w	r1, r1, #12
 8006918:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800691c:	681a      	ldr	r2, [r3, #0]
 800691e:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 8006922:	430b      	orrs	r3, r1
 8006924:	60d3      	str	r3, [r2, #12]
 8006926:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800692a:	681b      	ldr	r3, [r3, #0]
 800692c:	695b      	ldr	r3, [r3, #20]
 800692e:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8006932:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006936:	6999      	ldr	r1, [r3, #24]
 8006938:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800693c:	681a      	ldr	r2, [r3, #0]
 800693e:	ea40 0301 	orr.w	r3, r0, r1
 8006942:	6153      	str	r3, [r2, #20]
 8006944:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006948:	681a      	ldr	r2, [r3, #0]
 800694a:	4b8f      	ldr	r3, [pc, #572]	; (8006b88 <UART_SetConfig+0x2cc>)
 800694c:	429a      	cmp	r2, r3
 800694e:	d005      	beq.n	800695c <UART_SetConfig+0xa0>
 8006950:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006954:	681a      	ldr	r2, [r3, #0]
 8006956:	4b8d      	ldr	r3, [pc, #564]	; (8006b8c <UART_SetConfig+0x2d0>)
 8006958:	429a      	cmp	r2, r3
 800695a:	d104      	bne.n	8006966 <UART_SetConfig+0xaa>
 800695c:	f7ff fb52 	bl	8006004 <HAL_RCC_GetPCLK2Freq>
 8006960:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8006964:	e003      	b.n	800696e <UART_SetConfig+0xb2>
 8006966:	f7ff fb39 	bl	8005fdc <HAL_RCC_GetPCLK1Freq>
 800696a:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800696e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006972:	69db      	ldr	r3, [r3, #28]
 8006974:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006978:	f040 810c 	bne.w	8006b94 <UART_SetConfig+0x2d8>
 800697c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8006980:	2200      	movs	r2, #0
 8006982:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8006986:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 800698a:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 800698e:	4622      	mov	r2, r4
 8006990:	462b      	mov	r3, r5
 8006992:	1891      	adds	r1, r2, r2
 8006994:	65b9      	str	r1, [r7, #88]	; 0x58
 8006996:	415b      	adcs	r3, r3
 8006998:	65fb      	str	r3, [r7, #92]	; 0x5c
 800699a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800699e:	4621      	mov	r1, r4
 80069a0:	eb12 0801 	adds.w	r8, r2, r1
 80069a4:	4629      	mov	r1, r5
 80069a6:	eb43 0901 	adc.w	r9, r3, r1
 80069aa:	f04f 0200 	mov.w	r2, #0
 80069ae:	f04f 0300 	mov.w	r3, #0
 80069b2:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80069b6:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80069ba:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80069be:	4690      	mov	r8, r2
 80069c0:	4699      	mov	r9, r3
 80069c2:	4623      	mov	r3, r4
 80069c4:	eb18 0303 	adds.w	r3, r8, r3
 80069c8:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 80069cc:	462b      	mov	r3, r5
 80069ce:	eb49 0303 	adc.w	r3, r9, r3
 80069d2:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 80069d6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80069da:	685b      	ldr	r3, [r3, #4]
 80069dc:	2200      	movs	r2, #0
 80069de:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 80069e2:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 80069e6:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 80069ea:	460b      	mov	r3, r1
 80069ec:	18db      	adds	r3, r3, r3
 80069ee:	653b      	str	r3, [r7, #80]	; 0x50
 80069f0:	4613      	mov	r3, r2
 80069f2:	eb42 0303 	adc.w	r3, r2, r3
 80069f6:	657b      	str	r3, [r7, #84]	; 0x54
 80069f8:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 80069fc:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8006a00:	f7fa f94a 	bl	8000c98 <__aeabi_uldivmod>
 8006a04:	4602      	mov	r2, r0
 8006a06:	460b      	mov	r3, r1
 8006a08:	4b61      	ldr	r3, [pc, #388]	; (8006b90 <UART_SetConfig+0x2d4>)
 8006a0a:	fba3 2302 	umull	r2, r3, r3, r2
 8006a0e:	095b      	lsrs	r3, r3, #5
 8006a10:	011c      	lsls	r4, r3, #4
 8006a12:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8006a16:	2200      	movs	r2, #0
 8006a18:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8006a1c:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 8006a20:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 8006a24:	4642      	mov	r2, r8
 8006a26:	464b      	mov	r3, r9
 8006a28:	1891      	adds	r1, r2, r2
 8006a2a:	64b9      	str	r1, [r7, #72]	; 0x48
 8006a2c:	415b      	adcs	r3, r3
 8006a2e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006a30:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8006a34:	4641      	mov	r1, r8
 8006a36:	eb12 0a01 	adds.w	sl, r2, r1
 8006a3a:	4649      	mov	r1, r9
 8006a3c:	eb43 0b01 	adc.w	fp, r3, r1
 8006a40:	f04f 0200 	mov.w	r2, #0
 8006a44:	f04f 0300 	mov.w	r3, #0
 8006a48:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8006a4c:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8006a50:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006a54:	4692      	mov	sl, r2
 8006a56:	469b      	mov	fp, r3
 8006a58:	4643      	mov	r3, r8
 8006a5a:	eb1a 0303 	adds.w	r3, sl, r3
 8006a5e:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8006a62:	464b      	mov	r3, r9
 8006a64:	eb4b 0303 	adc.w	r3, fp, r3
 8006a68:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8006a6c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006a70:	685b      	ldr	r3, [r3, #4]
 8006a72:	2200      	movs	r2, #0
 8006a74:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8006a78:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8006a7c:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8006a80:	460b      	mov	r3, r1
 8006a82:	18db      	adds	r3, r3, r3
 8006a84:	643b      	str	r3, [r7, #64]	; 0x40
 8006a86:	4613      	mov	r3, r2
 8006a88:	eb42 0303 	adc.w	r3, r2, r3
 8006a8c:	647b      	str	r3, [r7, #68]	; 0x44
 8006a8e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8006a92:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8006a96:	f7fa f8ff 	bl	8000c98 <__aeabi_uldivmod>
 8006a9a:	4602      	mov	r2, r0
 8006a9c:	460b      	mov	r3, r1
 8006a9e:	4611      	mov	r1, r2
 8006aa0:	4b3b      	ldr	r3, [pc, #236]	; (8006b90 <UART_SetConfig+0x2d4>)
 8006aa2:	fba3 2301 	umull	r2, r3, r3, r1
 8006aa6:	095b      	lsrs	r3, r3, #5
 8006aa8:	2264      	movs	r2, #100	; 0x64
 8006aaa:	fb02 f303 	mul.w	r3, r2, r3
 8006aae:	1acb      	subs	r3, r1, r3
 8006ab0:	00db      	lsls	r3, r3, #3
 8006ab2:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8006ab6:	4b36      	ldr	r3, [pc, #216]	; (8006b90 <UART_SetConfig+0x2d4>)
 8006ab8:	fba3 2302 	umull	r2, r3, r3, r2
 8006abc:	095b      	lsrs	r3, r3, #5
 8006abe:	005b      	lsls	r3, r3, #1
 8006ac0:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8006ac4:	441c      	add	r4, r3
 8006ac6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8006aca:	2200      	movs	r2, #0
 8006acc:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8006ad0:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8006ad4:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 8006ad8:	4642      	mov	r2, r8
 8006ada:	464b      	mov	r3, r9
 8006adc:	1891      	adds	r1, r2, r2
 8006ade:	63b9      	str	r1, [r7, #56]	; 0x38
 8006ae0:	415b      	adcs	r3, r3
 8006ae2:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006ae4:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8006ae8:	4641      	mov	r1, r8
 8006aea:	1851      	adds	r1, r2, r1
 8006aec:	6339      	str	r1, [r7, #48]	; 0x30
 8006aee:	4649      	mov	r1, r9
 8006af0:	414b      	adcs	r3, r1
 8006af2:	637b      	str	r3, [r7, #52]	; 0x34
 8006af4:	f04f 0200 	mov.w	r2, #0
 8006af8:	f04f 0300 	mov.w	r3, #0
 8006afc:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 8006b00:	4659      	mov	r1, fp
 8006b02:	00cb      	lsls	r3, r1, #3
 8006b04:	4651      	mov	r1, sl
 8006b06:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006b0a:	4651      	mov	r1, sl
 8006b0c:	00ca      	lsls	r2, r1, #3
 8006b0e:	4610      	mov	r0, r2
 8006b10:	4619      	mov	r1, r3
 8006b12:	4603      	mov	r3, r0
 8006b14:	4642      	mov	r2, r8
 8006b16:	189b      	adds	r3, r3, r2
 8006b18:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8006b1c:	464b      	mov	r3, r9
 8006b1e:	460a      	mov	r2, r1
 8006b20:	eb42 0303 	adc.w	r3, r2, r3
 8006b24:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8006b28:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006b2c:	685b      	ldr	r3, [r3, #4]
 8006b2e:	2200      	movs	r2, #0
 8006b30:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8006b34:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 8006b38:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8006b3c:	460b      	mov	r3, r1
 8006b3e:	18db      	adds	r3, r3, r3
 8006b40:	62bb      	str	r3, [r7, #40]	; 0x28
 8006b42:	4613      	mov	r3, r2
 8006b44:	eb42 0303 	adc.w	r3, r2, r3
 8006b48:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006b4a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8006b4e:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 8006b52:	f7fa f8a1 	bl	8000c98 <__aeabi_uldivmod>
 8006b56:	4602      	mov	r2, r0
 8006b58:	460b      	mov	r3, r1
 8006b5a:	4b0d      	ldr	r3, [pc, #52]	; (8006b90 <UART_SetConfig+0x2d4>)
 8006b5c:	fba3 1302 	umull	r1, r3, r3, r2
 8006b60:	095b      	lsrs	r3, r3, #5
 8006b62:	2164      	movs	r1, #100	; 0x64
 8006b64:	fb01 f303 	mul.w	r3, r1, r3
 8006b68:	1ad3      	subs	r3, r2, r3
 8006b6a:	00db      	lsls	r3, r3, #3
 8006b6c:	3332      	adds	r3, #50	; 0x32
 8006b6e:	4a08      	ldr	r2, [pc, #32]	; (8006b90 <UART_SetConfig+0x2d4>)
 8006b70:	fba2 2303 	umull	r2, r3, r2, r3
 8006b74:	095b      	lsrs	r3, r3, #5
 8006b76:	f003 0207 	and.w	r2, r3, #7
 8006b7a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006b7e:	681b      	ldr	r3, [r3, #0]
 8006b80:	4422      	add	r2, r4
 8006b82:	609a      	str	r2, [r3, #8]
 8006b84:	e105      	b.n	8006d92 <UART_SetConfig+0x4d6>
 8006b86:	bf00      	nop
 8006b88:	40011000 	.word	0x40011000
 8006b8c:	40011400 	.word	0x40011400
 8006b90:	51eb851f 	.word	0x51eb851f
 8006b94:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8006b98:	2200      	movs	r2, #0
 8006b9a:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8006b9e:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 8006ba2:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8006ba6:	4642      	mov	r2, r8
 8006ba8:	464b      	mov	r3, r9
 8006baa:	1891      	adds	r1, r2, r2
 8006bac:	6239      	str	r1, [r7, #32]
 8006bae:	415b      	adcs	r3, r3
 8006bb0:	627b      	str	r3, [r7, #36]	; 0x24
 8006bb2:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8006bb6:	4641      	mov	r1, r8
 8006bb8:	1854      	adds	r4, r2, r1
 8006bba:	4649      	mov	r1, r9
 8006bbc:	eb43 0501 	adc.w	r5, r3, r1
 8006bc0:	f04f 0200 	mov.w	r2, #0
 8006bc4:	f04f 0300 	mov.w	r3, #0
 8006bc8:	00eb      	lsls	r3, r5, #3
 8006bca:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8006bce:	00e2      	lsls	r2, r4, #3
 8006bd0:	4614      	mov	r4, r2
 8006bd2:	461d      	mov	r5, r3
 8006bd4:	4643      	mov	r3, r8
 8006bd6:	18e3      	adds	r3, r4, r3
 8006bd8:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8006bdc:	464b      	mov	r3, r9
 8006bde:	eb45 0303 	adc.w	r3, r5, r3
 8006be2:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8006be6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006bea:	685b      	ldr	r3, [r3, #4]
 8006bec:	2200      	movs	r2, #0
 8006bee:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8006bf2:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8006bf6:	f04f 0200 	mov.w	r2, #0
 8006bfa:	f04f 0300 	mov.w	r3, #0
 8006bfe:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8006c02:	4629      	mov	r1, r5
 8006c04:	008b      	lsls	r3, r1, #2
 8006c06:	4621      	mov	r1, r4
 8006c08:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006c0c:	4621      	mov	r1, r4
 8006c0e:	008a      	lsls	r2, r1, #2
 8006c10:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8006c14:	f7fa f840 	bl	8000c98 <__aeabi_uldivmod>
 8006c18:	4602      	mov	r2, r0
 8006c1a:	460b      	mov	r3, r1
 8006c1c:	4b60      	ldr	r3, [pc, #384]	; (8006da0 <UART_SetConfig+0x4e4>)
 8006c1e:	fba3 2302 	umull	r2, r3, r3, r2
 8006c22:	095b      	lsrs	r3, r3, #5
 8006c24:	011c      	lsls	r4, r3, #4
 8006c26:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8006c2a:	2200      	movs	r2, #0
 8006c2c:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8006c30:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8006c34:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 8006c38:	4642      	mov	r2, r8
 8006c3a:	464b      	mov	r3, r9
 8006c3c:	1891      	adds	r1, r2, r2
 8006c3e:	61b9      	str	r1, [r7, #24]
 8006c40:	415b      	adcs	r3, r3
 8006c42:	61fb      	str	r3, [r7, #28]
 8006c44:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006c48:	4641      	mov	r1, r8
 8006c4a:	1851      	adds	r1, r2, r1
 8006c4c:	6139      	str	r1, [r7, #16]
 8006c4e:	4649      	mov	r1, r9
 8006c50:	414b      	adcs	r3, r1
 8006c52:	617b      	str	r3, [r7, #20]
 8006c54:	f04f 0200 	mov.w	r2, #0
 8006c58:	f04f 0300 	mov.w	r3, #0
 8006c5c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8006c60:	4659      	mov	r1, fp
 8006c62:	00cb      	lsls	r3, r1, #3
 8006c64:	4651      	mov	r1, sl
 8006c66:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006c6a:	4651      	mov	r1, sl
 8006c6c:	00ca      	lsls	r2, r1, #3
 8006c6e:	4610      	mov	r0, r2
 8006c70:	4619      	mov	r1, r3
 8006c72:	4603      	mov	r3, r0
 8006c74:	4642      	mov	r2, r8
 8006c76:	189b      	adds	r3, r3, r2
 8006c78:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8006c7c:	464b      	mov	r3, r9
 8006c7e:	460a      	mov	r2, r1
 8006c80:	eb42 0303 	adc.w	r3, r2, r3
 8006c84:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8006c88:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006c8c:	685b      	ldr	r3, [r3, #4]
 8006c8e:	2200      	movs	r2, #0
 8006c90:	67bb      	str	r3, [r7, #120]	; 0x78
 8006c92:	67fa      	str	r2, [r7, #124]	; 0x7c
 8006c94:	f04f 0200 	mov.w	r2, #0
 8006c98:	f04f 0300 	mov.w	r3, #0
 8006c9c:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 8006ca0:	4649      	mov	r1, r9
 8006ca2:	008b      	lsls	r3, r1, #2
 8006ca4:	4641      	mov	r1, r8
 8006ca6:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006caa:	4641      	mov	r1, r8
 8006cac:	008a      	lsls	r2, r1, #2
 8006cae:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8006cb2:	f7f9 fff1 	bl	8000c98 <__aeabi_uldivmod>
 8006cb6:	4602      	mov	r2, r0
 8006cb8:	460b      	mov	r3, r1
 8006cba:	4b39      	ldr	r3, [pc, #228]	; (8006da0 <UART_SetConfig+0x4e4>)
 8006cbc:	fba3 1302 	umull	r1, r3, r3, r2
 8006cc0:	095b      	lsrs	r3, r3, #5
 8006cc2:	2164      	movs	r1, #100	; 0x64
 8006cc4:	fb01 f303 	mul.w	r3, r1, r3
 8006cc8:	1ad3      	subs	r3, r2, r3
 8006cca:	011b      	lsls	r3, r3, #4
 8006ccc:	3332      	adds	r3, #50	; 0x32
 8006cce:	4a34      	ldr	r2, [pc, #208]	; (8006da0 <UART_SetConfig+0x4e4>)
 8006cd0:	fba2 2303 	umull	r2, r3, r2, r3
 8006cd4:	095b      	lsrs	r3, r3, #5
 8006cd6:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8006cda:	441c      	add	r4, r3
 8006cdc:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8006ce0:	2200      	movs	r2, #0
 8006ce2:	673b      	str	r3, [r7, #112]	; 0x70
 8006ce4:	677a      	str	r2, [r7, #116]	; 0x74
 8006ce6:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 8006cea:	4642      	mov	r2, r8
 8006cec:	464b      	mov	r3, r9
 8006cee:	1891      	adds	r1, r2, r2
 8006cf0:	60b9      	str	r1, [r7, #8]
 8006cf2:	415b      	adcs	r3, r3
 8006cf4:	60fb      	str	r3, [r7, #12]
 8006cf6:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006cfa:	4641      	mov	r1, r8
 8006cfc:	1851      	adds	r1, r2, r1
 8006cfe:	6039      	str	r1, [r7, #0]
 8006d00:	4649      	mov	r1, r9
 8006d02:	414b      	adcs	r3, r1
 8006d04:	607b      	str	r3, [r7, #4]
 8006d06:	f04f 0200 	mov.w	r2, #0
 8006d0a:	f04f 0300 	mov.w	r3, #0
 8006d0e:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8006d12:	4659      	mov	r1, fp
 8006d14:	00cb      	lsls	r3, r1, #3
 8006d16:	4651      	mov	r1, sl
 8006d18:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006d1c:	4651      	mov	r1, sl
 8006d1e:	00ca      	lsls	r2, r1, #3
 8006d20:	4610      	mov	r0, r2
 8006d22:	4619      	mov	r1, r3
 8006d24:	4603      	mov	r3, r0
 8006d26:	4642      	mov	r2, r8
 8006d28:	189b      	adds	r3, r3, r2
 8006d2a:	66bb      	str	r3, [r7, #104]	; 0x68
 8006d2c:	464b      	mov	r3, r9
 8006d2e:	460a      	mov	r2, r1
 8006d30:	eb42 0303 	adc.w	r3, r2, r3
 8006d34:	66fb      	str	r3, [r7, #108]	; 0x6c
 8006d36:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006d3a:	685b      	ldr	r3, [r3, #4]
 8006d3c:	2200      	movs	r2, #0
 8006d3e:	663b      	str	r3, [r7, #96]	; 0x60
 8006d40:	667a      	str	r2, [r7, #100]	; 0x64
 8006d42:	f04f 0200 	mov.w	r2, #0
 8006d46:	f04f 0300 	mov.w	r3, #0
 8006d4a:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 8006d4e:	4649      	mov	r1, r9
 8006d50:	008b      	lsls	r3, r1, #2
 8006d52:	4641      	mov	r1, r8
 8006d54:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006d58:	4641      	mov	r1, r8
 8006d5a:	008a      	lsls	r2, r1, #2
 8006d5c:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8006d60:	f7f9 ff9a 	bl	8000c98 <__aeabi_uldivmod>
 8006d64:	4602      	mov	r2, r0
 8006d66:	460b      	mov	r3, r1
 8006d68:	4b0d      	ldr	r3, [pc, #52]	; (8006da0 <UART_SetConfig+0x4e4>)
 8006d6a:	fba3 1302 	umull	r1, r3, r3, r2
 8006d6e:	095b      	lsrs	r3, r3, #5
 8006d70:	2164      	movs	r1, #100	; 0x64
 8006d72:	fb01 f303 	mul.w	r3, r1, r3
 8006d76:	1ad3      	subs	r3, r2, r3
 8006d78:	011b      	lsls	r3, r3, #4
 8006d7a:	3332      	adds	r3, #50	; 0x32
 8006d7c:	4a08      	ldr	r2, [pc, #32]	; (8006da0 <UART_SetConfig+0x4e4>)
 8006d7e:	fba2 2303 	umull	r2, r3, r2, r3
 8006d82:	095b      	lsrs	r3, r3, #5
 8006d84:	f003 020f 	and.w	r2, r3, #15
 8006d88:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006d8c:	681b      	ldr	r3, [r3, #0]
 8006d8e:	4422      	add	r2, r4
 8006d90:	609a      	str	r2, [r3, #8]
 8006d92:	bf00      	nop
 8006d94:	f507 7780 	add.w	r7, r7, #256	; 0x100
 8006d98:	46bd      	mov	sp, r7
 8006d9a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8006d9e:	bf00      	nop
 8006da0:	51eb851f 	.word	0x51eb851f

08006da4 <__NVIC_SetPriority>:
 8006da4:	b480      	push	{r7}
 8006da6:	b083      	sub	sp, #12
 8006da8:	af00      	add	r7, sp, #0
 8006daa:	4603      	mov	r3, r0
 8006dac:	6039      	str	r1, [r7, #0]
 8006dae:	71fb      	strb	r3, [r7, #7]
 8006db0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006db4:	2b00      	cmp	r3, #0
 8006db6:	db0a      	blt.n	8006dce <__NVIC_SetPriority+0x2a>
 8006db8:	683b      	ldr	r3, [r7, #0]
 8006dba:	b2da      	uxtb	r2, r3
 8006dbc:	490c      	ldr	r1, [pc, #48]	; (8006df0 <__NVIC_SetPriority+0x4c>)
 8006dbe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006dc2:	0112      	lsls	r2, r2, #4
 8006dc4:	b2d2      	uxtb	r2, r2
 8006dc6:	440b      	add	r3, r1
 8006dc8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8006dcc:	e00a      	b.n	8006de4 <__NVIC_SetPriority+0x40>
 8006dce:	683b      	ldr	r3, [r7, #0]
 8006dd0:	b2da      	uxtb	r2, r3
 8006dd2:	4908      	ldr	r1, [pc, #32]	; (8006df4 <__NVIC_SetPriority+0x50>)
 8006dd4:	79fb      	ldrb	r3, [r7, #7]
 8006dd6:	f003 030f 	and.w	r3, r3, #15
 8006dda:	3b04      	subs	r3, #4
 8006ddc:	0112      	lsls	r2, r2, #4
 8006dde:	b2d2      	uxtb	r2, r2
 8006de0:	440b      	add	r3, r1
 8006de2:	761a      	strb	r2, [r3, #24]
 8006de4:	bf00      	nop
 8006de6:	370c      	adds	r7, #12
 8006de8:	46bd      	mov	sp, r7
 8006dea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dee:	4770      	bx	lr
 8006df0:	e000e100 	.word	0xe000e100
 8006df4:	e000ed00 	.word	0xe000ed00

08006df8 <SVC_Setup>:
 8006df8:	b580      	push	{r7, lr}
 8006dfa:	af00      	add	r7, sp, #0
 8006dfc:	2100      	movs	r1, #0
 8006dfe:	f06f 0004 	mvn.w	r0, #4
 8006e02:	f7ff ffcf 	bl	8006da4 <__NVIC_SetPriority>
 8006e06:	bf00      	nop
 8006e08:	bd80      	pop	{r7, pc}
	...

08006e0c <osKernelInitialize>:
 8006e0c:	b480      	push	{r7}
 8006e0e:	b083      	sub	sp, #12
 8006e10:	af00      	add	r7, sp, #0
 8006e12:	f3ef 8305 	mrs	r3, IPSR
 8006e16:	603b      	str	r3, [r7, #0]
 8006e18:	683b      	ldr	r3, [r7, #0]
 8006e1a:	2b00      	cmp	r3, #0
 8006e1c:	d003      	beq.n	8006e26 <osKernelInitialize+0x1a>
 8006e1e:	f06f 0305 	mvn.w	r3, #5
 8006e22:	607b      	str	r3, [r7, #4]
 8006e24:	e00c      	b.n	8006e40 <osKernelInitialize+0x34>
 8006e26:	4b0a      	ldr	r3, [pc, #40]	; (8006e50 <osKernelInitialize+0x44>)
 8006e28:	681b      	ldr	r3, [r3, #0]
 8006e2a:	2b00      	cmp	r3, #0
 8006e2c:	d105      	bne.n	8006e3a <osKernelInitialize+0x2e>
 8006e2e:	4b08      	ldr	r3, [pc, #32]	; (8006e50 <osKernelInitialize+0x44>)
 8006e30:	2201      	movs	r2, #1
 8006e32:	601a      	str	r2, [r3, #0]
 8006e34:	2300      	movs	r3, #0
 8006e36:	607b      	str	r3, [r7, #4]
 8006e38:	e002      	b.n	8006e40 <osKernelInitialize+0x34>
 8006e3a:	f04f 33ff 	mov.w	r3, #4294967295
 8006e3e:	607b      	str	r3, [r7, #4]
 8006e40:	687b      	ldr	r3, [r7, #4]
 8006e42:	4618      	mov	r0, r3
 8006e44:	370c      	adds	r7, #12
 8006e46:	46bd      	mov	sp, r7
 8006e48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e4c:	4770      	bx	lr
 8006e4e:	bf00      	nop
 8006e50:	20002c74 	.word	0x20002c74

08006e54 <osKernelStart>:
 8006e54:	b580      	push	{r7, lr}
 8006e56:	b082      	sub	sp, #8
 8006e58:	af00      	add	r7, sp, #0
 8006e5a:	f3ef 8305 	mrs	r3, IPSR
 8006e5e:	603b      	str	r3, [r7, #0]
 8006e60:	683b      	ldr	r3, [r7, #0]
 8006e62:	2b00      	cmp	r3, #0
 8006e64:	d003      	beq.n	8006e6e <osKernelStart+0x1a>
 8006e66:	f06f 0305 	mvn.w	r3, #5
 8006e6a:	607b      	str	r3, [r7, #4]
 8006e6c:	e010      	b.n	8006e90 <osKernelStart+0x3c>
 8006e6e:	4b0b      	ldr	r3, [pc, #44]	; (8006e9c <osKernelStart+0x48>)
 8006e70:	681b      	ldr	r3, [r3, #0]
 8006e72:	2b01      	cmp	r3, #1
 8006e74:	d109      	bne.n	8006e8a <osKernelStart+0x36>
 8006e76:	f7ff ffbf 	bl	8006df8 <SVC_Setup>
 8006e7a:	4b08      	ldr	r3, [pc, #32]	; (8006e9c <osKernelStart+0x48>)
 8006e7c:	2202      	movs	r2, #2
 8006e7e:	601a      	str	r2, [r3, #0]
 8006e80:	f001 fa38 	bl	80082f4 <vTaskStartScheduler>
 8006e84:	2300      	movs	r3, #0
 8006e86:	607b      	str	r3, [r7, #4]
 8006e88:	e002      	b.n	8006e90 <osKernelStart+0x3c>
 8006e8a:	f04f 33ff 	mov.w	r3, #4294967295
 8006e8e:	607b      	str	r3, [r7, #4]
 8006e90:	687b      	ldr	r3, [r7, #4]
 8006e92:	4618      	mov	r0, r3
 8006e94:	3708      	adds	r7, #8
 8006e96:	46bd      	mov	sp, r7
 8006e98:	bd80      	pop	{r7, pc}
 8006e9a:	bf00      	nop
 8006e9c:	20002c74 	.word	0x20002c74

08006ea0 <osThreadNew>:
 8006ea0:	b580      	push	{r7, lr}
 8006ea2:	b08e      	sub	sp, #56	; 0x38
 8006ea4:	af04      	add	r7, sp, #16
 8006ea6:	60f8      	str	r0, [r7, #12]
 8006ea8:	60b9      	str	r1, [r7, #8]
 8006eaa:	607a      	str	r2, [r7, #4]
 8006eac:	2300      	movs	r3, #0
 8006eae:	613b      	str	r3, [r7, #16]
 8006eb0:	f3ef 8305 	mrs	r3, IPSR
 8006eb4:	617b      	str	r3, [r7, #20]
 8006eb6:	697b      	ldr	r3, [r7, #20]
 8006eb8:	2b00      	cmp	r3, #0
 8006eba:	d17f      	bne.n	8006fbc <osThreadNew+0x11c>
 8006ebc:	68fb      	ldr	r3, [r7, #12]
 8006ebe:	2b00      	cmp	r3, #0
 8006ec0:	d07c      	beq.n	8006fbc <osThreadNew+0x11c>
 8006ec2:	2380      	movs	r3, #128	; 0x80
 8006ec4:	623b      	str	r3, [r7, #32]
 8006ec6:	2318      	movs	r3, #24
 8006ec8:	61fb      	str	r3, [r7, #28]
 8006eca:	2300      	movs	r3, #0
 8006ecc:	627b      	str	r3, [r7, #36]	; 0x24
 8006ece:	f04f 33ff 	mov.w	r3, #4294967295
 8006ed2:	61bb      	str	r3, [r7, #24]
 8006ed4:	687b      	ldr	r3, [r7, #4]
 8006ed6:	2b00      	cmp	r3, #0
 8006ed8:	d046      	beq.n	8006f68 <osThreadNew+0xc8>
 8006eda:	687b      	ldr	r3, [r7, #4]
 8006edc:	681b      	ldr	r3, [r3, #0]
 8006ede:	2b00      	cmp	r3, #0
 8006ee0:	d002      	beq.n	8006ee8 <osThreadNew+0x48>
 8006ee2:	687b      	ldr	r3, [r7, #4]
 8006ee4:	681b      	ldr	r3, [r3, #0]
 8006ee6:	627b      	str	r3, [r7, #36]	; 0x24
 8006ee8:	687b      	ldr	r3, [r7, #4]
 8006eea:	699b      	ldr	r3, [r3, #24]
 8006eec:	2b00      	cmp	r3, #0
 8006eee:	d002      	beq.n	8006ef6 <osThreadNew+0x56>
 8006ef0:	687b      	ldr	r3, [r7, #4]
 8006ef2:	699b      	ldr	r3, [r3, #24]
 8006ef4:	61fb      	str	r3, [r7, #28]
 8006ef6:	69fb      	ldr	r3, [r7, #28]
 8006ef8:	2b00      	cmp	r3, #0
 8006efa:	d008      	beq.n	8006f0e <osThreadNew+0x6e>
 8006efc:	69fb      	ldr	r3, [r7, #28]
 8006efe:	2b38      	cmp	r3, #56	; 0x38
 8006f00:	d805      	bhi.n	8006f0e <osThreadNew+0x6e>
 8006f02:	687b      	ldr	r3, [r7, #4]
 8006f04:	685b      	ldr	r3, [r3, #4]
 8006f06:	f003 0301 	and.w	r3, r3, #1
 8006f0a:	2b00      	cmp	r3, #0
 8006f0c:	d001      	beq.n	8006f12 <osThreadNew+0x72>
 8006f0e:	2300      	movs	r3, #0
 8006f10:	e055      	b.n	8006fbe <osThreadNew+0x11e>
 8006f12:	687b      	ldr	r3, [r7, #4]
 8006f14:	695b      	ldr	r3, [r3, #20]
 8006f16:	2b00      	cmp	r3, #0
 8006f18:	d003      	beq.n	8006f22 <osThreadNew+0x82>
 8006f1a:	687b      	ldr	r3, [r7, #4]
 8006f1c:	695b      	ldr	r3, [r3, #20]
 8006f1e:	089b      	lsrs	r3, r3, #2
 8006f20:	623b      	str	r3, [r7, #32]
 8006f22:	687b      	ldr	r3, [r7, #4]
 8006f24:	689b      	ldr	r3, [r3, #8]
 8006f26:	2b00      	cmp	r3, #0
 8006f28:	d00f      	beq.n	8006f4a <osThreadNew+0xaa>
 8006f2a:	687b      	ldr	r3, [r7, #4]
 8006f2c:	68db      	ldr	r3, [r3, #12]
 8006f2e:	f5b3 6f91 	cmp.w	r3, #1160	; 0x488
 8006f32:	d30a      	bcc.n	8006f4a <osThreadNew+0xaa>
 8006f34:	687b      	ldr	r3, [r7, #4]
 8006f36:	691b      	ldr	r3, [r3, #16]
 8006f38:	2b00      	cmp	r3, #0
 8006f3a:	d006      	beq.n	8006f4a <osThreadNew+0xaa>
 8006f3c:	687b      	ldr	r3, [r7, #4]
 8006f3e:	695b      	ldr	r3, [r3, #20]
 8006f40:	2b00      	cmp	r3, #0
 8006f42:	d002      	beq.n	8006f4a <osThreadNew+0xaa>
 8006f44:	2301      	movs	r3, #1
 8006f46:	61bb      	str	r3, [r7, #24]
 8006f48:	e010      	b.n	8006f6c <osThreadNew+0xcc>
 8006f4a:	687b      	ldr	r3, [r7, #4]
 8006f4c:	689b      	ldr	r3, [r3, #8]
 8006f4e:	2b00      	cmp	r3, #0
 8006f50:	d10c      	bne.n	8006f6c <osThreadNew+0xcc>
 8006f52:	687b      	ldr	r3, [r7, #4]
 8006f54:	68db      	ldr	r3, [r3, #12]
 8006f56:	2b00      	cmp	r3, #0
 8006f58:	d108      	bne.n	8006f6c <osThreadNew+0xcc>
 8006f5a:	687b      	ldr	r3, [r7, #4]
 8006f5c:	691b      	ldr	r3, [r3, #16]
 8006f5e:	2b00      	cmp	r3, #0
 8006f60:	d104      	bne.n	8006f6c <osThreadNew+0xcc>
 8006f62:	2300      	movs	r3, #0
 8006f64:	61bb      	str	r3, [r7, #24]
 8006f66:	e001      	b.n	8006f6c <osThreadNew+0xcc>
 8006f68:	2300      	movs	r3, #0
 8006f6a:	61bb      	str	r3, [r7, #24]
 8006f6c:	69bb      	ldr	r3, [r7, #24]
 8006f6e:	2b01      	cmp	r3, #1
 8006f70:	d110      	bne.n	8006f94 <osThreadNew+0xf4>
 8006f72:	687b      	ldr	r3, [r7, #4]
 8006f74:	691b      	ldr	r3, [r3, #16]
 8006f76:	687a      	ldr	r2, [r7, #4]
 8006f78:	6892      	ldr	r2, [r2, #8]
 8006f7a:	9202      	str	r2, [sp, #8]
 8006f7c:	9301      	str	r3, [sp, #4]
 8006f7e:	69fb      	ldr	r3, [r7, #28]
 8006f80:	9300      	str	r3, [sp, #0]
 8006f82:	68bb      	ldr	r3, [r7, #8]
 8006f84:	6a3a      	ldr	r2, [r7, #32]
 8006f86:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8006f88:	68f8      	ldr	r0, [r7, #12]
 8006f8a:	f000 ff9b 	bl	8007ec4 <xTaskCreateStatic>
 8006f8e:	4603      	mov	r3, r0
 8006f90:	613b      	str	r3, [r7, #16]
 8006f92:	e013      	b.n	8006fbc <osThreadNew+0x11c>
 8006f94:	69bb      	ldr	r3, [r7, #24]
 8006f96:	2b00      	cmp	r3, #0
 8006f98:	d110      	bne.n	8006fbc <osThreadNew+0x11c>
 8006f9a:	6a3b      	ldr	r3, [r7, #32]
 8006f9c:	b29a      	uxth	r2, r3
 8006f9e:	f107 0310 	add.w	r3, r7, #16
 8006fa2:	9301      	str	r3, [sp, #4]
 8006fa4:	69fb      	ldr	r3, [r7, #28]
 8006fa6:	9300      	str	r3, [sp, #0]
 8006fa8:	68bb      	ldr	r3, [r7, #8]
 8006faa:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8006fac:	68f8      	ldr	r0, [r7, #12]
 8006fae:	f000 ffe8 	bl	8007f82 <xTaskCreate>
 8006fb2:	4603      	mov	r3, r0
 8006fb4:	2b01      	cmp	r3, #1
 8006fb6:	d001      	beq.n	8006fbc <osThreadNew+0x11c>
 8006fb8:	2300      	movs	r3, #0
 8006fba:	613b      	str	r3, [r7, #16]
 8006fbc:	693b      	ldr	r3, [r7, #16]
 8006fbe:	4618      	mov	r0, r3
 8006fc0:	3728      	adds	r7, #40	; 0x28
 8006fc2:	46bd      	mov	sp, r7
 8006fc4:	bd80      	pop	{r7, pc}

08006fc6 <osDelay>:
 8006fc6:	b580      	push	{r7, lr}
 8006fc8:	b084      	sub	sp, #16
 8006fca:	af00      	add	r7, sp, #0
 8006fcc:	6078      	str	r0, [r7, #4]
 8006fce:	f3ef 8305 	mrs	r3, IPSR
 8006fd2:	60bb      	str	r3, [r7, #8]
 8006fd4:	68bb      	ldr	r3, [r7, #8]
 8006fd6:	2b00      	cmp	r3, #0
 8006fd8:	d003      	beq.n	8006fe2 <osDelay+0x1c>
 8006fda:	f06f 0305 	mvn.w	r3, #5
 8006fde:	60fb      	str	r3, [r7, #12]
 8006fe0:	e007      	b.n	8006ff2 <osDelay+0x2c>
 8006fe2:	2300      	movs	r3, #0
 8006fe4:	60fb      	str	r3, [r7, #12]
 8006fe6:	687b      	ldr	r3, [r7, #4]
 8006fe8:	2b00      	cmp	r3, #0
 8006fea:	d002      	beq.n	8006ff2 <osDelay+0x2c>
 8006fec:	6878      	ldr	r0, [r7, #4]
 8006fee:	f001 f94d 	bl	800828c <vTaskDelay>
 8006ff2:	68fb      	ldr	r3, [r7, #12]
 8006ff4:	4618      	mov	r0, r3
 8006ff6:	3710      	adds	r7, #16
 8006ff8:	46bd      	mov	sp, r7
 8006ffa:	bd80      	pop	{r7, pc}

08006ffc <vApplicationGetIdleTaskMemory>:
 8006ffc:	b480      	push	{r7}
 8006ffe:	b085      	sub	sp, #20
 8007000:	af00      	add	r7, sp, #0
 8007002:	60f8      	str	r0, [r7, #12]
 8007004:	60b9      	str	r1, [r7, #8]
 8007006:	607a      	str	r2, [r7, #4]
 8007008:	68fb      	ldr	r3, [r7, #12]
 800700a:	4a07      	ldr	r2, [pc, #28]	; (8007028 <vApplicationGetIdleTaskMemory+0x2c>)
 800700c:	601a      	str	r2, [r3, #0]
 800700e:	68bb      	ldr	r3, [r7, #8]
 8007010:	4a06      	ldr	r2, [pc, #24]	; (800702c <vApplicationGetIdleTaskMemory+0x30>)
 8007012:	601a      	str	r2, [r3, #0]
 8007014:	687b      	ldr	r3, [r7, #4]
 8007016:	2280      	movs	r2, #128	; 0x80
 8007018:	601a      	str	r2, [r3, #0]
 800701a:	bf00      	nop
 800701c:	3714      	adds	r7, #20
 800701e:	46bd      	mov	sp, r7
 8007020:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007024:	4770      	bx	lr
 8007026:	bf00      	nop
 8007028:	20002c78 	.word	0x20002c78
 800702c:	20003100 	.word	0x20003100

08007030 <vApplicationGetTimerTaskMemory>:
 8007030:	b480      	push	{r7}
 8007032:	b085      	sub	sp, #20
 8007034:	af00      	add	r7, sp, #0
 8007036:	60f8      	str	r0, [r7, #12]
 8007038:	60b9      	str	r1, [r7, #8]
 800703a:	607a      	str	r2, [r7, #4]
 800703c:	68fb      	ldr	r3, [r7, #12]
 800703e:	4a07      	ldr	r2, [pc, #28]	; (800705c <vApplicationGetTimerTaskMemory+0x2c>)
 8007040:	601a      	str	r2, [r3, #0]
 8007042:	68bb      	ldr	r3, [r7, #8]
 8007044:	4a06      	ldr	r2, [pc, #24]	; (8007060 <vApplicationGetTimerTaskMemory+0x30>)
 8007046:	601a      	str	r2, [r3, #0]
 8007048:	687b      	ldr	r3, [r7, #4]
 800704a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800704e:	601a      	str	r2, [r3, #0]
 8007050:	bf00      	nop
 8007052:	3714      	adds	r7, #20
 8007054:	46bd      	mov	sp, r7
 8007056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800705a:	4770      	bx	lr
 800705c:	20003300 	.word	0x20003300
 8007060:	20003788 	.word	0x20003788

08007064 <vListInitialise>:
 8007064:	b480      	push	{r7}
 8007066:	b083      	sub	sp, #12
 8007068:	af00      	add	r7, sp, #0
 800706a:	6078      	str	r0, [r7, #4]
 800706c:	687b      	ldr	r3, [r7, #4]
 800706e:	f103 0208 	add.w	r2, r3, #8
 8007072:	687b      	ldr	r3, [r7, #4]
 8007074:	605a      	str	r2, [r3, #4]
 8007076:	687b      	ldr	r3, [r7, #4]
 8007078:	f04f 32ff 	mov.w	r2, #4294967295
 800707c:	609a      	str	r2, [r3, #8]
 800707e:	687b      	ldr	r3, [r7, #4]
 8007080:	f103 0208 	add.w	r2, r3, #8
 8007084:	687b      	ldr	r3, [r7, #4]
 8007086:	60da      	str	r2, [r3, #12]
 8007088:	687b      	ldr	r3, [r7, #4]
 800708a:	f103 0208 	add.w	r2, r3, #8
 800708e:	687b      	ldr	r3, [r7, #4]
 8007090:	611a      	str	r2, [r3, #16]
 8007092:	687b      	ldr	r3, [r7, #4]
 8007094:	2200      	movs	r2, #0
 8007096:	601a      	str	r2, [r3, #0]
 8007098:	bf00      	nop
 800709a:	370c      	adds	r7, #12
 800709c:	46bd      	mov	sp, r7
 800709e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070a2:	4770      	bx	lr

080070a4 <vListInitialiseItem>:
 80070a4:	b480      	push	{r7}
 80070a6:	b083      	sub	sp, #12
 80070a8:	af00      	add	r7, sp, #0
 80070aa:	6078      	str	r0, [r7, #4]
 80070ac:	687b      	ldr	r3, [r7, #4]
 80070ae:	2200      	movs	r2, #0
 80070b0:	611a      	str	r2, [r3, #16]
 80070b2:	bf00      	nop
 80070b4:	370c      	adds	r7, #12
 80070b6:	46bd      	mov	sp, r7
 80070b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070bc:	4770      	bx	lr

080070be <vListInsertEnd>:
 80070be:	b480      	push	{r7}
 80070c0:	b085      	sub	sp, #20
 80070c2:	af00      	add	r7, sp, #0
 80070c4:	6078      	str	r0, [r7, #4]
 80070c6:	6039      	str	r1, [r7, #0]
 80070c8:	687b      	ldr	r3, [r7, #4]
 80070ca:	685b      	ldr	r3, [r3, #4]
 80070cc:	60fb      	str	r3, [r7, #12]
 80070ce:	683b      	ldr	r3, [r7, #0]
 80070d0:	68fa      	ldr	r2, [r7, #12]
 80070d2:	605a      	str	r2, [r3, #4]
 80070d4:	68fb      	ldr	r3, [r7, #12]
 80070d6:	689a      	ldr	r2, [r3, #8]
 80070d8:	683b      	ldr	r3, [r7, #0]
 80070da:	609a      	str	r2, [r3, #8]
 80070dc:	68fb      	ldr	r3, [r7, #12]
 80070de:	689b      	ldr	r3, [r3, #8]
 80070e0:	683a      	ldr	r2, [r7, #0]
 80070e2:	605a      	str	r2, [r3, #4]
 80070e4:	68fb      	ldr	r3, [r7, #12]
 80070e6:	683a      	ldr	r2, [r7, #0]
 80070e8:	609a      	str	r2, [r3, #8]
 80070ea:	683b      	ldr	r3, [r7, #0]
 80070ec:	687a      	ldr	r2, [r7, #4]
 80070ee:	611a      	str	r2, [r3, #16]
 80070f0:	687b      	ldr	r3, [r7, #4]
 80070f2:	681b      	ldr	r3, [r3, #0]
 80070f4:	1c5a      	adds	r2, r3, #1
 80070f6:	687b      	ldr	r3, [r7, #4]
 80070f8:	601a      	str	r2, [r3, #0]
 80070fa:	bf00      	nop
 80070fc:	3714      	adds	r7, #20
 80070fe:	46bd      	mov	sp, r7
 8007100:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007104:	4770      	bx	lr

08007106 <vListInsert>:
 8007106:	b480      	push	{r7}
 8007108:	b085      	sub	sp, #20
 800710a:	af00      	add	r7, sp, #0
 800710c:	6078      	str	r0, [r7, #4]
 800710e:	6039      	str	r1, [r7, #0]
 8007110:	683b      	ldr	r3, [r7, #0]
 8007112:	681b      	ldr	r3, [r3, #0]
 8007114:	60bb      	str	r3, [r7, #8]
 8007116:	68bb      	ldr	r3, [r7, #8]
 8007118:	f1b3 3fff 	cmp.w	r3, #4294967295
 800711c:	d103      	bne.n	8007126 <vListInsert+0x20>
 800711e:	687b      	ldr	r3, [r7, #4]
 8007120:	691b      	ldr	r3, [r3, #16]
 8007122:	60fb      	str	r3, [r7, #12]
 8007124:	e00c      	b.n	8007140 <vListInsert+0x3a>
 8007126:	687b      	ldr	r3, [r7, #4]
 8007128:	3308      	adds	r3, #8
 800712a:	60fb      	str	r3, [r7, #12]
 800712c:	e002      	b.n	8007134 <vListInsert+0x2e>
 800712e:	68fb      	ldr	r3, [r7, #12]
 8007130:	685b      	ldr	r3, [r3, #4]
 8007132:	60fb      	str	r3, [r7, #12]
 8007134:	68fb      	ldr	r3, [r7, #12]
 8007136:	685b      	ldr	r3, [r3, #4]
 8007138:	681b      	ldr	r3, [r3, #0]
 800713a:	68ba      	ldr	r2, [r7, #8]
 800713c:	429a      	cmp	r2, r3
 800713e:	d2f6      	bcs.n	800712e <vListInsert+0x28>
 8007140:	68fb      	ldr	r3, [r7, #12]
 8007142:	685a      	ldr	r2, [r3, #4]
 8007144:	683b      	ldr	r3, [r7, #0]
 8007146:	605a      	str	r2, [r3, #4]
 8007148:	683b      	ldr	r3, [r7, #0]
 800714a:	685b      	ldr	r3, [r3, #4]
 800714c:	683a      	ldr	r2, [r7, #0]
 800714e:	609a      	str	r2, [r3, #8]
 8007150:	683b      	ldr	r3, [r7, #0]
 8007152:	68fa      	ldr	r2, [r7, #12]
 8007154:	609a      	str	r2, [r3, #8]
 8007156:	68fb      	ldr	r3, [r7, #12]
 8007158:	683a      	ldr	r2, [r7, #0]
 800715a:	605a      	str	r2, [r3, #4]
 800715c:	683b      	ldr	r3, [r7, #0]
 800715e:	687a      	ldr	r2, [r7, #4]
 8007160:	611a      	str	r2, [r3, #16]
 8007162:	687b      	ldr	r3, [r7, #4]
 8007164:	681b      	ldr	r3, [r3, #0]
 8007166:	1c5a      	adds	r2, r3, #1
 8007168:	687b      	ldr	r3, [r7, #4]
 800716a:	601a      	str	r2, [r3, #0]
 800716c:	bf00      	nop
 800716e:	3714      	adds	r7, #20
 8007170:	46bd      	mov	sp, r7
 8007172:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007176:	4770      	bx	lr

08007178 <uxListRemove>:
 8007178:	b480      	push	{r7}
 800717a:	b085      	sub	sp, #20
 800717c:	af00      	add	r7, sp, #0
 800717e:	6078      	str	r0, [r7, #4]
 8007180:	687b      	ldr	r3, [r7, #4]
 8007182:	691b      	ldr	r3, [r3, #16]
 8007184:	60fb      	str	r3, [r7, #12]
 8007186:	687b      	ldr	r3, [r7, #4]
 8007188:	685b      	ldr	r3, [r3, #4]
 800718a:	687a      	ldr	r2, [r7, #4]
 800718c:	6892      	ldr	r2, [r2, #8]
 800718e:	609a      	str	r2, [r3, #8]
 8007190:	687b      	ldr	r3, [r7, #4]
 8007192:	689b      	ldr	r3, [r3, #8]
 8007194:	687a      	ldr	r2, [r7, #4]
 8007196:	6852      	ldr	r2, [r2, #4]
 8007198:	605a      	str	r2, [r3, #4]
 800719a:	68fb      	ldr	r3, [r7, #12]
 800719c:	685b      	ldr	r3, [r3, #4]
 800719e:	687a      	ldr	r2, [r7, #4]
 80071a0:	429a      	cmp	r2, r3
 80071a2:	d103      	bne.n	80071ac <uxListRemove+0x34>
 80071a4:	687b      	ldr	r3, [r7, #4]
 80071a6:	689a      	ldr	r2, [r3, #8]
 80071a8:	68fb      	ldr	r3, [r7, #12]
 80071aa:	605a      	str	r2, [r3, #4]
 80071ac:	687b      	ldr	r3, [r7, #4]
 80071ae:	2200      	movs	r2, #0
 80071b0:	611a      	str	r2, [r3, #16]
 80071b2:	68fb      	ldr	r3, [r7, #12]
 80071b4:	681b      	ldr	r3, [r3, #0]
 80071b6:	1e5a      	subs	r2, r3, #1
 80071b8:	68fb      	ldr	r3, [r7, #12]
 80071ba:	601a      	str	r2, [r3, #0]
 80071bc:	68fb      	ldr	r3, [r7, #12]
 80071be:	681b      	ldr	r3, [r3, #0]
 80071c0:	4618      	mov	r0, r3
 80071c2:	3714      	adds	r7, #20
 80071c4:	46bd      	mov	sp, r7
 80071c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071ca:	4770      	bx	lr

080071cc <xQueueGenericReset>:
 80071cc:	b580      	push	{r7, lr}
 80071ce:	b084      	sub	sp, #16
 80071d0:	af00      	add	r7, sp, #0
 80071d2:	6078      	str	r0, [r7, #4]
 80071d4:	6039      	str	r1, [r7, #0]
 80071d6:	687b      	ldr	r3, [r7, #4]
 80071d8:	60fb      	str	r3, [r7, #12]
 80071da:	68fb      	ldr	r3, [r7, #12]
 80071dc:	2b00      	cmp	r3, #0
 80071de:	d10a      	bne.n	80071f6 <xQueueGenericReset+0x2a>
 80071e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071e4:	f383 8811 	msr	BASEPRI, r3
 80071e8:	f3bf 8f6f 	isb	sy
 80071ec:	f3bf 8f4f 	dsb	sy
 80071f0:	60bb      	str	r3, [r7, #8]
 80071f2:	bf00      	nop
 80071f4:	e7fe      	b.n	80071f4 <xQueueGenericReset+0x28>
 80071f6:	f002 fb35 	bl	8009864 <vPortEnterCritical>
 80071fa:	68fb      	ldr	r3, [r7, #12]
 80071fc:	681a      	ldr	r2, [r3, #0]
 80071fe:	68fb      	ldr	r3, [r7, #12]
 8007200:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007202:	68f9      	ldr	r1, [r7, #12]
 8007204:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8007206:	fb01 f303 	mul.w	r3, r1, r3
 800720a:	441a      	add	r2, r3
 800720c:	68fb      	ldr	r3, [r7, #12]
 800720e:	609a      	str	r2, [r3, #8]
 8007210:	68fb      	ldr	r3, [r7, #12]
 8007212:	2200      	movs	r2, #0
 8007214:	639a      	str	r2, [r3, #56]	; 0x38
 8007216:	68fb      	ldr	r3, [r7, #12]
 8007218:	681a      	ldr	r2, [r3, #0]
 800721a:	68fb      	ldr	r3, [r7, #12]
 800721c:	605a      	str	r2, [r3, #4]
 800721e:	68fb      	ldr	r3, [r7, #12]
 8007220:	681a      	ldr	r2, [r3, #0]
 8007222:	68fb      	ldr	r3, [r7, #12]
 8007224:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007226:	3b01      	subs	r3, #1
 8007228:	68f9      	ldr	r1, [r7, #12]
 800722a:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800722c:	fb01 f303 	mul.w	r3, r1, r3
 8007230:	441a      	add	r2, r3
 8007232:	68fb      	ldr	r3, [r7, #12]
 8007234:	60da      	str	r2, [r3, #12]
 8007236:	68fb      	ldr	r3, [r7, #12]
 8007238:	22ff      	movs	r2, #255	; 0xff
 800723a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800723e:	68fb      	ldr	r3, [r7, #12]
 8007240:	22ff      	movs	r2, #255	; 0xff
 8007242:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8007246:	683b      	ldr	r3, [r7, #0]
 8007248:	2b00      	cmp	r3, #0
 800724a:	d114      	bne.n	8007276 <xQueueGenericReset+0xaa>
 800724c:	68fb      	ldr	r3, [r7, #12]
 800724e:	691b      	ldr	r3, [r3, #16]
 8007250:	2b00      	cmp	r3, #0
 8007252:	d01a      	beq.n	800728a <xQueueGenericReset+0xbe>
 8007254:	68fb      	ldr	r3, [r7, #12]
 8007256:	3310      	adds	r3, #16
 8007258:	4618      	mov	r0, r3
 800725a:	f001 fae5 	bl	8008828 <xTaskRemoveFromEventList>
 800725e:	4603      	mov	r3, r0
 8007260:	2b00      	cmp	r3, #0
 8007262:	d012      	beq.n	800728a <xQueueGenericReset+0xbe>
 8007264:	4b0c      	ldr	r3, [pc, #48]	; (8007298 <xQueueGenericReset+0xcc>)
 8007266:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800726a:	601a      	str	r2, [r3, #0]
 800726c:	f3bf 8f4f 	dsb	sy
 8007270:	f3bf 8f6f 	isb	sy
 8007274:	e009      	b.n	800728a <xQueueGenericReset+0xbe>
 8007276:	68fb      	ldr	r3, [r7, #12]
 8007278:	3310      	adds	r3, #16
 800727a:	4618      	mov	r0, r3
 800727c:	f7ff fef2 	bl	8007064 <vListInitialise>
 8007280:	68fb      	ldr	r3, [r7, #12]
 8007282:	3324      	adds	r3, #36	; 0x24
 8007284:	4618      	mov	r0, r3
 8007286:	f7ff feed 	bl	8007064 <vListInitialise>
 800728a:	f002 fb1b 	bl	80098c4 <vPortExitCritical>
 800728e:	2301      	movs	r3, #1
 8007290:	4618      	mov	r0, r3
 8007292:	3710      	adds	r7, #16
 8007294:	46bd      	mov	sp, r7
 8007296:	bd80      	pop	{r7, pc}
 8007298:	e000ed04 	.word	0xe000ed04

0800729c <xQueueGenericCreateStatic>:
 800729c:	b580      	push	{r7, lr}
 800729e:	b08e      	sub	sp, #56	; 0x38
 80072a0:	af02      	add	r7, sp, #8
 80072a2:	60f8      	str	r0, [r7, #12]
 80072a4:	60b9      	str	r1, [r7, #8]
 80072a6:	607a      	str	r2, [r7, #4]
 80072a8:	603b      	str	r3, [r7, #0]
 80072aa:	68fb      	ldr	r3, [r7, #12]
 80072ac:	2b00      	cmp	r3, #0
 80072ae:	d10a      	bne.n	80072c6 <xQueueGenericCreateStatic+0x2a>
 80072b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072b4:	f383 8811 	msr	BASEPRI, r3
 80072b8:	f3bf 8f6f 	isb	sy
 80072bc:	f3bf 8f4f 	dsb	sy
 80072c0:	62bb      	str	r3, [r7, #40]	; 0x28
 80072c2:	bf00      	nop
 80072c4:	e7fe      	b.n	80072c4 <xQueueGenericCreateStatic+0x28>
 80072c6:	683b      	ldr	r3, [r7, #0]
 80072c8:	2b00      	cmp	r3, #0
 80072ca:	d10a      	bne.n	80072e2 <xQueueGenericCreateStatic+0x46>
 80072cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072d0:	f383 8811 	msr	BASEPRI, r3
 80072d4:	f3bf 8f6f 	isb	sy
 80072d8:	f3bf 8f4f 	dsb	sy
 80072dc:	627b      	str	r3, [r7, #36]	; 0x24
 80072de:	bf00      	nop
 80072e0:	e7fe      	b.n	80072e0 <xQueueGenericCreateStatic+0x44>
 80072e2:	687b      	ldr	r3, [r7, #4]
 80072e4:	2b00      	cmp	r3, #0
 80072e6:	d002      	beq.n	80072ee <xQueueGenericCreateStatic+0x52>
 80072e8:	68bb      	ldr	r3, [r7, #8]
 80072ea:	2b00      	cmp	r3, #0
 80072ec:	d001      	beq.n	80072f2 <xQueueGenericCreateStatic+0x56>
 80072ee:	2301      	movs	r3, #1
 80072f0:	e000      	b.n	80072f4 <xQueueGenericCreateStatic+0x58>
 80072f2:	2300      	movs	r3, #0
 80072f4:	2b00      	cmp	r3, #0
 80072f6:	d10a      	bne.n	800730e <xQueueGenericCreateStatic+0x72>
 80072f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072fc:	f383 8811 	msr	BASEPRI, r3
 8007300:	f3bf 8f6f 	isb	sy
 8007304:	f3bf 8f4f 	dsb	sy
 8007308:	623b      	str	r3, [r7, #32]
 800730a:	bf00      	nop
 800730c:	e7fe      	b.n	800730c <xQueueGenericCreateStatic+0x70>
 800730e:	687b      	ldr	r3, [r7, #4]
 8007310:	2b00      	cmp	r3, #0
 8007312:	d102      	bne.n	800731a <xQueueGenericCreateStatic+0x7e>
 8007314:	68bb      	ldr	r3, [r7, #8]
 8007316:	2b00      	cmp	r3, #0
 8007318:	d101      	bne.n	800731e <xQueueGenericCreateStatic+0x82>
 800731a:	2301      	movs	r3, #1
 800731c:	e000      	b.n	8007320 <xQueueGenericCreateStatic+0x84>
 800731e:	2300      	movs	r3, #0
 8007320:	2b00      	cmp	r3, #0
 8007322:	d10a      	bne.n	800733a <xQueueGenericCreateStatic+0x9e>
 8007324:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007328:	f383 8811 	msr	BASEPRI, r3
 800732c:	f3bf 8f6f 	isb	sy
 8007330:	f3bf 8f4f 	dsb	sy
 8007334:	61fb      	str	r3, [r7, #28]
 8007336:	bf00      	nop
 8007338:	e7fe      	b.n	8007338 <xQueueGenericCreateStatic+0x9c>
 800733a:	2350      	movs	r3, #80	; 0x50
 800733c:	617b      	str	r3, [r7, #20]
 800733e:	697b      	ldr	r3, [r7, #20]
 8007340:	2b50      	cmp	r3, #80	; 0x50
 8007342:	d00a      	beq.n	800735a <xQueueGenericCreateStatic+0xbe>
 8007344:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007348:	f383 8811 	msr	BASEPRI, r3
 800734c:	f3bf 8f6f 	isb	sy
 8007350:	f3bf 8f4f 	dsb	sy
 8007354:	61bb      	str	r3, [r7, #24]
 8007356:	bf00      	nop
 8007358:	e7fe      	b.n	8007358 <xQueueGenericCreateStatic+0xbc>
 800735a:	697b      	ldr	r3, [r7, #20]
 800735c:	683b      	ldr	r3, [r7, #0]
 800735e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007360:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007362:	2b00      	cmp	r3, #0
 8007364:	d00d      	beq.n	8007382 <xQueueGenericCreateStatic+0xe6>
 8007366:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007368:	2201      	movs	r2, #1
 800736a:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800736e:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 8007372:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007374:	9300      	str	r3, [sp, #0]
 8007376:	4613      	mov	r3, r2
 8007378:	687a      	ldr	r2, [r7, #4]
 800737a:	68b9      	ldr	r1, [r7, #8]
 800737c:	68f8      	ldr	r0, [r7, #12]
 800737e:	f000 f83f 	bl	8007400 <prvInitialiseNewQueue>
 8007382:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007384:	4618      	mov	r0, r3
 8007386:	3730      	adds	r7, #48	; 0x30
 8007388:	46bd      	mov	sp, r7
 800738a:	bd80      	pop	{r7, pc}

0800738c <xQueueGenericCreate>:
 800738c:	b580      	push	{r7, lr}
 800738e:	b08a      	sub	sp, #40	; 0x28
 8007390:	af02      	add	r7, sp, #8
 8007392:	60f8      	str	r0, [r7, #12]
 8007394:	60b9      	str	r1, [r7, #8]
 8007396:	4613      	mov	r3, r2
 8007398:	71fb      	strb	r3, [r7, #7]
 800739a:	68fb      	ldr	r3, [r7, #12]
 800739c:	2b00      	cmp	r3, #0
 800739e:	d10a      	bne.n	80073b6 <xQueueGenericCreate+0x2a>
 80073a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073a4:	f383 8811 	msr	BASEPRI, r3
 80073a8:	f3bf 8f6f 	isb	sy
 80073ac:	f3bf 8f4f 	dsb	sy
 80073b0:	613b      	str	r3, [r7, #16]
 80073b2:	bf00      	nop
 80073b4:	e7fe      	b.n	80073b4 <xQueueGenericCreate+0x28>
 80073b6:	68fb      	ldr	r3, [r7, #12]
 80073b8:	68ba      	ldr	r2, [r7, #8]
 80073ba:	fb02 f303 	mul.w	r3, r2, r3
 80073be:	61fb      	str	r3, [r7, #28]
 80073c0:	69fb      	ldr	r3, [r7, #28]
 80073c2:	3350      	adds	r3, #80	; 0x50
 80073c4:	4618      	mov	r0, r3
 80073c6:	f002 fb6f 	bl	8009aa8 <pvPortMalloc>
 80073ca:	61b8      	str	r0, [r7, #24]
 80073cc:	69bb      	ldr	r3, [r7, #24]
 80073ce:	2b00      	cmp	r3, #0
 80073d0:	d011      	beq.n	80073f6 <xQueueGenericCreate+0x6a>
 80073d2:	69bb      	ldr	r3, [r7, #24]
 80073d4:	617b      	str	r3, [r7, #20]
 80073d6:	697b      	ldr	r3, [r7, #20]
 80073d8:	3350      	adds	r3, #80	; 0x50
 80073da:	617b      	str	r3, [r7, #20]
 80073dc:	69bb      	ldr	r3, [r7, #24]
 80073de:	2200      	movs	r2, #0
 80073e0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80073e4:	79fa      	ldrb	r2, [r7, #7]
 80073e6:	69bb      	ldr	r3, [r7, #24]
 80073e8:	9300      	str	r3, [sp, #0]
 80073ea:	4613      	mov	r3, r2
 80073ec:	697a      	ldr	r2, [r7, #20]
 80073ee:	68b9      	ldr	r1, [r7, #8]
 80073f0:	68f8      	ldr	r0, [r7, #12]
 80073f2:	f000 f805 	bl	8007400 <prvInitialiseNewQueue>
 80073f6:	69bb      	ldr	r3, [r7, #24]
 80073f8:	4618      	mov	r0, r3
 80073fa:	3720      	adds	r7, #32
 80073fc:	46bd      	mov	sp, r7
 80073fe:	bd80      	pop	{r7, pc}

08007400 <prvInitialiseNewQueue>:
 8007400:	b580      	push	{r7, lr}
 8007402:	b084      	sub	sp, #16
 8007404:	af00      	add	r7, sp, #0
 8007406:	60f8      	str	r0, [r7, #12]
 8007408:	60b9      	str	r1, [r7, #8]
 800740a:	607a      	str	r2, [r7, #4]
 800740c:	70fb      	strb	r3, [r7, #3]
 800740e:	68bb      	ldr	r3, [r7, #8]
 8007410:	2b00      	cmp	r3, #0
 8007412:	d103      	bne.n	800741c <prvInitialiseNewQueue+0x1c>
 8007414:	69bb      	ldr	r3, [r7, #24]
 8007416:	69ba      	ldr	r2, [r7, #24]
 8007418:	601a      	str	r2, [r3, #0]
 800741a:	e002      	b.n	8007422 <prvInitialiseNewQueue+0x22>
 800741c:	69bb      	ldr	r3, [r7, #24]
 800741e:	687a      	ldr	r2, [r7, #4]
 8007420:	601a      	str	r2, [r3, #0]
 8007422:	69bb      	ldr	r3, [r7, #24]
 8007424:	68fa      	ldr	r2, [r7, #12]
 8007426:	63da      	str	r2, [r3, #60]	; 0x3c
 8007428:	69bb      	ldr	r3, [r7, #24]
 800742a:	68ba      	ldr	r2, [r7, #8]
 800742c:	641a      	str	r2, [r3, #64]	; 0x40
 800742e:	2101      	movs	r1, #1
 8007430:	69b8      	ldr	r0, [r7, #24]
 8007432:	f7ff fecb 	bl	80071cc <xQueueGenericReset>
 8007436:	69bb      	ldr	r3, [r7, #24]
 8007438:	78fa      	ldrb	r2, [r7, #3]
 800743a:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 800743e:	bf00      	nop
 8007440:	3710      	adds	r7, #16
 8007442:	46bd      	mov	sp, r7
 8007444:	bd80      	pop	{r7, pc}

08007446 <prvInitialiseMutex>:
 8007446:	b580      	push	{r7, lr}
 8007448:	b082      	sub	sp, #8
 800744a:	af00      	add	r7, sp, #0
 800744c:	6078      	str	r0, [r7, #4]
 800744e:	687b      	ldr	r3, [r7, #4]
 8007450:	2b00      	cmp	r3, #0
 8007452:	d00e      	beq.n	8007472 <prvInitialiseMutex+0x2c>
 8007454:	687b      	ldr	r3, [r7, #4]
 8007456:	2200      	movs	r2, #0
 8007458:	609a      	str	r2, [r3, #8]
 800745a:	687b      	ldr	r3, [r7, #4]
 800745c:	2200      	movs	r2, #0
 800745e:	601a      	str	r2, [r3, #0]
 8007460:	687b      	ldr	r3, [r7, #4]
 8007462:	2200      	movs	r2, #0
 8007464:	60da      	str	r2, [r3, #12]
 8007466:	2300      	movs	r3, #0
 8007468:	2200      	movs	r2, #0
 800746a:	2100      	movs	r1, #0
 800746c:	6878      	ldr	r0, [r7, #4]
 800746e:	f000 f81d 	bl	80074ac <xQueueGenericSend>
 8007472:	bf00      	nop
 8007474:	3708      	adds	r7, #8
 8007476:	46bd      	mov	sp, r7
 8007478:	bd80      	pop	{r7, pc}

0800747a <xQueueCreateMutex>:
 800747a:	b580      	push	{r7, lr}
 800747c:	b086      	sub	sp, #24
 800747e:	af00      	add	r7, sp, #0
 8007480:	4603      	mov	r3, r0
 8007482:	71fb      	strb	r3, [r7, #7]
 8007484:	2301      	movs	r3, #1
 8007486:	617b      	str	r3, [r7, #20]
 8007488:	2300      	movs	r3, #0
 800748a:	613b      	str	r3, [r7, #16]
 800748c:	79fb      	ldrb	r3, [r7, #7]
 800748e:	461a      	mov	r2, r3
 8007490:	6939      	ldr	r1, [r7, #16]
 8007492:	6978      	ldr	r0, [r7, #20]
 8007494:	f7ff ff7a 	bl	800738c <xQueueGenericCreate>
 8007498:	60f8      	str	r0, [r7, #12]
 800749a:	68f8      	ldr	r0, [r7, #12]
 800749c:	f7ff ffd3 	bl	8007446 <prvInitialiseMutex>
 80074a0:	68fb      	ldr	r3, [r7, #12]
 80074a2:	4618      	mov	r0, r3
 80074a4:	3718      	adds	r7, #24
 80074a6:	46bd      	mov	sp, r7
 80074a8:	bd80      	pop	{r7, pc}
	...

080074ac <xQueueGenericSend>:
 80074ac:	b580      	push	{r7, lr}
 80074ae:	b08e      	sub	sp, #56	; 0x38
 80074b0:	af00      	add	r7, sp, #0
 80074b2:	60f8      	str	r0, [r7, #12]
 80074b4:	60b9      	str	r1, [r7, #8]
 80074b6:	607a      	str	r2, [r7, #4]
 80074b8:	603b      	str	r3, [r7, #0]
 80074ba:	2300      	movs	r3, #0
 80074bc:	637b      	str	r3, [r7, #52]	; 0x34
 80074be:	68fb      	ldr	r3, [r7, #12]
 80074c0:	633b      	str	r3, [r7, #48]	; 0x30
 80074c2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80074c4:	2b00      	cmp	r3, #0
 80074c6:	d10a      	bne.n	80074de <xQueueGenericSend+0x32>
 80074c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074cc:	f383 8811 	msr	BASEPRI, r3
 80074d0:	f3bf 8f6f 	isb	sy
 80074d4:	f3bf 8f4f 	dsb	sy
 80074d8:	62bb      	str	r3, [r7, #40]	; 0x28
 80074da:	bf00      	nop
 80074dc:	e7fe      	b.n	80074dc <xQueueGenericSend+0x30>
 80074de:	68bb      	ldr	r3, [r7, #8]
 80074e0:	2b00      	cmp	r3, #0
 80074e2:	d103      	bne.n	80074ec <xQueueGenericSend+0x40>
 80074e4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80074e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80074e8:	2b00      	cmp	r3, #0
 80074ea:	d101      	bne.n	80074f0 <xQueueGenericSend+0x44>
 80074ec:	2301      	movs	r3, #1
 80074ee:	e000      	b.n	80074f2 <xQueueGenericSend+0x46>
 80074f0:	2300      	movs	r3, #0
 80074f2:	2b00      	cmp	r3, #0
 80074f4:	d10a      	bne.n	800750c <xQueueGenericSend+0x60>
 80074f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074fa:	f383 8811 	msr	BASEPRI, r3
 80074fe:	f3bf 8f6f 	isb	sy
 8007502:	f3bf 8f4f 	dsb	sy
 8007506:	627b      	str	r3, [r7, #36]	; 0x24
 8007508:	bf00      	nop
 800750a:	e7fe      	b.n	800750a <xQueueGenericSend+0x5e>
 800750c:	683b      	ldr	r3, [r7, #0]
 800750e:	2b02      	cmp	r3, #2
 8007510:	d103      	bne.n	800751a <xQueueGenericSend+0x6e>
 8007512:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007514:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007516:	2b01      	cmp	r3, #1
 8007518:	d101      	bne.n	800751e <xQueueGenericSend+0x72>
 800751a:	2301      	movs	r3, #1
 800751c:	e000      	b.n	8007520 <xQueueGenericSend+0x74>
 800751e:	2300      	movs	r3, #0
 8007520:	2b00      	cmp	r3, #0
 8007522:	d10a      	bne.n	800753a <xQueueGenericSend+0x8e>
 8007524:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007528:	f383 8811 	msr	BASEPRI, r3
 800752c:	f3bf 8f6f 	isb	sy
 8007530:	f3bf 8f4f 	dsb	sy
 8007534:	623b      	str	r3, [r7, #32]
 8007536:	bf00      	nop
 8007538:	e7fe      	b.n	8007538 <xQueueGenericSend+0x8c>
 800753a:	f001 fb37 	bl	8008bac <xTaskGetSchedulerState>
 800753e:	4603      	mov	r3, r0
 8007540:	2b00      	cmp	r3, #0
 8007542:	d102      	bne.n	800754a <xQueueGenericSend+0x9e>
 8007544:	687b      	ldr	r3, [r7, #4]
 8007546:	2b00      	cmp	r3, #0
 8007548:	d101      	bne.n	800754e <xQueueGenericSend+0xa2>
 800754a:	2301      	movs	r3, #1
 800754c:	e000      	b.n	8007550 <xQueueGenericSend+0xa4>
 800754e:	2300      	movs	r3, #0
 8007550:	2b00      	cmp	r3, #0
 8007552:	d10a      	bne.n	800756a <xQueueGenericSend+0xbe>
 8007554:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007558:	f383 8811 	msr	BASEPRI, r3
 800755c:	f3bf 8f6f 	isb	sy
 8007560:	f3bf 8f4f 	dsb	sy
 8007564:	61fb      	str	r3, [r7, #28]
 8007566:	bf00      	nop
 8007568:	e7fe      	b.n	8007568 <xQueueGenericSend+0xbc>
 800756a:	f002 f97b 	bl	8009864 <vPortEnterCritical>
 800756e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007570:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8007572:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007574:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007576:	429a      	cmp	r2, r3
 8007578:	d302      	bcc.n	8007580 <xQueueGenericSend+0xd4>
 800757a:	683b      	ldr	r3, [r7, #0]
 800757c:	2b02      	cmp	r3, #2
 800757e:	d129      	bne.n	80075d4 <xQueueGenericSend+0x128>
 8007580:	683a      	ldr	r2, [r7, #0]
 8007582:	68b9      	ldr	r1, [r7, #8]
 8007584:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8007586:	f000 fb2f 	bl	8007be8 <prvCopyDataToQueue>
 800758a:	62f8      	str	r0, [r7, #44]	; 0x2c
 800758c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800758e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007590:	2b00      	cmp	r3, #0
 8007592:	d010      	beq.n	80075b6 <xQueueGenericSend+0x10a>
 8007594:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007596:	3324      	adds	r3, #36	; 0x24
 8007598:	4618      	mov	r0, r3
 800759a:	f001 f945 	bl	8008828 <xTaskRemoveFromEventList>
 800759e:	4603      	mov	r3, r0
 80075a0:	2b00      	cmp	r3, #0
 80075a2:	d013      	beq.n	80075cc <xQueueGenericSend+0x120>
 80075a4:	4b3f      	ldr	r3, [pc, #252]	; (80076a4 <xQueueGenericSend+0x1f8>)
 80075a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80075aa:	601a      	str	r2, [r3, #0]
 80075ac:	f3bf 8f4f 	dsb	sy
 80075b0:	f3bf 8f6f 	isb	sy
 80075b4:	e00a      	b.n	80075cc <xQueueGenericSend+0x120>
 80075b6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80075b8:	2b00      	cmp	r3, #0
 80075ba:	d007      	beq.n	80075cc <xQueueGenericSend+0x120>
 80075bc:	4b39      	ldr	r3, [pc, #228]	; (80076a4 <xQueueGenericSend+0x1f8>)
 80075be:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80075c2:	601a      	str	r2, [r3, #0]
 80075c4:	f3bf 8f4f 	dsb	sy
 80075c8:	f3bf 8f6f 	isb	sy
 80075cc:	f002 f97a 	bl	80098c4 <vPortExitCritical>
 80075d0:	2301      	movs	r3, #1
 80075d2:	e063      	b.n	800769c <xQueueGenericSend+0x1f0>
 80075d4:	687b      	ldr	r3, [r7, #4]
 80075d6:	2b00      	cmp	r3, #0
 80075d8:	d103      	bne.n	80075e2 <xQueueGenericSend+0x136>
 80075da:	f002 f973 	bl	80098c4 <vPortExitCritical>
 80075de:	2300      	movs	r3, #0
 80075e0:	e05c      	b.n	800769c <xQueueGenericSend+0x1f0>
 80075e2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80075e4:	2b00      	cmp	r3, #0
 80075e6:	d106      	bne.n	80075f6 <xQueueGenericSend+0x14a>
 80075e8:	f107 0314 	add.w	r3, r7, #20
 80075ec:	4618      	mov	r0, r3
 80075ee:	f001 f97f 	bl	80088f0 <vTaskInternalSetTimeOutState>
 80075f2:	2301      	movs	r3, #1
 80075f4:	637b      	str	r3, [r7, #52]	; 0x34
 80075f6:	f002 f965 	bl	80098c4 <vPortExitCritical>
 80075fa:	f000 feeb 	bl	80083d4 <vTaskSuspendAll>
 80075fe:	f002 f931 	bl	8009864 <vPortEnterCritical>
 8007602:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007604:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8007608:	b25b      	sxtb	r3, r3
 800760a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800760e:	d103      	bne.n	8007618 <xQueueGenericSend+0x16c>
 8007610:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007612:	2200      	movs	r2, #0
 8007614:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8007618:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800761a:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800761e:	b25b      	sxtb	r3, r3
 8007620:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007624:	d103      	bne.n	800762e <xQueueGenericSend+0x182>
 8007626:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007628:	2200      	movs	r2, #0
 800762a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800762e:	f002 f949 	bl	80098c4 <vPortExitCritical>
 8007632:	1d3a      	adds	r2, r7, #4
 8007634:	f107 0314 	add.w	r3, r7, #20
 8007638:	4611      	mov	r1, r2
 800763a:	4618      	mov	r0, r3
 800763c:	f001 f96e 	bl	800891c <xTaskCheckForTimeOut>
 8007640:	4603      	mov	r3, r0
 8007642:	2b00      	cmp	r3, #0
 8007644:	d124      	bne.n	8007690 <xQueueGenericSend+0x1e4>
 8007646:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8007648:	f000 fbc6 	bl	8007dd8 <prvIsQueueFull>
 800764c:	4603      	mov	r3, r0
 800764e:	2b00      	cmp	r3, #0
 8007650:	d018      	beq.n	8007684 <xQueueGenericSend+0x1d8>
 8007652:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007654:	3310      	adds	r3, #16
 8007656:	687a      	ldr	r2, [r7, #4]
 8007658:	4611      	mov	r1, r2
 800765a:	4618      	mov	r0, r3
 800765c:	f001 f894 	bl	8008788 <vTaskPlaceOnEventList>
 8007660:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8007662:	f000 fb51 	bl	8007d08 <prvUnlockQueue>
 8007666:	f000 fec3 	bl	80083f0 <xTaskResumeAll>
 800766a:	4603      	mov	r3, r0
 800766c:	2b00      	cmp	r3, #0
 800766e:	f47f af7c 	bne.w	800756a <xQueueGenericSend+0xbe>
 8007672:	4b0c      	ldr	r3, [pc, #48]	; (80076a4 <xQueueGenericSend+0x1f8>)
 8007674:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007678:	601a      	str	r2, [r3, #0]
 800767a:	f3bf 8f4f 	dsb	sy
 800767e:	f3bf 8f6f 	isb	sy
 8007682:	e772      	b.n	800756a <xQueueGenericSend+0xbe>
 8007684:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8007686:	f000 fb3f 	bl	8007d08 <prvUnlockQueue>
 800768a:	f000 feb1 	bl	80083f0 <xTaskResumeAll>
 800768e:	e76c      	b.n	800756a <xQueueGenericSend+0xbe>
 8007690:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8007692:	f000 fb39 	bl	8007d08 <prvUnlockQueue>
 8007696:	f000 feab 	bl	80083f0 <xTaskResumeAll>
 800769a:	2300      	movs	r3, #0
 800769c:	4618      	mov	r0, r3
 800769e:	3738      	adds	r7, #56	; 0x38
 80076a0:	46bd      	mov	sp, r7
 80076a2:	bd80      	pop	{r7, pc}
 80076a4:	e000ed04 	.word	0xe000ed04

080076a8 <xQueueGenericSendFromISR>:
 80076a8:	b580      	push	{r7, lr}
 80076aa:	b090      	sub	sp, #64	; 0x40
 80076ac:	af00      	add	r7, sp, #0
 80076ae:	60f8      	str	r0, [r7, #12]
 80076b0:	60b9      	str	r1, [r7, #8]
 80076b2:	607a      	str	r2, [r7, #4]
 80076b4:	603b      	str	r3, [r7, #0]
 80076b6:	68fb      	ldr	r3, [r7, #12]
 80076b8:	63bb      	str	r3, [r7, #56]	; 0x38
 80076ba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80076bc:	2b00      	cmp	r3, #0
 80076be:	d10a      	bne.n	80076d6 <xQueueGenericSendFromISR+0x2e>
 80076c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076c4:	f383 8811 	msr	BASEPRI, r3
 80076c8:	f3bf 8f6f 	isb	sy
 80076cc:	f3bf 8f4f 	dsb	sy
 80076d0:	62bb      	str	r3, [r7, #40]	; 0x28
 80076d2:	bf00      	nop
 80076d4:	e7fe      	b.n	80076d4 <xQueueGenericSendFromISR+0x2c>
 80076d6:	68bb      	ldr	r3, [r7, #8]
 80076d8:	2b00      	cmp	r3, #0
 80076da:	d103      	bne.n	80076e4 <xQueueGenericSendFromISR+0x3c>
 80076dc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80076de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80076e0:	2b00      	cmp	r3, #0
 80076e2:	d101      	bne.n	80076e8 <xQueueGenericSendFromISR+0x40>
 80076e4:	2301      	movs	r3, #1
 80076e6:	e000      	b.n	80076ea <xQueueGenericSendFromISR+0x42>
 80076e8:	2300      	movs	r3, #0
 80076ea:	2b00      	cmp	r3, #0
 80076ec:	d10a      	bne.n	8007704 <xQueueGenericSendFromISR+0x5c>
 80076ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076f2:	f383 8811 	msr	BASEPRI, r3
 80076f6:	f3bf 8f6f 	isb	sy
 80076fa:	f3bf 8f4f 	dsb	sy
 80076fe:	627b      	str	r3, [r7, #36]	; 0x24
 8007700:	bf00      	nop
 8007702:	e7fe      	b.n	8007702 <xQueueGenericSendFromISR+0x5a>
 8007704:	683b      	ldr	r3, [r7, #0]
 8007706:	2b02      	cmp	r3, #2
 8007708:	d103      	bne.n	8007712 <xQueueGenericSendFromISR+0x6a>
 800770a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800770c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800770e:	2b01      	cmp	r3, #1
 8007710:	d101      	bne.n	8007716 <xQueueGenericSendFromISR+0x6e>
 8007712:	2301      	movs	r3, #1
 8007714:	e000      	b.n	8007718 <xQueueGenericSendFromISR+0x70>
 8007716:	2300      	movs	r3, #0
 8007718:	2b00      	cmp	r3, #0
 800771a:	d10a      	bne.n	8007732 <xQueueGenericSendFromISR+0x8a>
 800771c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007720:	f383 8811 	msr	BASEPRI, r3
 8007724:	f3bf 8f6f 	isb	sy
 8007728:	f3bf 8f4f 	dsb	sy
 800772c:	623b      	str	r3, [r7, #32]
 800772e:	bf00      	nop
 8007730:	e7fe      	b.n	8007730 <xQueueGenericSendFromISR+0x88>
 8007732:	f002 f979 	bl	8009a28 <vPortValidateInterruptPriority>
 8007736:	f3ef 8211 	mrs	r2, BASEPRI
 800773a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800773e:	f383 8811 	msr	BASEPRI, r3
 8007742:	f3bf 8f6f 	isb	sy
 8007746:	f3bf 8f4f 	dsb	sy
 800774a:	61fa      	str	r2, [r7, #28]
 800774c:	61bb      	str	r3, [r7, #24]
 800774e:	69fb      	ldr	r3, [r7, #28]
 8007750:	637b      	str	r3, [r7, #52]	; 0x34
 8007752:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007754:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8007756:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007758:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800775a:	429a      	cmp	r2, r3
 800775c:	d302      	bcc.n	8007764 <xQueueGenericSendFromISR+0xbc>
 800775e:	683b      	ldr	r3, [r7, #0]
 8007760:	2b02      	cmp	r3, #2
 8007762:	d12f      	bne.n	80077c4 <xQueueGenericSendFromISR+0x11c>
 8007764:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007766:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800776a:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 800776e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007770:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007772:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007774:	683a      	ldr	r2, [r7, #0]
 8007776:	68b9      	ldr	r1, [r7, #8]
 8007778:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 800777a:	f000 fa35 	bl	8007be8 <prvCopyDataToQueue>
 800777e:	f997 3033 	ldrsb.w	r3, [r7, #51]	; 0x33
 8007782:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007786:	d112      	bne.n	80077ae <xQueueGenericSendFromISR+0x106>
 8007788:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800778a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800778c:	2b00      	cmp	r3, #0
 800778e:	d016      	beq.n	80077be <xQueueGenericSendFromISR+0x116>
 8007790:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007792:	3324      	adds	r3, #36	; 0x24
 8007794:	4618      	mov	r0, r3
 8007796:	f001 f847 	bl	8008828 <xTaskRemoveFromEventList>
 800779a:	4603      	mov	r3, r0
 800779c:	2b00      	cmp	r3, #0
 800779e:	d00e      	beq.n	80077be <xQueueGenericSendFromISR+0x116>
 80077a0:	687b      	ldr	r3, [r7, #4]
 80077a2:	2b00      	cmp	r3, #0
 80077a4:	d00b      	beq.n	80077be <xQueueGenericSendFromISR+0x116>
 80077a6:	687b      	ldr	r3, [r7, #4]
 80077a8:	2201      	movs	r2, #1
 80077aa:	601a      	str	r2, [r3, #0]
 80077ac:	e007      	b.n	80077be <xQueueGenericSendFromISR+0x116>
 80077ae:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80077b2:	3301      	adds	r3, #1
 80077b4:	b2db      	uxtb	r3, r3
 80077b6:	b25a      	sxtb	r2, r3
 80077b8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80077ba:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80077be:	2301      	movs	r3, #1
 80077c0:	63fb      	str	r3, [r7, #60]	; 0x3c
 80077c2:	e001      	b.n	80077c8 <xQueueGenericSendFromISR+0x120>
 80077c4:	2300      	movs	r3, #0
 80077c6:	63fb      	str	r3, [r7, #60]	; 0x3c
 80077c8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80077ca:	617b      	str	r3, [r7, #20]
 80077cc:	697b      	ldr	r3, [r7, #20]
 80077ce:	f383 8811 	msr	BASEPRI, r3
 80077d2:	bf00      	nop
 80077d4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80077d6:	4618      	mov	r0, r3
 80077d8:	3740      	adds	r7, #64	; 0x40
 80077da:	46bd      	mov	sp, r7
 80077dc:	bd80      	pop	{r7, pc}
	...

080077e0 <xQueueReceive>:
 80077e0:	b580      	push	{r7, lr}
 80077e2:	b08c      	sub	sp, #48	; 0x30
 80077e4:	af00      	add	r7, sp, #0
 80077e6:	60f8      	str	r0, [r7, #12]
 80077e8:	60b9      	str	r1, [r7, #8]
 80077ea:	607a      	str	r2, [r7, #4]
 80077ec:	2300      	movs	r3, #0
 80077ee:	62fb      	str	r3, [r7, #44]	; 0x2c
 80077f0:	68fb      	ldr	r3, [r7, #12]
 80077f2:	62bb      	str	r3, [r7, #40]	; 0x28
 80077f4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80077f6:	2b00      	cmp	r3, #0
 80077f8:	d10a      	bne.n	8007810 <xQueueReceive+0x30>
 80077fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80077fe:	f383 8811 	msr	BASEPRI, r3
 8007802:	f3bf 8f6f 	isb	sy
 8007806:	f3bf 8f4f 	dsb	sy
 800780a:	623b      	str	r3, [r7, #32]
 800780c:	bf00      	nop
 800780e:	e7fe      	b.n	800780e <xQueueReceive+0x2e>
 8007810:	68bb      	ldr	r3, [r7, #8]
 8007812:	2b00      	cmp	r3, #0
 8007814:	d103      	bne.n	800781e <xQueueReceive+0x3e>
 8007816:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007818:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800781a:	2b00      	cmp	r3, #0
 800781c:	d101      	bne.n	8007822 <xQueueReceive+0x42>
 800781e:	2301      	movs	r3, #1
 8007820:	e000      	b.n	8007824 <xQueueReceive+0x44>
 8007822:	2300      	movs	r3, #0
 8007824:	2b00      	cmp	r3, #0
 8007826:	d10a      	bne.n	800783e <xQueueReceive+0x5e>
 8007828:	f04f 0350 	mov.w	r3, #80	; 0x50
 800782c:	f383 8811 	msr	BASEPRI, r3
 8007830:	f3bf 8f6f 	isb	sy
 8007834:	f3bf 8f4f 	dsb	sy
 8007838:	61fb      	str	r3, [r7, #28]
 800783a:	bf00      	nop
 800783c:	e7fe      	b.n	800783c <xQueueReceive+0x5c>
 800783e:	f001 f9b5 	bl	8008bac <xTaskGetSchedulerState>
 8007842:	4603      	mov	r3, r0
 8007844:	2b00      	cmp	r3, #0
 8007846:	d102      	bne.n	800784e <xQueueReceive+0x6e>
 8007848:	687b      	ldr	r3, [r7, #4]
 800784a:	2b00      	cmp	r3, #0
 800784c:	d101      	bne.n	8007852 <xQueueReceive+0x72>
 800784e:	2301      	movs	r3, #1
 8007850:	e000      	b.n	8007854 <xQueueReceive+0x74>
 8007852:	2300      	movs	r3, #0
 8007854:	2b00      	cmp	r3, #0
 8007856:	d10a      	bne.n	800786e <xQueueReceive+0x8e>
 8007858:	f04f 0350 	mov.w	r3, #80	; 0x50
 800785c:	f383 8811 	msr	BASEPRI, r3
 8007860:	f3bf 8f6f 	isb	sy
 8007864:	f3bf 8f4f 	dsb	sy
 8007868:	61bb      	str	r3, [r7, #24]
 800786a:	bf00      	nop
 800786c:	e7fe      	b.n	800786c <xQueueReceive+0x8c>
 800786e:	f001 fff9 	bl	8009864 <vPortEnterCritical>
 8007872:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007874:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007876:	627b      	str	r3, [r7, #36]	; 0x24
 8007878:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800787a:	2b00      	cmp	r3, #0
 800787c:	d01f      	beq.n	80078be <xQueueReceive+0xde>
 800787e:	68b9      	ldr	r1, [r7, #8]
 8007880:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8007882:	f000 fa1b 	bl	8007cbc <prvCopyDataFromQueue>
 8007886:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007888:	1e5a      	subs	r2, r3, #1
 800788a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800788c:	639a      	str	r2, [r3, #56]	; 0x38
 800788e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007890:	691b      	ldr	r3, [r3, #16]
 8007892:	2b00      	cmp	r3, #0
 8007894:	d00f      	beq.n	80078b6 <xQueueReceive+0xd6>
 8007896:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007898:	3310      	adds	r3, #16
 800789a:	4618      	mov	r0, r3
 800789c:	f000 ffc4 	bl	8008828 <xTaskRemoveFromEventList>
 80078a0:	4603      	mov	r3, r0
 80078a2:	2b00      	cmp	r3, #0
 80078a4:	d007      	beq.n	80078b6 <xQueueReceive+0xd6>
 80078a6:	4b3d      	ldr	r3, [pc, #244]	; (800799c <xQueueReceive+0x1bc>)
 80078a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80078ac:	601a      	str	r2, [r3, #0]
 80078ae:	f3bf 8f4f 	dsb	sy
 80078b2:	f3bf 8f6f 	isb	sy
 80078b6:	f002 f805 	bl	80098c4 <vPortExitCritical>
 80078ba:	2301      	movs	r3, #1
 80078bc:	e069      	b.n	8007992 <xQueueReceive+0x1b2>
 80078be:	687b      	ldr	r3, [r7, #4]
 80078c0:	2b00      	cmp	r3, #0
 80078c2:	d103      	bne.n	80078cc <xQueueReceive+0xec>
 80078c4:	f001 fffe 	bl	80098c4 <vPortExitCritical>
 80078c8:	2300      	movs	r3, #0
 80078ca:	e062      	b.n	8007992 <xQueueReceive+0x1b2>
 80078cc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80078ce:	2b00      	cmp	r3, #0
 80078d0:	d106      	bne.n	80078e0 <xQueueReceive+0x100>
 80078d2:	f107 0310 	add.w	r3, r7, #16
 80078d6:	4618      	mov	r0, r3
 80078d8:	f001 f80a 	bl	80088f0 <vTaskInternalSetTimeOutState>
 80078dc:	2301      	movs	r3, #1
 80078de:	62fb      	str	r3, [r7, #44]	; 0x2c
 80078e0:	f001 fff0 	bl	80098c4 <vPortExitCritical>
 80078e4:	f000 fd76 	bl	80083d4 <vTaskSuspendAll>
 80078e8:	f001 ffbc 	bl	8009864 <vPortEnterCritical>
 80078ec:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80078ee:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80078f2:	b25b      	sxtb	r3, r3
 80078f4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80078f8:	d103      	bne.n	8007902 <xQueueReceive+0x122>
 80078fa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80078fc:	2200      	movs	r2, #0
 80078fe:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8007902:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007904:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8007908:	b25b      	sxtb	r3, r3
 800790a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800790e:	d103      	bne.n	8007918 <xQueueReceive+0x138>
 8007910:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007912:	2200      	movs	r2, #0
 8007914:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8007918:	f001 ffd4 	bl	80098c4 <vPortExitCritical>
 800791c:	1d3a      	adds	r2, r7, #4
 800791e:	f107 0310 	add.w	r3, r7, #16
 8007922:	4611      	mov	r1, r2
 8007924:	4618      	mov	r0, r3
 8007926:	f000 fff9 	bl	800891c <xTaskCheckForTimeOut>
 800792a:	4603      	mov	r3, r0
 800792c:	2b00      	cmp	r3, #0
 800792e:	d123      	bne.n	8007978 <xQueueReceive+0x198>
 8007930:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8007932:	f000 fa3b 	bl	8007dac <prvIsQueueEmpty>
 8007936:	4603      	mov	r3, r0
 8007938:	2b00      	cmp	r3, #0
 800793a:	d017      	beq.n	800796c <xQueueReceive+0x18c>
 800793c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800793e:	3324      	adds	r3, #36	; 0x24
 8007940:	687a      	ldr	r2, [r7, #4]
 8007942:	4611      	mov	r1, r2
 8007944:	4618      	mov	r0, r3
 8007946:	f000 ff1f 	bl	8008788 <vTaskPlaceOnEventList>
 800794a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800794c:	f000 f9dc 	bl	8007d08 <prvUnlockQueue>
 8007950:	f000 fd4e 	bl	80083f0 <xTaskResumeAll>
 8007954:	4603      	mov	r3, r0
 8007956:	2b00      	cmp	r3, #0
 8007958:	d189      	bne.n	800786e <xQueueReceive+0x8e>
 800795a:	4b10      	ldr	r3, [pc, #64]	; (800799c <xQueueReceive+0x1bc>)
 800795c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007960:	601a      	str	r2, [r3, #0]
 8007962:	f3bf 8f4f 	dsb	sy
 8007966:	f3bf 8f6f 	isb	sy
 800796a:	e780      	b.n	800786e <xQueueReceive+0x8e>
 800796c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800796e:	f000 f9cb 	bl	8007d08 <prvUnlockQueue>
 8007972:	f000 fd3d 	bl	80083f0 <xTaskResumeAll>
 8007976:	e77a      	b.n	800786e <xQueueReceive+0x8e>
 8007978:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800797a:	f000 f9c5 	bl	8007d08 <prvUnlockQueue>
 800797e:	f000 fd37 	bl	80083f0 <xTaskResumeAll>
 8007982:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8007984:	f000 fa12 	bl	8007dac <prvIsQueueEmpty>
 8007988:	4603      	mov	r3, r0
 800798a:	2b00      	cmp	r3, #0
 800798c:	f43f af6f 	beq.w	800786e <xQueueReceive+0x8e>
 8007990:	2300      	movs	r3, #0
 8007992:	4618      	mov	r0, r3
 8007994:	3730      	adds	r7, #48	; 0x30
 8007996:	46bd      	mov	sp, r7
 8007998:	bd80      	pop	{r7, pc}
 800799a:	bf00      	nop
 800799c:	e000ed04 	.word	0xe000ed04

080079a0 <xQueueSemaphoreTake>:
 80079a0:	b580      	push	{r7, lr}
 80079a2:	b08e      	sub	sp, #56	; 0x38
 80079a4:	af00      	add	r7, sp, #0
 80079a6:	6078      	str	r0, [r7, #4]
 80079a8:	6039      	str	r1, [r7, #0]
 80079aa:	2300      	movs	r3, #0
 80079ac:	637b      	str	r3, [r7, #52]	; 0x34
 80079ae:	687b      	ldr	r3, [r7, #4]
 80079b0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80079b2:	2300      	movs	r3, #0
 80079b4:	633b      	str	r3, [r7, #48]	; 0x30
 80079b6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80079b8:	2b00      	cmp	r3, #0
 80079ba:	d10a      	bne.n	80079d2 <xQueueSemaphoreTake+0x32>
 80079bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079c0:	f383 8811 	msr	BASEPRI, r3
 80079c4:	f3bf 8f6f 	isb	sy
 80079c8:	f3bf 8f4f 	dsb	sy
 80079cc:	623b      	str	r3, [r7, #32]
 80079ce:	bf00      	nop
 80079d0:	e7fe      	b.n	80079d0 <xQueueSemaphoreTake+0x30>
 80079d2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80079d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80079d6:	2b00      	cmp	r3, #0
 80079d8:	d00a      	beq.n	80079f0 <xQueueSemaphoreTake+0x50>
 80079da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079de:	f383 8811 	msr	BASEPRI, r3
 80079e2:	f3bf 8f6f 	isb	sy
 80079e6:	f3bf 8f4f 	dsb	sy
 80079ea:	61fb      	str	r3, [r7, #28]
 80079ec:	bf00      	nop
 80079ee:	e7fe      	b.n	80079ee <xQueueSemaphoreTake+0x4e>
 80079f0:	f001 f8dc 	bl	8008bac <xTaskGetSchedulerState>
 80079f4:	4603      	mov	r3, r0
 80079f6:	2b00      	cmp	r3, #0
 80079f8:	d102      	bne.n	8007a00 <xQueueSemaphoreTake+0x60>
 80079fa:	683b      	ldr	r3, [r7, #0]
 80079fc:	2b00      	cmp	r3, #0
 80079fe:	d101      	bne.n	8007a04 <xQueueSemaphoreTake+0x64>
 8007a00:	2301      	movs	r3, #1
 8007a02:	e000      	b.n	8007a06 <xQueueSemaphoreTake+0x66>
 8007a04:	2300      	movs	r3, #0
 8007a06:	2b00      	cmp	r3, #0
 8007a08:	d10a      	bne.n	8007a20 <xQueueSemaphoreTake+0x80>
 8007a0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a0e:	f383 8811 	msr	BASEPRI, r3
 8007a12:	f3bf 8f6f 	isb	sy
 8007a16:	f3bf 8f4f 	dsb	sy
 8007a1a:	61bb      	str	r3, [r7, #24]
 8007a1c:	bf00      	nop
 8007a1e:	e7fe      	b.n	8007a1e <xQueueSemaphoreTake+0x7e>
 8007a20:	f001 ff20 	bl	8009864 <vPortEnterCritical>
 8007a24:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007a26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007a28:	62bb      	str	r3, [r7, #40]	; 0x28
 8007a2a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007a2c:	2b00      	cmp	r3, #0
 8007a2e:	d024      	beq.n	8007a7a <xQueueSemaphoreTake+0xda>
 8007a30:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007a32:	1e5a      	subs	r2, r3, #1
 8007a34:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007a36:	639a      	str	r2, [r3, #56]	; 0x38
 8007a38:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007a3a:	681b      	ldr	r3, [r3, #0]
 8007a3c:	2b00      	cmp	r3, #0
 8007a3e:	d104      	bne.n	8007a4a <xQueueSemaphoreTake+0xaa>
 8007a40:	f001 fa2a 	bl	8008e98 <pvTaskIncrementMutexHeldCount>
 8007a44:	4602      	mov	r2, r0
 8007a46:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007a48:	609a      	str	r2, [r3, #8]
 8007a4a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007a4c:	691b      	ldr	r3, [r3, #16]
 8007a4e:	2b00      	cmp	r3, #0
 8007a50:	d00f      	beq.n	8007a72 <xQueueSemaphoreTake+0xd2>
 8007a52:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007a54:	3310      	adds	r3, #16
 8007a56:	4618      	mov	r0, r3
 8007a58:	f000 fee6 	bl	8008828 <xTaskRemoveFromEventList>
 8007a5c:	4603      	mov	r3, r0
 8007a5e:	2b00      	cmp	r3, #0
 8007a60:	d007      	beq.n	8007a72 <xQueueSemaphoreTake+0xd2>
 8007a62:	4b54      	ldr	r3, [pc, #336]	; (8007bb4 <xQueueSemaphoreTake+0x214>)
 8007a64:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007a68:	601a      	str	r2, [r3, #0]
 8007a6a:	f3bf 8f4f 	dsb	sy
 8007a6e:	f3bf 8f6f 	isb	sy
 8007a72:	f001 ff27 	bl	80098c4 <vPortExitCritical>
 8007a76:	2301      	movs	r3, #1
 8007a78:	e097      	b.n	8007baa <xQueueSemaphoreTake+0x20a>
 8007a7a:	683b      	ldr	r3, [r7, #0]
 8007a7c:	2b00      	cmp	r3, #0
 8007a7e:	d111      	bne.n	8007aa4 <xQueueSemaphoreTake+0x104>
 8007a80:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007a82:	2b00      	cmp	r3, #0
 8007a84:	d00a      	beq.n	8007a9c <xQueueSemaphoreTake+0xfc>
 8007a86:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a8a:	f383 8811 	msr	BASEPRI, r3
 8007a8e:	f3bf 8f6f 	isb	sy
 8007a92:	f3bf 8f4f 	dsb	sy
 8007a96:	617b      	str	r3, [r7, #20]
 8007a98:	bf00      	nop
 8007a9a:	e7fe      	b.n	8007a9a <xQueueSemaphoreTake+0xfa>
 8007a9c:	f001 ff12 	bl	80098c4 <vPortExitCritical>
 8007aa0:	2300      	movs	r3, #0
 8007aa2:	e082      	b.n	8007baa <xQueueSemaphoreTake+0x20a>
 8007aa4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007aa6:	2b00      	cmp	r3, #0
 8007aa8:	d106      	bne.n	8007ab8 <xQueueSemaphoreTake+0x118>
 8007aaa:	f107 030c 	add.w	r3, r7, #12
 8007aae:	4618      	mov	r0, r3
 8007ab0:	f000 ff1e 	bl	80088f0 <vTaskInternalSetTimeOutState>
 8007ab4:	2301      	movs	r3, #1
 8007ab6:	637b      	str	r3, [r7, #52]	; 0x34
 8007ab8:	f001 ff04 	bl	80098c4 <vPortExitCritical>
 8007abc:	f000 fc8a 	bl	80083d4 <vTaskSuspendAll>
 8007ac0:	f001 fed0 	bl	8009864 <vPortEnterCritical>
 8007ac4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007ac6:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8007aca:	b25b      	sxtb	r3, r3
 8007acc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007ad0:	d103      	bne.n	8007ada <xQueueSemaphoreTake+0x13a>
 8007ad2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007ad4:	2200      	movs	r2, #0
 8007ad6:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8007ada:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007adc:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8007ae0:	b25b      	sxtb	r3, r3
 8007ae2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007ae6:	d103      	bne.n	8007af0 <xQueueSemaphoreTake+0x150>
 8007ae8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007aea:	2200      	movs	r2, #0
 8007aec:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8007af0:	f001 fee8 	bl	80098c4 <vPortExitCritical>
 8007af4:	463a      	mov	r2, r7
 8007af6:	f107 030c 	add.w	r3, r7, #12
 8007afa:	4611      	mov	r1, r2
 8007afc:	4618      	mov	r0, r3
 8007afe:	f000 ff0d 	bl	800891c <xTaskCheckForTimeOut>
 8007b02:	4603      	mov	r3, r0
 8007b04:	2b00      	cmp	r3, #0
 8007b06:	d132      	bne.n	8007b6e <xQueueSemaphoreTake+0x1ce>
 8007b08:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8007b0a:	f000 f94f 	bl	8007dac <prvIsQueueEmpty>
 8007b0e:	4603      	mov	r3, r0
 8007b10:	2b00      	cmp	r3, #0
 8007b12:	d026      	beq.n	8007b62 <xQueueSemaphoreTake+0x1c2>
 8007b14:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007b16:	681b      	ldr	r3, [r3, #0]
 8007b18:	2b00      	cmp	r3, #0
 8007b1a:	d109      	bne.n	8007b30 <xQueueSemaphoreTake+0x190>
 8007b1c:	f001 fea2 	bl	8009864 <vPortEnterCritical>
 8007b20:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007b22:	689b      	ldr	r3, [r3, #8]
 8007b24:	4618      	mov	r0, r3
 8007b26:	f001 f85f 	bl	8008be8 <xTaskPriorityInherit>
 8007b2a:	6338      	str	r0, [r7, #48]	; 0x30
 8007b2c:	f001 feca 	bl	80098c4 <vPortExitCritical>
 8007b30:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007b32:	3324      	adds	r3, #36	; 0x24
 8007b34:	683a      	ldr	r2, [r7, #0]
 8007b36:	4611      	mov	r1, r2
 8007b38:	4618      	mov	r0, r3
 8007b3a:	f000 fe25 	bl	8008788 <vTaskPlaceOnEventList>
 8007b3e:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8007b40:	f000 f8e2 	bl	8007d08 <prvUnlockQueue>
 8007b44:	f000 fc54 	bl	80083f0 <xTaskResumeAll>
 8007b48:	4603      	mov	r3, r0
 8007b4a:	2b00      	cmp	r3, #0
 8007b4c:	f47f af68 	bne.w	8007a20 <xQueueSemaphoreTake+0x80>
 8007b50:	4b18      	ldr	r3, [pc, #96]	; (8007bb4 <xQueueSemaphoreTake+0x214>)
 8007b52:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007b56:	601a      	str	r2, [r3, #0]
 8007b58:	f3bf 8f4f 	dsb	sy
 8007b5c:	f3bf 8f6f 	isb	sy
 8007b60:	e75e      	b.n	8007a20 <xQueueSemaphoreTake+0x80>
 8007b62:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8007b64:	f000 f8d0 	bl	8007d08 <prvUnlockQueue>
 8007b68:	f000 fc42 	bl	80083f0 <xTaskResumeAll>
 8007b6c:	e758      	b.n	8007a20 <xQueueSemaphoreTake+0x80>
 8007b6e:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8007b70:	f000 f8ca 	bl	8007d08 <prvUnlockQueue>
 8007b74:	f000 fc3c 	bl	80083f0 <xTaskResumeAll>
 8007b78:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8007b7a:	f000 f917 	bl	8007dac <prvIsQueueEmpty>
 8007b7e:	4603      	mov	r3, r0
 8007b80:	2b00      	cmp	r3, #0
 8007b82:	f43f af4d 	beq.w	8007a20 <xQueueSemaphoreTake+0x80>
 8007b86:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007b88:	2b00      	cmp	r3, #0
 8007b8a:	d00d      	beq.n	8007ba8 <xQueueSemaphoreTake+0x208>
 8007b8c:	f001 fe6a 	bl	8009864 <vPortEnterCritical>
 8007b90:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8007b92:	f000 f811 	bl	8007bb8 <prvGetDisinheritPriorityAfterTimeout>
 8007b96:	6278      	str	r0, [r7, #36]	; 0x24
 8007b98:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007b9a:	689b      	ldr	r3, [r3, #8]
 8007b9c:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8007b9e:	4618      	mov	r0, r3
 8007ba0:	f001 f8f8 	bl	8008d94 <vTaskPriorityDisinheritAfterTimeout>
 8007ba4:	f001 fe8e 	bl	80098c4 <vPortExitCritical>
 8007ba8:	2300      	movs	r3, #0
 8007baa:	4618      	mov	r0, r3
 8007bac:	3738      	adds	r7, #56	; 0x38
 8007bae:	46bd      	mov	sp, r7
 8007bb0:	bd80      	pop	{r7, pc}
 8007bb2:	bf00      	nop
 8007bb4:	e000ed04 	.word	0xe000ed04

08007bb8 <prvGetDisinheritPriorityAfterTimeout>:
 8007bb8:	b480      	push	{r7}
 8007bba:	b085      	sub	sp, #20
 8007bbc:	af00      	add	r7, sp, #0
 8007bbe:	6078      	str	r0, [r7, #4]
 8007bc0:	687b      	ldr	r3, [r7, #4]
 8007bc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007bc4:	2b00      	cmp	r3, #0
 8007bc6:	d006      	beq.n	8007bd6 <prvGetDisinheritPriorityAfterTimeout+0x1e>
 8007bc8:	687b      	ldr	r3, [r7, #4]
 8007bca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007bcc:	681b      	ldr	r3, [r3, #0]
 8007bce:	f1c3 0338 	rsb	r3, r3, #56	; 0x38
 8007bd2:	60fb      	str	r3, [r7, #12]
 8007bd4:	e001      	b.n	8007bda <prvGetDisinheritPriorityAfterTimeout+0x22>
 8007bd6:	2300      	movs	r3, #0
 8007bd8:	60fb      	str	r3, [r7, #12]
 8007bda:	68fb      	ldr	r3, [r7, #12]
 8007bdc:	4618      	mov	r0, r3
 8007bde:	3714      	adds	r7, #20
 8007be0:	46bd      	mov	sp, r7
 8007be2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007be6:	4770      	bx	lr

08007be8 <prvCopyDataToQueue>:
 8007be8:	b580      	push	{r7, lr}
 8007bea:	b086      	sub	sp, #24
 8007bec:	af00      	add	r7, sp, #0
 8007bee:	60f8      	str	r0, [r7, #12]
 8007bf0:	60b9      	str	r1, [r7, #8]
 8007bf2:	607a      	str	r2, [r7, #4]
 8007bf4:	2300      	movs	r3, #0
 8007bf6:	617b      	str	r3, [r7, #20]
 8007bf8:	68fb      	ldr	r3, [r7, #12]
 8007bfa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007bfc:	613b      	str	r3, [r7, #16]
 8007bfe:	68fb      	ldr	r3, [r7, #12]
 8007c00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c02:	2b00      	cmp	r3, #0
 8007c04:	d10d      	bne.n	8007c22 <prvCopyDataToQueue+0x3a>
 8007c06:	68fb      	ldr	r3, [r7, #12]
 8007c08:	681b      	ldr	r3, [r3, #0]
 8007c0a:	2b00      	cmp	r3, #0
 8007c0c:	d14d      	bne.n	8007caa <prvCopyDataToQueue+0xc2>
 8007c0e:	68fb      	ldr	r3, [r7, #12]
 8007c10:	689b      	ldr	r3, [r3, #8]
 8007c12:	4618      	mov	r0, r3
 8007c14:	f001 f850 	bl	8008cb8 <xTaskPriorityDisinherit>
 8007c18:	6178      	str	r0, [r7, #20]
 8007c1a:	68fb      	ldr	r3, [r7, #12]
 8007c1c:	2200      	movs	r2, #0
 8007c1e:	609a      	str	r2, [r3, #8]
 8007c20:	e043      	b.n	8007caa <prvCopyDataToQueue+0xc2>
 8007c22:	687b      	ldr	r3, [r7, #4]
 8007c24:	2b00      	cmp	r3, #0
 8007c26:	d119      	bne.n	8007c5c <prvCopyDataToQueue+0x74>
 8007c28:	68fb      	ldr	r3, [r7, #12]
 8007c2a:	6858      	ldr	r0, [r3, #4]
 8007c2c:	68fb      	ldr	r3, [r7, #12]
 8007c2e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c30:	461a      	mov	r2, r3
 8007c32:	68b9      	ldr	r1, [r7, #8]
 8007c34:	f002 fe06 	bl	800a844 <memcpy>
 8007c38:	68fb      	ldr	r3, [r7, #12]
 8007c3a:	685a      	ldr	r2, [r3, #4]
 8007c3c:	68fb      	ldr	r3, [r7, #12]
 8007c3e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c40:	441a      	add	r2, r3
 8007c42:	68fb      	ldr	r3, [r7, #12]
 8007c44:	605a      	str	r2, [r3, #4]
 8007c46:	68fb      	ldr	r3, [r7, #12]
 8007c48:	685a      	ldr	r2, [r3, #4]
 8007c4a:	68fb      	ldr	r3, [r7, #12]
 8007c4c:	689b      	ldr	r3, [r3, #8]
 8007c4e:	429a      	cmp	r2, r3
 8007c50:	d32b      	bcc.n	8007caa <prvCopyDataToQueue+0xc2>
 8007c52:	68fb      	ldr	r3, [r7, #12]
 8007c54:	681a      	ldr	r2, [r3, #0]
 8007c56:	68fb      	ldr	r3, [r7, #12]
 8007c58:	605a      	str	r2, [r3, #4]
 8007c5a:	e026      	b.n	8007caa <prvCopyDataToQueue+0xc2>
 8007c5c:	68fb      	ldr	r3, [r7, #12]
 8007c5e:	68d8      	ldr	r0, [r3, #12]
 8007c60:	68fb      	ldr	r3, [r7, #12]
 8007c62:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c64:	461a      	mov	r2, r3
 8007c66:	68b9      	ldr	r1, [r7, #8]
 8007c68:	f002 fdec 	bl	800a844 <memcpy>
 8007c6c:	68fb      	ldr	r3, [r7, #12]
 8007c6e:	68da      	ldr	r2, [r3, #12]
 8007c70:	68fb      	ldr	r3, [r7, #12]
 8007c72:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c74:	425b      	negs	r3, r3
 8007c76:	441a      	add	r2, r3
 8007c78:	68fb      	ldr	r3, [r7, #12]
 8007c7a:	60da      	str	r2, [r3, #12]
 8007c7c:	68fb      	ldr	r3, [r7, #12]
 8007c7e:	68da      	ldr	r2, [r3, #12]
 8007c80:	68fb      	ldr	r3, [r7, #12]
 8007c82:	681b      	ldr	r3, [r3, #0]
 8007c84:	429a      	cmp	r2, r3
 8007c86:	d207      	bcs.n	8007c98 <prvCopyDataToQueue+0xb0>
 8007c88:	68fb      	ldr	r3, [r7, #12]
 8007c8a:	689a      	ldr	r2, [r3, #8]
 8007c8c:	68fb      	ldr	r3, [r7, #12]
 8007c8e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c90:	425b      	negs	r3, r3
 8007c92:	441a      	add	r2, r3
 8007c94:	68fb      	ldr	r3, [r7, #12]
 8007c96:	60da      	str	r2, [r3, #12]
 8007c98:	687b      	ldr	r3, [r7, #4]
 8007c9a:	2b02      	cmp	r3, #2
 8007c9c:	d105      	bne.n	8007caa <prvCopyDataToQueue+0xc2>
 8007c9e:	693b      	ldr	r3, [r7, #16]
 8007ca0:	2b00      	cmp	r3, #0
 8007ca2:	d002      	beq.n	8007caa <prvCopyDataToQueue+0xc2>
 8007ca4:	693b      	ldr	r3, [r7, #16]
 8007ca6:	3b01      	subs	r3, #1
 8007ca8:	613b      	str	r3, [r7, #16]
 8007caa:	693b      	ldr	r3, [r7, #16]
 8007cac:	1c5a      	adds	r2, r3, #1
 8007cae:	68fb      	ldr	r3, [r7, #12]
 8007cb0:	639a      	str	r2, [r3, #56]	; 0x38
 8007cb2:	697b      	ldr	r3, [r7, #20]
 8007cb4:	4618      	mov	r0, r3
 8007cb6:	3718      	adds	r7, #24
 8007cb8:	46bd      	mov	sp, r7
 8007cba:	bd80      	pop	{r7, pc}

08007cbc <prvCopyDataFromQueue>:
 8007cbc:	b580      	push	{r7, lr}
 8007cbe:	b082      	sub	sp, #8
 8007cc0:	af00      	add	r7, sp, #0
 8007cc2:	6078      	str	r0, [r7, #4]
 8007cc4:	6039      	str	r1, [r7, #0]
 8007cc6:	687b      	ldr	r3, [r7, #4]
 8007cc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007cca:	2b00      	cmp	r3, #0
 8007ccc:	d018      	beq.n	8007d00 <prvCopyDataFromQueue+0x44>
 8007cce:	687b      	ldr	r3, [r7, #4]
 8007cd0:	68da      	ldr	r2, [r3, #12]
 8007cd2:	687b      	ldr	r3, [r7, #4]
 8007cd4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007cd6:	441a      	add	r2, r3
 8007cd8:	687b      	ldr	r3, [r7, #4]
 8007cda:	60da      	str	r2, [r3, #12]
 8007cdc:	687b      	ldr	r3, [r7, #4]
 8007cde:	68da      	ldr	r2, [r3, #12]
 8007ce0:	687b      	ldr	r3, [r7, #4]
 8007ce2:	689b      	ldr	r3, [r3, #8]
 8007ce4:	429a      	cmp	r2, r3
 8007ce6:	d303      	bcc.n	8007cf0 <prvCopyDataFromQueue+0x34>
 8007ce8:	687b      	ldr	r3, [r7, #4]
 8007cea:	681a      	ldr	r2, [r3, #0]
 8007cec:	687b      	ldr	r3, [r7, #4]
 8007cee:	60da      	str	r2, [r3, #12]
 8007cf0:	687b      	ldr	r3, [r7, #4]
 8007cf2:	68d9      	ldr	r1, [r3, #12]
 8007cf4:	687b      	ldr	r3, [r7, #4]
 8007cf6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007cf8:	461a      	mov	r2, r3
 8007cfa:	6838      	ldr	r0, [r7, #0]
 8007cfc:	f002 fda2 	bl	800a844 <memcpy>
 8007d00:	bf00      	nop
 8007d02:	3708      	adds	r7, #8
 8007d04:	46bd      	mov	sp, r7
 8007d06:	bd80      	pop	{r7, pc}

08007d08 <prvUnlockQueue>:
 8007d08:	b580      	push	{r7, lr}
 8007d0a:	b084      	sub	sp, #16
 8007d0c:	af00      	add	r7, sp, #0
 8007d0e:	6078      	str	r0, [r7, #4]
 8007d10:	f001 fda8 	bl	8009864 <vPortEnterCritical>
 8007d14:	687b      	ldr	r3, [r7, #4]
 8007d16:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8007d1a:	73fb      	strb	r3, [r7, #15]
 8007d1c:	e011      	b.n	8007d42 <prvUnlockQueue+0x3a>
 8007d1e:	687b      	ldr	r3, [r7, #4]
 8007d20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007d22:	2b00      	cmp	r3, #0
 8007d24:	d012      	beq.n	8007d4c <prvUnlockQueue+0x44>
 8007d26:	687b      	ldr	r3, [r7, #4]
 8007d28:	3324      	adds	r3, #36	; 0x24
 8007d2a:	4618      	mov	r0, r3
 8007d2c:	f000 fd7c 	bl	8008828 <xTaskRemoveFromEventList>
 8007d30:	4603      	mov	r3, r0
 8007d32:	2b00      	cmp	r3, #0
 8007d34:	d001      	beq.n	8007d3a <prvUnlockQueue+0x32>
 8007d36:	f000 fe53 	bl	80089e0 <vTaskMissedYield>
 8007d3a:	7bfb      	ldrb	r3, [r7, #15]
 8007d3c:	3b01      	subs	r3, #1
 8007d3e:	b2db      	uxtb	r3, r3
 8007d40:	73fb      	strb	r3, [r7, #15]
 8007d42:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8007d46:	2b00      	cmp	r3, #0
 8007d48:	dce9      	bgt.n	8007d1e <prvUnlockQueue+0x16>
 8007d4a:	e000      	b.n	8007d4e <prvUnlockQueue+0x46>
 8007d4c:	bf00      	nop
 8007d4e:	687b      	ldr	r3, [r7, #4]
 8007d50:	22ff      	movs	r2, #255	; 0xff
 8007d52:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8007d56:	f001 fdb5 	bl	80098c4 <vPortExitCritical>
 8007d5a:	f001 fd83 	bl	8009864 <vPortEnterCritical>
 8007d5e:	687b      	ldr	r3, [r7, #4]
 8007d60:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8007d64:	73bb      	strb	r3, [r7, #14]
 8007d66:	e011      	b.n	8007d8c <prvUnlockQueue+0x84>
 8007d68:	687b      	ldr	r3, [r7, #4]
 8007d6a:	691b      	ldr	r3, [r3, #16]
 8007d6c:	2b00      	cmp	r3, #0
 8007d6e:	d012      	beq.n	8007d96 <prvUnlockQueue+0x8e>
 8007d70:	687b      	ldr	r3, [r7, #4]
 8007d72:	3310      	adds	r3, #16
 8007d74:	4618      	mov	r0, r3
 8007d76:	f000 fd57 	bl	8008828 <xTaskRemoveFromEventList>
 8007d7a:	4603      	mov	r3, r0
 8007d7c:	2b00      	cmp	r3, #0
 8007d7e:	d001      	beq.n	8007d84 <prvUnlockQueue+0x7c>
 8007d80:	f000 fe2e 	bl	80089e0 <vTaskMissedYield>
 8007d84:	7bbb      	ldrb	r3, [r7, #14]
 8007d86:	3b01      	subs	r3, #1
 8007d88:	b2db      	uxtb	r3, r3
 8007d8a:	73bb      	strb	r3, [r7, #14]
 8007d8c:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8007d90:	2b00      	cmp	r3, #0
 8007d92:	dce9      	bgt.n	8007d68 <prvUnlockQueue+0x60>
 8007d94:	e000      	b.n	8007d98 <prvUnlockQueue+0x90>
 8007d96:	bf00      	nop
 8007d98:	687b      	ldr	r3, [r7, #4]
 8007d9a:	22ff      	movs	r2, #255	; 0xff
 8007d9c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8007da0:	f001 fd90 	bl	80098c4 <vPortExitCritical>
 8007da4:	bf00      	nop
 8007da6:	3710      	adds	r7, #16
 8007da8:	46bd      	mov	sp, r7
 8007daa:	bd80      	pop	{r7, pc}

08007dac <prvIsQueueEmpty>:
 8007dac:	b580      	push	{r7, lr}
 8007dae:	b084      	sub	sp, #16
 8007db0:	af00      	add	r7, sp, #0
 8007db2:	6078      	str	r0, [r7, #4]
 8007db4:	f001 fd56 	bl	8009864 <vPortEnterCritical>
 8007db8:	687b      	ldr	r3, [r7, #4]
 8007dba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007dbc:	2b00      	cmp	r3, #0
 8007dbe:	d102      	bne.n	8007dc6 <prvIsQueueEmpty+0x1a>
 8007dc0:	2301      	movs	r3, #1
 8007dc2:	60fb      	str	r3, [r7, #12]
 8007dc4:	e001      	b.n	8007dca <prvIsQueueEmpty+0x1e>
 8007dc6:	2300      	movs	r3, #0
 8007dc8:	60fb      	str	r3, [r7, #12]
 8007dca:	f001 fd7b 	bl	80098c4 <vPortExitCritical>
 8007dce:	68fb      	ldr	r3, [r7, #12]
 8007dd0:	4618      	mov	r0, r3
 8007dd2:	3710      	adds	r7, #16
 8007dd4:	46bd      	mov	sp, r7
 8007dd6:	bd80      	pop	{r7, pc}

08007dd8 <prvIsQueueFull>:
 8007dd8:	b580      	push	{r7, lr}
 8007dda:	b084      	sub	sp, #16
 8007ddc:	af00      	add	r7, sp, #0
 8007dde:	6078      	str	r0, [r7, #4]
 8007de0:	f001 fd40 	bl	8009864 <vPortEnterCritical>
 8007de4:	687b      	ldr	r3, [r7, #4]
 8007de6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8007de8:	687b      	ldr	r3, [r7, #4]
 8007dea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007dec:	429a      	cmp	r2, r3
 8007dee:	d102      	bne.n	8007df6 <prvIsQueueFull+0x1e>
 8007df0:	2301      	movs	r3, #1
 8007df2:	60fb      	str	r3, [r7, #12]
 8007df4:	e001      	b.n	8007dfa <prvIsQueueFull+0x22>
 8007df6:	2300      	movs	r3, #0
 8007df8:	60fb      	str	r3, [r7, #12]
 8007dfa:	f001 fd63 	bl	80098c4 <vPortExitCritical>
 8007dfe:	68fb      	ldr	r3, [r7, #12]
 8007e00:	4618      	mov	r0, r3
 8007e02:	3710      	adds	r7, #16
 8007e04:	46bd      	mov	sp, r7
 8007e06:	bd80      	pop	{r7, pc}

08007e08 <vQueueAddToRegistry>:
 8007e08:	b480      	push	{r7}
 8007e0a:	b085      	sub	sp, #20
 8007e0c:	af00      	add	r7, sp, #0
 8007e0e:	6078      	str	r0, [r7, #4]
 8007e10:	6039      	str	r1, [r7, #0]
 8007e12:	2300      	movs	r3, #0
 8007e14:	60fb      	str	r3, [r7, #12]
 8007e16:	e014      	b.n	8007e42 <vQueueAddToRegistry+0x3a>
 8007e18:	4a0f      	ldr	r2, [pc, #60]	; (8007e58 <vQueueAddToRegistry+0x50>)
 8007e1a:	68fb      	ldr	r3, [r7, #12]
 8007e1c:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8007e20:	2b00      	cmp	r3, #0
 8007e22:	d10b      	bne.n	8007e3c <vQueueAddToRegistry+0x34>
 8007e24:	490c      	ldr	r1, [pc, #48]	; (8007e58 <vQueueAddToRegistry+0x50>)
 8007e26:	68fb      	ldr	r3, [r7, #12]
 8007e28:	683a      	ldr	r2, [r7, #0]
 8007e2a:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 8007e2e:	4a0a      	ldr	r2, [pc, #40]	; (8007e58 <vQueueAddToRegistry+0x50>)
 8007e30:	68fb      	ldr	r3, [r7, #12]
 8007e32:	00db      	lsls	r3, r3, #3
 8007e34:	4413      	add	r3, r2
 8007e36:	687a      	ldr	r2, [r7, #4]
 8007e38:	605a      	str	r2, [r3, #4]
 8007e3a:	e006      	b.n	8007e4a <vQueueAddToRegistry+0x42>
 8007e3c:	68fb      	ldr	r3, [r7, #12]
 8007e3e:	3301      	adds	r3, #1
 8007e40:	60fb      	str	r3, [r7, #12]
 8007e42:	68fb      	ldr	r3, [r7, #12]
 8007e44:	2b07      	cmp	r3, #7
 8007e46:	d9e7      	bls.n	8007e18 <vQueueAddToRegistry+0x10>
 8007e48:	bf00      	nop
 8007e4a:	bf00      	nop
 8007e4c:	3714      	adds	r7, #20
 8007e4e:	46bd      	mov	sp, r7
 8007e50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e54:	4770      	bx	lr
 8007e56:	bf00      	nop
 8007e58:	20003b88 	.word	0x20003b88

08007e5c <vQueueWaitForMessageRestricted>:
 8007e5c:	b580      	push	{r7, lr}
 8007e5e:	b086      	sub	sp, #24
 8007e60:	af00      	add	r7, sp, #0
 8007e62:	60f8      	str	r0, [r7, #12]
 8007e64:	60b9      	str	r1, [r7, #8]
 8007e66:	607a      	str	r2, [r7, #4]
 8007e68:	68fb      	ldr	r3, [r7, #12]
 8007e6a:	617b      	str	r3, [r7, #20]
 8007e6c:	f001 fcfa 	bl	8009864 <vPortEnterCritical>
 8007e70:	697b      	ldr	r3, [r7, #20]
 8007e72:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8007e76:	b25b      	sxtb	r3, r3
 8007e78:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007e7c:	d103      	bne.n	8007e86 <vQueueWaitForMessageRestricted+0x2a>
 8007e7e:	697b      	ldr	r3, [r7, #20]
 8007e80:	2200      	movs	r2, #0
 8007e82:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8007e86:	697b      	ldr	r3, [r7, #20]
 8007e88:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8007e8c:	b25b      	sxtb	r3, r3
 8007e8e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007e92:	d103      	bne.n	8007e9c <vQueueWaitForMessageRestricted+0x40>
 8007e94:	697b      	ldr	r3, [r7, #20]
 8007e96:	2200      	movs	r2, #0
 8007e98:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8007e9c:	f001 fd12 	bl	80098c4 <vPortExitCritical>
 8007ea0:	697b      	ldr	r3, [r7, #20]
 8007ea2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007ea4:	2b00      	cmp	r3, #0
 8007ea6:	d106      	bne.n	8007eb6 <vQueueWaitForMessageRestricted+0x5a>
 8007ea8:	697b      	ldr	r3, [r7, #20]
 8007eaa:	3324      	adds	r3, #36	; 0x24
 8007eac:	687a      	ldr	r2, [r7, #4]
 8007eae:	68b9      	ldr	r1, [r7, #8]
 8007eb0:	4618      	mov	r0, r3
 8007eb2:	f000 fc8d 	bl	80087d0 <vTaskPlaceOnEventListRestricted>
 8007eb6:	6978      	ldr	r0, [r7, #20]
 8007eb8:	f7ff ff26 	bl	8007d08 <prvUnlockQueue>
 8007ebc:	bf00      	nop
 8007ebe:	3718      	adds	r7, #24
 8007ec0:	46bd      	mov	sp, r7
 8007ec2:	bd80      	pop	{r7, pc}

08007ec4 <xTaskCreateStatic>:
 8007ec4:	b580      	push	{r7, lr}
 8007ec6:	b08e      	sub	sp, #56	; 0x38
 8007ec8:	af04      	add	r7, sp, #16
 8007eca:	60f8      	str	r0, [r7, #12]
 8007ecc:	60b9      	str	r1, [r7, #8]
 8007ece:	607a      	str	r2, [r7, #4]
 8007ed0:	603b      	str	r3, [r7, #0]
 8007ed2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007ed4:	2b00      	cmp	r3, #0
 8007ed6:	d10a      	bne.n	8007eee <xTaskCreateStatic+0x2a>
 8007ed8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007edc:	f383 8811 	msr	BASEPRI, r3
 8007ee0:	f3bf 8f6f 	isb	sy
 8007ee4:	f3bf 8f4f 	dsb	sy
 8007ee8:	623b      	str	r3, [r7, #32]
 8007eea:	bf00      	nop
 8007eec:	e7fe      	b.n	8007eec <xTaskCreateStatic+0x28>
 8007eee:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007ef0:	2b00      	cmp	r3, #0
 8007ef2:	d10a      	bne.n	8007f0a <xTaskCreateStatic+0x46>
 8007ef4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ef8:	f383 8811 	msr	BASEPRI, r3
 8007efc:	f3bf 8f6f 	isb	sy
 8007f00:	f3bf 8f4f 	dsb	sy
 8007f04:	61fb      	str	r3, [r7, #28]
 8007f06:	bf00      	nop
 8007f08:	e7fe      	b.n	8007f08 <xTaskCreateStatic+0x44>
 8007f0a:	f44f 6391 	mov.w	r3, #1160	; 0x488
 8007f0e:	613b      	str	r3, [r7, #16]
 8007f10:	693b      	ldr	r3, [r7, #16]
 8007f12:	f5b3 6f91 	cmp.w	r3, #1160	; 0x488
 8007f16:	d00a      	beq.n	8007f2e <xTaskCreateStatic+0x6a>
 8007f18:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f1c:	f383 8811 	msr	BASEPRI, r3
 8007f20:	f3bf 8f6f 	isb	sy
 8007f24:	f3bf 8f4f 	dsb	sy
 8007f28:	61bb      	str	r3, [r7, #24]
 8007f2a:	bf00      	nop
 8007f2c:	e7fe      	b.n	8007f2c <xTaskCreateStatic+0x68>
 8007f2e:	693b      	ldr	r3, [r7, #16]
 8007f30:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007f32:	2b00      	cmp	r3, #0
 8007f34:	d01e      	beq.n	8007f74 <xTaskCreateStatic+0xb0>
 8007f36:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007f38:	2b00      	cmp	r3, #0
 8007f3a:	d01b      	beq.n	8007f74 <xTaskCreateStatic+0xb0>
 8007f3c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007f3e:	627b      	str	r3, [r7, #36]	; 0x24
 8007f40:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007f42:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8007f44:	631a      	str	r2, [r3, #48]	; 0x30
 8007f46:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007f48:	2202      	movs	r2, #2
 8007f4a:	f883 2485 	strb.w	r2, [r3, #1157]	; 0x485
 8007f4e:	2300      	movs	r3, #0
 8007f50:	9303      	str	r3, [sp, #12]
 8007f52:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007f54:	9302      	str	r3, [sp, #8]
 8007f56:	f107 0314 	add.w	r3, r7, #20
 8007f5a:	9301      	str	r3, [sp, #4]
 8007f5c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007f5e:	9300      	str	r3, [sp, #0]
 8007f60:	683b      	ldr	r3, [r7, #0]
 8007f62:	687a      	ldr	r2, [r7, #4]
 8007f64:	68b9      	ldr	r1, [r7, #8]
 8007f66:	68f8      	ldr	r0, [r7, #12]
 8007f68:	f000 f851 	bl	800800e <prvInitialiseNewTask>
 8007f6c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8007f6e:	f000 f91d 	bl	80081ac <prvAddNewTaskToReadyList>
 8007f72:	e001      	b.n	8007f78 <xTaskCreateStatic+0xb4>
 8007f74:	2300      	movs	r3, #0
 8007f76:	617b      	str	r3, [r7, #20]
 8007f78:	697b      	ldr	r3, [r7, #20]
 8007f7a:	4618      	mov	r0, r3
 8007f7c:	3728      	adds	r7, #40	; 0x28
 8007f7e:	46bd      	mov	sp, r7
 8007f80:	bd80      	pop	{r7, pc}

08007f82 <xTaskCreate>:
 8007f82:	b580      	push	{r7, lr}
 8007f84:	b08c      	sub	sp, #48	; 0x30
 8007f86:	af04      	add	r7, sp, #16
 8007f88:	60f8      	str	r0, [r7, #12]
 8007f8a:	60b9      	str	r1, [r7, #8]
 8007f8c:	603b      	str	r3, [r7, #0]
 8007f8e:	4613      	mov	r3, r2
 8007f90:	80fb      	strh	r3, [r7, #6]
 8007f92:	88fb      	ldrh	r3, [r7, #6]
 8007f94:	009b      	lsls	r3, r3, #2
 8007f96:	4618      	mov	r0, r3
 8007f98:	f001 fd86 	bl	8009aa8 <pvPortMalloc>
 8007f9c:	6178      	str	r0, [r7, #20]
 8007f9e:	697b      	ldr	r3, [r7, #20]
 8007fa0:	2b00      	cmp	r3, #0
 8007fa2:	d00f      	beq.n	8007fc4 <xTaskCreate+0x42>
 8007fa4:	f44f 6091 	mov.w	r0, #1160	; 0x488
 8007fa8:	f001 fd7e 	bl	8009aa8 <pvPortMalloc>
 8007fac:	61f8      	str	r0, [r7, #28]
 8007fae:	69fb      	ldr	r3, [r7, #28]
 8007fb0:	2b00      	cmp	r3, #0
 8007fb2:	d003      	beq.n	8007fbc <xTaskCreate+0x3a>
 8007fb4:	69fb      	ldr	r3, [r7, #28]
 8007fb6:	697a      	ldr	r2, [r7, #20]
 8007fb8:	631a      	str	r2, [r3, #48]	; 0x30
 8007fba:	e005      	b.n	8007fc8 <xTaskCreate+0x46>
 8007fbc:	6978      	ldr	r0, [r7, #20]
 8007fbe:	f001 fe3f 	bl	8009c40 <vPortFree>
 8007fc2:	e001      	b.n	8007fc8 <xTaskCreate+0x46>
 8007fc4:	2300      	movs	r3, #0
 8007fc6:	61fb      	str	r3, [r7, #28]
 8007fc8:	69fb      	ldr	r3, [r7, #28]
 8007fca:	2b00      	cmp	r3, #0
 8007fcc:	d017      	beq.n	8007ffe <xTaskCreate+0x7c>
 8007fce:	69fb      	ldr	r3, [r7, #28]
 8007fd0:	2200      	movs	r2, #0
 8007fd2:	f883 2485 	strb.w	r2, [r3, #1157]	; 0x485
 8007fd6:	88fa      	ldrh	r2, [r7, #6]
 8007fd8:	2300      	movs	r3, #0
 8007fda:	9303      	str	r3, [sp, #12]
 8007fdc:	69fb      	ldr	r3, [r7, #28]
 8007fde:	9302      	str	r3, [sp, #8]
 8007fe0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007fe2:	9301      	str	r3, [sp, #4]
 8007fe4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007fe6:	9300      	str	r3, [sp, #0]
 8007fe8:	683b      	ldr	r3, [r7, #0]
 8007fea:	68b9      	ldr	r1, [r7, #8]
 8007fec:	68f8      	ldr	r0, [r7, #12]
 8007fee:	f000 f80e 	bl	800800e <prvInitialiseNewTask>
 8007ff2:	69f8      	ldr	r0, [r7, #28]
 8007ff4:	f000 f8da 	bl	80081ac <prvAddNewTaskToReadyList>
 8007ff8:	2301      	movs	r3, #1
 8007ffa:	61bb      	str	r3, [r7, #24]
 8007ffc:	e002      	b.n	8008004 <xTaskCreate+0x82>
 8007ffe:	f04f 33ff 	mov.w	r3, #4294967295
 8008002:	61bb      	str	r3, [r7, #24]
 8008004:	69bb      	ldr	r3, [r7, #24]
 8008006:	4618      	mov	r0, r3
 8008008:	3720      	adds	r7, #32
 800800a:	46bd      	mov	sp, r7
 800800c:	bd80      	pop	{r7, pc}

0800800e <prvInitialiseNewTask>:
 800800e:	b580      	push	{r7, lr}
 8008010:	b088      	sub	sp, #32
 8008012:	af00      	add	r7, sp, #0
 8008014:	60f8      	str	r0, [r7, #12]
 8008016:	60b9      	str	r1, [r7, #8]
 8008018:	607a      	str	r2, [r7, #4]
 800801a:	603b      	str	r3, [r7, #0]
 800801c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800801e:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8008020:	687b      	ldr	r3, [r7, #4]
 8008022:	009b      	lsls	r3, r3, #2
 8008024:	461a      	mov	r2, r3
 8008026:	21a5      	movs	r1, #165	; 0xa5
 8008028:	f002 fc1a 	bl	800a860 <memset>
 800802c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800802e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008030:	687b      	ldr	r3, [r7, #4]
 8008032:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8008036:	3b01      	subs	r3, #1
 8008038:	009b      	lsls	r3, r3, #2
 800803a:	4413      	add	r3, r2
 800803c:	61bb      	str	r3, [r7, #24]
 800803e:	69bb      	ldr	r3, [r7, #24]
 8008040:	f023 0307 	bic.w	r3, r3, #7
 8008044:	61bb      	str	r3, [r7, #24]
 8008046:	69bb      	ldr	r3, [r7, #24]
 8008048:	f003 0307 	and.w	r3, r3, #7
 800804c:	2b00      	cmp	r3, #0
 800804e:	d00a      	beq.n	8008066 <prvInitialiseNewTask+0x58>
 8008050:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008054:	f383 8811 	msr	BASEPRI, r3
 8008058:	f3bf 8f6f 	isb	sy
 800805c:	f3bf 8f4f 	dsb	sy
 8008060:	617b      	str	r3, [r7, #20]
 8008062:	bf00      	nop
 8008064:	e7fe      	b.n	8008064 <prvInitialiseNewTask+0x56>
 8008066:	68bb      	ldr	r3, [r7, #8]
 8008068:	2b00      	cmp	r3, #0
 800806a:	d01f      	beq.n	80080ac <prvInitialiseNewTask+0x9e>
 800806c:	2300      	movs	r3, #0
 800806e:	61fb      	str	r3, [r7, #28]
 8008070:	e012      	b.n	8008098 <prvInitialiseNewTask+0x8a>
 8008072:	68ba      	ldr	r2, [r7, #8]
 8008074:	69fb      	ldr	r3, [r7, #28]
 8008076:	4413      	add	r3, r2
 8008078:	7819      	ldrb	r1, [r3, #0]
 800807a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800807c:	69fb      	ldr	r3, [r7, #28]
 800807e:	4413      	add	r3, r2
 8008080:	3334      	adds	r3, #52	; 0x34
 8008082:	460a      	mov	r2, r1
 8008084:	701a      	strb	r2, [r3, #0]
 8008086:	68ba      	ldr	r2, [r7, #8]
 8008088:	69fb      	ldr	r3, [r7, #28]
 800808a:	4413      	add	r3, r2
 800808c:	781b      	ldrb	r3, [r3, #0]
 800808e:	2b00      	cmp	r3, #0
 8008090:	d006      	beq.n	80080a0 <prvInitialiseNewTask+0x92>
 8008092:	69fb      	ldr	r3, [r7, #28]
 8008094:	3301      	adds	r3, #1
 8008096:	61fb      	str	r3, [r7, #28]
 8008098:	69fb      	ldr	r3, [r7, #28]
 800809a:	2b0f      	cmp	r3, #15
 800809c:	d9e9      	bls.n	8008072 <prvInitialiseNewTask+0x64>
 800809e:	e000      	b.n	80080a2 <prvInitialiseNewTask+0x94>
 80080a0:	bf00      	nop
 80080a2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80080a4:	2200      	movs	r2, #0
 80080a6:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80080aa:	e003      	b.n	80080b4 <prvInitialiseNewTask+0xa6>
 80080ac:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80080ae:	2200      	movs	r2, #0
 80080b0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80080b4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80080b6:	2b37      	cmp	r3, #55	; 0x37
 80080b8:	d901      	bls.n	80080be <prvInitialiseNewTask+0xb0>
 80080ba:	2337      	movs	r3, #55	; 0x37
 80080bc:	62bb      	str	r3, [r7, #40]	; 0x28
 80080be:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80080c0:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80080c2:	62da      	str	r2, [r3, #44]	; 0x2c
 80080c4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80080c6:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80080c8:	64da      	str	r2, [r3, #76]	; 0x4c
 80080ca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80080cc:	2200      	movs	r2, #0
 80080ce:	651a      	str	r2, [r3, #80]	; 0x50
 80080d0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80080d2:	3304      	adds	r3, #4
 80080d4:	4618      	mov	r0, r3
 80080d6:	f7fe ffe5 	bl	80070a4 <vListInitialiseItem>
 80080da:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80080dc:	3318      	adds	r3, #24
 80080de:	4618      	mov	r0, r3
 80080e0:	f7fe ffe0 	bl	80070a4 <vListInitialiseItem>
 80080e4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80080e6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80080e8:	611a      	str	r2, [r3, #16]
 80080ea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80080ec:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 80080f0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80080f2:	619a      	str	r2, [r3, #24]
 80080f4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80080f6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80080f8:	625a      	str	r2, [r3, #36]	; 0x24
 80080fa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80080fc:	2200      	movs	r2, #0
 80080fe:	f8c3 2480 	str.w	r2, [r3, #1152]	; 0x480
 8008102:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008104:	2200      	movs	r2, #0
 8008106:	f883 2484 	strb.w	r2, [r3, #1156]	; 0x484
 800810a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800810c:	3358      	adds	r3, #88	; 0x58
 800810e:	f44f 6285 	mov.w	r2, #1064	; 0x428
 8008112:	2100      	movs	r1, #0
 8008114:	4618      	mov	r0, r3
 8008116:	f002 fba3 	bl	800a860 <memset>
 800811a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800811c:	f503 7251 	add.w	r2, r3, #836	; 0x344
 8008120:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008122:	65da      	str	r2, [r3, #92]	; 0x5c
 8008124:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008126:	f503 726b 	add.w	r2, r3, #940	; 0x3ac
 800812a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800812c:	661a      	str	r2, [r3, #96]	; 0x60
 800812e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008130:	f203 4214 	addw	r2, r3, #1044	; 0x414
 8008134:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008136:	665a      	str	r2, [r3, #100]	; 0x64
 8008138:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800813a:	f04f 0201 	mov.w	r2, #1
 800813e:	f04f 0300 	mov.w	r3, #0
 8008142:	e9c1 2340 	strd	r2, r3, [r1, #256]	; 0x100
 8008146:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008148:	f243 320e 	movw	r2, #13070	; 0x330e
 800814c:	f8a3 2108 	strh.w	r2, [r3, #264]	; 0x108
 8008150:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008152:	f64a 32cd 	movw	r2, #43981	; 0xabcd
 8008156:	f8a3 210a 	strh.w	r2, [r3, #266]	; 0x10a
 800815a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800815c:	f241 2234 	movw	r2, #4660	; 0x1234
 8008160:	f8a3 210c 	strh.w	r2, [r3, #268]	; 0x10c
 8008164:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008166:	f24e 626d 	movw	r2, #58989	; 0xe66d
 800816a:	f8a3 210e 	strh.w	r2, [r3, #270]	; 0x10e
 800816e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008170:	f64d 62ec 	movw	r2, #57068	; 0xdeec
 8008174:	f8a3 2110 	strh.w	r2, [r3, #272]	; 0x110
 8008178:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800817a:	2205      	movs	r2, #5
 800817c:	f8a3 2112 	strh.w	r2, [r3, #274]	; 0x112
 8008180:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008182:	220b      	movs	r2, #11
 8008184:	f8a3 2114 	strh.w	r2, [r3, #276]	; 0x114
 8008188:	683a      	ldr	r2, [r7, #0]
 800818a:	68f9      	ldr	r1, [r7, #12]
 800818c:	69b8      	ldr	r0, [r7, #24]
 800818e:	f001 fa39 	bl	8009604 <pxPortInitialiseStack>
 8008192:	4602      	mov	r2, r0
 8008194:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008196:	601a      	str	r2, [r3, #0]
 8008198:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800819a:	2b00      	cmp	r3, #0
 800819c:	d002      	beq.n	80081a4 <prvInitialiseNewTask+0x196>
 800819e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80081a0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80081a2:	601a      	str	r2, [r3, #0]
 80081a4:	bf00      	nop
 80081a6:	3720      	adds	r7, #32
 80081a8:	46bd      	mov	sp, r7
 80081aa:	bd80      	pop	{r7, pc}

080081ac <prvAddNewTaskToReadyList>:
 80081ac:	b580      	push	{r7, lr}
 80081ae:	b082      	sub	sp, #8
 80081b0:	af00      	add	r7, sp, #0
 80081b2:	6078      	str	r0, [r7, #4]
 80081b4:	f001 fb56 	bl	8009864 <vPortEnterCritical>
 80081b8:	4b2d      	ldr	r3, [pc, #180]	; (8008270 <prvAddNewTaskToReadyList+0xc4>)
 80081ba:	681b      	ldr	r3, [r3, #0]
 80081bc:	3301      	adds	r3, #1
 80081be:	4a2c      	ldr	r2, [pc, #176]	; (8008270 <prvAddNewTaskToReadyList+0xc4>)
 80081c0:	6013      	str	r3, [r2, #0]
 80081c2:	4b2c      	ldr	r3, [pc, #176]	; (8008274 <prvAddNewTaskToReadyList+0xc8>)
 80081c4:	681b      	ldr	r3, [r3, #0]
 80081c6:	2b00      	cmp	r3, #0
 80081c8:	d109      	bne.n	80081de <prvAddNewTaskToReadyList+0x32>
 80081ca:	4a2a      	ldr	r2, [pc, #168]	; (8008274 <prvAddNewTaskToReadyList+0xc8>)
 80081cc:	687b      	ldr	r3, [r7, #4]
 80081ce:	6013      	str	r3, [r2, #0]
 80081d0:	4b27      	ldr	r3, [pc, #156]	; (8008270 <prvAddNewTaskToReadyList+0xc4>)
 80081d2:	681b      	ldr	r3, [r3, #0]
 80081d4:	2b01      	cmp	r3, #1
 80081d6:	d110      	bne.n	80081fa <prvAddNewTaskToReadyList+0x4e>
 80081d8:	f000 fc26 	bl	8008a28 <prvInitialiseTaskLists>
 80081dc:	e00d      	b.n	80081fa <prvAddNewTaskToReadyList+0x4e>
 80081de:	4b26      	ldr	r3, [pc, #152]	; (8008278 <prvAddNewTaskToReadyList+0xcc>)
 80081e0:	681b      	ldr	r3, [r3, #0]
 80081e2:	2b00      	cmp	r3, #0
 80081e4:	d109      	bne.n	80081fa <prvAddNewTaskToReadyList+0x4e>
 80081e6:	4b23      	ldr	r3, [pc, #140]	; (8008274 <prvAddNewTaskToReadyList+0xc8>)
 80081e8:	681b      	ldr	r3, [r3, #0]
 80081ea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80081ec:	687b      	ldr	r3, [r7, #4]
 80081ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80081f0:	429a      	cmp	r2, r3
 80081f2:	d802      	bhi.n	80081fa <prvAddNewTaskToReadyList+0x4e>
 80081f4:	4a1f      	ldr	r2, [pc, #124]	; (8008274 <prvAddNewTaskToReadyList+0xc8>)
 80081f6:	687b      	ldr	r3, [r7, #4]
 80081f8:	6013      	str	r3, [r2, #0]
 80081fa:	4b20      	ldr	r3, [pc, #128]	; (800827c <prvAddNewTaskToReadyList+0xd0>)
 80081fc:	681b      	ldr	r3, [r3, #0]
 80081fe:	3301      	adds	r3, #1
 8008200:	4a1e      	ldr	r2, [pc, #120]	; (800827c <prvAddNewTaskToReadyList+0xd0>)
 8008202:	6013      	str	r3, [r2, #0]
 8008204:	4b1d      	ldr	r3, [pc, #116]	; (800827c <prvAddNewTaskToReadyList+0xd0>)
 8008206:	681a      	ldr	r2, [r3, #0]
 8008208:	687b      	ldr	r3, [r7, #4]
 800820a:	645a      	str	r2, [r3, #68]	; 0x44
 800820c:	687b      	ldr	r3, [r7, #4]
 800820e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008210:	4b1b      	ldr	r3, [pc, #108]	; (8008280 <prvAddNewTaskToReadyList+0xd4>)
 8008212:	681b      	ldr	r3, [r3, #0]
 8008214:	429a      	cmp	r2, r3
 8008216:	d903      	bls.n	8008220 <prvAddNewTaskToReadyList+0x74>
 8008218:	687b      	ldr	r3, [r7, #4]
 800821a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800821c:	4a18      	ldr	r2, [pc, #96]	; (8008280 <prvAddNewTaskToReadyList+0xd4>)
 800821e:	6013      	str	r3, [r2, #0]
 8008220:	687b      	ldr	r3, [r7, #4]
 8008222:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008224:	4613      	mov	r3, r2
 8008226:	009b      	lsls	r3, r3, #2
 8008228:	4413      	add	r3, r2
 800822a:	009b      	lsls	r3, r3, #2
 800822c:	4a15      	ldr	r2, [pc, #84]	; (8008284 <prvAddNewTaskToReadyList+0xd8>)
 800822e:	441a      	add	r2, r3
 8008230:	687b      	ldr	r3, [r7, #4]
 8008232:	3304      	adds	r3, #4
 8008234:	4619      	mov	r1, r3
 8008236:	4610      	mov	r0, r2
 8008238:	f7fe ff41 	bl	80070be <vListInsertEnd>
 800823c:	f001 fb42 	bl	80098c4 <vPortExitCritical>
 8008240:	4b0d      	ldr	r3, [pc, #52]	; (8008278 <prvAddNewTaskToReadyList+0xcc>)
 8008242:	681b      	ldr	r3, [r3, #0]
 8008244:	2b00      	cmp	r3, #0
 8008246:	d00e      	beq.n	8008266 <prvAddNewTaskToReadyList+0xba>
 8008248:	4b0a      	ldr	r3, [pc, #40]	; (8008274 <prvAddNewTaskToReadyList+0xc8>)
 800824a:	681b      	ldr	r3, [r3, #0]
 800824c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800824e:	687b      	ldr	r3, [r7, #4]
 8008250:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008252:	429a      	cmp	r2, r3
 8008254:	d207      	bcs.n	8008266 <prvAddNewTaskToReadyList+0xba>
 8008256:	4b0c      	ldr	r3, [pc, #48]	; (8008288 <prvAddNewTaskToReadyList+0xdc>)
 8008258:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800825c:	601a      	str	r2, [r3, #0]
 800825e:	f3bf 8f4f 	dsb	sy
 8008262:	f3bf 8f6f 	isb	sy
 8008266:	bf00      	nop
 8008268:	3708      	adds	r7, #8
 800826a:	46bd      	mov	sp, r7
 800826c:	bd80      	pop	{r7, pc}
 800826e:	bf00      	nop
 8008270:	2000409c 	.word	0x2000409c
 8008274:	20003bc8 	.word	0x20003bc8
 8008278:	200040a8 	.word	0x200040a8
 800827c:	200040b8 	.word	0x200040b8
 8008280:	200040a4 	.word	0x200040a4
 8008284:	20003bcc 	.word	0x20003bcc
 8008288:	e000ed04 	.word	0xe000ed04

0800828c <vTaskDelay>:
 800828c:	b580      	push	{r7, lr}
 800828e:	b084      	sub	sp, #16
 8008290:	af00      	add	r7, sp, #0
 8008292:	6078      	str	r0, [r7, #4]
 8008294:	2300      	movs	r3, #0
 8008296:	60fb      	str	r3, [r7, #12]
 8008298:	687b      	ldr	r3, [r7, #4]
 800829a:	2b00      	cmp	r3, #0
 800829c:	d017      	beq.n	80082ce <vTaskDelay+0x42>
 800829e:	4b13      	ldr	r3, [pc, #76]	; (80082ec <vTaskDelay+0x60>)
 80082a0:	681b      	ldr	r3, [r3, #0]
 80082a2:	2b00      	cmp	r3, #0
 80082a4:	d00a      	beq.n	80082bc <vTaskDelay+0x30>
 80082a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082aa:	f383 8811 	msr	BASEPRI, r3
 80082ae:	f3bf 8f6f 	isb	sy
 80082b2:	f3bf 8f4f 	dsb	sy
 80082b6:	60bb      	str	r3, [r7, #8]
 80082b8:	bf00      	nop
 80082ba:	e7fe      	b.n	80082ba <vTaskDelay+0x2e>
 80082bc:	f000 f88a 	bl	80083d4 <vTaskSuspendAll>
 80082c0:	2100      	movs	r1, #0
 80082c2:	6878      	ldr	r0, [r7, #4]
 80082c4:	f000 fdfc 	bl	8008ec0 <prvAddCurrentTaskToDelayedList>
 80082c8:	f000 f892 	bl	80083f0 <xTaskResumeAll>
 80082cc:	60f8      	str	r0, [r7, #12]
 80082ce:	68fb      	ldr	r3, [r7, #12]
 80082d0:	2b00      	cmp	r3, #0
 80082d2:	d107      	bne.n	80082e4 <vTaskDelay+0x58>
 80082d4:	4b06      	ldr	r3, [pc, #24]	; (80082f0 <vTaskDelay+0x64>)
 80082d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80082da:	601a      	str	r2, [r3, #0]
 80082dc:	f3bf 8f4f 	dsb	sy
 80082e0:	f3bf 8f6f 	isb	sy
 80082e4:	bf00      	nop
 80082e6:	3710      	adds	r7, #16
 80082e8:	46bd      	mov	sp, r7
 80082ea:	bd80      	pop	{r7, pc}
 80082ec:	200040c4 	.word	0x200040c4
 80082f0:	e000ed04 	.word	0xe000ed04

080082f4 <vTaskStartScheduler>:
 80082f4:	b580      	push	{r7, lr}
 80082f6:	b08a      	sub	sp, #40	; 0x28
 80082f8:	af04      	add	r7, sp, #16
 80082fa:	2300      	movs	r3, #0
 80082fc:	60bb      	str	r3, [r7, #8]
 80082fe:	2300      	movs	r3, #0
 8008300:	607b      	str	r3, [r7, #4]
 8008302:	463a      	mov	r2, r7
 8008304:	1d39      	adds	r1, r7, #4
 8008306:	f107 0308 	add.w	r3, r7, #8
 800830a:	4618      	mov	r0, r3
 800830c:	f7fe fe76 	bl	8006ffc <vApplicationGetIdleTaskMemory>
 8008310:	6839      	ldr	r1, [r7, #0]
 8008312:	687b      	ldr	r3, [r7, #4]
 8008314:	68ba      	ldr	r2, [r7, #8]
 8008316:	9202      	str	r2, [sp, #8]
 8008318:	9301      	str	r3, [sp, #4]
 800831a:	2300      	movs	r3, #0
 800831c:	9300      	str	r3, [sp, #0]
 800831e:	2300      	movs	r3, #0
 8008320:	460a      	mov	r2, r1
 8008322:	4924      	ldr	r1, [pc, #144]	; (80083b4 <vTaskStartScheduler+0xc0>)
 8008324:	4824      	ldr	r0, [pc, #144]	; (80083b8 <vTaskStartScheduler+0xc4>)
 8008326:	f7ff fdcd 	bl	8007ec4 <xTaskCreateStatic>
 800832a:	4603      	mov	r3, r0
 800832c:	4a23      	ldr	r2, [pc, #140]	; (80083bc <vTaskStartScheduler+0xc8>)
 800832e:	6013      	str	r3, [r2, #0]
 8008330:	4b22      	ldr	r3, [pc, #136]	; (80083bc <vTaskStartScheduler+0xc8>)
 8008332:	681b      	ldr	r3, [r3, #0]
 8008334:	2b00      	cmp	r3, #0
 8008336:	d002      	beq.n	800833e <vTaskStartScheduler+0x4a>
 8008338:	2301      	movs	r3, #1
 800833a:	617b      	str	r3, [r7, #20]
 800833c:	e001      	b.n	8008342 <vTaskStartScheduler+0x4e>
 800833e:	2300      	movs	r3, #0
 8008340:	617b      	str	r3, [r7, #20]
 8008342:	697b      	ldr	r3, [r7, #20]
 8008344:	2b01      	cmp	r3, #1
 8008346:	d102      	bne.n	800834e <vTaskStartScheduler+0x5a>
 8008348:	f000 fe0e 	bl	8008f68 <xTimerCreateTimerTask>
 800834c:	6178      	str	r0, [r7, #20]
 800834e:	697b      	ldr	r3, [r7, #20]
 8008350:	2b01      	cmp	r3, #1
 8008352:	d11b      	bne.n	800838c <vTaskStartScheduler+0x98>
 8008354:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008358:	f383 8811 	msr	BASEPRI, r3
 800835c:	f3bf 8f6f 	isb	sy
 8008360:	f3bf 8f4f 	dsb	sy
 8008364:	613b      	str	r3, [r7, #16]
 8008366:	bf00      	nop
 8008368:	4b15      	ldr	r3, [pc, #84]	; (80083c0 <vTaskStartScheduler+0xcc>)
 800836a:	681b      	ldr	r3, [r3, #0]
 800836c:	3358      	adds	r3, #88	; 0x58
 800836e:	4a15      	ldr	r2, [pc, #84]	; (80083c4 <vTaskStartScheduler+0xd0>)
 8008370:	6013      	str	r3, [r2, #0]
 8008372:	4b15      	ldr	r3, [pc, #84]	; (80083c8 <vTaskStartScheduler+0xd4>)
 8008374:	f04f 32ff 	mov.w	r2, #4294967295
 8008378:	601a      	str	r2, [r3, #0]
 800837a:	4b14      	ldr	r3, [pc, #80]	; (80083cc <vTaskStartScheduler+0xd8>)
 800837c:	2201      	movs	r2, #1
 800837e:	601a      	str	r2, [r3, #0]
 8008380:	4b13      	ldr	r3, [pc, #76]	; (80083d0 <vTaskStartScheduler+0xdc>)
 8008382:	2200      	movs	r2, #0
 8008384:	601a      	str	r2, [r3, #0]
 8008386:	f001 f9cb 	bl	8009720 <xPortStartScheduler>
 800838a:	e00e      	b.n	80083aa <vTaskStartScheduler+0xb6>
 800838c:	697b      	ldr	r3, [r7, #20]
 800838e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008392:	d10a      	bne.n	80083aa <vTaskStartScheduler+0xb6>
 8008394:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008398:	f383 8811 	msr	BASEPRI, r3
 800839c:	f3bf 8f6f 	isb	sy
 80083a0:	f3bf 8f4f 	dsb	sy
 80083a4:	60fb      	str	r3, [r7, #12]
 80083a6:	bf00      	nop
 80083a8:	e7fe      	b.n	80083a8 <vTaskStartScheduler+0xb4>
 80083aa:	bf00      	nop
 80083ac:	3718      	adds	r7, #24
 80083ae:	46bd      	mov	sp, r7
 80083b0:	bd80      	pop	{r7, pc}
 80083b2:	bf00      	nop
 80083b4:	08010b10 	.word	0x08010b10
 80083b8:	080089f9 	.word	0x080089f9
 80083bc:	200040c0 	.word	0x200040c0
 80083c0:	20003bc8 	.word	0x20003bc8
 80083c4:	20000020 	.word	0x20000020
 80083c8:	200040bc 	.word	0x200040bc
 80083cc:	200040a8 	.word	0x200040a8
 80083d0:	200040a0 	.word	0x200040a0

080083d4 <vTaskSuspendAll>:
 80083d4:	b480      	push	{r7}
 80083d6:	af00      	add	r7, sp, #0
 80083d8:	4b04      	ldr	r3, [pc, #16]	; (80083ec <vTaskSuspendAll+0x18>)
 80083da:	681b      	ldr	r3, [r3, #0]
 80083dc:	3301      	adds	r3, #1
 80083de:	4a03      	ldr	r2, [pc, #12]	; (80083ec <vTaskSuspendAll+0x18>)
 80083e0:	6013      	str	r3, [r2, #0]
 80083e2:	bf00      	nop
 80083e4:	46bd      	mov	sp, r7
 80083e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083ea:	4770      	bx	lr
 80083ec:	200040c4 	.word	0x200040c4

080083f0 <xTaskResumeAll>:
 80083f0:	b580      	push	{r7, lr}
 80083f2:	b084      	sub	sp, #16
 80083f4:	af00      	add	r7, sp, #0
 80083f6:	2300      	movs	r3, #0
 80083f8:	60fb      	str	r3, [r7, #12]
 80083fa:	2300      	movs	r3, #0
 80083fc:	60bb      	str	r3, [r7, #8]
 80083fe:	4b42      	ldr	r3, [pc, #264]	; (8008508 <xTaskResumeAll+0x118>)
 8008400:	681b      	ldr	r3, [r3, #0]
 8008402:	2b00      	cmp	r3, #0
 8008404:	d10a      	bne.n	800841c <xTaskResumeAll+0x2c>
 8008406:	f04f 0350 	mov.w	r3, #80	; 0x50
 800840a:	f383 8811 	msr	BASEPRI, r3
 800840e:	f3bf 8f6f 	isb	sy
 8008412:	f3bf 8f4f 	dsb	sy
 8008416:	603b      	str	r3, [r7, #0]
 8008418:	bf00      	nop
 800841a:	e7fe      	b.n	800841a <xTaskResumeAll+0x2a>
 800841c:	f001 fa22 	bl	8009864 <vPortEnterCritical>
 8008420:	4b39      	ldr	r3, [pc, #228]	; (8008508 <xTaskResumeAll+0x118>)
 8008422:	681b      	ldr	r3, [r3, #0]
 8008424:	3b01      	subs	r3, #1
 8008426:	4a38      	ldr	r2, [pc, #224]	; (8008508 <xTaskResumeAll+0x118>)
 8008428:	6013      	str	r3, [r2, #0]
 800842a:	4b37      	ldr	r3, [pc, #220]	; (8008508 <xTaskResumeAll+0x118>)
 800842c:	681b      	ldr	r3, [r3, #0]
 800842e:	2b00      	cmp	r3, #0
 8008430:	d162      	bne.n	80084f8 <xTaskResumeAll+0x108>
 8008432:	4b36      	ldr	r3, [pc, #216]	; (800850c <xTaskResumeAll+0x11c>)
 8008434:	681b      	ldr	r3, [r3, #0]
 8008436:	2b00      	cmp	r3, #0
 8008438:	d05e      	beq.n	80084f8 <xTaskResumeAll+0x108>
 800843a:	e02f      	b.n	800849c <xTaskResumeAll+0xac>
 800843c:	4b34      	ldr	r3, [pc, #208]	; (8008510 <xTaskResumeAll+0x120>)
 800843e:	68db      	ldr	r3, [r3, #12]
 8008440:	68db      	ldr	r3, [r3, #12]
 8008442:	60fb      	str	r3, [r7, #12]
 8008444:	68fb      	ldr	r3, [r7, #12]
 8008446:	3318      	adds	r3, #24
 8008448:	4618      	mov	r0, r3
 800844a:	f7fe fe95 	bl	8007178 <uxListRemove>
 800844e:	68fb      	ldr	r3, [r7, #12]
 8008450:	3304      	adds	r3, #4
 8008452:	4618      	mov	r0, r3
 8008454:	f7fe fe90 	bl	8007178 <uxListRemove>
 8008458:	68fb      	ldr	r3, [r7, #12]
 800845a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800845c:	4b2d      	ldr	r3, [pc, #180]	; (8008514 <xTaskResumeAll+0x124>)
 800845e:	681b      	ldr	r3, [r3, #0]
 8008460:	429a      	cmp	r2, r3
 8008462:	d903      	bls.n	800846c <xTaskResumeAll+0x7c>
 8008464:	68fb      	ldr	r3, [r7, #12]
 8008466:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008468:	4a2a      	ldr	r2, [pc, #168]	; (8008514 <xTaskResumeAll+0x124>)
 800846a:	6013      	str	r3, [r2, #0]
 800846c:	68fb      	ldr	r3, [r7, #12]
 800846e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008470:	4613      	mov	r3, r2
 8008472:	009b      	lsls	r3, r3, #2
 8008474:	4413      	add	r3, r2
 8008476:	009b      	lsls	r3, r3, #2
 8008478:	4a27      	ldr	r2, [pc, #156]	; (8008518 <xTaskResumeAll+0x128>)
 800847a:	441a      	add	r2, r3
 800847c:	68fb      	ldr	r3, [r7, #12]
 800847e:	3304      	adds	r3, #4
 8008480:	4619      	mov	r1, r3
 8008482:	4610      	mov	r0, r2
 8008484:	f7fe fe1b 	bl	80070be <vListInsertEnd>
 8008488:	68fb      	ldr	r3, [r7, #12]
 800848a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800848c:	4b23      	ldr	r3, [pc, #140]	; (800851c <xTaskResumeAll+0x12c>)
 800848e:	681b      	ldr	r3, [r3, #0]
 8008490:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008492:	429a      	cmp	r2, r3
 8008494:	d302      	bcc.n	800849c <xTaskResumeAll+0xac>
 8008496:	4b22      	ldr	r3, [pc, #136]	; (8008520 <xTaskResumeAll+0x130>)
 8008498:	2201      	movs	r2, #1
 800849a:	601a      	str	r2, [r3, #0]
 800849c:	4b1c      	ldr	r3, [pc, #112]	; (8008510 <xTaskResumeAll+0x120>)
 800849e:	681b      	ldr	r3, [r3, #0]
 80084a0:	2b00      	cmp	r3, #0
 80084a2:	d1cb      	bne.n	800843c <xTaskResumeAll+0x4c>
 80084a4:	68fb      	ldr	r3, [r7, #12]
 80084a6:	2b00      	cmp	r3, #0
 80084a8:	d001      	beq.n	80084ae <xTaskResumeAll+0xbe>
 80084aa:	f000 fb5f 	bl	8008b6c <prvResetNextTaskUnblockTime>
 80084ae:	4b1d      	ldr	r3, [pc, #116]	; (8008524 <xTaskResumeAll+0x134>)
 80084b0:	681b      	ldr	r3, [r3, #0]
 80084b2:	607b      	str	r3, [r7, #4]
 80084b4:	687b      	ldr	r3, [r7, #4]
 80084b6:	2b00      	cmp	r3, #0
 80084b8:	d010      	beq.n	80084dc <xTaskResumeAll+0xec>
 80084ba:	f000 f847 	bl	800854c <xTaskIncrementTick>
 80084be:	4603      	mov	r3, r0
 80084c0:	2b00      	cmp	r3, #0
 80084c2:	d002      	beq.n	80084ca <xTaskResumeAll+0xda>
 80084c4:	4b16      	ldr	r3, [pc, #88]	; (8008520 <xTaskResumeAll+0x130>)
 80084c6:	2201      	movs	r2, #1
 80084c8:	601a      	str	r2, [r3, #0]
 80084ca:	687b      	ldr	r3, [r7, #4]
 80084cc:	3b01      	subs	r3, #1
 80084ce:	607b      	str	r3, [r7, #4]
 80084d0:	687b      	ldr	r3, [r7, #4]
 80084d2:	2b00      	cmp	r3, #0
 80084d4:	d1f1      	bne.n	80084ba <xTaskResumeAll+0xca>
 80084d6:	4b13      	ldr	r3, [pc, #76]	; (8008524 <xTaskResumeAll+0x134>)
 80084d8:	2200      	movs	r2, #0
 80084da:	601a      	str	r2, [r3, #0]
 80084dc:	4b10      	ldr	r3, [pc, #64]	; (8008520 <xTaskResumeAll+0x130>)
 80084de:	681b      	ldr	r3, [r3, #0]
 80084e0:	2b00      	cmp	r3, #0
 80084e2:	d009      	beq.n	80084f8 <xTaskResumeAll+0x108>
 80084e4:	2301      	movs	r3, #1
 80084e6:	60bb      	str	r3, [r7, #8]
 80084e8:	4b0f      	ldr	r3, [pc, #60]	; (8008528 <xTaskResumeAll+0x138>)
 80084ea:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80084ee:	601a      	str	r2, [r3, #0]
 80084f0:	f3bf 8f4f 	dsb	sy
 80084f4:	f3bf 8f6f 	isb	sy
 80084f8:	f001 f9e4 	bl	80098c4 <vPortExitCritical>
 80084fc:	68bb      	ldr	r3, [r7, #8]
 80084fe:	4618      	mov	r0, r3
 8008500:	3710      	adds	r7, #16
 8008502:	46bd      	mov	sp, r7
 8008504:	bd80      	pop	{r7, pc}
 8008506:	bf00      	nop
 8008508:	200040c4 	.word	0x200040c4
 800850c:	2000409c 	.word	0x2000409c
 8008510:	2000405c 	.word	0x2000405c
 8008514:	200040a4 	.word	0x200040a4
 8008518:	20003bcc 	.word	0x20003bcc
 800851c:	20003bc8 	.word	0x20003bc8
 8008520:	200040b0 	.word	0x200040b0
 8008524:	200040ac 	.word	0x200040ac
 8008528:	e000ed04 	.word	0xe000ed04

0800852c <xTaskGetTickCount>:
 800852c:	b480      	push	{r7}
 800852e:	b083      	sub	sp, #12
 8008530:	af00      	add	r7, sp, #0
 8008532:	4b05      	ldr	r3, [pc, #20]	; (8008548 <xTaskGetTickCount+0x1c>)
 8008534:	681b      	ldr	r3, [r3, #0]
 8008536:	607b      	str	r3, [r7, #4]
 8008538:	687b      	ldr	r3, [r7, #4]
 800853a:	4618      	mov	r0, r3
 800853c:	370c      	adds	r7, #12
 800853e:	46bd      	mov	sp, r7
 8008540:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008544:	4770      	bx	lr
 8008546:	bf00      	nop
 8008548:	200040a0 	.word	0x200040a0

0800854c <xTaskIncrementTick>:
 800854c:	b580      	push	{r7, lr}
 800854e:	b086      	sub	sp, #24
 8008550:	af00      	add	r7, sp, #0
 8008552:	2300      	movs	r3, #0
 8008554:	617b      	str	r3, [r7, #20]
 8008556:	4b4f      	ldr	r3, [pc, #316]	; (8008694 <xTaskIncrementTick+0x148>)
 8008558:	681b      	ldr	r3, [r3, #0]
 800855a:	2b00      	cmp	r3, #0
 800855c:	f040 808f 	bne.w	800867e <xTaskIncrementTick+0x132>
 8008560:	4b4d      	ldr	r3, [pc, #308]	; (8008698 <xTaskIncrementTick+0x14c>)
 8008562:	681b      	ldr	r3, [r3, #0]
 8008564:	3301      	adds	r3, #1
 8008566:	613b      	str	r3, [r7, #16]
 8008568:	4a4b      	ldr	r2, [pc, #300]	; (8008698 <xTaskIncrementTick+0x14c>)
 800856a:	693b      	ldr	r3, [r7, #16]
 800856c:	6013      	str	r3, [r2, #0]
 800856e:	693b      	ldr	r3, [r7, #16]
 8008570:	2b00      	cmp	r3, #0
 8008572:	d120      	bne.n	80085b6 <xTaskIncrementTick+0x6a>
 8008574:	4b49      	ldr	r3, [pc, #292]	; (800869c <xTaskIncrementTick+0x150>)
 8008576:	681b      	ldr	r3, [r3, #0]
 8008578:	681b      	ldr	r3, [r3, #0]
 800857a:	2b00      	cmp	r3, #0
 800857c:	d00a      	beq.n	8008594 <xTaskIncrementTick+0x48>
 800857e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008582:	f383 8811 	msr	BASEPRI, r3
 8008586:	f3bf 8f6f 	isb	sy
 800858a:	f3bf 8f4f 	dsb	sy
 800858e:	603b      	str	r3, [r7, #0]
 8008590:	bf00      	nop
 8008592:	e7fe      	b.n	8008592 <xTaskIncrementTick+0x46>
 8008594:	4b41      	ldr	r3, [pc, #260]	; (800869c <xTaskIncrementTick+0x150>)
 8008596:	681b      	ldr	r3, [r3, #0]
 8008598:	60fb      	str	r3, [r7, #12]
 800859a:	4b41      	ldr	r3, [pc, #260]	; (80086a0 <xTaskIncrementTick+0x154>)
 800859c:	681b      	ldr	r3, [r3, #0]
 800859e:	4a3f      	ldr	r2, [pc, #252]	; (800869c <xTaskIncrementTick+0x150>)
 80085a0:	6013      	str	r3, [r2, #0]
 80085a2:	4a3f      	ldr	r2, [pc, #252]	; (80086a0 <xTaskIncrementTick+0x154>)
 80085a4:	68fb      	ldr	r3, [r7, #12]
 80085a6:	6013      	str	r3, [r2, #0]
 80085a8:	4b3e      	ldr	r3, [pc, #248]	; (80086a4 <xTaskIncrementTick+0x158>)
 80085aa:	681b      	ldr	r3, [r3, #0]
 80085ac:	3301      	adds	r3, #1
 80085ae:	4a3d      	ldr	r2, [pc, #244]	; (80086a4 <xTaskIncrementTick+0x158>)
 80085b0:	6013      	str	r3, [r2, #0]
 80085b2:	f000 fadb 	bl	8008b6c <prvResetNextTaskUnblockTime>
 80085b6:	4b3c      	ldr	r3, [pc, #240]	; (80086a8 <xTaskIncrementTick+0x15c>)
 80085b8:	681b      	ldr	r3, [r3, #0]
 80085ba:	693a      	ldr	r2, [r7, #16]
 80085bc:	429a      	cmp	r2, r3
 80085be:	d349      	bcc.n	8008654 <xTaskIncrementTick+0x108>
 80085c0:	4b36      	ldr	r3, [pc, #216]	; (800869c <xTaskIncrementTick+0x150>)
 80085c2:	681b      	ldr	r3, [r3, #0]
 80085c4:	681b      	ldr	r3, [r3, #0]
 80085c6:	2b00      	cmp	r3, #0
 80085c8:	d104      	bne.n	80085d4 <xTaskIncrementTick+0x88>
 80085ca:	4b37      	ldr	r3, [pc, #220]	; (80086a8 <xTaskIncrementTick+0x15c>)
 80085cc:	f04f 32ff 	mov.w	r2, #4294967295
 80085d0:	601a      	str	r2, [r3, #0]
 80085d2:	e03f      	b.n	8008654 <xTaskIncrementTick+0x108>
 80085d4:	4b31      	ldr	r3, [pc, #196]	; (800869c <xTaskIncrementTick+0x150>)
 80085d6:	681b      	ldr	r3, [r3, #0]
 80085d8:	68db      	ldr	r3, [r3, #12]
 80085da:	68db      	ldr	r3, [r3, #12]
 80085dc:	60bb      	str	r3, [r7, #8]
 80085de:	68bb      	ldr	r3, [r7, #8]
 80085e0:	685b      	ldr	r3, [r3, #4]
 80085e2:	607b      	str	r3, [r7, #4]
 80085e4:	693a      	ldr	r2, [r7, #16]
 80085e6:	687b      	ldr	r3, [r7, #4]
 80085e8:	429a      	cmp	r2, r3
 80085ea:	d203      	bcs.n	80085f4 <xTaskIncrementTick+0xa8>
 80085ec:	4a2e      	ldr	r2, [pc, #184]	; (80086a8 <xTaskIncrementTick+0x15c>)
 80085ee:	687b      	ldr	r3, [r7, #4]
 80085f0:	6013      	str	r3, [r2, #0]
 80085f2:	e02f      	b.n	8008654 <xTaskIncrementTick+0x108>
 80085f4:	68bb      	ldr	r3, [r7, #8]
 80085f6:	3304      	adds	r3, #4
 80085f8:	4618      	mov	r0, r3
 80085fa:	f7fe fdbd 	bl	8007178 <uxListRemove>
 80085fe:	68bb      	ldr	r3, [r7, #8]
 8008600:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008602:	2b00      	cmp	r3, #0
 8008604:	d004      	beq.n	8008610 <xTaskIncrementTick+0xc4>
 8008606:	68bb      	ldr	r3, [r7, #8]
 8008608:	3318      	adds	r3, #24
 800860a:	4618      	mov	r0, r3
 800860c:	f7fe fdb4 	bl	8007178 <uxListRemove>
 8008610:	68bb      	ldr	r3, [r7, #8]
 8008612:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008614:	4b25      	ldr	r3, [pc, #148]	; (80086ac <xTaskIncrementTick+0x160>)
 8008616:	681b      	ldr	r3, [r3, #0]
 8008618:	429a      	cmp	r2, r3
 800861a:	d903      	bls.n	8008624 <xTaskIncrementTick+0xd8>
 800861c:	68bb      	ldr	r3, [r7, #8]
 800861e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008620:	4a22      	ldr	r2, [pc, #136]	; (80086ac <xTaskIncrementTick+0x160>)
 8008622:	6013      	str	r3, [r2, #0]
 8008624:	68bb      	ldr	r3, [r7, #8]
 8008626:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008628:	4613      	mov	r3, r2
 800862a:	009b      	lsls	r3, r3, #2
 800862c:	4413      	add	r3, r2
 800862e:	009b      	lsls	r3, r3, #2
 8008630:	4a1f      	ldr	r2, [pc, #124]	; (80086b0 <xTaskIncrementTick+0x164>)
 8008632:	441a      	add	r2, r3
 8008634:	68bb      	ldr	r3, [r7, #8]
 8008636:	3304      	adds	r3, #4
 8008638:	4619      	mov	r1, r3
 800863a:	4610      	mov	r0, r2
 800863c:	f7fe fd3f 	bl	80070be <vListInsertEnd>
 8008640:	68bb      	ldr	r3, [r7, #8]
 8008642:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008644:	4b1b      	ldr	r3, [pc, #108]	; (80086b4 <xTaskIncrementTick+0x168>)
 8008646:	681b      	ldr	r3, [r3, #0]
 8008648:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800864a:	429a      	cmp	r2, r3
 800864c:	d3b8      	bcc.n	80085c0 <xTaskIncrementTick+0x74>
 800864e:	2301      	movs	r3, #1
 8008650:	617b      	str	r3, [r7, #20]
 8008652:	e7b5      	b.n	80085c0 <xTaskIncrementTick+0x74>
 8008654:	4b17      	ldr	r3, [pc, #92]	; (80086b4 <xTaskIncrementTick+0x168>)
 8008656:	681b      	ldr	r3, [r3, #0]
 8008658:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800865a:	4915      	ldr	r1, [pc, #84]	; (80086b0 <xTaskIncrementTick+0x164>)
 800865c:	4613      	mov	r3, r2
 800865e:	009b      	lsls	r3, r3, #2
 8008660:	4413      	add	r3, r2
 8008662:	009b      	lsls	r3, r3, #2
 8008664:	440b      	add	r3, r1
 8008666:	681b      	ldr	r3, [r3, #0]
 8008668:	2b01      	cmp	r3, #1
 800866a:	d901      	bls.n	8008670 <xTaskIncrementTick+0x124>
 800866c:	2301      	movs	r3, #1
 800866e:	617b      	str	r3, [r7, #20]
 8008670:	4b11      	ldr	r3, [pc, #68]	; (80086b8 <xTaskIncrementTick+0x16c>)
 8008672:	681b      	ldr	r3, [r3, #0]
 8008674:	2b00      	cmp	r3, #0
 8008676:	d007      	beq.n	8008688 <xTaskIncrementTick+0x13c>
 8008678:	2301      	movs	r3, #1
 800867a:	617b      	str	r3, [r7, #20]
 800867c:	e004      	b.n	8008688 <xTaskIncrementTick+0x13c>
 800867e:	4b0f      	ldr	r3, [pc, #60]	; (80086bc <xTaskIncrementTick+0x170>)
 8008680:	681b      	ldr	r3, [r3, #0]
 8008682:	3301      	adds	r3, #1
 8008684:	4a0d      	ldr	r2, [pc, #52]	; (80086bc <xTaskIncrementTick+0x170>)
 8008686:	6013      	str	r3, [r2, #0]
 8008688:	697b      	ldr	r3, [r7, #20]
 800868a:	4618      	mov	r0, r3
 800868c:	3718      	adds	r7, #24
 800868e:	46bd      	mov	sp, r7
 8008690:	bd80      	pop	{r7, pc}
 8008692:	bf00      	nop
 8008694:	200040c4 	.word	0x200040c4
 8008698:	200040a0 	.word	0x200040a0
 800869c:	20004054 	.word	0x20004054
 80086a0:	20004058 	.word	0x20004058
 80086a4:	200040b4 	.word	0x200040b4
 80086a8:	200040bc 	.word	0x200040bc
 80086ac:	200040a4 	.word	0x200040a4
 80086b0:	20003bcc 	.word	0x20003bcc
 80086b4:	20003bc8 	.word	0x20003bc8
 80086b8:	200040b0 	.word	0x200040b0
 80086bc:	200040ac 	.word	0x200040ac

080086c0 <vTaskSwitchContext>:
 80086c0:	b480      	push	{r7}
 80086c2:	b085      	sub	sp, #20
 80086c4:	af00      	add	r7, sp, #0
 80086c6:	4b2a      	ldr	r3, [pc, #168]	; (8008770 <vTaskSwitchContext+0xb0>)
 80086c8:	681b      	ldr	r3, [r3, #0]
 80086ca:	2b00      	cmp	r3, #0
 80086cc:	d003      	beq.n	80086d6 <vTaskSwitchContext+0x16>
 80086ce:	4b29      	ldr	r3, [pc, #164]	; (8008774 <vTaskSwitchContext+0xb4>)
 80086d0:	2201      	movs	r2, #1
 80086d2:	601a      	str	r2, [r3, #0]
 80086d4:	e046      	b.n	8008764 <vTaskSwitchContext+0xa4>
 80086d6:	4b27      	ldr	r3, [pc, #156]	; (8008774 <vTaskSwitchContext+0xb4>)
 80086d8:	2200      	movs	r2, #0
 80086da:	601a      	str	r2, [r3, #0]
 80086dc:	4b26      	ldr	r3, [pc, #152]	; (8008778 <vTaskSwitchContext+0xb8>)
 80086de:	681b      	ldr	r3, [r3, #0]
 80086e0:	60fb      	str	r3, [r7, #12]
 80086e2:	e010      	b.n	8008706 <vTaskSwitchContext+0x46>
 80086e4:	68fb      	ldr	r3, [r7, #12]
 80086e6:	2b00      	cmp	r3, #0
 80086e8:	d10a      	bne.n	8008700 <vTaskSwitchContext+0x40>
 80086ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086ee:	f383 8811 	msr	BASEPRI, r3
 80086f2:	f3bf 8f6f 	isb	sy
 80086f6:	f3bf 8f4f 	dsb	sy
 80086fa:	607b      	str	r3, [r7, #4]
 80086fc:	bf00      	nop
 80086fe:	e7fe      	b.n	80086fe <vTaskSwitchContext+0x3e>
 8008700:	68fb      	ldr	r3, [r7, #12]
 8008702:	3b01      	subs	r3, #1
 8008704:	60fb      	str	r3, [r7, #12]
 8008706:	491d      	ldr	r1, [pc, #116]	; (800877c <vTaskSwitchContext+0xbc>)
 8008708:	68fa      	ldr	r2, [r7, #12]
 800870a:	4613      	mov	r3, r2
 800870c:	009b      	lsls	r3, r3, #2
 800870e:	4413      	add	r3, r2
 8008710:	009b      	lsls	r3, r3, #2
 8008712:	440b      	add	r3, r1
 8008714:	681b      	ldr	r3, [r3, #0]
 8008716:	2b00      	cmp	r3, #0
 8008718:	d0e4      	beq.n	80086e4 <vTaskSwitchContext+0x24>
 800871a:	68fa      	ldr	r2, [r7, #12]
 800871c:	4613      	mov	r3, r2
 800871e:	009b      	lsls	r3, r3, #2
 8008720:	4413      	add	r3, r2
 8008722:	009b      	lsls	r3, r3, #2
 8008724:	4a15      	ldr	r2, [pc, #84]	; (800877c <vTaskSwitchContext+0xbc>)
 8008726:	4413      	add	r3, r2
 8008728:	60bb      	str	r3, [r7, #8]
 800872a:	68bb      	ldr	r3, [r7, #8]
 800872c:	685b      	ldr	r3, [r3, #4]
 800872e:	685a      	ldr	r2, [r3, #4]
 8008730:	68bb      	ldr	r3, [r7, #8]
 8008732:	605a      	str	r2, [r3, #4]
 8008734:	68bb      	ldr	r3, [r7, #8]
 8008736:	685a      	ldr	r2, [r3, #4]
 8008738:	68bb      	ldr	r3, [r7, #8]
 800873a:	3308      	adds	r3, #8
 800873c:	429a      	cmp	r2, r3
 800873e:	d104      	bne.n	800874a <vTaskSwitchContext+0x8a>
 8008740:	68bb      	ldr	r3, [r7, #8]
 8008742:	685b      	ldr	r3, [r3, #4]
 8008744:	685a      	ldr	r2, [r3, #4]
 8008746:	68bb      	ldr	r3, [r7, #8]
 8008748:	605a      	str	r2, [r3, #4]
 800874a:	68bb      	ldr	r3, [r7, #8]
 800874c:	685b      	ldr	r3, [r3, #4]
 800874e:	68db      	ldr	r3, [r3, #12]
 8008750:	4a0b      	ldr	r2, [pc, #44]	; (8008780 <vTaskSwitchContext+0xc0>)
 8008752:	6013      	str	r3, [r2, #0]
 8008754:	4a08      	ldr	r2, [pc, #32]	; (8008778 <vTaskSwitchContext+0xb8>)
 8008756:	68fb      	ldr	r3, [r7, #12]
 8008758:	6013      	str	r3, [r2, #0]
 800875a:	4b09      	ldr	r3, [pc, #36]	; (8008780 <vTaskSwitchContext+0xc0>)
 800875c:	681b      	ldr	r3, [r3, #0]
 800875e:	3358      	adds	r3, #88	; 0x58
 8008760:	4a08      	ldr	r2, [pc, #32]	; (8008784 <vTaskSwitchContext+0xc4>)
 8008762:	6013      	str	r3, [r2, #0]
 8008764:	bf00      	nop
 8008766:	3714      	adds	r7, #20
 8008768:	46bd      	mov	sp, r7
 800876a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800876e:	4770      	bx	lr
 8008770:	200040c4 	.word	0x200040c4
 8008774:	200040b0 	.word	0x200040b0
 8008778:	200040a4 	.word	0x200040a4
 800877c:	20003bcc 	.word	0x20003bcc
 8008780:	20003bc8 	.word	0x20003bc8
 8008784:	20000020 	.word	0x20000020

08008788 <vTaskPlaceOnEventList>:
 8008788:	b580      	push	{r7, lr}
 800878a:	b084      	sub	sp, #16
 800878c:	af00      	add	r7, sp, #0
 800878e:	6078      	str	r0, [r7, #4]
 8008790:	6039      	str	r1, [r7, #0]
 8008792:	687b      	ldr	r3, [r7, #4]
 8008794:	2b00      	cmp	r3, #0
 8008796:	d10a      	bne.n	80087ae <vTaskPlaceOnEventList+0x26>
 8008798:	f04f 0350 	mov.w	r3, #80	; 0x50
 800879c:	f383 8811 	msr	BASEPRI, r3
 80087a0:	f3bf 8f6f 	isb	sy
 80087a4:	f3bf 8f4f 	dsb	sy
 80087a8:	60fb      	str	r3, [r7, #12]
 80087aa:	bf00      	nop
 80087ac:	e7fe      	b.n	80087ac <vTaskPlaceOnEventList+0x24>
 80087ae:	4b07      	ldr	r3, [pc, #28]	; (80087cc <vTaskPlaceOnEventList+0x44>)
 80087b0:	681b      	ldr	r3, [r3, #0]
 80087b2:	3318      	adds	r3, #24
 80087b4:	4619      	mov	r1, r3
 80087b6:	6878      	ldr	r0, [r7, #4]
 80087b8:	f7fe fca5 	bl	8007106 <vListInsert>
 80087bc:	2101      	movs	r1, #1
 80087be:	6838      	ldr	r0, [r7, #0]
 80087c0:	f000 fb7e 	bl	8008ec0 <prvAddCurrentTaskToDelayedList>
 80087c4:	bf00      	nop
 80087c6:	3710      	adds	r7, #16
 80087c8:	46bd      	mov	sp, r7
 80087ca:	bd80      	pop	{r7, pc}
 80087cc:	20003bc8 	.word	0x20003bc8

080087d0 <vTaskPlaceOnEventListRestricted>:
 80087d0:	b580      	push	{r7, lr}
 80087d2:	b086      	sub	sp, #24
 80087d4:	af00      	add	r7, sp, #0
 80087d6:	60f8      	str	r0, [r7, #12]
 80087d8:	60b9      	str	r1, [r7, #8]
 80087da:	607a      	str	r2, [r7, #4]
 80087dc:	68fb      	ldr	r3, [r7, #12]
 80087de:	2b00      	cmp	r3, #0
 80087e0:	d10a      	bne.n	80087f8 <vTaskPlaceOnEventListRestricted+0x28>
 80087e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087e6:	f383 8811 	msr	BASEPRI, r3
 80087ea:	f3bf 8f6f 	isb	sy
 80087ee:	f3bf 8f4f 	dsb	sy
 80087f2:	617b      	str	r3, [r7, #20]
 80087f4:	bf00      	nop
 80087f6:	e7fe      	b.n	80087f6 <vTaskPlaceOnEventListRestricted+0x26>
 80087f8:	4b0a      	ldr	r3, [pc, #40]	; (8008824 <vTaskPlaceOnEventListRestricted+0x54>)
 80087fa:	681b      	ldr	r3, [r3, #0]
 80087fc:	3318      	adds	r3, #24
 80087fe:	4619      	mov	r1, r3
 8008800:	68f8      	ldr	r0, [r7, #12]
 8008802:	f7fe fc5c 	bl	80070be <vListInsertEnd>
 8008806:	687b      	ldr	r3, [r7, #4]
 8008808:	2b00      	cmp	r3, #0
 800880a:	d002      	beq.n	8008812 <vTaskPlaceOnEventListRestricted+0x42>
 800880c:	f04f 33ff 	mov.w	r3, #4294967295
 8008810:	60bb      	str	r3, [r7, #8]
 8008812:	6879      	ldr	r1, [r7, #4]
 8008814:	68b8      	ldr	r0, [r7, #8]
 8008816:	f000 fb53 	bl	8008ec0 <prvAddCurrentTaskToDelayedList>
 800881a:	bf00      	nop
 800881c:	3718      	adds	r7, #24
 800881e:	46bd      	mov	sp, r7
 8008820:	bd80      	pop	{r7, pc}
 8008822:	bf00      	nop
 8008824:	20003bc8 	.word	0x20003bc8

08008828 <xTaskRemoveFromEventList>:
 8008828:	b580      	push	{r7, lr}
 800882a:	b086      	sub	sp, #24
 800882c:	af00      	add	r7, sp, #0
 800882e:	6078      	str	r0, [r7, #4]
 8008830:	687b      	ldr	r3, [r7, #4]
 8008832:	68db      	ldr	r3, [r3, #12]
 8008834:	68db      	ldr	r3, [r3, #12]
 8008836:	613b      	str	r3, [r7, #16]
 8008838:	693b      	ldr	r3, [r7, #16]
 800883a:	2b00      	cmp	r3, #0
 800883c:	d10a      	bne.n	8008854 <xTaskRemoveFromEventList+0x2c>
 800883e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008842:	f383 8811 	msr	BASEPRI, r3
 8008846:	f3bf 8f6f 	isb	sy
 800884a:	f3bf 8f4f 	dsb	sy
 800884e:	60fb      	str	r3, [r7, #12]
 8008850:	bf00      	nop
 8008852:	e7fe      	b.n	8008852 <xTaskRemoveFromEventList+0x2a>
 8008854:	693b      	ldr	r3, [r7, #16]
 8008856:	3318      	adds	r3, #24
 8008858:	4618      	mov	r0, r3
 800885a:	f7fe fc8d 	bl	8007178 <uxListRemove>
 800885e:	4b1e      	ldr	r3, [pc, #120]	; (80088d8 <xTaskRemoveFromEventList+0xb0>)
 8008860:	681b      	ldr	r3, [r3, #0]
 8008862:	2b00      	cmp	r3, #0
 8008864:	d11d      	bne.n	80088a2 <xTaskRemoveFromEventList+0x7a>
 8008866:	693b      	ldr	r3, [r7, #16]
 8008868:	3304      	adds	r3, #4
 800886a:	4618      	mov	r0, r3
 800886c:	f7fe fc84 	bl	8007178 <uxListRemove>
 8008870:	693b      	ldr	r3, [r7, #16]
 8008872:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008874:	4b19      	ldr	r3, [pc, #100]	; (80088dc <xTaskRemoveFromEventList+0xb4>)
 8008876:	681b      	ldr	r3, [r3, #0]
 8008878:	429a      	cmp	r2, r3
 800887a:	d903      	bls.n	8008884 <xTaskRemoveFromEventList+0x5c>
 800887c:	693b      	ldr	r3, [r7, #16]
 800887e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008880:	4a16      	ldr	r2, [pc, #88]	; (80088dc <xTaskRemoveFromEventList+0xb4>)
 8008882:	6013      	str	r3, [r2, #0]
 8008884:	693b      	ldr	r3, [r7, #16]
 8008886:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008888:	4613      	mov	r3, r2
 800888a:	009b      	lsls	r3, r3, #2
 800888c:	4413      	add	r3, r2
 800888e:	009b      	lsls	r3, r3, #2
 8008890:	4a13      	ldr	r2, [pc, #76]	; (80088e0 <xTaskRemoveFromEventList+0xb8>)
 8008892:	441a      	add	r2, r3
 8008894:	693b      	ldr	r3, [r7, #16]
 8008896:	3304      	adds	r3, #4
 8008898:	4619      	mov	r1, r3
 800889a:	4610      	mov	r0, r2
 800889c:	f7fe fc0f 	bl	80070be <vListInsertEnd>
 80088a0:	e005      	b.n	80088ae <xTaskRemoveFromEventList+0x86>
 80088a2:	693b      	ldr	r3, [r7, #16]
 80088a4:	3318      	adds	r3, #24
 80088a6:	4619      	mov	r1, r3
 80088a8:	480e      	ldr	r0, [pc, #56]	; (80088e4 <xTaskRemoveFromEventList+0xbc>)
 80088aa:	f7fe fc08 	bl	80070be <vListInsertEnd>
 80088ae:	693b      	ldr	r3, [r7, #16]
 80088b0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80088b2:	4b0d      	ldr	r3, [pc, #52]	; (80088e8 <xTaskRemoveFromEventList+0xc0>)
 80088b4:	681b      	ldr	r3, [r3, #0]
 80088b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80088b8:	429a      	cmp	r2, r3
 80088ba:	d905      	bls.n	80088c8 <xTaskRemoveFromEventList+0xa0>
 80088bc:	2301      	movs	r3, #1
 80088be:	617b      	str	r3, [r7, #20]
 80088c0:	4b0a      	ldr	r3, [pc, #40]	; (80088ec <xTaskRemoveFromEventList+0xc4>)
 80088c2:	2201      	movs	r2, #1
 80088c4:	601a      	str	r2, [r3, #0]
 80088c6:	e001      	b.n	80088cc <xTaskRemoveFromEventList+0xa4>
 80088c8:	2300      	movs	r3, #0
 80088ca:	617b      	str	r3, [r7, #20]
 80088cc:	697b      	ldr	r3, [r7, #20]
 80088ce:	4618      	mov	r0, r3
 80088d0:	3718      	adds	r7, #24
 80088d2:	46bd      	mov	sp, r7
 80088d4:	bd80      	pop	{r7, pc}
 80088d6:	bf00      	nop
 80088d8:	200040c4 	.word	0x200040c4
 80088dc:	200040a4 	.word	0x200040a4
 80088e0:	20003bcc 	.word	0x20003bcc
 80088e4:	2000405c 	.word	0x2000405c
 80088e8:	20003bc8 	.word	0x20003bc8
 80088ec:	200040b0 	.word	0x200040b0

080088f0 <vTaskInternalSetTimeOutState>:
 80088f0:	b480      	push	{r7}
 80088f2:	b083      	sub	sp, #12
 80088f4:	af00      	add	r7, sp, #0
 80088f6:	6078      	str	r0, [r7, #4]
 80088f8:	4b06      	ldr	r3, [pc, #24]	; (8008914 <vTaskInternalSetTimeOutState+0x24>)
 80088fa:	681a      	ldr	r2, [r3, #0]
 80088fc:	687b      	ldr	r3, [r7, #4]
 80088fe:	601a      	str	r2, [r3, #0]
 8008900:	4b05      	ldr	r3, [pc, #20]	; (8008918 <vTaskInternalSetTimeOutState+0x28>)
 8008902:	681a      	ldr	r2, [r3, #0]
 8008904:	687b      	ldr	r3, [r7, #4]
 8008906:	605a      	str	r2, [r3, #4]
 8008908:	bf00      	nop
 800890a:	370c      	adds	r7, #12
 800890c:	46bd      	mov	sp, r7
 800890e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008912:	4770      	bx	lr
 8008914:	200040b4 	.word	0x200040b4
 8008918:	200040a0 	.word	0x200040a0

0800891c <xTaskCheckForTimeOut>:
 800891c:	b580      	push	{r7, lr}
 800891e:	b088      	sub	sp, #32
 8008920:	af00      	add	r7, sp, #0
 8008922:	6078      	str	r0, [r7, #4]
 8008924:	6039      	str	r1, [r7, #0]
 8008926:	687b      	ldr	r3, [r7, #4]
 8008928:	2b00      	cmp	r3, #0
 800892a:	d10a      	bne.n	8008942 <xTaskCheckForTimeOut+0x26>
 800892c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008930:	f383 8811 	msr	BASEPRI, r3
 8008934:	f3bf 8f6f 	isb	sy
 8008938:	f3bf 8f4f 	dsb	sy
 800893c:	613b      	str	r3, [r7, #16]
 800893e:	bf00      	nop
 8008940:	e7fe      	b.n	8008940 <xTaskCheckForTimeOut+0x24>
 8008942:	683b      	ldr	r3, [r7, #0]
 8008944:	2b00      	cmp	r3, #0
 8008946:	d10a      	bne.n	800895e <xTaskCheckForTimeOut+0x42>
 8008948:	f04f 0350 	mov.w	r3, #80	; 0x50
 800894c:	f383 8811 	msr	BASEPRI, r3
 8008950:	f3bf 8f6f 	isb	sy
 8008954:	f3bf 8f4f 	dsb	sy
 8008958:	60fb      	str	r3, [r7, #12]
 800895a:	bf00      	nop
 800895c:	e7fe      	b.n	800895c <xTaskCheckForTimeOut+0x40>
 800895e:	f000 ff81 	bl	8009864 <vPortEnterCritical>
 8008962:	4b1d      	ldr	r3, [pc, #116]	; (80089d8 <xTaskCheckForTimeOut+0xbc>)
 8008964:	681b      	ldr	r3, [r3, #0]
 8008966:	61bb      	str	r3, [r7, #24]
 8008968:	687b      	ldr	r3, [r7, #4]
 800896a:	685b      	ldr	r3, [r3, #4]
 800896c:	69ba      	ldr	r2, [r7, #24]
 800896e:	1ad3      	subs	r3, r2, r3
 8008970:	617b      	str	r3, [r7, #20]
 8008972:	683b      	ldr	r3, [r7, #0]
 8008974:	681b      	ldr	r3, [r3, #0]
 8008976:	f1b3 3fff 	cmp.w	r3, #4294967295
 800897a:	d102      	bne.n	8008982 <xTaskCheckForTimeOut+0x66>
 800897c:	2300      	movs	r3, #0
 800897e:	61fb      	str	r3, [r7, #28]
 8008980:	e023      	b.n	80089ca <xTaskCheckForTimeOut+0xae>
 8008982:	687b      	ldr	r3, [r7, #4]
 8008984:	681a      	ldr	r2, [r3, #0]
 8008986:	4b15      	ldr	r3, [pc, #84]	; (80089dc <xTaskCheckForTimeOut+0xc0>)
 8008988:	681b      	ldr	r3, [r3, #0]
 800898a:	429a      	cmp	r2, r3
 800898c:	d007      	beq.n	800899e <xTaskCheckForTimeOut+0x82>
 800898e:	687b      	ldr	r3, [r7, #4]
 8008990:	685b      	ldr	r3, [r3, #4]
 8008992:	69ba      	ldr	r2, [r7, #24]
 8008994:	429a      	cmp	r2, r3
 8008996:	d302      	bcc.n	800899e <xTaskCheckForTimeOut+0x82>
 8008998:	2301      	movs	r3, #1
 800899a:	61fb      	str	r3, [r7, #28]
 800899c:	e015      	b.n	80089ca <xTaskCheckForTimeOut+0xae>
 800899e:	683b      	ldr	r3, [r7, #0]
 80089a0:	681b      	ldr	r3, [r3, #0]
 80089a2:	697a      	ldr	r2, [r7, #20]
 80089a4:	429a      	cmp	r2, r3
 80089a6:	d20b      	bcs.n	80089c0 <xTaskCheckForTimeOut+0xa4>
 80089a8:	683b      	ldr	r3, [r7, #0]
 80089aa:	681a      	ldr	r2, [r3, #0]
 80089ac:	697b      	ldr	r3, [r7, #20]
 80089ae:	1ad2      	subs	r2, r2, r3
 80089b0:	683b      	ldr	r3, [r7, #0]
 80089b2:	601a      	str	r2, [r3, #0]
 80089b4:	6878      	ldr	r0, [r7, #4]
 80089b6:	f7ff ff9b 	bl	80088f0 <vTaskInternalSetTimeOutState>
 80089ba:	2300      	movs	r3, #0
 80089bc:	61fb      	str	r3, [r7, #28]
 80089be:	e004      	b.n	80089ca <xTaskCheckForTimeOut+0xae>
 80089c0:	683b      	ldr	r3, [r7, #0]
 80089c2:	2200      	movs	r2, #0
 80089c4:	601a      	str	r2, [r3, #0]
 80089c6:	2301      	movs	r3, #1
 80089c8:	61fb      	str	r3, [r7, #28]
 80089ca:	f000 ff7b 	bl	80098c4 <vPortExitCritical>
 80089ce:	69fb      	ldr	r3, [r7, #28]
 80089d0:	4618      	mov	r0, r3
 80089d2:	3720      	adds	r7, #32
 80089d4:	46bd      	mov	sp, r7
 80089d6:	bd80      	pop	{r7, pc}
 80089d8:	200040a0 	.word	0x200040a0
 80089dc:	200040b4 	.word	0x200040b4

080089e0 <vTaskMissedYield>:
 80089e0:	b480      	push	{r7}
 80089e2:	af00      	add	r7, sp, #0
 80089e4:	4b03      	ldr	r3, [pc, #12]	; (80089f4 <vTaskMissedYield+0x14>)
 80089e6:	2201      	movs	r2, #1
 80089e8:	601a      	str	r2, [r3, #0]
 80089ea:	bf00      	nop
 80089ec:	46bd      	mov	sp, r7
 80089ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089f2:	4770      	bx	lr
 80089f4:	200040b0 	.word	0x200040b0

080089f8 <prvIdleTask>:
 80089f8:	b580      	push	{r7, lr}
 80089fa:	b082      	sub	sp, #8
 80089fc:	af00      	add	r7, sp, #0
 80089fe:	6078      	str	r0, [r7, #4]
 8008a00:	f000 f852 	bl	8008aa8 <prvCheckTasksWaitingTermination>
 8008a04:	4b06      	ldr	r3, [pc, #24]	; (8008a20 <prvIdleTask+0x28>)
 8008a06:	681b      	ldr	r3, [r3, #0]
 8008a08:	2b01      	cmp	r3, #1
 8008a0a:	d9f9      	bls.n	8008a00 <prvIdleTask+0x8>
 8008a0c:	4b05      	ldr	r3, [pc, #20]	; (8008a24 <prvIdleTask+0x2c>)
 8008a0e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008a12:	601a      	str	r2, [r3, #0]
 8008a14:	f3bf 8f4f 	dsb	sy
 8008a18:	f3bf 8f6f 	isb	sy
 8008a1c:	e7f0      	b.n	8008a00 <prvIdleTask+0x8>
 8008a1e:	bf00      	nop
 8008a20:	20003bcc 	.word	0x20003bcc
 8008a24:	e000ed04 	.word	0xe000ed04

08008a28 <prvInitialiseTaskLists>:
 8008a28:	b580      	push	{r7, lr}
 8008a2a:	b082      	sub	sp, #8
 8008a2c:	af00      	add	r7, sp, #0
 8008a2e:	2300      	movs	r3, #0
 8008a30:	607b      	str	r3, [r7, #4]
 8008a32:	e00c      	b.n	8008a4e <prvInitialiseTaskLists+0x26>
 8008a34:	687a      	ldr	r2, [r7, #4]
 8008a36:	4613      	mov	r3, r2
 8008a38:	009b      	lsls	r3, r3, #2
 8008a3a:	4413      	add	r3, r2
 8008a3c:	009b      	lsls	r3, r3, #2
 8008a3e:	4a12      	ldr	r2, [pc, #72]	; (8008a88 <prvInitialiseTaskLists+0x60>)
 8008a40:	4413      	add	r3, r2
 8008a42:	4618      	mov	r0, r3
 8008a44:	f7fe fb0e 	bl	8007064 <vListInitialise>
 8008a48:	687b      	ldr	r3, [r7, #4]
 8008a4a:	3301      	adds	r3, #1
 8008a4c:	607b      	str	r3, [r7, #4]
 8008a4e:	687b      	ldr	r3, [r7, #4]
 8008a50:	2b37      	cmp	r3, #55	; 0x37
 8008a52:	d9ef      	bls.n	8008a34 <prvInitialiseTaskLists+0xc>
 8008a54:	480d      	ldr	r0, [pc, #52]	; (8008a8c <prvInitialiseTaskLists+0x64>)
 8008a56:	f7fe fb05 	bl	8007064 <vListInitialise>
 8008a5a:	480d      	ldr	r0, [pc, #52]	; (8008a90 <prvInitialiseTaskLists+0x68>)
 8008a5c:	f7fe fb02 	bl	8007064 <vListInitialise>
 8008a60:	480c      	ldr	r0, [pc, #48]	; (8008a94 <prvInitialiseTaskLists+0x6c>)
 8008a62:	f7fe faff 	bl	8007064 <vListInitialise>
 8008a66:	480c      	ldr	r0, [pc, #48]	; (8008a98 <prvInitialiseTaskLists+0x70>)
 8008a68:	f7fe fafc 	bl	8007064 <vListInitialise>
 8008a6c:	480b      	ldr	r0, [pc, #44]	; (8008a9c <prvInitialiseTaskLists+0x74>)
 8008a6e:	f7fe faf9 	bl	8007064 <vListInitialise>
 8008a72:	4b0b      	ldr	r3, [pc, #44]	; (8008aa0 <prvInitialiseTaskLists+0x78>)
 8008a74:	4a05      	ldr	r2, [pc, #20]	; (8008a8c <prvInitialiseTaskLists+0x64>)
 8008a76:	601a      	str	r2, [r3, #0]
 8008a78:	4b0a      	ldr	r3, [pc, #40]	; (8008aa4 <prvInitialiseTaskLists+0x7c>)
 8008a7a:	4a05      	ldr	r2, [pc, #20]	; (8008a90 <prvInitialiseTaskLists+0x68>)
 8008a7c:	601a      	str	r2, [r3, #0]
 8008a7e:	bf00      	nop
 8008a80:	3708      	adds	r7, #8
 8008a82:	46bd      	mov	sp, r7
 8008a84:	bd80      	pop	{r7, pc}
 8008a86:	bf00      	nop
 8008a88:	20003bcc 	.word	0x20003bcc
 8008a8c:	2000402c 	.word	0x2000402c
 8008a90:	20004040 	.word	0x20004040
 8008a94:	2000405c 	.word	0x2000405c
 8008a98:	20004070 	.word	0x20004070
 8008a9c:	20004088 	.word	0x20004088
 8008aa0:	20004054 	.word	0x20004054
 8008aa4:	20004058 	.word	0x20004058

08008aa8 <prvCheckTasksWaitingTermination>:
 8008aa8:	b580      	push	{r7, lr}
 8008aaa:	b082      	sub	sp, #8
 8008aac:	af00      	add	r7, sp, #0
 8008aae:	e019      	b.n	8008ae4 <prvCheckTasksWaitingTermination+0x3c>
 8008ab0:	f000 fed8 	bl	8009864 <vPortEnterCritical>
 8008ab4:	4b10      	ldr	r3, [pc, #64]	; (8008af8 <prvCheckTasksWaitingTermination+0x50>)
 8008ab6:	68db      	ldr	r3, [r3, #12]
 8008ab8:	68db      	ldr	r3, [r3, #12]
 8008aba:	607b      	str	r3, [r7, #4]
 8008abc:	687b      	ldr	r3, [r7, #4]
 8008abe:	3304      	adds	r3, #4
 8008ac0:	4618      	mov	r0, r3
 8008ac2:	f7fe fb59 	bl	8007178 <uxListRemove>
 8008ac6:	4b0d      	ldr	r3, [pc, #52]	; (8008afc <prvCheckTasksWaitingTermination+0x54>)
 8008ac8:	681b      	ldr	r3, [r3, #0]
 8008aca:	3b01      	subs	r3, #1
 8008acc:	4a0b      	ldr	r2, [pc, #44]	; (8008afc <prvCheckTasksWaitingTermination+0x54>)
 8008ace:	6013      	str	r3, [r2, #0]
 8008ad0:	4b0b      	ldr	r3, [pc, #44]	; (8008b00 <prvCheckTasksWaitingTermination+0x58>)
 8008ad2:	681b      	ldr	r3, [r3, #0]
 8008ad4:	3b01      	subs	r3, #1
 8008ad6:	4a0a      	ldr	r2, [pc, #40]	; (8008b00 <prvCheckTasksWaitingTermination+0x58>)
 8008ad8:	6013      	str	r3, [r2, #0]
 8008ada:	f000 fef3 	bl	80098c4 <vPortExitCritical>
 8008ade:	6878      	ldr	r0, [r7, #4]
 8008ae0:	f000 f810 	bl	8008b04 <prvDeleteTCB>
 8008ae4:	4b06      	ldr	r3, [pc, #24]	; (8008b00 <prvCheckTasksWaitingTermination+0x58>)
 8008ae6:	681b      	ldr	r3, [r3, #0]
 8008ae8:	2b00      	cmp	r3, #0
 8008aea:	d1e1      	bne.n	8008ab0 <prvCheckTasksWaitingTermination+0x8>
 8008aec:	bf00      	nop
 8008aee:	bf00      	nop
 8008af0:	3708      	adds	r7, #8
 8008af2:	46bd      	mov	sp, r7
 8008af4:	bd80      	pop	{r7, pc}
 8008af6:	bf00      	nop
 8008af8:	20004070 	.word	0x20004070
 8008afc:	2000409c 	.word	0x2000409c
 8008b00:	20004084 	.word	0x20004084

08008b04 <prvDeleteTCB>:
 8008b04:	b580      	push	{r7, lr}
 8008b06:	b084      	sub	sp, #16
 8008b08:	af00      	add	r7, sp, #0
 8008b0a:	6078      	str	r0, [r7, #4]
 8008b0c:	687b      	ldr	r3, [r7, #4]
 8008b0e:	3358      	adds	r3, #88	; 0x58
 8008b10:	4618      	mov	r0, r3
 8008b12:	f002 f8c1 	bl	800ac98 <_reclaim_reent>
 8008b16:	687b      	ldr	r3, [r7, #4]
 8008b18:	f893 3485 	ldrb.w	r3, [r3, #1157]	; 0x485
 8008b1c:	2b00      	cmp	r3, #0
 8008b1e:	d108      	bne.n	8008b32 <prvDeleteTCB+0x2e>
 8008b20:	687b      	ldr	r3, [r7, #4]
 8008b22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008b24:	4618      	mov	r0, r3
 8008b26:	f001 f88b 	bl	8009c40 <vPortFree>
 8008b2a:	6878      	ldr	r0, [r7, #4]
 8008b2c:	f001 f888 	bl	8009c40 <vPortFree>
 8008b30:	e018      	b.n	8008b64 <prvDeleteTCB+0x60>
 8008b32:	687b      	ldr	r3, [r7, #4]
 8008b34:	f893 3485 	ldrb.w	r3, [r3, #1157]	; 0x485
 8008b38:	2b01      	cmp	r3, #1
 8008b3a:	d103      	bne.n	8008b44 <prvDeleteTCB+0x40>
 8008b3c:	6878      	ldr	r0, [r7, #4]
 8008b3e:	f001 f87f 	bl	8009c40 <vPortFree>
 8008b42:	e00f      	b.n	8008b64 <prvDeleteTCB+0x60>
 8008b44:	687b      	ldr	r3, [r7, #4]
 8008b46:	f893 3485 	ldrb.w	r3, [r3, #1157]	; 0x485
 8008b4a:	2b02      	cmp	r3, #2
 8008b4c:	d00a      	beq.n	8008b64 <prvDeleteTCB+0x60>
 8008b4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b52:	f383 8811 	msr	BASEPRI, r3
 8008b56:	f3bf 8f6f 	isb	sy
 8008b5a:	f3bf 8f4f 	dsb	sy
 8008b5e:	60fb      	str	r3, [r7, #12]
 8008b60:	bf00      	nop
 8008b62:	e7fe      	b.n	8008b62 <prvDeleteTCB+0x5e>
 8008b64:	bf00      	nop
 8008b66:	3710      	adds	r7, #16
 8008b68:	46bd      	mov	sp, r7
 8008b6a:	bd80      	pop	{r7, pc}

08008b6c <prvResetNextTaskUnblockTime>:
 8008b6c:	b480      	push	{r7}
 8008b6e:	b083      	sub	sp, #12
 8008b70:	af00      	add	r7, sp, #0
 8008b72:	4b0c      	ldr	r3, [pc, #48]	; (8008ba4 <prvResetNextTaskUnblockTime+0x38>)
 8008b74:	681b      	ldr	r3, [r3, #0]
 8008b76:	681b      	ldr	r3, [r3, #0]
 8008b78:	2b00      	cmp	r3, #0
 8008b7a:	d104      	bne.n	8008b86 <prvResetNextTaskUnblockTime+0x1a>
 8008b7c:	4b0a      	ldr	r3, [pc, #40]	; (8008ba8 <prvResetNextTaskUnblockTime+0x3c>)
 8008b7e:	f04f 32ff 	mov.w	r2, #4294967295
 8008b82:	601a      	str	r2, [r3, #0]
 8008b84:	e008      	b.n	8008b98 <prvResetNextTaskUnblockTime+0x2c>
 8008b86:	4b07      	ldr	r3, [pc, #28]	; (8008ba4 <prvResetNextTaskUnblockTime+0x38>)
 8008b88:	681b      	ldr	r3, [r3, #0]
 8008b8a:	68db      	ldr	r3, [r3, #12]
 8008b8c:	68db      	ldr	r3, [r3, #12]
 8008b8e:	607b      	str	r3, [r7, #4]
 8008b90:	687b      	ldr	r3, [r7, #4]
 8008b92:	685b      	ldr	r3, [r3, #4]
 8008b94:	4a04      	ldr	r2, [pc, #16]	; (8008ba8 <prvResetNextTaskUnblockTime+0x3c>)
 8008b96:	6013      	str	r3, [r2, #0]
 8008b98:	bf00      	nop
 8008b9a:	370c      	adds	r7, #12
 8008b9c:	46bd      	mov	sp, r7
 8008b9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ba2:	4770      	bx	lr
 8008ba4:	20004054 	.word	0x20004054
 8008ba8:	200040bc 	.word	0x200040bc

08008bac <xTaskGetSchedulerState>:
 8008bac:	b480      	push	{r7}
 8008bae:	b083      	sub	sp, #12
 8008bb0:	af00      	add	r7, sp, #0
 8008bb2:	4b0b      	ldr	r3, [pc, #44]	; (8008be0 <xTaskGetSchedulerState+0x34>)
 8008bb4:	681b      	ldr	r3, [r3, #0]
 8008bb6:	2b00      	cmp	r3, #0
 8008bb8:	d102      	bne.n	8008bc0 <xTaskGetSchedulerState+0x14>
 8008bba:	2301      	movs	r3, #1
 8008bbc:	607b      	str	r3, [r7, #4]
 8008bbe:	e008      	b.n	8008bd2 <xTaskGetSchedulerState+0x26>
 8008bc0:	4b08      	ldr	r3, [pc, #32]	; (8008be4 <xTaskGetSchedulerState+0x38>)
 8008bc2:	681b      	ldr	r3, [r3, #0]
 8008bc4:	2b00      	cmp	r3, #0
 8008bc6:	d102      	bne.n	8008bce <xTaskGetSchedulerState+0x22>
 8008bc8:	2302      	movs	r3, #2
 8008bca:	607b      	str	r3, [r7, #4]
 8008bcc:	e001      	b.n	8008bd2 <xTaskGetSchedulerState+0x26>
 8008bce:	2300      	movs	r3, #0
 8008bd0:	607b      	str	r3, [r7, #4]
 8008bd2:	687b      	ldr	r3, [r7, #4]
 8008bd4:	4618      	mov	r0, r3
 8008bd6:	370c      	adds	r7, #12
 8008bd8:	46bd      	mov	sp, r7
 8008bda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bde:	4770      	bx	lr
 8008be0:	200040a8 	.word	0x200040a8
 8008be4:	200040c4 	.word	0x200040c4

08008be8 <xTaskPriorityInherit>:
 8008be8:	b580      	push	{r7, lr}
 8008bea:	b084      	sub	sp, #16
 8008bec:	af00      	add	r7, sp, #0
 8008bee:	6078      	str	r0, [r7, #4]
 8008bf0:	687b      	ldr	r3, [r7, #4]
 8008bf2:	60bb      	str	r3, [r7, #8]
 8008bf4:	2300      	movs	r3, #0
 8008bf6:	60fb      	str	r3, [r7, #12]
 8008bf8:	687b      	ldr	r3, [r7, #4]
 8008bfa:	2b00      	cmp	r3, #0
 8008bfc:	d051      	beq.n	8008ca2 <xTaskPriorityInherit+0xba>
 8008bfe:	68bb      	ldr	r3, [r7, #8]
 8008c00:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008c02:	4b2a      	ldr	r3, [pc, #168]	; (8008cac <xTaskPriorityInherit+0xc4>)
 8008c04:	681b      	ldr	r3, [r3, #0]
 8008c06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008c08:	429a      	cmp	r2, r3
 8008c0a:	d241      	bcs.n	8008c90 <xTaskPriorityInherit+0xa8>
 8008c0c:	68bb      	ldr	r3, [r7, #8]
 8008c0e:	699b      	ldr	r3, [r3, #24]
 8008c10:	2b00      	cmp	r3, #0
 8008c12:	db06      	blt.n	8008c22 <xTaskPriorityInherit+0x3a>
 8008c14:	4b25      	ldr	r3, [pc, #148]	; (8008cac <xTaskPriorityInherit+0xc4>)
 8008c16:	681b      	ldr	r3, [r3, #0]
 8008c18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008c1a:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8008c1e:	68bb      	ldr	r3, [r7, #8]
 8008c20:	619a      	str	r2, [r3, #24]
 8008c22:	68bb      	ldr	r3, [r7, #8]
 8008c24:	6959      	ldr	r1, [r3, #20]
 8008c26:	68bb      	ldr	r3, [r7, #8]
 8008c28:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008c2a:	4613      	mov	r3, r2
 8008c2c:	009b      	lsls	r3, r3, #2
 8008c2e:	4413      	add	r3, r2
 8008c30:	009b      	lsls	r3, r3, #2
 8008c32:	4a1f      	ldr	r2, [pc, #124]	; (8008cb0 <xTaskPriorityInherit+0xc8>)
 8008c34:	4413      	add	r3, r2
 8008c36:	4299      	cmp	r1, r3
 8008c38:	d122      	bne.n	8008c80 <xTaskPriorityInherit+0x98>
 8008c3a:	68bb      	ldr	r3, [r7, #8]
 8008c3c:	3304      	adds	r3, #4
 8008c3e:	4618      	mov	r0, r3
 8008c40:	f7fe fa9a 	bl	8007178 <uxListRemove>
 8008c44:	4b19      	ldr	r3, [pc, #100]	; (8008cac <xTaskPriorityInherit+0xc4>)
 8008c46:	681b      	ldr	r3, [r3, #0]
 8008c48:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008c4a:	68bb      	ldr	r3, [r7, #8]
 8008c4c:	62da      	str	r2, [r3, #44]	; 0x2c
 8008c4e:	68bb      	ldr	r3, [r7, #8]
 8008c50:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008c52:	4b18      	ldr	r3, [pc, #96]	; (8008cb4 <xTaskPriorityInherit+0xcc>)
 8008c54:	681b      	ldr	r3, [r3, #0]
 8008c56:	429a      	cmp	r2, r3
 8008c58:	d903      	bls.n	8008c62 <xTaskPriorityInherit+0x7a>
 8008c5a:	68bb      	ldr	r3, [r7, #8]
 8008c5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008c5e:	4a15      	ldr	r2, [pc, #84]	; (8008cb4 <xTaskPriorityInherit+0xcc>)
 8008c60:	6013      	str	r3, [r2, #0]
 8008c62:	68bb      	ldr	r3, [r7, #8]
 8008c64:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008c66:	4613      	mov	r3, r2
 8008c68:	009b      	lsls	r3, r3, #2
 8008c6a:	4413      	add	r3, r2
 8008c6c:	009b      	lsls	r3, r3, #2
 8008c6e:	4a10      	ldr	r2, [pc, #64]	; (8008cb0 <xTaskPriorityInherit+0xc8>)
 8008c70:	441a      	add	r2, r3
 8008c72:	68bb      	ldr	r3, [r7, #8]
 8008c74:	3304      	adds	r3, #4
 8008c76:	4619      	mov	r1, r3
 8008c78:	4610      	mov	r0, r2
 8008c7a:	f7fe fa20 	bl	80070be <vListInsertEnd>
 8008c7e:	e004      	b.n	8008c8a <xTaskPriorityInherit+0xa2>
 8008c80:	4b0a      	ldr	r3, [pc, #40]	; (8008cac <xTaskPriorityInherit+0xc4>)
 8008c82:	681b      	ldr	r3, [r3, #0]
 8008c84:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008c86:	68bb      	ldr	r3, [r7, #8]
 8008c88:	62da      	str	r2, [r3, #44]	; 0x2c
 8008c8a:	2301      	movs	r3, #1
 8008c8c:	60fb      	str	r3, [r7, #12]
 8008c8e:	e008      	b.n	8008ca2 <xTaskPriorityInherit+0xba>
 8008c90:	68bb      	ldr	r3, [r7, #8]
 8008c92:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8008c94:	4b05      	ldr	r3, [pc, #20]	; (8008cac <xTaskPriorityInherit+0xc4>)
 8008c96:	681b      	ldr	r3, [r3, #0]
 8008c98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008c9a:	429a      	cmp	r2, r3
 8008c9c:	d201      	bcs.n	8008ca2 <xTaskPriorityInherit+0xba>
 8008c9e:	2301      	movs	r3, #1
 8008ca0:	60fb      	str	r3, [r7, #12]
 8008ca2:	68fb      	ldr	r3, [r7, #12]
 8008ca4:	4618      	mov	r0, r3
 8008ca6:	3710      	adds	r7, #16
 8008ca8:	46bd      	mov	sp, r7
 8008caa:	bd80      	pop	{r7, pc}
 8008cac:	20003bc8 	.word	0x20003bc8
 8008cb0:	20003bcc 	.word	0x20003bcc
 8008cb4:	200040a4 	.word	0x200040a4

08008cb8 <xTaskPriorityDisinherit>:
 8008cb8:	b580      	push	{r7, lr}
 8008cba:	b086      	sub	sp, #24
 8008cbc:	af00      	add	r7, sp, #0
 8008cbe:	6078      	str	r0, [r7, #4]
 8008cc0:	687b      	ldr	r3, [r7, #4]
 8008cc2:	613b      	str	r3, [r7, #16]
 8008cc4:	2300      	movs	r3, #0
 8008cc6:	617b      	str	r3, [r7, #20]
 8008cc8:	687b      	ldr	r3, [r7, #4]
 8008cca:	2b00      	cmp	r3, #0
 8008ccc:	d056      	beq.n	8008d7c <xTaskPriorityDisinherit+0xc4>
 8008cce:	4b2e      	ldr	r3, [pc, #184]	; (8008d88 <xTaskPriorityDisinherit+0xd0>)
 8008cd0:	681b      	ldr	r3, [r3, #0]
 8008cd2:	693a      	ldr	r2, [r7, #16]
 8008cd4:	429a      	cmp	r2, r3
 8008cd6:	d00a      	beq.n	8008cee <xTaskPriorityDisinherit+0x36>
 8008cd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cdc:	f383 8811 	msr	BASEPRI, r3
 8008ce0:	f3bf 8f6f 	isb	sy
 8008ce4:	f3bf 8f4f 	dsb	sy
 8008ce8:	60fb      	str	r3, [r7, #12]
 8008cea:	bf00      	nop
 8008cec:	e7fe      	b.n	8008cec <xTaskPriorityDisinherit+0x34>
 8008cee:	693b      	ldr	r3, [r7, #16]
 8008cf0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008cf2:	2b00      	cmp	r3, #0
 8008cf4:	d10a      	bne.n	8008d0c <xTaskPriorityDisinherit+0x54>
 8008cf6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cfa:	f383 8811 	msr	BASEPRI, r3
 8008cfe:	f3bf 8f6f 	isb	sy
 8008d02:	f3bf 8f4f 	dsb	sy
 8008d06:	60bb      	str	r3, [r7, #8]
 8008d08:	bf00      	nop
 8008d0a:	e7fe      	b.n	8008d0a <xTaskPriorityDisinherit+0x52>
 8008d0c:	693b      	ldr	r3, [r7, #16]
 8008d0e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008d10:	1e5a      	subs	r2, r3, #1
 8008d12:	693b      	ldr	r3, [r7, #16]
 8008d14:	651a      	str	r2, [r3, #80]	; 0x50
 8008d16:	693b      	ldr	r3, [r7, #16]
 8008d18:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008d1a:	693b      	ldr	r3, [r7, #16]
 8008d1c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008d1e:	429a      	cmp	r2, r3
 8008d20:	d02c      	beq.n	8008d7c <xTaskPriorityDisinherit+0xc4>
 8008d22:	693b      	ldr	r3, [r7, #16]
 8008d24:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008d26:	2b00      	cmp	r3, #0
 8008d28:	d128      	bne.n	8008d7c <xTaskPriorityDisinherit+0xc4>
 8008d2a:	693b      	ldr	r3, [r7, #16]
 8008d2c:	3304      	adds	r3, #4
 8008d2e:	4618      	mov	r0, r3
 8008d30:	f7fe fa22 	bl	8007178 <uxListRemove>
 8008d34:	693b      	ldr	r3, [r7, #16]
 8008d36:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8008d38:	693b      	ldr	r3, [r7, #16]
 8008d3a:	62da      	str	r2, [r3, #44]	; 0x2c
 8008d3c:	693b      	ldr	r3, [r7, #16]
 8008d3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d40:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8008d44:	693b      	ldr	r3, [r7, #16]
 8008d46:	619a      	str	r2, [r3, #24]
 8008d48:	693b      	ldr	r3, [r7, #16]
 8008d4a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008d4c:	4b0f      	ldr	r3, [pc, #60]	; (8008d8c <xTaskPriorityDisinherit+0xd4>)
 8008d4e:	681b      	ldr	r3, [r3, #0]
 8008d50:	429a      	cmp	r2, r3
 8008d52:	d903      	bls.n	8008d5c <xTaskPriorityDisinherit+0xa4>
 8008d54:	693b      	ldr	r3, [r7, #16]
 8008d56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d58:	4a0c      	ldr	r2, [pc, #48]	; (8008d8c <xTaskPriorityDisinherit+0xd4>)
 8008d5a:	6013      	str	r3, [r2, #0]
 8008d5c:	693b      	ldr	r3, [r7, #16]
 8008d5e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008d60:	4613      	mov	r3, r2
 8008d62:	009b      	lsls	r3, r3, #2
 8008d64:	4413      	add	r3, r2
 8008d66:	009b      	lsls	r3, r3, #2
 8008d68:	4a09      	ldr	r2, [pc, #36]	; (8008d90 <xTaskPriorityDisinherit+0xd8>)
 8008d6a:	441a      	add	r2, r3
 8008d6c:	693b      	ldr	r3, [r7, #16]
 8008d6e:	3304      	adds	r3, #4
 8008d70:	4619      	mov	r1, r3
 8008d72:	4610      	mov	r0, r2
 8008d74:	f7fe f9a3 	bl	80070be <vListInsertEnd>
 8008d78:	2301      	movs	r3, #1
 8008d7a:	617b      	str	r3, [r7, #20]
 8008d7c:	697b      	ldr	r3, [r7, #20]
 8008d7e:	4618      	mov	r0, r3
 8008d80:	3718      	adds	r7, #24
 8008d82:	46bd      	mov	sp, r7
 8008d84:	bd80      	pop	{r7, pc}
 8008d86:	bf00      	nop
 8008d88:	20003bc8 	.word	0x20003bc8
 8008d8c:	200040a4 	.word	0x200040a4
 8008d90:	20003bcc 	.word	0x20003bcc

08008d94 <vTaskPriorityDisinheritAfterTimeout>:
 8008d94:	b580      	push	{r7, lr}
 8008d96:	b088      	sub	sp, #32
 8008d98:	af00      	add	r7, sp, #0
 8008d9a:	6078      	str	r0, [r7, #4]
 8008d9c:	6039      	str	r1, [r7, #0]
 8008d9e:	687b      	ldr	r3, [r7, #4]
 8008da0:	61bb      	str	r3, [r7, #24]
 8008da2:	2301      	movs	r3, #1
 8008da4:	617b      	str	r3, [r7, #20]
 8008da6:	687b      	ldr	r3, [r7, #4]
 8008da8:	2b00      	cmp	r3, #0
 8008daa:	d06a      	beq.n	8008e82 <vTaskPriorityDisinheritAfterTimeout+0xee>
 8008dac:	69bb      	ldr	r3, [r7, #24]
 8008dae:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008db0:	2b00      	cmp	r3, #0
 8008db2:	d10a      	bne.n	8008dca <vTaskPriorityDisinheritAfterTimeout+0x36>
 8008db4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008db8:	f383 8811 	msr	BASEPRI, r3
 8008dbc:	f3bf 8f6f 	isb	sy
 8008dc0:	f3bf 8f4f 	dsb	sy
 8008dc4:	60fb      	str	r3, [r7, #12]
 8008dc6:	bf00      	nop
 8008dc8:	e7fe      	b.n	8008dc8 <vTaskPriorityDisinheritAfterTimeout+0x34>
 8008dca:	69bb      	ldr	r3, [r7, #24]
 8008dcc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008dce:	683a      	ldr	r2, [r7, #0]
 8008dd0:	429a      	cmp	r2, r3
 8008dd2:	d902      	bls.n	8008dda <vTaskPriorityDisinheritAfterTimeout+0x46>
 8008dd4:	683b      	ldr	r3, [r7, #0]
 8008dd6:	61fb      	str	r3, [r7, #28]
 8008dd8:	e002      	b.n	8008de0 <vTaskPriorityDisinheritAfterTimeout+0x4c>
 8008dda:	69bb      	ldr	r3, [r7, #24]
 8008ddc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008dde:	61fb      	str	r3, [r7, #28]
 8008de0:	69bb      	ldr	r3, [r7, #24]
 8008de2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008de4:	69fa      	ldr	r2, [r7, #28]
 8008de6:	429a      	cmp	r2, r3
 8008de8:	d04b      	beq.n	8008e82 <vTaskPriorityDisinheritAfterTimeout+0xee>
 8008dea:	69bb      	ldr	r3, [r7, #24]
 8008dec:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008dee:	697a      	ldr	r2, [r7, #20]
 8008df0:	429a      	cmp	r2, r3
 8008df2:	d146      	bne.n	8008e82 <vTaskPriorityDisinheritAfterTimeout+0xee>
 8008df4:	4b25      	ldr	r3, [pc, #148]	; (8008e8c <vTaskPriorityDisinheritAfterTimeout+0xf8>)
 8008df6:	681b      	ldr	r3, [r3, #0]
 8008df8:	69ba      	ldr	r2, [r7, #24]
 8008dfa:	429a      	cmp	r2, r3
 8008dfc:	d10a      	bne.n	8008e14 <vTaskPriorityDisinheritAfterTimeout+0x80>
 8008dfe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e02:	f383 8811 	msr	BASEPRI, r3
 8008e06:	f3bf 8f6f 	isb	sy
 8008e0a:	f3bf 8f4f 	dsb	sy
 8008e0e:	60bb      	str	r3, [r7, #8]
 8008e10:	bf00      	nop
 8008e12:	e7fe      	b.n	8008e12 <vTaskPriorityDisinheritAfterTimeout+0x7e>
 8008e14:	69bb      	ldr	r3, [r7, #24]
 8008e16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e18:	613b      	str	r3, [r7, #16]
 8008e1a:	69bb      	ldr	r3, [r7, #24]
 8008e1c:	69fa      	ldr	r2, [r7, #28]
 8008e1e:	62da      	str	r2, [r3, #44]	; 0x2c
 8008e20:	69bb      	ldr	r3, [r7, #24]
 8008e22:	699b      	ldr	r3, [r3, #24]
 8008e24:	2b00      	cmp	r3, #0
 8008e26:	db04      	blt.n	8008e32 <vTaskPriorityDisinheritAfterTimeout+0x9e>
 8008e28:	69fb      	ldr	r3, [r7, #28]
 8008e2a:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8008e2e:	69bb      	ldr	r3, [r7, #24]
 8008e30:	619a      	str	r2, [r3, #24]
 8008e32:	69bb      	ldr	r3, [r7, #24]
 8008e34:	6959      	ldr	r1, [r3, #20]
 8008e36:	693a      	ldr	r2, [r7, #16]
 8008e38:	4613      	mov	r3, r2
 8008e3a:	009b      	lsls	r3, r3, #2
 8008e3c:	4413      	add	r3, r2
 8008e3e:	009b      	lsls	r3, r3, #2
 8008e40:	4a13      	ldr	r2, [pc, #76]	; (8008e90 <vTaskPriorityDisinheritAfterTimeout+0xfc>)
 8008e42:	4413      	add	r3, r2
 8008e44:	4299      	cmp	r1, r3
 8008e46:	d11c      	bne.n	8008e82 <vTaskPriorityDisinheritAfterTimeout+0xee>
 8008e48:	69bb      	ldr	r3, [r7, #24]
 8008e4a:	3304      	adds	r3, #4
 8008e4c:	4618      	mov	r0, r3
 8008e4e:	f7fe f993 	bl	8007178 <uxListRemove>
 8008e52:	69bb      	ldr	r3, [r7, #24]
 8008e54:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008e56:	4b0f      	ldr	r3, [pc, #60]	; (8008e94 <vTaskPriorityDisinheritAfterTimeout+0x100>)
 8008e58:	681b      	ldr	r3, [r3, #0]
 8008e5a:	429a      	cmp	r2, r3
 8008e5c:	d903      	bls.n	8008e66 <vTaskPriorityDisinheritAfterTimeout+0xd2>
 8008e5e:	69bb      	ldr	r3, [r7, #24]
 8008e60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e62:	4a0c      	ldr	r2, [pc, #48]	; (8008e94 <vTaskPriorityDisinheritAfterTimeout+0x100>)
 8008e64:	6013      	str	r3, [r2, #0]
 8008e66:	69bb      	ldr	r3, [r7, #24]
 8008e68:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008e6a:	4613      	mov	r3, r2
 8008e6c:	009b      	lsls	r3, r3, #2
 8008e6e:	4413      	add	r3, r2
 8008e70:	009b      	lsls	r3, r3, #2
 8008e72:	4a07      	ldr	r2, [pc, #28]	; (8008e90 <vTaskPriorityDisinheritAfterTimeout+0xfc>)
 8008e74:	441a      	add	r2, r3
 8008e76:	69bb      	ldr	r3, [r7, #24]
 8008e78:	3304      	adds	r3, #4
 8008e7a:	4619      	mov	r1, r3
 8008e7c:	4610      	mov	r0, r2
 8008e7e:	f7fe f91e 	bl	80070be <vListInsertEnd>
 8008e82:	bf00      	nop
 8008e84:	3720      	adds	r7, #32
 8008e86:	46bd      	mov	sp, r7
 8008e88:	bd80      	pop	{r7, pc}
 8008e8a:	bf00      	nop
 8008e8c:	20003bc8 	.word	0x20003bc8
 8008e90:	20003bcc 	.word	0x20003bcc
 8008e94:	200040a4 	.word	0x200040a4

08008e98 <pvTaskIncrementMutexHeldCount>:
 8008e98:	b480      	push	{r7}
 8008e9a:	af00      	add	r7, sp, #0
 8008e9c:	4b07      	ldr	r3, [pc, #28]	; (8008ebc <pvTaskIncrementMutexHeldCount+0x24>)
 8008e9e:	681b      	ldr	r3, [r3, #0]
 8008ea0:	2b00      	cmp	r3, #0
 8008ea2:	d004      	beq.n	8008eae <pvTaskIncrementMutexHeldCount+0x16>
 8008ea4:	4b05      	ldr	r3, [pc, #20]	; (8008ebc <pvTaskIncrementMutexHeldCount+0x24>)
 8008ea6:	681b      	ldr	r3, [r3, #0]
 8008ea8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8008eaa:	3201      	adds	r2, #1
 8008eac:	651a      	str	r2, [r3, #80]	; 0x50
 8008eae:	4b03      	ldr	r3, [pc, #12]	; (8008ebc <pvTaskIncrementMutexHeldCount+0x24>)
 8008eb0:	681b      	ldr	r3, [r3, #0]
 8008eb2:	4618      	mov	r0, r3
 8008eb4:	46bd      	mov	sp, r7
 8008eb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008eba:	4770      	bx	lr
 8008ebc:	20003bc8 	.word	0x20003bc8

08008ec0 <prvAddCurrentTaskToDelayedList>:
 8008ec0:	b580      	push	{r7, lr}
 8008ec2:	b084      	sub	sp, #16
 8008ec4:	af00      	add	r7, sp, #0
 8008ec6:	6078      	str	r0, [r7, #4]
 8008ec8:	6039      	str	r1, [r7, #0]
 8008eca:	4b21      	ldr	r3, [pc, #132]	; (8008f50 <prvAddCurrentTaskToDelayedList+0x90>)
 8008ecc:	681b      	ldr	r3, [r3, #0]
 8008ece:	60fb      	str	r3, [r7, #12]
 8008ed0:	4b20      	ldr	r3, [pc, #128]	; (8008f54 <prvAddCurrentTaskToDelayedList+0x94>)
 8008ed2:	681b      	ldr	r3, [r3, #0]
 8008ed4:	3304      	adds	r3, #4
 8008ed6:	4618      	mov	r0, r3
 8008ed8:	f7fe f94e 	bl	8007178 <uxListRemove>
 8008edc:	687b      	ldr	r3, [r7, #4]
 8008ede:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008ee2:	d10a      	bne.n	8008efa <prvAddCurrentTaskToDelayedList+0x3a>
 8008ee4:	683b      	ldr	r3, [r7, #0]
 8008ee6:	2b00      	cmp	r3, #0
 8008ee8:	d007      	beq.n	8008efa <prvAddCurrentTaskToDelayedList+0x3a>
 8008eea:	4b1a      	ldr	r3, [pc, #104]	; (8008f54 <prvAddCurrentTaskToDelayedList+0x94>)
 8008eec:	681b      	ldr	r3, [r3, #0]
 8008eee:	3304      	adds	r3, #4
 8008ef0:	4619      	mov	r1, r3
 8008ef2:	4819      	ldr	r0, [pc, #100]	; (8008f58 <prvAddCurrentTaskToDelayedList+0x98>)
 8008ef4:	f7fe f8e3 	bl	80070be <vListInsertEnd>
 8008ef8:	e026      	b.n	8008f48 <prvAddCurrentTaskToDelayedList+0x88>
 8008efa:	68fa      	ldr	r2, [r7, #12]
 8008efc:	687b      	ldr	r3, [r7, #4]
 8008efe:	4413      	add	r3, r2
 8008f00:	60bb      	str	r3, [r7, #8]
 8008f02:	4b14      	ldr	r3, [pc, #80]	; (8008f54 <prvAddCurrentTaskToDelayedList+0x94>)
 8008f04:	681b      	ldr	r3, [r3, #0]
 8008f06:	68ba      	ldr	r2, [r7, #8]
 8008f08:	605a      	str	r2, [r3, #4]
 8008f0a:	68ba      	ldr	r2, [r7, #8]
 8008f0c:	68fb      	ldr	r3, [r7, #12]
 8008f0e:	429a      	cmp	r2, r3
 8008f10:	d209      	bcs.n	8008f26 <prvAddCurrentTaskToDelayedList+0x66>
 8008f12:	4b12      	ldr	r3, [pc, #72]	; (8008f5c <prvAddCurrentTaskToDelayedList+0x9c>)
 8008f14:	681a      	ldr	r2, [r3, #0]
 8008f16:	4b0f      	ldr	r3, [pc, #60]	; (8008f54 <prvAddCurrentTaskToDelayedList+0x94>)
 8008f18:	681b      	ldr	r3, [r3, #0]
 8008f1a:	3304      	adds	r3, #4
 8008f1c:	4619      	mov	r1, r3
 8008f1e:	4610      	mov	r0, r2
 8008f20:	f7fe f8f1 	bl	8007106 <vListInsert>
 8008f24:	e010      	b.n	8008f48 <prvAddCurrentTaskToDelayedList+0x88>
 8008f26:	4b0e      	ldr	r3, [pc, #56]	; (8008f60 <prvAddCurrentTaskToDelayedList+0xa0>)
 8008f28:	681a      	ldr	r2, [r3, #0]
 8008f2a:	4b0a      	ldr	r3, [pc, #40]	; (8008f54 <prvAddCurrentTaskToDelayedList+0x94>)
 8008f2c:	681b      	ldr	r3, [r3, #0]
 8008f2e:	3304      	adds	r3, #4
 8008f30:	4619      	mov	r1, r3
 8008f32:	4610      	mov	r0, r2
 8008f34:	f7fe f8e7 	bl	8007106 <vListInsert>
 8008f38:	4b0a      	ldr	r3, [pc, #40]	; (8008f64 <prvAddCurrentTaskToDelayedList+0xa4>)
 8008f3a:	681b      	ldr	r3, [r3, #0]
 8008f3c:	68ba      	ldr	r2, [r7, #8]
 8008f3e:	429a      	cmp	r2, r3
 8008f40:	d202      	bcs.n	8008f48 <prvAddCurrentTaskToDelayedList+0x88>
 8008f42:	4a08      	ldr	r2, [pc, #32]	; (8008f64 <prvAddCurrentTaskToDelayedList+0xa4>)
 8008f44:	68bb      	ldr	r3, [r7, #8]
 8008f46:	6013      	str	r3, [r2, #0]
 8008f48:	bf00      	nop
 8008f4a:	3710      	adds	r7, #16
 8008f4c:	46bd      	mov	sp, r7
 8008f4e:	bd80      	pop	{r7, pc}
 8008f50:	200040a0 	.word	0x200040a0
 8008f54:	20003bc8 	.word	0x20003bc8
 8008f58:	20004088 	.word	0x20004088
 8008f5c:	20004058 	.word	0x20004058
 8008f60:	20004054 	.word	0x20004054
 8008f64:	200040bc 	.word	0x200040bc

08008f68 <xTimerCreateTimerTask>:
 8008f68:	b580      	push	{r7, lr}
 8008f6a:	b08a      	sub	sp, #40	; 0x28
 8008f6c:	af04      	add	r7, sp, #16
 8008f6e:	2300      	movs	r3, #0
 8008f70:	617b      	str	r3, [r7, #20]
 8008f72:	f000 fb07 	bl	8009584 <prvCheckForValidListAndQueue>
 8008f76:	4b1c      	ldr	r3, [pc, #112]	; (8008fe8 <xTimerCreateTimerTask+0x80>)
 8008f78:	681b      	ldr	r3, [r3, #0]
 8008f7a:	2b00      	cmp	r3, #0
 8008f7c:	d021      	beq.n	8008fc2 <xTimerCreateTimerTask+0x5a>
 8008f7e:	2300      	movs	r3, #0
 8008f80:	60fb      	str	r3, [r7, #12]
 8008f82:	2300      	movs	r3, #0
 8008f84:	60bb      	str	r3, [r7, #8]
 8008f86:	1d3a      	adds	r2, r7, #4
 8008f88:	f107 0108 	add.w	r1, r7, #8
 8008f8c:	f107 030c 	add.w	r3, r7, #12
 8008f90:	4618      	mov	r0, r3
 8008f92:	f7fe f84d 	bl	8007030 <vApplicationGetTimerTaskMemory>
 8008f96:	6879      	ldr	r1, [r7, #4]
 8008f98:	68bb      	ldr	r3, [r7, #8]
 8008f9a:	68fa      	ldr	r2, [r7, #12]
 8008f9c:	9202      	str	r2, [sp, #8]
 8008f9e:	9301      	str	r3, [sp, #4]
 8008fa0:	2302      	movs	r3, #2
 8008fa2:	9300      	str	r3, [sp, #0]
 8008fa4:	2300      	movs	r3, #0
 8008fa6:	460a      	mov	r2, r1
 8008fa8:	4910      	ldr	r1, [pc, #64]	; (8008fec <xTimerCreateTimerTask+0x84>)
 8008faa:	4811      	ldr	r0, [pc, #68]	; (8008ff0 <xTimerCreateTimerTask+0x88>)
 8008fac:	f7fe ff8a 	bl	8007ec4 <xTaskCreateStatic>
 8008fb0:	4603      	mov	r3, r0
 8008fb2:	4a10      	ldr	r2, [pc, #64]	; (8008ff4 <xTimerCreateTimerTask+0x8c>)
 8008fb4:	6013      	str	r3, [r2, #0]
 8008fb6:	4b0f      	ldr	r3, [pc, #60]	; (8008ff4 <xTimerCreateTimerTask+0x8c>)
 8008fb8:	681b      	ldr	r3, [r3, #0]
 8008fba:	2b00      	cmp	r3, #0
 8008fbc:	d001      	beq.n	8008fc2 <xTimerCreateTimerTask+0x5a>
 8008fbe:	2301      	movs	r3, #1
 8008fc0:	617b      	str	r3, [r7, #20]
 8008fc2:	697b      	ldr	r3, [r7, #20]
 8008fc4:	2b00      	cmp	r3, #0
 8008fc6:	d10a      	bne.n	8008fde <xTimerCreateTimerTask+0x76>
 8008fc8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fcc:	f383 8811 	msr	BASEPRI, r3
 8008fd0:	f3bf 8f6f 	isb	sy
 8008fd4:	f3bf 8f4f 	dsb	sy
 8008fd8:	613b      	str	r3, [r7, #16]
 8008fda:	bf00      	nop
 8008fdc:	e7fe      	b.n	8008fdc <xTimerCreateTimerTask+0x74>
 8008fde:	697b      	ldr	r3, [r7, #20]
 8008fe0:	4618      	mov	r0, r3
 8008fe2:	3718      	adds	r7, #24
 8008fe4:	46bd      	mov	sp, r7
 8008fe6:	bd80      	pop	{r7, pc}
 8008fe8:	200040f8 	.word	0x200040f8
 8008fec:	08010b18 	.word	0x08010b18
 8008ff0:	0800912d 	.word	0x0800912d
 8008ff4:	200040fc 	.word	0x200040fc

08008ff8 <xTimerGenericCommand>:
 8008ff8:	b580      	push	{r7, lr}
 8008ffa:	b08a      	sub	sp, #40	; 0x28
 8008ffc:	af00      	add	r7, sp, #0
 8008ffe:	60f8      	str	r0, [r7, #12]
 8009000:	60b9      	str	r1, [r7, #8]
 8009002:	607a      	str	r2, [r7, #4]
 8009004:	603b      	str	r3, [r7, #0]
 8009006:	2300      	movs	r3, #0
 8009008:	627b      	str	r3, [r7, #36]	; 0x24
 800900a:	68fb      	ldr	r3, [r7, #12]
 800900c:	2b00      	cmp	r3, #0
 800900e:	d10a      	bne.n	8009026 <xTimerGenericCommand+0x2e>
 8009010:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009014:	f383 8811 	msr	BASEPRI, r3
 8009018:	f3bf 8f6f 	isb	sy
 800901c:	f3bf 8f4f 	dsb	sy
 8009020:	623b      	str	r3, [r7, #32]
 8009022:	bf00      	nop
 8009024:	e7fe      	b.n	8009024 <xTimerGenericCommand+0x2c>
 8009026:	4b1a      	ldr	r3, [pc, #104]	; (8009090 <xTimerGenericCommand+0x98>)
 8009028:	681b      	ldr	r3, [r3, #0]
 800902a:	2b00      	cmp	r3, #0
 800902c:	d02a      	beq.n	8009084 <xTimerGenericCommand+0x8c>
 800902e:	68bb      	ldr	r3, [r7, #8]
 8009030:	613b      	str	r3, [r7, #16]
 8009032:	687b      	ldr	r3, [r7, #4]
 8009034:	617b      	str	r3, [r7, #20]
 8009036:	68fb      	ldr	r3, [r7, #12]
 8009038:	61bb      	str	r3, [r7, #24]
 800903a:	68bb      	ldr	r3, [r7, #8]
 800903c:	2b05      	cmp	r3, #5
 800903e:	dc18      	bgt.n	8009072 <xTimerGenericCommand+0x7a>
 8009040:	f7ff fdb4 	bl	8008bac <xTaskGetSchedulerState>
 8009044:	4603      	mov	r3, r0
 8009046:	2b02      	cmp	r3, #2
 8009048:	d109      	bne.n	800905e <xTimerGenericCommand+0x66>
 800904a:	4b11      	ldr	r3, [pc, #68]	; (8009090 <xTimerGenericCommand+0x98>)
 800904c:	6818      	ldr	r0, [r3, #0]
 800904e:	f107 0110 	add.w	r1, r7, #16
 8009052:	2300      	movs	r3, #0
 8009054:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8009056:	f7fe fa29 	bl	80074ac <xQueueGenericSend>
 800905a:	6278      	str	r0, [r7, #36]	; 0x24
 800905c:	e012      	b.n	8009084 <xTimerGenericCommand+0x8c>
 800905e:	4b0c      	ldr	r3, [pc, #48]	; (8009090 <xTimerGenericCommand+0x98>)
 8009060:	6818      	ldr	r0, [r3, #0]
 8009062:	f107 0110 	add.w	r1, r7, #16
 8009066:	2300      	movs	r3, #0
 8009068:	2200      	movs	r2, #0
 800906a:	f7fe fa1f 	bl	80074ac <xQueueGenericSend>
 800906e:	6278      	str	r0, [r7, #36]	; 0x24
 8009070:	e008      	b.n	8009084 <xTimerGenericCommand+0x8c>
 8009072:	4b07      	ldr	r3, [pc, #28]	; (8009090 <xTimerGenericCommand+0x98>)
 8009074:	6818      	ldr	r0, [r3, #0]
 8009076:	f107 0110 	add.w	r1, r7, #16
 800907a:	2300      	movs	r3, #0
 800907c:	683a      	ldr	r2, [r7, #0]
 800907e:	f7fe fb13 	bl	80076a8 <xQueueGenericSendFromISR>
 8009082:	6278      	str	r0, [r7, #36]	; 0x24
 8009084:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009086:	4618      	mov	r0, r3
 8009088:	3728      	adds	r7, #40	; 0x28
 800908a:	46bd      	mov	sp, r7
 800908c:	bd80      	pop	{r7, pc}
 800908e:	bf00      	nop
 8009090:	200040f8 	.word	0x200040f8

08009094 <prvProcessExpiredTimer>:
 8009094:	b580      	push	{r7, lr}
 8009096:	b088      	sub	sp, #32
 8009098:	af02      	add	r7, sp, #8
 800909a:	6078      	str	r0, [r7, #4]
 800909c:	6039      	str	r1, [r7, #0]
 800909e:	4b22      	ldr	r3, [pc, #136]	; (8009128 <prvProcessExpiredTimer+0x94>)
 80090a0:	681b      	ldr	r3, [r3, #0]
 80090a2:	68db      	ldr	r3, [r3, #12]
 80090a4:	68db      	ldr	r3, [r3, #12]
 80090a6:	617b      	str	r3, [r7, #20]
 80090a8:	697b      	ldr	r3, [r7, #20]
 80090aa:	3304      	adds	r3, #4
 80090ac:	4618      	mov	r0, r3
 80090ae:	f7fe f863 	bl	8007178 <uxListRemove>
 80090b2:	697b      	ldr	r3, [r7, #20]
 80090b4:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80090b8:	f003 0304 	and.w	r3, r3, #4
 80090bc:	2b00      	cmp	r3, #0
 80090be:	d022      	beq.n	8009106 <prvProcessExpiredTimer+0x72>
 80090c0:	697b      	ldr	r3, [r7, #20]
 80090c2:	699a      	ldr	r2, [r3, #24]
 80090c4:	687b      	ldr	r3, [r7, #4]
 80090c6:	18d1      	adds	r1, r2, r3
 80090c8:	687b      	ldr	r3, [r7, #4]
 80090ca:	683a      	ldr	r2, [r7, #0]
 80090cc:	6978      	ldr	r0, [r7, #20]
 80090ce:	f000 f8d1 	bl	8009274 <prvInsertTimerInActiveList>
 80090d2:	4603      	mov	r3, r0
 80090d4:	2b00      	cmp	r3, #0
 80090d6:	d01f      	beq.n	8009118 <prvProcessExpiredTimer+0x84>
 80090d8:	2300      	movs	r3, #0
 80090da:	9300      	str	r3, [sp, #0]
 80090dc:	2300      	movs	r3, #0
 80090de:	687a      	ldr	r2, [r7, #4]
 80090e0:	2100      	movs	r1, #0
 80090e2:	6978      	ldr	r0, [r7, #20]
 80090e4:	f7ff ff88 	bl	8008ff8 <xTimerGenericCommand>
 80090e8:	6138      	str	r0, [r7, #16]
 80090ea:	693b      	ldr	r3, [r7, #16]
 80090ec:	2b00      	cmp	r3, #0
 80090ee:	d113      	bne.n	8009118 <prvProcessExpiredTimer+0x84>
 80090f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090f4:	f383 8811 	msr	BASEPRI, r3
 80090f8:	f3bf 8f6f 	isb	sy
 80090fc:	f3bf 8f4f 	dsb	sy
 8009100:	60fb      	str	r3, [r7, #12]
 8009102:	bf00      	nop
 8009104:	e7fe      	b.n	8009104 <prvProcessExpiredTimer+0x70>
 8009106:	697b      	ldr	r3, [r7, #20]
 8009108:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800910c:	f023 0301 	bic.w	r3, r3, #1
 8009110:	b2da      	uxtb	r2, r3
 8009112:	697b      	ldr	r3, [r7, #20]
 8009114:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8009118:	697b      	ldr	r3, [r7, #20]
 800911a:	6a1b      	ldr	r3, [r3, #32]
 800911c:	6978      	ldr	r0, [r7, #20]
 800911e:	4798      	blx	r3
 8009120:	bf00      	nop
 8009122:	3718      	adds	r7, #24
 8009124:	46bd      	mov	sp, r7
 8009126:	bd80      	pop	{r7, pc}
 8009128:	200040f0 	.word	0x200040f0

0800912c <prvTimerTask>:
 800912c:	b580      	push	{r7, lr}
 800912e:	b084      	sub	sp, #16
 8009130:	af00      	add	r7, sp, #0
 8009132:	6078      	str	r0, [r7, #4]
 8009134:	f107 0308 	add.w	r3, r7, #8
 8009138:	4618      	mov	r0, r3
 800913a:	f000 f857 	bl	80091ec <prvGetNextExpireTime>
 800913e:	60f8      	str	r0, [r7, #12]
 8009140:	68bb      	ldr	r3, [r7, #8]
 8009142:	4619      	mov	r1, r3
 8009144:	68f8      	ldr	r0, [r7, #12]
 8009146:	f000 f803 	bl	8009150 <prvProcessTimerOrBlockTask>
 800914a:	f000 f8d5 	bl	80092f8 <prvProcessReceivedCommands>
 800914e:	e7f1      	b.n	8009134 <prvTimerTask+0x8>

08009150 <prvProcessTimerOrBlockTask>:
 8009150:	b580      	push	{r7, lr}
 8009152:	b084      	sub	sp, #16
 8009154:	af00      	add	r7, sp, #0
 8009156:	6078      	str	r0, [r7, #4]
 8009158:	6039      	str	r1, [r7, #0]
 800915a:	f7ff f93b 	bl	80083d4 <vTaskSuspendAll>
 800915e:	f107 0308 	add.w	r3, r7, #8
 8009162:	4618      	mov	r0, r3
 8009164:	f000 f866 	bl	8009234 <prvSampleTimeNow>
 8009168:	60f8      	str	r0, [r7, #12]
 800916a:	68bb      	ldr	r3, [r7, #8]
 800916c:	2b00      	cmp	r3, #0
 800916e:	d130      	bne.n	80091d2 <prvProcessTimerOrBlockTask+0x82>
 8009170:	683b      	ldr	r3, [r7, #0]
 8009172:	2b00      	cmp	r3, #0
 8009174:	d10a      	bne.n	800918c <prvProcessTimerOrBlockTask+0x3c>
 8009176:	687a      	ldr	r2, [r7, #4]
 8009178:	68fb      	ldr	r3, [r7, #12]
 800917a:	429a      	cmp	r2, r3
 800917c:	d806      	bhi.n	800918c <prvProcessTimerOrBlockTask+0x3c>
 800917e:	f7ff f937 	bl	80083f0 <xTaskResumeAll>
 8009182:	68f9      	ldr	r1, [r7, #12]
 8009184:	6878      	ldr	r0, [r7, #4]
 8009186:	f7ff ff85 	bl	8009094 <prvProcessExpiredTimer>
 800918a:	e024      	b.n	80091d6 <prvProcessTimerOrBlockTask+0x86>
 800918c:	683b      	ldr	r3, [r7, #0]
 800918e:	2b00      	cmp	r3, #0
 8009190:	d008      	beq.n	80091a4 <prvProcessTimerOrBlockTask+0x54>
 8009192:	4b13      	ldr	r3, [pc, #76]	; (80091e0 <prvProcessTimerOrBlockTask+0x90>)
 8009194:	681b      	ldr	r3, [r3, #0]
 8009196:	681b      	ldr	r3, [r3, #0]
 8009198:	2b00      	cmp	r3, #0
 800919a:	d101      	bne.n	80091a0 <prvProcessTimerOrBlockTask+0x50>
 800919c:	2301      	movs	r3, #1
 800919e:	e000      	b.n	80091a2 <prvProcessTimerOrBlockTask+0x52>
 80091a0:	2300      	movs	r3, #0
 80091a2:	603b      	str	r3, [r7, #0]
 80091a4:	4b0f      	ldr	r3, [pc, #60]	; (80091e4 <prvProcessTimerOrBlockTask+0x94>)
 80091a6:	6818      	ldr	r0, [r3, #0]
 80091a8:	687a      	ldr	r2, [r7, #4]
 80091aa:	68fb      	ldr	r3, [r7, #12]
 80091ac:	1ad3      	subs	r3, r2, r3
 80091ae:	683a      	ldr	r2, [r7, #0]
 80091b0:	4619      	mov	r1, r3
 80091b2:	f7fe fe53 	bl	8007e5c <vQueueWaitForMessageRestricted>
 80091b6:	f7ff f91b 	bl	80083f0 <xTaskResumeAll>
 80091ba:	4603      	mov	r3, r0
 80091bc:	2b00      	cmp	r3, #0
 80091be:	d10a      	bne.n	80091d6 <prvProcessTimerOrBlockTask+0x86>
 80091c0:	4b09      	ldr	r3, [pc, #36]	; (80091e8 <prvProcessTimerOrBlockTask+0x98>)
 80091c2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80091c6:	601a      	str	r2, [r3, #0]
 80091c8:	f3bf 8f4f 	dsb	sy
 80091cc:	f3bf 8f6f 	isb	sy
 80091d0:	e001      	b.n	80091d6 <prvProcessTimerOrBlockTask+0x86>
 80091d2:	f7ff f90d 	bl	80083f0 <xTaskResumeAll>
 80091d6:	bf00      	nop
 80091d8:	3710      	adds	r7, #16
 80091da:	46bd      	mov	sp, r7
 80091dc:	bd80      	pop	{r7, pc}
 80091de:	bf00      	nop
 80091e0:	200040f4 	.word	0x200040f4
 80091e4:	200040f8 	.word	0x200040f8
 80091e8:	e000ed04 	.word	0xe000ed04

080091ec <prvGetNextExpireTime>:
 80091ec:	b480      	push	{r7}
 80091ee:	b085      	sub	sp, #20
 80091f0:	af00      	add	r7, sp, #0
 80091f2:	6078      	str	r0, [r7, #4]
 80091f4:	4b0e      	ldr	r3, [pc, #56]	; (8009230 <prvGetNextExpireTime+0x44>)
 80091f6:	681b      	ldr	r3, [r3, #0]
 80091f8:	681b      	ldr	r3, [r3, #0]
 80091fa:	2b00      	cmp	r3, #0
 80091fc:	d101      	bne.n	8009202 <prvGetNextExpireTime+0x16>
 80091fe:	2201      	movs	r2, #1
 8009200:	e000      	b.n	8009204 <prvGetNextExpireTime+0x18>
 8009202:	2200      	movs	r2, #0
 8009204:	687b      	ldr	r3, [r7, #4]
 8009206:	601a      	str	r2, [r3, #0]
 8009208:	687b      	ldr	r3, [r7, #4]
 800920a:	681b      	ldr	r3, [r3, #0]
 800920c:	2b00      	cmp	r3, #0
 800920e:	d105      	bne.n	800921c <prvGetNextExpireTime+0x30>
 8009210:	4b07      	ldr	r3, [pc, #28]	; (8009230 <prvGetNextExpireTime+0x44>)
 8009212:	681b      	ldr	r3, [r3, #0]
 8009214:	68db      	ldr	r3, [r3, #12]
 8009216:	681b      	ldr	r3, [r3, #0]
 8009218:	60fb      	str	r3, [r7, #12]
 800921a:	e001      	b.n	8009220 <prvGetNextExpireTime+0x34>
 800921c:	2300      	movs	r3, #0
 800921e:	60fb      	str	r3, [r7, #12]
 8009220:	68fb      	ldr	r3, [r7, #12]
 8009222:	4618      	mov	r0, r3
 8009224:	3714      	adds	r7, #20
 8009226:	46bd      	mov	sp, r7
 8009228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800922c:	4770      	bx	lr
 800922e:	bf00      	nop
 8009230:	200040f0 	.word	0x200040f0

08009234 <prvSampleTimeNow>:
 8009234:	b580      	push	{r7, lr}
 8009236:	b084      	sub	sp, #16
 8009238:	af00      	add	r7, sp, #0
 800923a:	6078      	str	r0, [r7, #4]
 800923c:	f7ff f976 	bl	800852c <xTaskGetTickCount>
 8009240:	60f8      	str	r0, [r7, #12]
 8009242:	4b0b      	ldr	r3, [pc, #44]	; (8009270 <prvSampleTimeNow+0x3c>)
 8009244:	681b      	ldr	r3, [r3, #0]
 8009246:	68fa      	ldr	r2, [r7, #12]
 8009248:	429a      	cmp	r2, r3
 800924a:	d205      	bcs.n	8009258 <prvSampleTimeNow+0x24>
 800924c:	f000 f936 	bl	80094bc <prvSwitchTimerLists>
 8009250:	687b      	ldr	r3, [r7, #4]
 8009252:	2201      	movs	r2, #1
 8009254:	601a      	str	r2, [r3, #0]
 8009256:	e002      	b.n	800925e <prvSampleTimeNow+0x2a>
 8009258:	687b      	ldr	r3, [r7, #4]
 800925a:	2200      	movs	r2, #0
 800925c:	601a      	str	r2, [r3, #0]
 800925e:	4a04      	ldr	r2, [pc, #16]	; (8009270 <prvSampleTimeNow+0x3c>)
 8009260:	68fb      	ldr	r3, [r7, #12]
 8009262:	6013      	str	r3, [r2, #0]
 8009264:	68fb      	ldr	r3, [r7, #12]
 8009266:	4618      	mov	r0, r3
 8009268:	3710      	adds	r7, #16
 800926a:	46bd      	mov	sp, r7
 800926c:	bd80      	pop	{r7, pc}
 800926e:	bf00      	nop
 8009270:	20004100 	.word	0x20004100

08009274 <prvInsertTimerInActiveList>:
 8009274:	b580      	push	{r7, lr}
 8009276:	b086      	sub	sp, #24
 8009278:	af00      	add	r7, sp, #0
 800927a:	60f8      	str	r0, [r7, #12]
 800927c:	60b9      	str	r1, [r7, #8]
 800927e:	607a      	str	r2, [r7, #4]
 8009280:	603b      	str	r3, [r7, #0]
 8009282:	2300      	movs	r3, #0
 8009284:	617b      	str	r3, [r7, #20]
 8009286:	68fb      	ldr	r3, [r7, #12]
 8009288:	68ba      	ldr	r2, [r7, #8]
 800928a:	605a      	str	r2, [r3, #4]
 800928c:	68fb      	ldr	r3, [r7, #12]
 800928e:	68fa      	ldr	r2, [r7, #12]
 8009290:	611a      	str	r2, [r3, #16]
 8009292:	68ba      	ldr	r2, [r7, #8]
 8009294:	687b      	ldr	r3, [r7, #4]
 8009296:	429a      	cmp	r2, r3
 8009298:	d812      	bhi.n	80092c0 <prvInsertTimerInActiveList+0x4c>
 800929a:	687a      	ldr	r2, [r7, #4]
 800929c:	683b      	ldr	r3, [r7, #0]
 800929e:	1ad2      	subs	r2, r2, r3
 80092a0:	68fb      	ldr	r3, [r7, #12]
 80092a2:	699b      	ldr	r3, [r3, #24]
 80092a4:	429a      	cmp	r2, r3
 80092a6:	d302      	bcc.n	80092ae <prvInsertTimerInActiveList+0x3a>
 80092a8:	2301      	movs	r3, #1
 80092aa:	617b      	str	r3, [r7, #20]
 80092ac:	e01b      	b.n	80092e6 <prvInsertTimerInActiveList+0x72>
 80092ae:	4b10      	ldr	r3, [pc, #64]	; (80092f0 <prvInsertTimerInActiveList+0x7c>)
 80092b0:	681a      	ldr	r2, [r3, #0]
 80092b2:	68fb      	ldr	r3, [r7, #12]
 80092b4:	3304      	adds	r3, #4
 80092b6:	4619      	mov	r1, r3
 80092b8:	4610      	mov	r0, r2
 80092ba:	f7fd ff24 	bl	8007106 <vListInsert>
 80092be:	e012      	b.n	80092e6 <prvInsertTimerInActiveList+0x72>
 80092c0:	687a      	ldr	r2, [r7, #4]
 80092c2:	683b      	ldr	r3, [r7, #0]
 80092c4:	429a      	cmp	r2, r3
 80092c6:	d206      	bcs.n	80092d6 <prvInsertTimerInActiveList+0x62>
 80092c8:	68ba      	ldr	r2, [r7, #8]
 80092ca:	683b      	ldr	r3, [r7, #0]
 80092cc:	429a      	cmp	r2, r3
 80092ce:	d302      	bcc.n	80092d6 <prvInsertTimerInActiveList+0x62>
 80092d0:	2301      	movs	r3, #1
 80092d2:	617b      	str	r3, [r7, #20]
 80092d4:	e007      	b.n	80092e6 <prvInsertTimerInActiveList+0x72>
 80092d6:	4b07      	ldr	r3, [pc, #28]	; (80092f4 <prvInsertTimerInActiveList+0x80>)
 80092d8:	681a      	ldr	r2, [r3, #0]
 80092da:	68fb      	ldr	r3, [r7, #12]
 80092dc:	3304      	adds	r3, #4
 80092de:	4619      	mov	r1, r3
 80092e0:	4610      	mov	r0, r2
 80092e2:	f7fd ff10 	bl	8007106 <vListInsert>
 80092e6:	697b      	ldr	r3, [r7, #20]
 80092e8:	4618      	mov	r0, r3
 80092ea:	3718      	adds	r7, #24
 80092ec:	46bd      	mov	sp, r7
 80092ee:	bd80      	pop	{r7, pc}
 80092f0:	200040f4 	.word	0x200040f4
 80092f4:	200040f0 	.word	0x200040f0

080092f8 <prvProcessReceivedCommands>:
 80092f8:	b580      	push	{r7, lr}
 80092fa:	b08e      	sub	sp, #56	; 0x38
 80092fc:	af02      	add	r7, sp, #8
 80092fe:	e0ca      	b.n	8009496 <prvProcessReceivedCommands+0x19e>
 8009300:	687b      	ldr	r3, [r7, #4]
 8009302:	2b00      	cmp	r3, #0
 8009304:	da18      	bge.n	8009338 <prvProcessReceivedCommands+0x40>
 8009306:	1d3b      	adds	r3, r7, #4
 8009308:	3304      	adds	r3, #4
 800930a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800930c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800930e:	2b00      	cmp	r3, #0
 8009310:	d10a      	bne.n	8009328 <prvProcessReceivedCommands+0x30>
 8009312:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009316:	f383 8811 	msr	BASEPRI, r3
 800931a:	f3bf 8f6f 	isb	sy
 800931e:	f3bf 8f4f 	dsb	sy
 8009322:	61fb      	str	r3, [r7, #28]
 8009324:	bf00      	nop
 8009326:	e7fe      	b.n	8009326 <prvProcessReceivedCommands+0x2e>
 8009328:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800932a:	681b      	ldr	r3, [r3, #0]
 800932c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800932e:	6850      	ldr	r0, [r2, #4]
 8009330:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8009332:	6892      	ldr	r2, [r2, #8]
 8009334:	4611      	mov	r1, r2
 8009336:	4798      	blx	r3
 8009338:	687b      	ldr	r3, [r7, #4]
 800933a:	2b00      	cmp	r3, #0
 800933c:	f2c0 80aa 	blt.w	8009494 <prvProcessReceivedCommands+0x19c>
 8009340:	68fb      	ldr	r3, [r7, #12]
 8009342:	62bb      	str	r3, [r7, #40]	; 0x28
 8009344:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009346:	695b      	ldr	r3, [r3, #20]
 8009348:	2b00      	cmp	r3, #0
 800934a:	d004      	beq.n	8009356 <prvProcessReceivedCommands+0x5e>
 800934c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800934e:	3304      	adds	r3, #4
 8009350:	4618      	mov	r0, r3
 8009352:	f7fd ff11 	bl	8007178 <uxListRemove>
 8009356:	463b      	mov	r3, r7
 8009358:	4618      	mov	r0, r3
 800935a:	f7ff ff6b 	bl	8009234 <prvSampleTimeNow>
 800935e:	6278      	str	r0, [r7, #36]	; 0x24
 8009360:	687b      	ldr	r3, [r7, #4]
 8009362:	2b09      	cmp	r3, #9
 8009364:	f200 8097 	bhi.w	8009496 <prvProcessReceivedCommands+0x19e>
 8009368:	a201      	add	r2, pc, #4	; (adr r2, 8009370 <prvProcessReceivedCommands+0x78>)
 800936a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800936e:	bf00      	nop
 8009370:	08009399 	.word	0x08009399
 8009374:	08009399 	.word	0x08009399
 8009378:	08009399 	.word	0x08009399
 800937c:	0800940d 	.word	0x0800940d
 8009380:	08009421 	.word	0x08009421
 8009384:	0800946b 	.word	0x0800946b
 8009388:	08009399 	.word	0x08009399
 800938c:	08009399 	.word	0x08009399
 8009390:	0800940d 	.word	0x0800940d
 8009394:	08009421 	.word	0x08009421
 8009398:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800939a:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800939e:	f043 0301 	orr.w	r3, r3, #1
 80093a2:	b2da      	uxtb	r2, r3
 80093a4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80093a6:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 80093aa:	68ba      	ldr	r2, [r7, #8]
 80093ac:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80093ae:	699b      	ldr	r3, [r3, #24]
 80093b0:	18d1      	adds	r1, r2, r3
 80093b2:	68bb      	ldr	r3, [r7, #8]
 80093b4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80093b6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80093b8:	f7ff ff5c 	bl	8009274 <prvInsertTimerInActiveList>
 80093bc:	4603      	mov	r3, r0
 80093be:	2b00      	cmp	r3, #0
 80093c0:	d069      	beq.n	8009496 <prvProcessReceivedCommands+0x19e>
 80093c2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80093c4:	6a1b      	ldr	r3, [r3, #32]
 80093c6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80093c8:	4798      	blx	r3
 80093ca:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80093cc:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80093d0:	f003 0304 	and.w	r3, r3, #4
 80093d4:	2b00      	cmp	r3, #0
 80093d6:	d05e      	beq.n	8009496 <prvProcessReceivedCommands+0x19e>
 80093d8:	68ba      	ldr	r2, [r7, #8]
 80093da:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80093dc:	699b      	ldr	r3, [r3, #24]
 80093de:	441a      	add	r2, r3
 80093e0:	2300      	movs	r3, #0
 80093e2:	9300      	str	r3, [sp, #0]
 80093e4:	2300      	movs	r3, #0
 80093e6:	2100      	movs	r1, #0
 80093e8:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80093ea:	f7ff fe05 	bl	8008ff8 <xTimerGenericCommand>
 80093ee:	6238      	str	r0, [r7, #32]
 80093f0:	6a3b      	ldr	r3, [r7, #32]
 80093f2:	2b00      	cmp	r3, #0
 80093f4:	d14f      	bne.n	8009496 <prvProcessReceivedCommands+0x19e>
 80093f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093fa:	f383 8811 	msr	BASEPRI, r3
 80093fe:	f3bf 8f6f 	isb	sy
 8009402:	f3bf 8f4f 	dsb	sy
 8009406:	61bb      	str	r3, [r7, #24]
 8009408:	bf00      	nop
 800940a:	e7fe      	b.n	800940a <prvProcessReceivedCommands+0x112>
 800940c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800940e:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8009412:	f023 0301 	bic.w	r3, r3, #1
 8009416:	b2da      	uxtb	r2, r3
 8009418:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800941a:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800941e:	e03a      	b.n	8009496 <prvProcessReceivedCommands+0x19e>
 8009420:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009422:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8009426:	f043 0301 	orr.w	r3, r3, #1
 800942a:	b2da      	uxtb	r2, r3
 800942c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800942e:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8009432:	68ba      	ldr	r2, [r7, #8]
 8009434:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009436:	619a      	str	r2, [r3, #24]
 8009438:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800943a:	699b      	ldr	r3, [r3, #24]
 800943c:	2b00      	cmp	r3, #0
 800943e:	d10a      	bne.n	8009456 <prvProcessReceivedCommands+0x15e>
 8009440:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009444:	f383 8811 	msr	BASEPRI, r3
 8009448:	f3bf 8f6f 	isb	sy
 800944c:	f3bf 8f4f 	dsb	sy
 8009450:	617b      	str	r3, [r7, #20]
 8009452:	bf00      	nop
 8009454:	e7fe      	b.n	8009454 <prvProcessReceivedCommands+0x15c>
 8009456:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009458:	699a      	ldr	r2, [r3, #24]
 800945a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800945c:	18d1      	adds	r1, r2, r3
 800945e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009460:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009462:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8009464:	f7ff ff06 	bl	8009274 <prvInsertTimerInActiveList>
 8009468:	e015      	b.n	8009496 <prvProcessReceivedCommands+0x19e>
 800946a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800946c:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8009470:	f003 0302 	and.w	r3, r3, #2
 8009474:	2b00      	cmp	r3, #0
 8009476:	d103      	bne.n	8009480 <prvProcessReceivedCommands+0x188>
 8009478:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800947a:	f000 fbe1 	bl	8009c40 <vPortFree>
 800947e:	e00a      	b.n	8009496 <prvProcessReceivedCommands+0x19e>
 8009480:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009482:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8009486:	f023 0301 	bic.w	r3, r3, #1
 800948a:	b2da      	uxtb	r2, r3
 800948c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800948e:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8009492:	e000      	b.n	8009496 <prvProcessReceivedCommands+0x19e>
 8009494:	bf00      	nop
 8009496:	4b08      	ldr	r3, [pc, #32]	; (80094b8 <prvProcessReceivedCommands+0x1c0>)
 8009498:	681b      	ldr	r3, [r3, #0]
 800949a:	1d39      	adds	r1, r7, #4
 800949c:	2200      	movs	r2, #0
 800949e:	4618      	mov	r0, r3
 80094a0:	f7fe f99e 	bl	80077e0 <xQueueReceive>
 80094a4:	4603      	mov	r3, r0
 80094a6:	2b00      	cmp	r3, #0
 80094a8:	f47f af2a 	bne.w	8009300 <prvProcessReceivedCommands+0x8>
 80094ac:	bf00      	nop
 80094ae:	bf00      	nop
 80094b0:	3730      	adds	r7, #48	; 0x30
 80094b2:	46bd      	mov	sp, r7
 80094b4:	bd80      	pop	{r7, pc}
 80094b6:	bf00      	nop
 80094b8:	200040f8 	.word	0x200040f8

080094bc <prvSwitchTimerLists>:
 80094bc:	b580      	push	{r7, lr}
 80094be:	b088      	sub	sp, #32
 80094c0:	af02      	add	r7, sp, #8
 80094c2:	e048      	b.n	8009556 <prvSwitchTimerLists+0x9a>
 80094c4:	4b2d      	ldr	r3, [pc, #180]	; (800957c <prvSwitchTimerLists+0xc0>)
 80094c6:	681b      	ldr	r3, [r3, #0]
 80094c8:	68db      	ldr	r3, [r3, #12]
 80094ca:	681b      	ldr	r3, [r3, #0]
 80094cc:	613b      	str	r3, [r7, #16]
 80094ce:	4b2b      	ldr	r3, [pc, #172]	; (800957c <prvSwitchTimerLists+0xc0>)
 80094d0:	681b      	ldr	r3, [r3, #0]
 80094d2:	68db      	ldr	r3, [r3, #12]
 80094d4:	68db      	ldr	r3, [r3, #12]
 80094d6:	60fb      	str	r3, [r7, #12]
 80094d8:	68fb      	ldr	r3, [r7, #12]
 80094da:	3304      	adds	r3, #4
 80094dc:	4618      	mov	r0, r3
 80094de:	f7fd fe4b 	bl	8007178 <uxListRemove>
 80094e2:	68fb      	ldr	r3, [r7, #12]
 80094e4:	6a1b      	ldr	r3, [r3, #32]
 80094e6:	68f8      	ldr	r0, [r7, #12]
 80094e8:	4798      	blx	r3
 80094ea:	68fb      	ldr	r3, [r7, #12]
 80094ec:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80094f0:	f003 0304 	and.w	r3, r3, #4
 80094f4:	2b00      	cmp	r3, #0
 80094f6:	d02e      	beq.n	8009556 <prvSwitchTimerLists+0x9a>
 80094f8:	68fb      	ldr	r3, [r7, #12]
 80094fa:	699b      	ldr	r3, [r3, #24]
 80094fc:	693a      	ldr	r2, [r7, #16]
 80094fe:	4413      	add	r3, r2
 8009500:	60bb      	str	r3, [r7, #8]
 8009502:	68ba      	ldr	r2, [r7, #8]
 8009504:	693b      	ldr	r3, [r7, #16]
 8009506:	429a      	cmp	r2, r3
 8009508:	d90e      	bls.n	8009528 <prvSwitchTimerLists+0x6c>
 800950a:	68fb      	ldr	r3, [r7, #12]
 800950c:	68ba      	ldr	r2, [r7, #8]
 800950e:	605a      	str	r2, [r3, #4]
 8009510:	68fb      	ldr	r3, [r7, #12]
 8009512:	68fa      	ldr	r2, [r7, #12]
 8009514:	611a      	str	r2, [r3, #16]
 8009516:	4b19      	ldr	r3, [pc, #100]	; (800957c <prvSwitchTimerLists+0xc0>)
 8009518:	681a      	ldr	r2, [r3, #0]
 800951a:	68fb      	ldr	r3, [r7, #12]
 800951c:	3304      	adds	r3, #4
 800951e:	4619      	mov	r1, r3
 8009520:	4610      	mov	r0, r2
 8009522:	f7fd fdf0 	bl	8007106 <vListInsert>
 8009526:	e016      	b.n	8009556 <prvSwitchTimerLists+0x9a>
 8009528:	2300      	movs	r3, #0
 800952a:	9300      	str	r3, [sp, #0]
 800952c:	2300      	movs	r3, #0
 800952e:	693a      	ldr	r2, [r7, #16]
 8009530:	2100      	movs	r1, #0
 8009532:	68f8      	ldr	r0, [r7, #12]
 8009534:	f7ff fd60 	bl	8008ff8 <xTimerGenericCommand>
 8009538:	6078      	str	r0, [r7, #4]
 800953a:	687b      	ldr	r3, [r7, #4]
 800953c:	2b00      	cmp	r3, #0
 800953e:	d10a      	bne.n	8009556 <prvSwitchTimerLists+0x9a>
 8009540:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009544:	f383 8811 	msr	BASEPRI, r3
 8009548:	f3bf 8f6f 	isb	sy
 800954c:	f3bf 8f4f 	dsb	sy
 8009550:	603b      	str	r3, [r7, #0]
 8009552:	bf00      	nop
 8009554:	e7fe      	b.n	8009554 <prvSwitchTimerLists+0x98>
 8009556:	4b09      	ldr	r3, [pc, #36]	; (800957c <prvSwitchTimerLists+0xc0>)
 8009558:	681b      	ldr	r3, [r3, #0]
 800955a:	681b      	ldr	r3, [r3, #0]
 800955c:	2b00      	cmp	r3, #0
 800955e:	d1b1      	bne.n	80094c4 <prvSwitchTimerLists+0x8>
 8009560:	4b06      	ldr	r3, [pc, #24]	; (800957c <prvSwitchTimerLists+0xc0>)
 8009562:	681b      	ldr	r3, [r3, #0]
 8009564:	617b      	str	r3, [r7, #20]
 8009566:	4b06      	ldr	r3, [pc, #24]	; (8009580 <prvSwitchTimerLists+0xc4>)
 8009568:	681b      	ldr	r3, [r3, #0]
 800956a:	4a04      	ldr	r2, [pc, #16]	; (800957c <prvSwitchTimerLists+0xc0>)
 800956c:	6013      	str	r3, [r2, #0]
 800956e:	4a04      	ldr	r2, [pc, #16]	; (8009580 <prvSwitchTimerLists+0xc4>)
 8009570:	697b      	ldr	r3, [r7, #20]
 8009572:	6013      	str	r3, [r2, #0]
 8009574:	bf00      	nop
 8009576:	3718      	adds	r7, #24
 8009578:	46bd      	mov	sp, r7
 800957a:	bd80      	pop	{r7, pc}
 800957c:	200040f0 	.word	0x200040f0
 8009580:	200040f4 	.word	0x200040f4

08009584 <prvCheckForValidListAndQueue>:
 8009584:	b580      	push	{r7, lr}
 8009586:	b082      	sub	sp, #8
 8009588:	af02      	add	r7, sp, #8
 800958a:	f000 f96b 	bl	8009864 <vPortEnterCritical>
 800958e:	4b15      	ldr	r3, [pc, #84]	; (80095e4 <prvCheckForValidListAndQueue+0x60>)
 8009590:	681b      	ldr	r3, [r3, #0]
 8009592:	2b00      	cmp	r3, #0
 8009594:	d120      	bne.n	80095d8 <prvCheckForValidListAndQueue+0x54>
 8009596:	4814      	ldr	r0, [pc, #80]	; (80095e8 <prvCheckForValidListAndQueue+0x64>)
 8009598:	f7fd fd64 	bl	8007064 <vListInitialise>
 800959c:	4813      	ldr	r0, [pc, #76]	; (80095ec <prvCheckForValidListAndQueue+0x68>)
 800959e:	f7fd fd61 	bl	8007064 <vListInitialise>
 80095a2:	4b13      	ldr	r3, [pc, #76]	; (80095f0 <prvCheckForValidListAndQueue+0x6c>)
 80095a4:	4a10      	ldr	r2, [pc, #64]	; (80095e8 <prvCheckForValidListAndQueue+0x64>)
 80095a6:	601a      	str	r2, [r3, #0]
 80095a8:	4b12      	ldr	r3, [pc, #72]	; (80095f4 <prvCheckForValidListAndQueue+0x70>)
 80095aa:	4a10      	ldr	r2, [pc, #64]	; (80095ec <prvCheckForValidListAndQueue+0x68>)
 80095ac:	601a      	str	r2, [r3, #0]
 80095ae:	2300      	movs	r3, #0
 80095b0:	9300      	str	r3, [sp, #0]
 80095b2:	4b11      	ldr	r3, [pc, #68]	; (80095f8 <prvCheckForValidListAndQueue+0x74>)
 80095b4:	4a11      	ldr	r2, [pc, #68]	; (80095fc <prvCheckForValidListAndQueue+0x78>)
 80095b6:	2110      	movs	r1, #16
 80095b8:	200a      	movs	r0, #10
 80095ba:	f7fd fe6f 	bl	800729c <xQueueGenericCreateStatic>
 80095be:	4603      	mov	r3, r0
 80095c0:	4a08      	ldr	r2, [pc, #32]	; (80095e4 <prvCheckForValidListAndQueue+0x60>)
 80095c2:	6013      	str	r3, [r2, #0]
 80095c4:	4b07      	ldr	r3, [pc, #28]	; (80095e4 <prvCheckForValidListAndQueue+0x60>)
 80095c6:	681b      	ldr	r3, [r3, #0]
 80095c8:	2b00      	cmp	r3, #0
 80095ca:	d005      	beq.n	80095d8 <prvCheckForValidListAndQueue+0x54>
 80095cc:	4b05      	ldr	r3, [pc, #20]	; (80095e4 <prvCheckForValidListAndQueue+0x60>)
 80095ce:	681b      	ldr	r3, [r3, #0]
 80095d0:	490b      	ldr	r1, [pc, #44]	; (8009600 <prvCheckForValidListAndQueue+0x7c>)
 80095d2:	4618      	mov	r0, r3
 80095d4:	f7fe fc18 	bl	8007e08 <vQueueAddToRegistry>
 80095d8:	f000 f974 	bl	80098c4 <vPortExitCritical>
 80095dc:	bf00      	nop
 80095de:	46bd      	mov	sp, r7
 80095e0:	bd80      	pop	{r7, pc}
 80095e2:	bf00      	nop
 80095e4:	200040f8 	.word	0x200040f8
 80095e8:	200040c8 	.word	0x200040c8
 80095ec:	200040dc 	.word	0x200040dc
 80095f0:	200040f0 	.word	0x200040f0
 80095f4:	200040f4 	.word	0x200040f4
 80095f8:	200041a4 	.word	0x200041a4
 80095fc:	20004104 	.word	0x20004104
 8009600:	08010b20 	.word	0x08010b20

08009604 <pxPortInitialiseStack>:
 8009604:	b480      	push	{r7}
 8009606:	b085      	sub	sp, #20
 8009608:	af00      	add	r7, sp, #0
 800960a:	60f8      	str	r0, [r7, #12]
 800960c:	60b9      	str	r1, [r7, #8]
 800960e:	607a      	str	r2, [r7, #4]
 8009610:	68fb      	ldr	r3, [r7, #12]
 8009612:	3b04      	subs	r3, #4
 8009614:	60fb      	str	r3, [r7, #12]
 8009616:	68fb      	ldr	r3, [r7, #12]
 8009618:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800961c:	601a      	str	r2, [r3, #0]
 800961e:	68fb      	ldr	r3, [r7, #12]
 8009620:	3b04      	subs	r3, #4
 8009622:	60fb      	str	r3, [r7, #12]
 8009624:	68bb      	ldr	r3, [r7, #8]
 8009626:	f023 0201 	bic.w	r2, r3, #1
 800962a:	68fb      	ldr	r3, [r7, #12]
 800962c:	601a      	str	r2, [r3, #0]
 800962e:	68fb      	ldr	r3, [r7, #12]
 8009630:	3b04      	subs	r3, #4
 8009632:	60fb      	str	r3, [r7, #12]
 8009634:	4a0c      	ldr	r2, [pc, #48]	; (8009668 <pxPortInitialiseStack+0x64>)
 8009636:	68fb      	ldr	r3, [r7, #12]
 8009638:	601a      	str	r2, [r3, #0]
 800963a:	68fb      	ldr	r3, [r7, #12]
 800963c:	3b14      	subs	r3, #20
 800963e:	60fb      	str	r3, [r7, #12]
 8009640:	687a      	ldr	r2, [r7, #4]
 8009642:	68fb      	ldr	r3, [r7, #12]
 8009644:	601a      	str	r2, [r3, #0]
 8009646:	68fb      	ldr	r3, [r7, #12]
 8009648:	3b04      	subs	r3, #4
 800964a:	60fb      	str	r3, [r7, #12]
 800964c:	68fb      	ldr	r3, [r7, #12]
 800964e:	f06f 0202 	mvn.w	r2, #2
 8009652:	601a      	str	r2, [r3, #0]
 8009654:	68fb      	ldr	r3, [r7, #12]
 8009656:	3b20      	subs	r3, #32
 8009658:	60fb      	str	r3, [r7, #12]
 800965a:	68fb      	ldr	r3, [r7, #12]
 800965c:	4618      	mov	r0, r3
 800965e:	3714      	adds	r7, #20
 8009660:	46bd      	mov	sp, r7
 8009662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009666:	4770      	bx	lr
 8009668:	0800966d 	.word	0x0800966d

0800966c <prvTaskExitError>:
 800966c:	b480      	push	{r7}
 800966e:	b085      	sub	sp, #20
 8009670:	af00      	add	r7, sp, #0
 8009672:	2300      	movs	r3, #0
 8009674:	607b      	str	r3, [r7, #4]
 8009676:	4b12      	ldr	r3, [pc, #72]	; (80096c0 <prvTaskExitError+0x54>)
 8009678:	681b      	ldr	r3, [r3, #0]
 800967a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800967e:	d00a      	beq.n	8009696 <prvTaskExitError+0x2a>
 8009680:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009684:	f383 8811 	msr	BASEPRI, r3
 8009688:	f3bf 8f6f 	isb	sy
 800968c:	f3bf 8f4f 	dsb	sy
 8009690:	60fb      	str	r3, [r7, #12]
 8009692:	bf00      	nop
 8009694:	e7fe      	b.n	8009694 <prvTaskExitError+0x28>
 8009696:	f04f 0350 	mov.w	r3, #80	; 0x50
 800969a:	f383 8811 	msr	BASEPRI, r3
 800969e:	f3bf 8f6f 	isb	sy
 80096a2:	f3bf 8f4f 	dsb	sy
 80096a6:	60bb      	str	r3, [r7, #8]
 80096a8:	bf00      	nop
 80096aa:	bf00      	nop
 80096ac:	687b      	ldr	r3, [r7, #4]
 80096ae:	2b00      	cmp	r3, #0
 80096b0:	d0fc      	beq.n	80096ac <prvTaskExitError+0x40>
 80096b2:	bf00      	nop
 80096b4:	bf00      	nop
 80096b6:	3714      	adds	r7, #20
 80096b8:	46bd      	mov	sp, r7
 80096ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096be:	4770      	bx	lr
 80096c0:	2000001c 	.word	0x2000001c
	...

080096d0 <SVC_Handler>:
 80096d0:	4b07      	ldr	r3, [pc, #28]	; (80096f0 <pxCurrentTCBConst2>)
 80096d2:	6819      	ldr	r1, [r3, #0]
 80096d4:	6808      	ldr	r0, [r1, #0]
 80096d6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80096da:	f380 8809 	msr	PSP, r0
 80096de:	f3bf 8f6f 	isb	sy
 80096e2:	f04f 0000 	mov.w	r0, #0
 80096e6:	f380 8811 	msr	BASEPRI, r0
 80096ea:	4770      	bx	lr
 80096ec:	f3af 8000 	nop.w

080096f0 <pxCurrentTCBConst2>:
 80096f0:	20003bc8 	.word	0x20003bc8
 80096f4:	bf00      	nop
 80096f6:	bf00      	nop

080096f8 <prvPortStartFirstTask>:
 80096f8:	4808      	ldr	r0, [pc, #32]	; (800971c <prvPortStartFirstTask+0x24>)
 80096fa:	6800      	ldr	r0, [r0, #0]
 80096fc:	6800      	ldr	r0, [r0, #0]
 80096fe:	f380 8808 	msr	MSP, r0
 8009702:	f04f 0000 	mov.w	r0, #0
 8009706:	f380 8814 	msr	CONTROL, r0
 800970a:	b662      	cpsie	i
 800970c:	b661      	cpsie	f
 800970e:	f3bf 8f4f 	dsb	sy
 8009712:	f3bf 8f6f 	isb	sy
 8009716:	df00      	svc	0
 8009718:	bf00      	nop
 800971a:	bf00      	nop
 800971c:	e000ed08 	.word	0xe000ed08

08009720 <xPortStartScheduler>:
 8009720:	b580      	push	{r7, lr}
 8009722:	b086      	sub	sp, #24
 8009724:	af00      	add	r7, sp, #0
 8009726:	4b46      	ldr	r3, [pc, #280]	; (8009840 <xPortStartScheduler+0x120>)
 8009728:	681b      	ldr	r3, [r3, #0]
 800972a:	4a46      	ldr	r2, [pc, #280]	; (8009844 <xPortStartScheduler+0x124>)
 800972c:	4293      	cmp	r3, r2
 800972e:	d10a      	bne.n	8009746 <xPortStartScheduler+0x26>
 8009730:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009734:	f383 8811 	msr	BASEPRI, r3
 8009738:	f3bf 8f6f 	isb	sy
 800973c:	f3bf 8f4f 	dsb	sy
 8009740:	613b      	str	r3, [r7, #16]
 8009742:	bf00      	nop
 8009744:	e7fe      	b.n	8009744 <xPortStartScheduler+0x24>
 8009746:	4b3e      	ldr	r3, [pc, #248]	; (8009840 <xPortStartScheduler+0x120>)
 8009748:	681b      	ldr	r3, [r3, #0]
 800974a:	4a3f      	ldr	r2, [pc, #252]	; (8009848 <xPortStartScheduler+0x128>)
 800974c:	4293      	cmp	r3, r2
 800974e:	d10a      	bne.n	8009766 <xPortStartScheduler+0x46>
 8009750:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009754:	f383 8811 	msr	BASEPRI, r3
 8009758:	f3bf 8f6f 	isb	sy
 800975c:	f3bf 8f4f 	dsb	sy
 8009760:	60fb      	str	r3, [r7, #12]
 8009762:	bf00      	nop
 8009764:	e7fe      	b.n	8009764 <xPortStartScheduler+0x44>
 8009766:	4b39      	ldr	r3, [pc, #228]	; (800984c <xPortStartScheduler+0x12c>)
 8009768:	617b      	str	r3, [r7, #20]
 800976a:	697b      	ldr	r3, [r7, #20]
 800976c:	781b      	ldrb	r3, [r3, #0]
 800976e:	b2db      	uxtb	r3, r3
 8009770:	607b      	str	r3, [r7, #4]
 8009772:	697b      	ldr	r3, [r7, #20]
 8009774:	22ff      	movs	r2, #255	; 0xff
 8009776:	701a      	strb	r2, [r3, #0]
 8009778:	697b      	ldr	r3, [r7, #20]
 800977a:	781b      	ldrb	r3, [r3, #0]
 800977c:	b2db      	uxtb	r3, r3
 800977e:	70fb      	strb	r3, [r7, #3]
 8009780:	78fb      	ldrb	r3, [r7, #3]
 8009782:	b2db      	uxtb	r3, r3
 8009784:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8009788:	b2da      	uxtb	r2, r3
 800978a:	4b31      	ldr	r3, [pc, #196]	; (8009850 <xPortStartScheduler+0x130>)
 800978c:	701a      	strb	r2, [r3, #0]
 800978e:	4b31      	ldr	r3, [pc, #196]	; (8009854 <xPortStartScheduler+0x134>)
 8009790:	2207      	movs	r2, #7
 8009792:	601a      	str	r2, [r3, #0]
 8009794:	e009      	b.n	80097aa <xPortStartScheduler+0x8a>
 8009796:	4b2f      	ldr	r3, [pc, #188]	; (8009854 <xPortStartScheduler+0x134>)
 8009798:	681b      	ldr	r3, [r3, #0]
 800979a:	3b01      	subs	r3, #1
 800979c:	4a2d      	ldr	r2, [pc, #180]	; (8009854 <xPortStartScheduler+0x134>)
 800979e:	6013      	str	r3, [r2, #0]
 80097a0:	78fb      	ldrb	r3, [r7, #3]
 80097a2:	b2db      	uxtb	r3, r3
 80097a4:	005b      	lsls	r3, r3, #1
 80097a6:	b2db      	uxtb	r3, r3
 80097a8:	70fb      	strb	r3, [r7, #3]
 80097aa:	78fb      	ldrb	r3, [r7, #3]
 80097ac:	b2db      	uxtb	r3, r3
 80097ae:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80097b2:	2b80      	cmp	r3, #128	; 0x80
 80097b4:	d0ef      	beq.n	8009796 <xPortStartScheduler+0x76>
 80097b6:	4b27      	ldr	r3, [pc, #156]	; (8009854 <xPortStartScheduler+0x134>)
 80097b8:	681b      	ldr	r3, [r3, #0]
 80097ba:	f1c3 0307 	rsb	r3, r3, #7
 80097be:	2b04      	cmp	r3, #4
 80097c0:	d00a      	beq.n	80097d8 <xPortStartScheduler+0xb8>
 80097c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097c6:	f383 8811 	msr	BASEPRI, r3
 80097ca:	f3bf 8f6f 	isb	sy
 80097ce:	f3bf 8f4f 	dsb	sy
 80097d2:	60bb      	str	r3, [r7, #8]
 80097d4:	bf00      	nop
 80097d6:	e7fe      	b.n	80097d6 <xPortStartScheduler+0xb6>
 80097d8:	4b1e      	ldr	r3, [pc, #120]	; (8009854 <xPortStartScheduler+0x134>)
 80097da:	681b      	ldr	r3, [r3, #0]
 80097dc:	021b      	lsls	r3, r3, #8
 80097de:	4a1d      	ldr	r2, [pc, #116]	; (8009854 <xPortStartScheduler+0x134>)
 80097e0:	6013      	str	r3, [r2, #0]
 80097e2:	4b1c      	ldr	r3, [pc, #112]	; (8009854 <xPortStartScheduler+0x134>)
 80097e4:	681b      	ldr	r3, [r3, #0]
 80097e6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80097ea:	4a1a      	ldr	r2, [pc, #104]	; (8009854 <xPortStartScheduler+0x134>)
 80097ec:	6013      	str	r3, [r2, #0]
 80097ee:	687b      	ldr	r3, [r7, #4]
 80097f0:	b2da      	uxtb	r2, r3
 80097f2:	697b      	ldr	r3, [r7, #20]
 80097f4:	701a      	strb	r2, [r3, #0]
 80097f6:	4b18      	ldr	r3, [pc, #96]	; (8009858 <xPortStartScheduler+0x138>)
 80097f8:	681b      	ldr	r3, [r3, #0]
 80097fa:	4a17      	ldr	r2, [pc, #92]	; (8009858 <xPortStartScheduler+0x138>)
 80097fc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8009800:	6013      	str	r3, [r2, #0]
 8009802:	4b15      	ldr	r3, [pc, #84]	; (8009858 <xPortStartScheduler+0x138>)
 8009804:	681b      	ldr	r3, [r3, #0]
 8009806:	4a14      	ldr	r2, [pc, #80]	; (8009858 <xPortStartScheduler+0x138>)
 8009808:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800980c:	6013      	str	r3, [r2, #0]
 800980e:	f000 f8dd 	bl	80099cc <vPortSetupTimerInterrupt>
 8009812:	4b12      	ldr	r3, [pc, #72]	; (800985c <xPortStartScheduler+0x13c>)
 8009814:	2200      	movs	r2, #0
 8009816:	601a      	str	r2, [r3, #0]
 8009818:	f000 f8fc 	bl	8009a14 <vPortEnableVFP>
 800981c:	4b10      	ldr	r3, [pc, #64]	; (8009860 <xPortStartScheduler+0x140>)
 800981e:	681b      	ldr	r3, [r3, #0]
 8009820:	4a0f      	ldr	r2, [pc, #60]	; (8009860 <xPortStartScheduler+0x140>)
 8009822:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8009826:	6013      	str	r3, [r2, #0]
 8009828:	f7ff ff66 	bl	80096f8 <prvPortStartFirstTask>
 800982c:	f7fe ff48 	bl	80086c0 <vTaskSwitchContext>
 8009830:	f7ff ff1c 	bl	800966c <prvTaskExitError>
 8009834:	2300      	movs	r3, #0
 8009836:	4618      	mov	r0, r3
 8009838:	3718      	adds	r7, #24
 800983a:	46bd      	mov	sp, r7
 800983c:	bd80      	pop	{r7, pc}
 800983e:	bf00      	nop
 8009840:	e000ed00 	.word	0xe000ed00
 8009844:	410fc271 	.word	0x410fc271
 8009848:	410fc270 	.word	0x410fc270
 800984c:	e000e400 	.word	0xe000e400
 8009850:	200041f4 	.word	0x200041f4
 8009854:	200041f8 	.word	0x200041f8
 8009858:	e000ed20 	.word	0xe000ed20
 800985c:	2000001c 	.word	0x2000001c
 8009860:	e000ef34 	.word	0xe000ef34

08009864 <vPortEnterCritical>:
 8009864:	b480      	push	{r7}
 8009866:	b083      	sub	sp, #12
 8009868:	af00      	add	r7, sp, #0
 800986a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800986e:	f383 8811 	msr	BASEPRI, r3
 8009872:	f3bf 8f6f 	isb	sy
 8009876:	f3bf 8f4f 	dsb	sy
 800987a:	607b      	str	r3, [r7, #4]
 800987c:	bf00      	nop
 800987e:	4b0f      	ldr	r3, [pc, #60]	; (80098bc <vPortEnterCritical+0x58>)
 8009880:	681b      	ldr	r3, [r3, #0]
 8009882:	3301      	adds	r3, #1
 8009884:	4a0d      	ldr	r2, [pc, #52]	; (80098bc <vPortEnterCritical+0x58>)
 8009886:	6013      	str	r3, [r2, #0]
 8009888:	4b0c      	ldr	r3, [pc, #48]	; (80098bc <vPortEnterCritical+0x58>)
 800988a:	681b      	ldr	r3, [r3, #0]
 800988c:	2b01      	cmp	r3, #1
 800988e:	d10f      	bne.n	80098b0 <vPortEnterCritical+0x4c>
 8009890:	4b0b      	ldr	r3, [pc, #44]	; (80098c0 <vPortEnterCritical+0x5c>)
 8009892:	681b      	ldr	r3, [r3, #0]
 8009894:	b2db      	uxtb	r3, r3
 8009896:	2b00      	cmp	r3, #0
 8009898:	d00a      	beq.n	80098b0 <vPortEnterCritical+0x4c>
 800989a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800989e:	f383 8811 	msr	BASEPRI, r3
 80098a2:	f3bf 8f6f 	isb	sy
 80098a6:	f3bf 8f4f 	dsb	sy
 80098aa:	603b      	str	r3, [r7, #0]
 80098ac:	bf00      	nop
 80098ae:	e7fe      	b.n	80098ae <vPortEnterCritical+0x4a>
 80098b0:	bf00      	nop
 80098b2:	370c      	adds	r7, #12
 80098b4:	46bd      	mov	sp, r7
 80098b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098ba:	4770      	bx	lr
 80098bc:	2000001c 	.word	0x2000001c
 80098c0:	e000ed04 	.word	0xe000ed04

080098c4 <vPortExitCritical>:
 80098c4:	b480      	push	{r7}
 80098c6:	b083      	sub	sp, #12
 80098c8:	af00      	add	r7, sp, #0
 80098ca:	4b12      	ldr	r3, [pc, #72]	; (8009914 <vPortExitCritical+0x50>)
 80098cc:	681b      	ldr	r3, [r3, #0]
 80098ce:	2b00      	cmp	r3, #0
 80098d0:	d10a      	bne.n	80098e8 <vPortExitCritical+0x24>
 80098d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098d6:	f383 8811 	msr	BASEPRI, r3
 80098da:	f3bf 8f6f 	isb	sy
 80098de:	f3bf 8f4f 	dsb	sy
 80098e2:	607b      	str	r3, [r7, #4]
 80098e4:	bf00      	nop
 80098e6:	e7fe      	b.n	80098e6 <vPortExitCritical+0x22>
 80098e8:	4b0a      	ldr	r3, [pc, #40]	; (8009914 <vPortExitCritical+0x50>)
 80098ea:	681b      	ldr	r3, [r3, #0]
 80098ec:	3b01      	subs	r3, #1
 80098ee:	4a09      	ldr	r2, [pc, #36]	; (8009914 <vPortExitCritical+0x50>)
 80098f0:	6013      	str	r3, [r2, #0]
 80098f2:	4b08      	ldr	r3, [pc, #32]	; (8009914 <vPortExitCritical+0x50>)
 80098f4:	681b      	ldr	r3, [r3, #0]
 80098f6:	2b00      	cmp	r3, #0
 80098f8:	d105      	bne.n	8009906 <vPortExitCritical+0x42>
 80098fa:	2300      	movs	r3, #0
 80098fc:	603b      	str	r3, [r7, #0]
 80098fe:	683b      	ldr	r3, [r7, #0]
 8009900:	f383 8811 	msr	BASEPRI, r3
 8009904:	bf00      	nop
 8009906:	bf00      	nop
 8009908:	370c      	adds	r7, #12
 800990a:	46bd      	mov	sp, r7
 800990c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009910:	4770      	bx	lr
 8009912:	bf00      	nop
 8009914:	2000001c 	.word	0x2000001c
	...

08009920 <PendSV_Handler>:
 8009920:	f3ef 8009 	mrs	r0, PSP
 8009924:	f3bf 8f6f 	isb	sy
 8009928:	4b15      	ldr	r3, [pc, #84]	; (8009980 <pxCurrentTCBConst>)
 800992a:	681a      	ldr	r2, [r3, #0]
 800992c:	f01e 0f10 	tst.w	lr, #16
 8009930:	bf08      	it	eq
 8009932:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8009936:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800993a:	6010      	str	r0, [r2, #0]
 800993c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8009940:	f04f 0050 	mov.w	r0, #80	; 0x50
 8009944:	f380 8811 	msr	BASEPRI, r0
 8009948:	f3bf 8f4f 	dsb	sy
 800994c:	f3bf 8f6f 	isb	sy
 8009950:	f7fe feb6 	bl	80086c0 <vTaskSwitchContext>
 8009954:	f04f 0000 	mov.w	r0, #0
 8009958:	f380 8811 	msr	BASEPRI, r0
 800995c:	bc09      	pop	{r0, r3}
 800995e:	6819      	ldr	r1, [r3, #0]
 8009960:	6808      	ldr	r0, [r1, #0]
 8009962:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009966:	f01e 0f10 	tst.w	lr, #16
 800996a:	bf08      	it	eq
 800996c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8009970:	f380 8809 	msr	PSP, r0
 8009974:	f3bf 8f6f 	isb	sy
 8009978:	4770      	bx	lr
 800997a:	bf00      	nop
 800997c:	f3af 8000 	nop.w

08009980 <pxCurrentTCBConst>:
 8009980:	20003bc8 	.word	0x20003bc8
 8009984:	bf00      	nop
 8009986:	bf00      	nop

08009988 <xPortSysTickHandler>:
 8009988:	b580      	push	{r7, lr}
 800998a:	b082      	sub	sp, #8
 800998c:	af00      	add	r7, sp, #0
 800998e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009992:	f383 8811 	msr	BASEPRI, r3
 8009996:	f3bf 8f6f 	isb	sy
 800999a:	f3bf 8f4f 	dsb	sy
 800999e:	607b      	str	r3, [r7, #4]
 80099a0:	bf00      	nop
 80099a2:	f7fe fdd3 	bl	800854c <xTaskIncrementTick>
 80099a6:	4603      	mov	r3, r0
 80099a8:	2b00      	cmp	r3, #0
 80099aa:	d003      	beq.n	80099b4 <xPortSysTickHandler+0x2c>
 80099ac:	4b06      	ldr	r3, [pc, #24]	; (80099c8 <xPortSysTickHandler+0x40>)
 80099ae:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80099b2:	601a      	str	r2, [r3, #0]
 80099b4:	2300      	movs	r3, #0
 80099b6:	603b      	str	r3, [r7, #0]
 80099b8:	683b      	ldr	r3, [r7, #0]
 80099ba:	f383 8811 	msr	BASEPRI, r3
 80099be:	bf00      	nop
 80099c0:	bf00      	nop
 80099c2:	3708      	adds	r7, #8
 80099c4:	46bd      	mov	sp, r7
 80099c6:	bd80      	pop	{r7, pc}
 80099c8:	e000ed04 	.word	0xe000ed04

080099cc <vPortSetupTimerInterrupt>:
 80099cc:	b480      	push	{r7}
 80099ce:	af00      	add	r7, sp, #0
 80099d0:	4b0b      	ldr	r3, [pc, #44]	; (8009a00 <vPortSetupTimerInterrupt+0x34>)
 80099d2:	2200      	movs	r2, #0
 80099d4:	601a      	str	r2, [r3, #0]
 80099d6:	4b0b      	ldr	r3, [pc, #44]	; (8009a04 <vPortSetupTimerInterrupt+0x38>)
 80099d8:	2200      	movs	r2, #0
 80099da:	601a      	str	r2, [r3, #0]
 80099dc:	4b0a      	ldr	r3, [pc, #40]	; (8009a08 <vPortSetupTimerInterrupt+0x3c>)
 80099de:	681b      	ldr	r3, [r3, #0]
 80099e0:	4a0a      	ldr	r2, [pc, #40]	; (8009a0c <vPortSetupTimerInterrupt+0x40>)
 80099e2:	fba2 2303 	umull	r2, r3, r2, r3
 80099e6:	099b      	lsrs	r3, r3, #6
 80099e8:	4a09      	ldr	r2, [pc, #36]	; (8009a10 <vPortSetupTimerInterrupt+0x44>)
 80099ea:	3b01      	subs	r3, #1
 80099ec:	6013      	str	r3, [r2, #0]
 80099ee:	4b04      	ldr	r3, [pc, #16]	; (8009a00 <vPortSetupTimerInterrupt+0x34>)
 80099f0:	2207      	movs	r2, #7
 80099f2:	601a      	str	r2, [r3, #0]
 80099f4:	bf00      	nop
 80099f6:	46bd      	mov	sp, r7
 80099f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099fc:	4770      	bx	lr
 80099fe:	bf00      	nop
 8009a00:	e000e010 	.word	0xe000e010
 8009a04:	e000e018 	.word	0xe000e018
 8009a08:	2000000c 	.word	0x2000000c
 8009a0c:	10624dd3 	.word	0x10624dd3
 8009a10:	e000e014 	.word	0xe000e014

08009a14 <vPortEnableVFP>:
 8009a14:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8009a24 <vPortEnableVFP+0x10>
 8009a18:	6801      	ldr	r1, [r0, #0]
 8009a1a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8009a1e:	6001      	str	r1, [r0, #0]
 8009a20:	4770      	bx	lr
 8009a22:	bf00      	nop
 8009a24:	e000ed88 	.word	0xe000ed88

08009a28 <vPortValidateInterruptPriority>:
 8009a28:	b480      	push	{r7}
 8009a2a:	b085      	sub	sp, #20
 8009a2c:	af00      	add	r7, sp, #0
 8009a2e:	f3ef 8305 	mrs	r3, IPSR
 8009a32:	60fb      	str	r3, [r7, #12]
 8009a34:	68fb      	ldr	r3, [r7, #12]
 8009a36:	2b0f      	cmp	r3, #15
 8009a38:	d914      	bls.n	8009a64 <vPortValidateInterruptPriority+0x3c>
 8009a3a:	4a17      	ldr	r2, [pc, #92]	; (8009a98 <vPortValidateInterruptPriority+0x70>)
 8009a3c:	68fb      	ldr	r3, [r7, #12]
 8009a3e:	4413      	add	r3, r2
 8009a40:	781b      	ldrb	r3, [r3, #0]
 8009a42:	72fb      	strb	r3, [r7, #11]
 8009a44:	4b15      	ldr	r3, [pc, #84]	; (8009a9c <vPortValidateInterruptPriority+0x74>)
 8009a46:	781b      	ldrb	r3, [r3, #0]
 8009a48:	7afa      	ldrb	r2, [r7, #11]
 8009a4a:	429a      	cmp	r2, r3
 8009a4c:	d20a      	bcs.n	8009a64 <vPortValidateInterruptPriority+0x3c>
 8009a4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a52:	f383 8811 	msr	BASEPRI, r3
 8009a56:	f3bf 8f6f 	isb	sy
 8009a5a:	f3bf 8f4f 	dsb	sy
 8009a5e:	607b      	str	r3, [r7, #4]
 8009a60:	bf00      	nop
 8009a62:	e7fe      	b.n	8009a62 <vPortValidateInterruptPriority+0x3a>
 8009a64:	4b0e      	ldr	r3, [pc, #56]	; (8009aa0 <vPortValidateInterruptPriority+0x78>)
 8009a66:	681b      	ldr	r3, [r3, #0]
 8009a68:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8009a6c:	4b0d      	ldr	r3, [pc, #52]	; (8009aa4 <vPortValidateInterruptPriority+0x7c>)
 8009a6e:	681b      	ldr	r3, [r3, #0]
 8009a70:	429a      	cmp	r2, r3
 8009a72:	d90a      	bls.n	8009a8a <vPortValidateInterruptPriority+0x62>
 8009a74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a78:	f383 8811 	msr	BASEPRI, r3
 8009a7c:	f3bf 8f6f 	isb	sy
 8009a80:	f3bf 8f4f 	dsb	sy
 8009a84:	603b      	str	r3, [r7, #0]
 8009a86:	bf00      	nop
 8009a88:	e7fe      	b.n	8009a88 <vPortValidateInterruptPriority+0x60>
 8009a8a:	bf00      	nop
 8009a8c:	3714      	adds	r7, #20
 8009a8e:	46bd      	mov	sp, r7
 8009a90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a94:	4770      	bx	lr
 8009a96:	bf00      	nop
 8009a98:	e000e3f0 	.word	0xe000e3f0
 8009a9c:	200041f4 	.word	0x200041f4
 8009aa0:	e000ed0c 	.word	0xe000ed0c
 8009aa4:	200041f8 	.word	0x200041f8

08009aa8 <pvPortMalloc>:
 8009aa8:	b580      	push	{r7, lr}
 8009aaa:	b08a      	sub	sp, #40	; 0x28
 8009aac:	af00      	add	r7, sp, #0
 8009aae:	6078      	str	r0, [r7, #4]
 8009ab0:	2300      	movs	r3, #0
 8009ab2:	61fb      	str	r3, [r7, #28]
 8009ab4:	f7fe fc8e 	bl	80083d4 <vTaskSuspendAll>
 8009ab8:	4b5b      	ldr	r3, [pc, #364]	; (8009c28 <pvPortMalloc+0x180>)
 8009aba:	681b      	ldr	r3, [r3, #0]
 8009abc:	2b00      	cmp	r3, #0
 8009abe:	d101      	bne.n	8009ac4 <pvPortMalloc+0x1c>
 8009ac0:	f000 f920 	bl	8009d04 <prvHeapInit>
 8009ac4:	4b59      	ldr	r3, [pc, #356]	; (8009c2c <pvPortMalloc+0x184>)
 8009ac6:	681a      	ldr	r2, [r3, #0]
 8009ac8:	687b      	ldr	r3, [r7, #4]
 8009aca:	4013      	ands	r3, r2
 8009acc:	2b00      	cmp	r3, #0
 8009ace:	f040 8093 	bne.w	8009bf8 <pvPortMalloc+0x150>
 8009ad2:	687b      	ldr	r3, [r7, #4]
 8009ad4:	2b00      	cmp	r3, #0
 8009ad6:	d01d      	beq.n	8009b14 <pvPortMalloc+0x6c>
 8009ad8:	2208      	movs	r2, #8
 8009ada:	687b      	ldr	r3, [r7, #4]
 8009adc:	4413      	add	r3, r2
 8009ade:	607b      	str	r3, [r7, #4]
 8009ae0:	687b      	ldr	r3, [r7, #4]
 8009ae2:	f003 0307 	and.w	r3, r3, #7
 8009ae6:	2b00      	cmp	r3, #0
 8009ae8:	d014      	beq.n	8009b14 <pvPortMalloc+0x6c>
 8009aea:	687b      	ldr	r3, [r7, #4]
 8009aec:	f023 0307 	bic.w	r3, r3, #7
 8009af0:	3308      	adds	r3, #8
 8009af2:	607b      	str	r3, [r7, #4]
 8009af4:	687b      	ldr	r3, [r7, #4]
 8009af6:	f003 0307 	and.w	r3, r3, #7
 8009afa:	2b00      	cmp	r3, #0
 8009afc:	d00a      	beq.n	8009b14 <pvPortMalloc+0x6c>
 8009afe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b02:	f383 8811 	msr	BASEPRI, r3
 8009b06:	f3bf 8f6f 	isb	sy
 8009b0a:	f3bf 8f4f 	dsb	sy
 8009b0e:	617b      	str	r3, [r7, #20]
 8009b10:	bf00      	nop
 8009b12:	e7fe      	b.n	8009b12 <pvPortMalloc+0x6a>
 8009b14:	687b      	ldr	r3, [r7, #4]
 8009b16:	2b00      	cmp	r3, #0
 8009b18:	d06e      	beq.n	8009bf8 <pvPortMalloc+0x150>
 8009b1a:	4b45      	ldr	r3, [pc, #276]	; (8009c30 <pvPortMalloc+0x188>)
 8009b1c:	681b      	ldr	r3, [r3, #0]
 8009b1e:	687a      	ldr	r2, [r7, #4]
 8009b20:	429a      	cmp	r2, r3
 8009b22:	d869      	bhi.n	8009bf8 <pvPortMalloc+0x150>
 8009b24:	4b43      	ldr	r3, [pc, #268]	; (8009c34 <pvPortMalloc+0x18c>)
 8009b26:	623b      	str	r3, [r7, #32]
 8009b28:	4b42      	ldr	r3, [pc, #264]	; (8009c34 <pvPortMalloc+0x18c>)
 8009b2a:	681b      	ldr	r3, [r3, #0]
 8009b2c:	627b      	str	r3, [r7, #36]	; 0x24
 8009b2e:	e004      	b.n	8009b3a <pvPortMalloc+0x92>
 8009b30:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009b32:	623b      	str	r3, [r7, #32]
 8009b34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009b36:	681b      	ldr	r3, [r3, #0]
 8009b38:	627b      	str	r3, [r7, #36]	; 0x24
 8009b3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009b3c:	685b      	ldr	r3, [r3, #4]
 8009b3e:	687a      	ldr	r2, [r7, #4]
 8009b40:	429a      	cmp	r2, r3
 8009b42:	d903      	bls.n	8009b4c <pvPortMalloc+0xa4>
 8009b44:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009b46:	681b      	ldr	r3, [r3, #0]
 8009b48:	2b00      	cmp	r3, #0
 8009b4a:	d1f1      	bne.n	8009b30 <pvPortMalloc+0x88>
 8009b4c:	4b36      	ldr	r3, [pc, #216]	; (8009c28 <pvPortMalloc+0x180>)
 8009b4e:	681b      	ldr	r3, [r3, #0]
 8009b50:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009b52:	429a      	cmp	r2, r3
 8009b54:	d050      	beq.n	8009bf8 <pvPortMalloc+0x150>
 8009b56:	6a3b      	ldr	r3, [r7, #32]
 8009b58:	681b      	ldr	r3, [r3, #0]
 8009b5a:	2208      	movs	r2, #8
 8009b5c:	4413      	add	r3, r2
 8009b5e:	61fb      	str	r3, [r7, #28]
 8009b60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009b62:	681a      	ldr	r2, [r3, #0]
 8009b64:	6a3b      	ldr	r3, [r7, #32]
 8009b66:	601a      	str	r2, [r3, #0]
 8009b68:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009b6a:	685a      	ldr	r2, [r3, #4]
 8009b6c:	687b      	ldr	r3, [r7, #4]
 8009b6e:	1ad2      	subs	r2, r2, r3
 8009b70:	2308      	movs	r3, #8
 8009b72:	005b      	lsls	r3, r3, #1
 8009b74:	429a      	cmp	r2, r3
 8009b76:	d91f      	bls.n	8009bb8 <pvPortMalloc+0x110>
 8009b78:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009b7a:	687b      	ldr	r3, [r7, #4]
 8009b7c:	4413      	add	r3, r2
 8009b7e:	61bb      	str	r3, [r7, #24]
 8009b80:	69bb      	ldr	r3, [r7, #24]
 8009b82:	f003 0307 	and.w	r3, r3, #7
 8009b86:	2b00      	cmp	r3, #0
 8009b88:	d00a      	beq.n	8009ba0 <pvPortMalloc+0xf8>
 8009b8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b8e:	f383 8811 	msr	BASEPRI, r3
 8009b92:	f3bf 8f6f 	isb	sy
 8009b96:	f3bf 8f4f 	dsb	sy
 8009b9a:	613b      	str	r3, [r7, #16]
 8009b9c:	bf00      	nop
 8009b9e:	e7fe      	b.n	8009b9e <pvPortMalloc+0xf6>
 8009ba0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009ba2:	685a      	ldr	r2, [r3, #4]
 8009ba4:	687b      	ldr	r3, [r7, #4]
 8009ba6:	1ad2      	subs	r2, r2, r3
 8009ba8:	69bb      	ldr	r3, [r7, #24]
 8009baa:	605a      	str	r2, [r3, #4]
 8009bac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009bae:	687a      	ldr	r2, [r7, #4]
 8009bb0:	605a      	str	r2, [r3, #4]
 8009bb2:	69b8      	ldr	r0, [r7, #24]
 8009bb4:	f000 f90a 	bl	8009dcc <prvInsertBlockIntoFreeList>
 8009bb8:	4b1d      	ldr	r3, [pc, #116]	; (8009c30 <pvPortMalloc+0x188>)
 8009bba:	681a      	ldr	r2, [r3, #0]
 8009bbc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009bbe:	685b      	ldr	r3, [r3, #4]
 8009bc0:	1ad3      	subs	r3, r2, r3
 8009bc2:	4a1b      	ldr	r2, [pc, #108]	; (8009c30 <pvPortMalloc+0x188>)
 8009bc4:	6013      	str	r3, [r2, #0]
 8009bc6:	4b1a      	ldr	r3, [pc, #104]	; (8009c30 <pvPortMalloc+0x188>)
 8009bc8:	681a      	ldr	r2, [r3, #0]
 8009bca:	4b1b      	ldr	r3, [pc, #108]	; (8009c38 <pvPortMalloc+0x190>)
 8009bcc:	681b      	ldr	r3, [r3, #0]
 8009bce:	429a      	cmp	r2, r3
 8009bd0:	d203      	bcs.n	8009bda <pvPortMalloc+0x132>
 8009bd2:	4b17      	ldr	r3, [pc, #92]	; (8009c30 <pvPortMalloc+0x188>)
 8009bd4:	681b      	ldr	r3, [r3, #0]
 8009bd6:	4a18      	ldr	r2, [pc, #96]	; (8009c38 <pvPortMalloc+0x190>)
 8009bd8:	6013      	str	r3, [r2, #0]
 8009bda:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009bdc:	685a      	ldr	r2, [r3, #4]
 8009bde:	4b13      	ldr	r3, [pc, #76]	; (8009c2c <pvPortMalloc+0x184>)
 8009be0:	681b      	ldr	r3, [r3, #0]
 8009be2:	431a      	orrs	r2, r3
 8009be4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009be6:	605a      	str	r2, [r3, #4]
 8009be8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009bea:	2200      	movs	r2, #0
 8009bec:	601a      	str	r2, [r3, #0]
 8009bee:	4b13      	ldr	r3, [pc, #76]	; (8009c3c <pvPortMalloc+0x194>)
 8009bf0:	681b      	ldr	r3, [r3, #0]
 8009bf2:	3301      	adds	r3, #1
 8009bf4:	4a11      	ldr	r2, [pc, #68]	; (8009c3c <pvPortMalloc+0x194>)
 8009bf6:	6013      	str	r3, [r2, #0]
 8009bf8:	f7fe fbfa 	bl	80083f0 <xTaskResumeAll>
 8009bfc:	69fb      	ldr	r3, [r7, #28]
 8009bfe:	f003 0307 	and.w	r3, r3, #7
 8009c02:	2b00      	cmp	r3, #0
 8009c04:	d00a      	beq.n	8009c1c <pvPortMalloc+0x174>
 8009c06:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c0a:	f383 8811 	msr	BASEPRI, r3
 8009c0e:	f3bf 8f6f 	isb	sy
 8009c12:	f3bf 8f4f 	dsb	sy
 8009c16:	60fb      	str	r3, [r7, #12]
 8009c18:	bf00      	nop
 8009c1a:	e7fe      	b.n	8009c1a <pvPortMalloc+0x172>
 8009c1c:	69fb      	ldr	r3, [r7, #28]
 8009c1e:	4618      	mov	r0, r3
 8009c20:	3728      	adds	r7, #40	; 0x28
 8009c22:	46bd      	mov	sp, r7
 8009c24:	bd80      	pop	{r7, pc}
 8009c26:	bf00      	nop
 8009c28:	20017a84 	.word	0x20017a84
 8009c2c:	20017a98 	.word	0x20017a98
 8009c30:	20017a88 	.word	0x20017a88
 8009c34:	20017a7c 	.word	0x20017a7c
 8009c38:	20017a8c 	.word	0x20017a8c
 8009c3c:	20017a90 	.word	0x20017a90

08009c40 <vPortFree>:
 8009c40:	b580      	push	{r7, lr}
 8009c42:	b086      	sub	sp, #24
 8009c44:	af00      	add	r7, sp, #0
 8009c46:	6078      	str	r0, [r7, #4]
 8009c48:	687b      	ldr	r3, [r7, #4]
 8009c4a:	617b      	str	r3, [r7, #20]
 8009c4c:	687b      	ldr	r3, [r7, #4]
 8009c4e:	2b00      	cmp	r3, #0
 8009c50:	d04d      	beq.n	8009cee <vPortFree+0xae>
 8009c52:	2308      	movs	r3, #8
 8009c54:	425b      	negs	r3, r3
 8009c56:	697a      	ldr	r2, [r7, #20]
 8009c58:	4413      	add	r3, r2
 8009c5a:	617b      	str	r3, [r7, #20]
 8009c5c:	697b      	ldr	r3, [r7, #20]
 8009c5e:	613b      	str	r3, [r7, #16]
 8009c60:	693b      	ldr	r3, [r7, #16]
 8009c62:	685a      	ldr	r2, [r3, #4]
 8009c64:	4b24      	ldr	r3, [pc, #144]	; (8009cf8 <vPortFree+0xb8>)
 8009c66:	681b      	ldr	r3, [r3, #0]
 8009c68:	4013      	ands	r3, r2
 8009c6a:	2b00      	cmp	r3, #0
 8009c6c:	d10a      	bne.n	8009c84 <vPortFree+0x44>
 8009c6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c72:	f383 8811 	msr	BASEPRI, r3
 8009c76:	f3bf 8f6f 	isb	sy
 8009c7a:	f3bf 8f4f 	dsb	sy
 8009c7e:	60fb      	str	r3, [r7, #12]
 8009c80:	bf00      	nop
 8009c82:	e7fe      	b.n	8009c82 <vPortFree+0x42>
 8009c84:	693b      	ldr	r3, [r7, #16]
 8009c86:	681b      	ldr	r3, [r3, #0]
 8009c88:	2b00      	cmp	r3, #0
 8009c8a:	d00a      	beq.n	8009ca2 <vPortFree+0x62>
 8009c8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c90:	f383 8811 	msr	BASEPRI, r3
 8009c94:	f3bf 8f6f 	isb	sy
 8009c98:	f3bf 8f4f 	dsb	sy
 8009c9c:	60bb      	str	r3, [r7, #8]
 8009c9e:	bf00      	nop
 8009ca0:	e7fe      	b.n	8009ca0 <vPortFree+0x60>
 8009ca2:	693b      	ldr	r3, [r7, #16]
 8009ca4:	685a      	ldr	r2, [r3, #4]
 8009ca6:	4b14      	ldr	r3, [pc, #80]	; (8009cf8 <vPortFree+0xb8>)
 8009ca8:	681b      	ldr	r3, [r3, #0]
 8009caa:	4013      	ands	r3, r2
 8009cac:	2b00      	cmp	r3, #0
 8009cae:	d01e      	beq.n	8009cee <vPortFree+0xae>
 8009cb0:	693b      	ldr	r3, [r7, #16]
 8009cb2:	681b      	ldr	r3, [r3, #0]
 8009cb4:	2b00      	cmp	r3, #0
 8009cb6:	d11a      	bne.n	8009cee <vPortFree+0xae>
 8009cb8:	693b      	ldr	r3, [r7, #16]
 8009cba:	685a      	ldr	r2, [r3, #4]
 8009cbc:	4b0e      	ldr	r3, [pc, #56]	; (8009cf8 <vPortFree+0xb8>)
 8009cbe:	681b      	ldr	r3, [r3, #0]
 8009cc0:	43db      	mvns	r3, r3
 8009cc2:	401a      	ands	r2, r3
 8009cc4:	693b      	ldr	r3, [r7, #16]
 8009cc6:	605a      	str	r2, [r3, #4]
 8009cc8:	f7fe fb84 	bl	80083d4 <vTaskSuspendAll>
 8009ccc:	693b      	ldr	r3, [r7, #16]
 8009cce:	685a      	ldr	r2, [r3, #4]
 8009cd0:	4b0a      	ldr	r3, [pc, #40]	; (8009cfc <vPortFree+0xbc>)
 8009cd2:	681b      	ldr	r3, [r3, #0]
 8009cd4:	4413      	add	r3, r2
 8009cd6:	4a09      	ldr	r2, [pc, #36]	; (8009cfc <vPortFree+0xbc>)
 8009cd8:	6013      	str	r3, [r2, #0]
 8009cda:	6938      	ldr	r0, [r7, #16]
 8009cdc:	f000 f876 	bl	8009dcc <prvInsertBlockIntoFreeList>
 8009ce0:	4b07      	ldr	r3, [pc, #28]	; (8009d00 <vPortFree+0xc0>)
 8009ce2:	681b      	ldr	r3, [r3, #0]
 8009ce4:	3301      	adds	r3, #1
 8009ce6:	4a06      	ldr	r2, [pc, #24]	; (8009d00 <vPortFree+0xc0>)
 8009ce8:	6013      	str	r3, [r2, #0]
 8009cea:	f7fe fb81 	bl	80083f0 <xTaskResumeAll>
 8009cee:	bf00      	nop
 8009cf0:	3718      	adds	r7, #24
 8009cf2:	46bd      	mov	sp, r7
 8009cf4:	bd80      	pop	{r7, pc}
 8009cf6:	bf00      	nop
 8009cf8:	20017a98 	.word	0x20017a98
 8009cfc:	20017a88 	.word	0x20017a88
 8009d00:	20017a94 	.word	0x20017a94

08009d04 <prvHeapInit>:
 8009d04:	b480      	push	{r7}
 8009d06:	b085      	sub	sp, #20
 8009d08:	af00      	add	r7, sp, #0
 8009d0a:	4b29      	ldr	r3, [pc, #164]	; (8009db0 <prvHeapInit+0xac>)
 8009d0c:	60bb      	str	r3, [r7, #8]
 8009d0e:	4b29      	ldr	r3, [pc, #164]	; (8009db4 <prvHeapInit+0xb0>)
 8009d10:	60fb      	str	r3, [r7, #12]
 8009d12:	68fb      	ldr	r3, [r7, #12]
 8009d14:	f003 0307 	and.w	r3, r3, #7
 8009d18:	2b00      	cmp	r3, #0
 8009d1a:	d00c      	beq.n	8009d36 <prvHeapInit+0x32>
 8009d1c:	68fb      	ldr	r3, [r7, #12]
 8009d1e:	3307      	adds	r3, #7
 8009d20:	60fb      	str	r3, [r7, #12]
 8009d22:	68fb      	ldr	r3, [r7, #12]
 8009d24:	f023 0307 	bic.w	r3, r3, #7
 8009d28:	60fb      	str	r3, [r7, #12]
 8009d2a:	68ba      	ldr	r2, [r7, #8]
 8009d2c:	68fb      	ldr	r3, [r7, #12]
 8009d2e:	1ad3      	subs	r3, r2, r3
 8009d30:	4a20      	ldr	r2, [pc, #128]	; (8009db4 <prvHeapInit+0xb0>)
 8009d32:	4413      	add	r3, r2
 8009d34:	60bb      	str	r3, [r7, #8]
 8009d36:	68fb      	ldr	r3, [r7, #12]
 8009d38:	607b      	str	r3, [r7, #4]
 8009d3a:	4a1f      	ldr	r2, [pc, #124]	; (8009db8 <prvHeapInit+0xb4>)
 8009d3c:	687b      	ldr	r3, [r7, #4]
 8009d3e:	6013      	str	r3, [r2, #0]
 8009d40:	4b1d      	ldr	r3, [pc, #116]	; (8009db8 <prvHeapInit+0xb4>)
 8009d42:	2200      	movs	r2, #0
 8009d44:	605a      	str	r2, [r3, #4]
 8009d46:	687b      	ldr	r3, [r7, #4]
 8009d48:	68ba      	ldr	r2, [r7, #8]
 8009d4a:	4413      	add	r3, r2
 8009d4c:	60fb      	str	r3, [r7, #12]
 8009d4e:	2208      	movs	r2, #8
 8009d50:	68fb      	ldr	r3, [r7, #12]
 8009d52:	1a9b      	subs	r3, r3, r2
 8009d54:	60fb      	str	r3, [r7, #12]
 8009d56:	68fb      	ldr	r3, [r7, #12]
 8009d58:	f023 0307 	bic.w	r3, r3, #7
 8009d5c:	60fb      	str	r3, [r7, #12]
 8009d5e:	68fb      	ldr	r3, [r7, #12]
 8009d60:	4a16      	ldr	r2, [pc, #88]	; (8009dbc <prvHeapInit+0xb8>)
 8009d62:	6013      	str	r3, [r2, #0]
 8009d64:	4b15      	ldr	r3, [pc, #84]	; (8009dbc <prvHeapInit+0xb8>)
 8009d66:	681b      	ldr	r3, [r3, #0]
 8009d68:	2200      	movs	r2, #0
 8009d6a:	605a      	str	r2, [r3, #4]
 8009d6c:	4b13      	ldr	r3, [pc, #76]	; (8009dbc <prvHeapInit+0xb8>)
 8009d6e:	681b      	ldr	r3, [r3, #0]
 8009d70:	2200      	movs	r2, #0
 8009d72:	601a      	str	r2, [r3, #0]
 8009d74:	687b      	ldr	r3, [r7, #4]
 8009d76:	603b      	str	r3, [r7, #0]
 8009d78:	683b      	ldr	r3, [r7, #0]
 8009d7a:	68fa      	ldr	r2, [r7, #12]
 8009d7c:	1ad2      	subs	r2, r2, r3
 8009d7e:	683b      	ldr	r3, [r7, #0]
 8009d80:	605a      	str	r2, [r3, #4]
 8009d82:	4b0e      	ldr	r3, [pc, #56]	; (8009dbc <prvHeapInit+0xb8>)
 8009d84:	681a      	ldr	r2, [r3, #0]
 8009d86:	683b      	ldr	r3, [r7, #0]
 8009d88:	601a      	str	r2, [r3, #0]
 8009d8a:	683b      	ldr	r3, [r7, #0]
 8009d8c:	685b      	ldr	r3, [r3, #4]
 8009d8e:	4a0c      	ldr	r2, [pc, #48]	; (8009dc0 <prvHeapInit+0xbc>)
 8009d90:	6013      	str	r3, [r2, #0]
 8009d92:	683b      	ldr	r3, [r7, #0]
 8009d94:	685b      	ldr	r3, [r3, #4]
 8009d96:	4a0b      	ldr	r2, [pc, #44]	; (8009dc4 <prvHeapInit+0xc0>)
 8009d98:	6013      	str	r3, [r2, #0]
 8009d9a:	4b0b      	ldr	r3, [pc, #44]	; (8009dc8 <prvHeapInit+0xc4>)
 8009d9c:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8009da0:	601a      	str	r2, [r3, #0]
 8009da2:	bf00      	nop
 8009da4:	3714      	adds	r7, #20
 8009da6:	46bd      	mov	sp, r7
 8009da8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dac:	4770      	bx	lr
 8009dae:	bf00      	nop
 8009db0:	00013880 	.word	0x00013880
 8009db4:	200041fc 	.word	0x200041fc
 8009db8:	20017a7c 	.word	0x20017a7c
 8009dbc:	20017a84 	.word	0x20017a84
 8009dc0:	20017a8c 	.word	0x20017a8c
 8009dc4:	20017a88 	.word	0x20017a88
 8009dc8:	20017a98 	.word	0x20017a98

08009dcc <prvInsertBlockIntoFreeList>:
 8009dcc:	b480      	push	{r7}
 8009dce:	b085      	sub	sp, #20
 8009dd0:	af00      	add	r7, sp, #0
 8009dd2:	6078      	str	r0, [r7, #4]
 8009dd4:	4b28      	ldr	r3, [pc, #160]	; (8009e78 <prvInsertBlockIntoFreeList+0xac>)
 8009dd6:	60fb      	str	r3, [r7, #12]
 8009dd8:	e002      	b.n	8009de0 <prvInsertBlockIntoFreeList+0x14>
 8009dda:	68fb      	ldr	r3, [r7, #12]
 8009ddc:	681b      	ldr	r3, [r3, #0]
 8009dde:	60fb      	str	r3, [r7, #12]
 8009de0:	68fb      	ldr	r3, [r7, #12]
 8009de2:	681b      	ldr	r3, [r3, #0]
 8009de4:	687a      	ldr	r2, [r7, #4]
 8009de6:	429a      	cmp	r2, r3
 8009de8:	d8f7      	bhi.n	8009dda <prvInsertBlockIntoFreeList+0xe>
 8009dea:	68fb      	ldr	r3, [r7, #12]
 8009dec:	60bb      	str	r3, [r7, #8]
 8009dee:	68fb      	ldr	r3, [r7, #12]
 8009df0:	685b      	ldr	r3, [r3, #4]
 8009df2:	68ba      	ldr	r2, [r7, #8]
 8009df4:	4413      	add	r3, r2
 8009df6:	687a      	ldr	r2, [r7, #4]
 8009df8:	429a      	cmp	r2, r3
 8009dfa:	d108      	bne.n	8009e0e <prvInsertBlockIntoFreeList+0x42>
 8009dfc:	68fb      	ldr	r3, [r7, #12]
 8009dfe:	685a      	ldr	r2, [r3, #4]
 8009e00:	687b      	ldr	r3, [r7, #4]
 8009e02:	685b      	ldr	r3, [r3, #4]
 8009e04:	441a      	add	r2, r3
 8009e06:	68fb      	ldr	r3, [r7, #12]
 8009e08:	605a      	str	r2, [r3, #4]
 8009e0a:	68fb      	ldr	r3, [r7, #12]
 8009e0c:	607b      	str	r3, [r7, #4]
 8009e0e:	687b      	ldr	r3, [r7, #4]
 8009e10:	60bb      	str	r3, [r7, #8]
 8009e12:	687b      	ldr	r3, [r7, #4]
 8009e14:	685b      	ldr	r3, [r3, #4]
 8009e16:	68ba      	ldr	r2, [r7, #8]
 8009e18:	441a      	add	r2, r3
 8009e1a:	68fb      	ldr	r3, [r7, #12]
 8009e1c:	681b      	ldr	r3, [r3, #0]
 8009e1e:	429a      	cmp	r2, r3
 8009e20:	d118      	bne.n	8009e54 <prvInsertBlockIntoFreeList+0x88>
 8009e22:	68fb      	ldr	r3, [r7, #12]
 8009e24:	681a      	ldr	r2, [r3, #0]
 8009e26:	4b15      	ldr	r3, [pc, #84]	; (8009e7c <prvInsertBlockIntoFreeList+0xb0>)
 8009e28:	681b      	ldr	r3, [r3, #0]
 8009e2a:	429a      	cmp	r2, r3
 8009e2c:	d00d      	beq.n	8009e4a <prvInsertBlockIntoFreeList+0x7e>
 8009e2e:	687b      	ldr	r3, [r7, #4]
 8009e30:	685a      	ldr	r2, [r3, #4]
 8009e32:	68fb      	ldr	r3, [r7, #12]
 8009e34:	681b      	ldr	r3, [r3, #0]
 8009e36:	685b      	ldr	r3, [r3, #4]
 8009e38:	441a      	add	r2, r3
 8009e3a:	687b      	ldr	r3, [r7, #4]
 8009e3c:	605a      	str	r2, [r3, #4]
 8009e3e:	68fb      	ldr	r3, [r7, #12]
 8009e40:	681b      	ldr	r3, [r3, #0]
 8009e42:	681a      	ldr	r2, [r3, #0]
 8009e44:	687b      	ldr	r3, [r7, #4]
 8009e46:	601a      	str	r2, [r3, #0]
 8009e48:	e008      	b.n	8009e5c <prvInsertBlockIntoFreeList+0x90>
 8009e4a:	4b0c      	ldr	r3, [pc, #48]	; (8009e7c <prvInsertBlockIntoFreeList+0xb0>)
 8009e4c:	681a      	ldr	r2, [r3, #0]
 8009e4e:	687b      	ldr	r3, [r7, #4]
 8009e50:	601a      	str	r2, [r3, #0]
 8009e52:	e003      	b.n	8009e5c <prvInsertBlockIntoFreeList+0x90>
 8009e54:	68fb      	ldr	r3, [r7, #12]
 8009e56:	681a      	ldr	r2, [r3, #0]
 8009e58:	687b      	ldr	r3, [r7, #4]
 8009e5a:	601a      	str	r2, [r3, #0]
 8009e5c:	68fa      	ldr	r2, [r7, #12]
 8009e5e:	687b      	ldr	r3, [r7, #4]
 8009e60:	429a      	cmp	r2, r3
 8009e62:	d002      	beq.n	8009e6a <prvInsertBlockIntoFreeList+0x9e>
 8009e64:	68fb      	ldr	r3, [r7, #12]
 8009e66:	687a      	ldr	r2, [r7, #4]
 8009e68:	601a      	str	r2, [r3, #0]
 8009e6a:	bf00      	nop
 8009e6c:	3714      	adds	r7, #20
 8009e6e:	46bd      	mov	sp, r7
 8009e70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e74:	4770      	bx	lr
 8009e76:	bf00      	nop
 8009e78:	20017a7c 	.word	0x20017a7c
 8009e7c:	20017a84 	.word	0x20017a84

08009e80 <__errno>:
 8009e80:	4b01      	ldr	r3, [pc, #4]	; (8009e88 <__errno+0x8>)
 8009e82:	6818      	ldr	r0, [r3, #0]
 8009e84:	4770      	bx	lr
 8009e86:	bf00      	nop
 8009e88:	20000020 	.word	0x20000020

08009e8c <__sflush_r>:
 8009e8c:	898b      	ldrh	r3, [r1, #12]
 8009e8e:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8009e92:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009e96:	4605      	mov	r5, r0
 8009e98:	0718      	lsls	r0, r3, #28
 8009e9a:	460c      	mov	r4, r1
 8009e9c:	d45f      	bmi.n	8009f5e <__sflush_r+0xd2>
 8009e9e:	684b      	ldr	r3, [r1, #4]
 8009ea0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009ea4:	2b00      	cmp	r3, #0
 8009ea6:	818a      	strh	r2, [r1, #12]
 8009ea8:	dc05      	bgt.n	8009eb6 <__sflush_r+0x2a>
 8009eaa:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8009eac:	2b00      	cmp	r3, #0
 8009eae:	dc02      	bgt.n	8009eb6 <__sflush_r+0x2a>
 8009eb0:	2000      	movs	r0, #0
 8009eb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009eb6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8009eb8:	2e00      	cmp	r6, #0
 8009eba:	d0f9      	beq.n	8009eb0 <__sflush_r+0x24>
 8009ebc:	2300      	movs	r3, #0
 8009ebe:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8009ec2:	682f      	ldr	r7, [r5, #0]
 8009ec4:	602b      	str	r3, [r5, #0]
 8009ec6:	d036      	beq.n	8009f36 <__sflush_r+0xaa>
 8009ec8:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8009eca:	89a3      	ldrh	r3, [r4, #12]
 8009ecc:	075a      	lsls	r2, r3, #29
 8009ece:	d505      	bpl.n	8009edc <__sflush_r+0x50>
 8009ed0:	6863      	ldr	r3, [r4, #4]
 8009ed2:	1ac0      	subs	r0, r0, r3
 8009ed4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009ed6:	b10b      	cbz	r3, 8009edc <__sflush_r+0x50>
 8009ed8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009eda:	1ac0      	subs	r0, r0, r3
 8009edc:	2300      	movs	r3, #0
 8009ede:	4602      	mov	r2, r0
 8009ee0:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8009ee2:	69e1      	ldr	r1, [r4, #28]
 8009ee4:	4628      	mov	r0, r5
 8009ee6:	47b0      	blx	r6
 8009ee8:	1c43      	adds	r3, r0, #1
 8009eea:	89a3      	ldrh	r3, [r4, #12]
 8009eec:	d106      	bne.n	8009efc <__sflush_r+0x70>
 8009eee:	6829      	ldr	r1, [r5, #0]
 8009ef0:	291d      	cmp	r1, #29
 8009ef2:	d830      	bhi.n	8009f56 <__sflush_r+0xca>
 8009ef4:	4a2b      	ldr	r2, [pc, #172]	; (8009fa4 <__sflush_r+0x118>)
 8009ef6:	40ca      	lsrs	r2, r1
 8009ef8:	07d6      	lsls	r6, r2, #31
 8009efa:	d52c      	bpl.n	8009f56 <__sflush_r+0xca>
 8009efc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8009f00:	b21b      	sxth	r3, r3
 8009f02:	2200      	movs	r2, #0
 8009f04:	6062      	str	r2, [r4, #4]
 8009f06:	04d9      	lsls	r1, r3, #19
 8009f08:	6922      	ldr	r2, [r4, #16]
 8009f0a:	81a3      	strh	r3, [r4, #12]
 8009f0c:	6022      	str	r2, [r4, #0]
 8009f0e:	d504      	bpl.n	8009f1a <__sflush_r+0x8e>
 8009f10:	1c42      	adds	r2, r0, #1
 8009f12:	d101      	bne.n	8009f18 <__sflush_r+0x8c>
 8009f14:	682b      	ldr	r3, [r5, #0]
 8009f16:	b903      	cbnz	r3, 8009f1a <__sflush_r+0x8e>
 8009f18:	6520      	str	r0, [r4, #80]	; 0x50
 8009f1a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8009f1c:	602f      	str	r7, [r5, #0]
 8009f1e:	2900      	cmp	r1, #0
 8009f20:	d0c6      	beq.n	8009eb0 <__sflush_r+0x24>
 8009f22:	f104 0340 	add.w	r3, r4, #64	; 0x40
 8009f26:	4299      	cmp	r1, r3
 8009f28:	d002      	beq.n	8009f30 <__sflush_r+0xa4>
 8009f2a:	4628      	mov	r0, r5
 8009f2c:	f000 f936 	bl	800a19c <_free_r>
 8009f30:	2000      	movs	r0, #0
 8009f32:	6320      	str	r0, [r4, #48]	; 0x30
 8009f34:	e7bd      	b.n	8009eb2 <__sflush_r+0x26>
 8009f36:	69e1      	ldr	r1, [r4, #28]
 8009f38:	2301      	movs	r3, #1
 8009f3a:	4628      	mov	r0, r5
 8009f3c:	47b0      	blx	r6
 8009f3e:	1c41      	adds	r1, r0, #1
 8009f40:	d1c3      	bne.n	8009eca <__sflush_r+0x3e>
 8009f42:	682b      	ldr	r3, [r5, #0]
 8009f44:	2b00      	cmp	r3, #0
 8009f46:	d0c0      	beq.n	8009eca <__sflush_r+0x3e>
 8009f48:	2b1d      	cmp	r3, #29
 8009f4a:	d001      	beq.n	8009f50 <__sflush_r+0xc4>
 8009f4c:	2b16      	cmp	r3, #22
 8009f4e:	d101      	bne.n	8009f54 <__sflush_r+0xc8>
 8009f50:	602f      	str	r7, [r5, #0]
 8009f52:	e7ad      	b.n	8009eb0 <__sflush_r+0x24>
 8009f54:	89a3      	ldrh	r3, [r4, #12]
 8009f56:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009f5a:	81a3      	strh	r3, [r4, #12]
 8009f5c:	e7a9      	b.n	8009eb2 <__sflush_r+0x26>
 8009f5e:	690f      	ldr	r7, [r1, #16]
 8009f60:	2f00      	cmp	r7, #0
 8009f62:	d0a5      	beq.n	8009eb0 <__sflush_r+0x24>
 8009f64:	079b      	lsls	r3, r3, #30
 8009f66:	680e      	ldr	r6, [r1, #0]
 8009f68:	bf08      	it	eq
 8009f6a:	694b      	ldreq	r3, [r1, #20]
 8009f6c:	600f      	str	r7, [r1, #0]
 8009f6e:	bf18      	it	ne
 8009f70:	2300      	movne	r3, #0
 8009f72:	eba6 0807 	sub.w	r8, r6, r7
 8009f76:	608b      	str	r3, [r1, #8]
 8009f78:	f1b8 0f00 	cmp.w	r8, #0
 8009f7c:	dd98      	ble.n	8009eb0 <__sflush_r+0x24>
 8009f7e:	69e1      	ldr	r1, [r4, #28]
 8009f80:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8009f82:	4643      	mov	r3, r8
 8009f84:	463a      	mov	r2, r7
 8009f86:	4628      	mov	r0, r5
 8009f88:	47b0      	blx	r6
 8009f8a:	2800      	cmp	r0, #0
 8009f8c:	dc06      	bgt.n	8009f9c <__sflush_r+0x110>
 8009f8e:	89a3      	ldrh	r3, [r4, #12]
 8009f90:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009f94:	81a3      	strh	r3, [r4, #12]
 8009f96:	f04f 30ff 	mov.w	r0, #4294967295
 8009f9a:	e78a      	b.n	8009eb2 <__sflush_r+0x26>
 8009f9c:	4407      	add	r7, r0
 8009f9e:	eba8 0800 	sub.w	r8, r8, r0
 8009fa2:	e7e9      	b.n	8009f78 <__sflush_r+0xec>
 8009fa4:	20400001 	.word	0x20400001

08009fa8 <_fflush_r>:
 8009fa8:	b538      	push	{r3, r4, r5, lr}
 8009faa:	460c      	mov	r4, r1
 8009fac:	4605      	mov	r5, r0
 8009fae:	b118      	cbz	r0, 8009fb8 <_fflush_r+0x10>
 8009fb0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8009fb2:	b90b      	cbnz	r3, 8009fb8 <_fflush_r+0x10>
 8009fb4:	f000 f876 	bl	800a0a4 <__sinit>
 8009fb8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009fbc:	b1bb      	cbz	r3, 8009fee <_fflush_r+0x46>
 8009fbe:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8009fc0:	07d0      	lsls	r0, r2, #31
 8009fc2:	d404      	bmi.n	8009fce <_fflush_r+0x26>
 8009fc4:	0599      	lsls	r1, r3, #22
 8009fc6:	d402      	bmi.n	8009fce <_fflush_r+0x26>
 8009fc8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009fca:	f000 f9ed 	bl	800a3a8 <__retarget_lock_acquire_recursive>
 8009fce:	4628      	mov	r0, r5
 8009fd0:	4621      	mov	r1, r4
 8009fd2:	f7ff ff5b 	bl	8009e8c <__sflush_r>
 8009fd6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8009fd8:	07da      	lsls	r2, r3, #31
 8009fda:	4605      	mov	r5, r0
 8009fdc:	d405      	bmi.n	8009fea <_fflush_r+0x42>
 8009fde:	89a3      	ldrh	r3, [r4, #12]
 8009fe0:	059b      	lsls	r3, r3, #22
 8009fe2:	d402      	bmi.n	8009fea <_fflush_r+0x42>
 8009fe4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009fe6:	f000 f9e0 	bl	800a3aa <__retarget_lock_release_recursive>
 8009fea:	4628      	mov	r0, r5
 8009fec:	bd38      	pop	{r3, r4, r5, pc}
 8009fee:	461d      	mov	r5, r3
 8009ff0:	e7fb      	b.n	8009fea <_fflush_r+0x42>
	...

08009ff4 <fflush>:
 8009ff4:	4601      	mov	r1, r0
 8009ff6:	b920      	cbnz	r0, 800a002 <fflush+0xe>
 8009ff8:	4b04      	ldr	r3, [pc, #16]	; (800a00c <fflush+0x18>)
 8009ffa:	4905      	ldr	r1, [pc, #20]	; (800a010 <fflush+0x1c>)
 8009ffc:	6818      	ldr	r0, [r3, #0]
 8009ffe:	f000 b98d 	b.w	800a31c <_fwalk_reent>
 800a002:	4b04      	ldr	r3, [pc, #16]	; (800a014 <fflush+0x20>)
 800a004:	6818      	ldr	r0, [r3, #0]
 800a006:	f7ff bfcf 	b.w	8009fa8 <_fflush_r>
 800a00a:	bf00      	nop
 800a00c:	08010c70 	.word	0x08010c70
 800a010:	08009fa9 	.word	0x08009fa9
 800a014:	20000020 	.word	0x20000020

0800a018 <std>:
 800a018:	2300      	movs	r3, #0
 800a01a:	b510      	push	{r4, lr}
 800a01c:	4604      	mov	r4, r0
 800a01e:	e9c0 3300 	strd	r3, r3, [r0]
 800a022:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800a026:	6083      	str	r3, [r0, #8]
 800a028:	8181      	strh	r1, [r0, #12]
 800a02a:	6643      	str	r3, [r0, #100]	; 0x64
 800a02c:	81c2      	strh	r2, [r0, #14]
 800a02e:	6183      	str	r3, [r0, #24]
 800a030:	4619      	mov	r1, r3
 800a032:	2208      	movs	r2, #8
 800a034:	305c      	adds	r0, #92	; 0x5c
 800a036:	f000 fc13 	bl	800a860 <memset>
 800a03a:	4b07      	ldr	r3, [pc, #28]	; (800a058 <std+0x40>)
 800a03c:	6223      	str	r3, [r4, #32]
 800a03e:	4b07      	ldr	r3, [pc, #28]	; (800a05c <std+0x44>)
 800a040:	6263      	str	r3, [r4, #36]	; 0x24
 800a042:	4b07      	ldr	r3, [pc, #28]	; (800a060 <std+0x48>)
 800a044:	62a3      	str	r3, [r4, #40]	; 0x28
 800a046:	4b07      	ldr	r3, [pc, #28]	; (800a064 <std+0x4c>)
 800a048:	61e4      	str	r4, [r4, #28]
 800a04a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800a04c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800a050:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a054:	f000 b9a6 	b.w	800a3a4 <__retarget_lock_init_recursive>
 800a058:	0800ad81 	.word	0x0800ad81
 800a05c:	0800ada3 	.word	0x0800ada3
 800a060:	0800addb 	.word	0x0800addb
 800a064:	0800adff 	.word	0x0800adff

0800a068 <_cleanup_r>:
 800a068:	4901      	ldr	r1, [pc, #4]	; (800a070 <_cleanup_r+0x8>)
 800a06a:	f000 b957 	b.w	800a31c <_fwalk_reent>
 800a06e:	bf00      	nop
 800a070:	0800dc25 	.word	0x0800dc25

0800a074 <__sfp_lock_acquire>:
 800a074:	4801      	ldr	r0, [pc, #4]	; (800a07c <__sfp_lock_acquire+0x8>)
 800a076:	f000 b997 	b.w	800a3a8 <__retarget_lock_acquire_recursive>
 800a07a:	bf00      	nop
 800a07c:	20017a9e 	.word	0x20017a9e

0800a080 <__sfp_lock_release>:
 800a080:	4801      	ldr	r0, [pc, #4]	; (800a088 <__sfp_lock_release+0x8>)
 800a082:	f000 b992 	b.w	800a3aa <__retarget_lock_release_recursive>
 800a086:	bf00      	nop
 800a088:	20017a9e 	.word	0x20017a9e

0800a08c <__sinit_lock_acquire>:
 800a08c:	4801      	ldr	r0, [pc, #4]	; (800a094 <__sinit_lock_acquire+0x8>)
 800a08e:	f000 b98b 	b.w	800a3a8 <__retarget_lock_acquire_recursive>
 800a092:	bf00      	nop
 800a094:	20017a9f 	.word	0x20017a9f

0800a098 <__sinit_lock_release>:
 800a098:	4801      	ldr	r0, [pc, #4]	; (800a0a0 <__sinit_lock_release+0x8>)
 800a09a:	f000 b986 	b.w	800a3aa <__retarget_lock_release_recursive>
 800a09e:	bf00      	nop
 800a0a0:	20017a9f 	.word	0x20017a9f

0800a0a4 <__sinit>:
 800a0a4:	b510      	push	{r4, lr}
 800a0a6:	4604      	mov	r4, r0
 800a0a8:	f7ff fff0 	bl	800a08c <__sinit_lock_acquire>
 800a0ac:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a0ae:	b11a      	cbz	r2, 800a0b8 <__sinit+0x14>
 800a0b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a0b4:	f7ff bff0 	b.w	800a098 <__sinit_lock_release>
 800a0b8:	4b0d      	ldr	r3, [pc, #52]	; (800a0f0 <__sinit+0x4c>)
 800a0ba:	63e3      	str	r3, [r4, #60]	; 0x3c
 800a0bc:	2303      	movs	r3, #3
 800a0be:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
 800a0c2:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
 800a0c6:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
 800a0ca:	6860      	ldr	r0, [r4, #4]
 800a0cc:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
 800a0d0:	2104      	movs	r1, #4
 800a0d2:	f7ff ffa1 	bl	800a018 <std>
 800a0d6:	68a0      	ldr	r0, [r4, #8]
 800a0d8:	2201      	movs	r2, #1
 800a0da:	2109      	movs	r1, #9
 800a0dc:	f7ff ff9c 	bl	800a018 <std>
 800a0e0:	68e0      	ldr	r0, [r4, #12]
 800a0e2:	2202      	movs	r2, #2
 800a0e4:	2112      	movs	r1, #18
 800a0e6:	f7ff ff97 	bl	800a018 <std>
 800a0ea:	2301      	movs	r3, #1
 800a0ec:	63a3      	str	r3, [r4, #56]	; 0x38
 800a0ee:	e7df      	b.n	800a0b0 <__sinit+0xc>
 800a0f0:	0800a069 	.word	0x0800a069

0800a0f4 <_malloc_trim_r>:
 800a0f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a0f8:	4606      	mov	r6, r0
 800a0fa:	2008      	movs	r0, #8
 800a0fc:	460c      	mov	r4, r1
 800a0fe:	f002 fecf 	bl	800cea0 <sysconf>
 800a102:	4f23      	ldr	r7, [pc, #140]	; (800a190 <_malloc_trim_r+0x9c>)
 800a104:	4680      	mov	r8, r0
 800a106:	4630      	mov	r0, r6
 800a108:	f000 fbb2 	bl	800a870 <__malloc_lock>
 800a10c:	68bb      	ldr	r3, [r7, #8]
 800a10e:	685d      	ldr	r5, [r3, #4]
 800a110:	f025 0503 	bic.w	r5, r5, #3
 800a114:	1b2c      	subs	r4, r5, r4
 800a116:	3c11      	subs	r4, #17
 800a118:	4444      	add	r4, r8
 800a11a:	fbb4 f4f8 	udiv	r4, r4, r8
 800a11e:	3c01      	subs	r4, #1
 800a120:	fb08 f404 	mul.w	r4, r8, r4
 800a124:	45a0      	cmp	r8, r4
 800a126:	dd05      	ble.n	800a134 <_malloc_trim_r+0x40>
 800a128:	4630      	mov	r0, r6
 800a12a:	f000 fba7 	bl	800a87c <__malloc_unlock>
 800a12e:	2000      	movs	r0, #0
 800a130:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a134:	2100      	movs	r1, #0
 800a136:	4630      	mov	r0, r6
 800a138:	f000 fdf2 	bl	800ad20 <_sbrk_r>
 800a13c:	68bb      	ldr	r3, [r7, #8]
 800a13e:	442b      	add	r3, r5
 800a140:	4298      	cmp	r0, r3
 800a142:	d1f1      	bne.n	800a128 <_malloc_trim_r+0x34>
 800a144:	4261      	negs	r1, r4
 800a146:	4630      	mov	r0, r6
 800a148:	f000 fdea 	bl	800ad20 <_sbrk_r>
 800a14c:	3001      	adds	r0, #1
 800a14e:	d110      	bne.n	800a172 <_malloc_trim_r+0x7e>
 800a150:	2100      	movs	r1, #0
 800a152:	4630      	mov	r0, r6
 800a154:	f000 fde4 	bl	800ad20 <_sbrk_r>
 800a158:	68ba      	ldr	r2, [r7, #8]
 800a15a:	1a83      	subs	r3, r0, r2
 800a15c:	2b0f      	cmp	r3, #15
 800a15e:	dde3      	ble.n	800a128 <_malloc_trim_r+0x34>
 800a160:	490c      	ldr	r1, [pc, #48]	; (800a194 <_malloc_trim_r+0xa0>)
 800a162:	6809      	ldr	r1, [r1, #0]
 800a164:	1a40      	subs	r0, r0, r1
 800a166:	490c      	ldr	r1, [pc, #48]	; (800a198 <_malloc_trim_r+0xa4>)
 800a168:	f043 0301 	orr.w	r3, r3, #1
 800a16c:	6008      	str	r0, [r1, #0]
 800a16e:	6053      	str	r3, [r2, #4]
 800a170:	e7da      	b.n	800a128 <_malloc_trim_r+0x34>
 800a172:	68bb      	ldr	r3, [r7, #8]
 800a174:	4a08      	ldr	r2, [pc, #32]	; (800a198 <_malloc_trim_r+0xa4>)
 800a176:	1b2d      	subs	r5, r5, r4
 800a178:	f045 0501 	orr.w	r5, r5, #1
 800a17c:	605d      	str	r5, [r3, #4]
 800a17e:	6813      	ldr	r3, [r2, #0]
 800a180:	4630      	mov	r0, r6
 800a182:	1b1b      	subs	r3, r3, r4
 800a184:	6013      	str	r3, [r2, #0]
 800a186:	f000 fb79 	bl	800a87c <__malloc_unlock>
 800a18a:	2001      	movs	r0, #1
 800a18c:	e7d0      	b.n	800a130 <_malloc_trim_r+0x3c>
 800a18e:	bf00      	nop
 800a190:	20000450 	.word	0x20000450
 800a194:	20000858 	.word	0x20000858
 800a198:	20017aa0 	.word	0x20017aa0

0800a19c <_free_r>:
 800a19c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a19e:	4605      	mov	r5, r0
 800a1a0:	460f      	mov	r7, r1
 800a1a2:	2900      	cmp	r1, #0
 800a1a4:	f000 80b1 	beq.w	800a30a <_free_r+0x16e>
 800a1a8:	f000 fb62 	bl	800a870 <__malloc_lock>
 800a1ac:	f857 2c04 	ldr.w	r2, [r7, #-4]
 800a1b0:	4856      	ldr	r0, [pc, #344]	; (800a30c <_free_r+0x170>)
 800a1b2:	f022 0401 	bic.w	r4, r2, #1
 800a1b6:	f1a7 0308 	sub.w	r3, r7, #8
 800a1ba:	eb03 0c04 	add.w	ip, r3, r4
 800a1be:	6881      	ldr	r1, [r0, #8]
 800a1c0:	f8dc 6004 	ldr.w	r6, [ip, #4]
 800a1c4:	4561      	cmp	r1, ip
 800a1c6:	f026 0603 	bic.w	r6, r6, #3
 800a1ca:	f002 0201 	and.w	r2, r2, #1
 800a1ce:	d11b      	bne.n	800a208 <_free_r+0x6c>
 800a1d0:	4434      	add	r4, r6
 800a1d2:	b93a      	cbnz	r2, 800a1e4 <_free_r+0x48>
 800a1d4:	f857 2c08 	ldr.w	r2, [r7, #-8]
 800a1d8:	1a9b      	subs	r3, r3, r2
 800a1da:	4414      	add	r4, r2
 800a1dc:	e9d3 1202 	ldrd	r1, r2, [r3, #8]
 800a1e0:	60ca      	str	r2, [r1, #12]
 800a1e2:	6091      	str	r1, [r2, #8]
 800a1e4:	f044 0201 	orr.w	r2, r4, #1
 800a1e8:	605a      	str	r2, [r3, #4]
 800a1ea:	6083      	str	r3, [r0, #8]
 800a1ec:	4b48      	ldr	r3, [pc, #288]	; (800a310 <_free_r+0x174>)
 800a1ee:	681b      	ldr	r3, [r3, #0]
 800a1f0:	42a3      	cmp	r3, r4
 800a1f2:	d804      	bhi.n	800a1fe <_free_r+0x62>
 800a1f4:	4b47      	ldr	r3, [pc, #284]	; (800a314 <_free_r+0x178>)
 800a1f6:	4628      	mov	r0, r5
 800a1f8:	6819      	ldr	r1, [r3, #0]
 800a1fa:	f7ff ff7b 	bl	800a0f4 <_malloc_trim_r>
 800a1fe:	4628      	mov	r0, r5
 800a200:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800a204:	f000 bb3a 	b.w	800a87c <__malloc_unlock>
 800a208:	f8cc 6004 	str.w	r6, [ip, #4]
 800a20c:	2a00      	cmp	r2, #0
 800a20e:	d138      	bne.n	800a282 <_free_r+0xe6>
 800a210:	f857 1c08 	ldr.w	r1, [r7, #-8]
 800a214:	1a5b      	subs	r3, r3, r1
 800a216:	440c      	add	r4, r1
 800a218:	6899      	ldr	r1, [r3, #8]
 800a21a:	f100 0708 	add.w	r7, r0, #8
 800a21e:	42b9      	cmp	r1, r7
 800a220:	d031      	beq.n	800a286 <_free_r+0xea>
 800a222:	68df      	ldr	r7, [r3, #12]
 800a224:	60cf      	str	r7, [r1, #12]
 800a226:	60b9      	str	r1, [r7, #8]
 800a228:	eb0c 0106 	add.w	r1, ip, r6
 800a22c:	6849      	ldr	r1, [r1, #4]
 800a22e:	07c9      	lsls	r1, r1, #31
 800a230:	d40b      	bmi.n	800a24a <_free_r+0xae>
 800a232:	f8dc 1008 	ldr.w	r1, [ip, #8]
 800a236:	4434      	add	r4, r6
 800a238:	bb3a      	cbnz	r2, 800a28a <_free_r+0xee>
 800a23a:	4e37      	ldr	r6, [pc, #220]	; (800a318 <_free_r+0x17c>)
 800a23c:	42b1      	cmp	r1, r6
 800a23e:	d124      	bne.n	800a28a <_free_r+0xee>
 800a240:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800a244:	e9c3 1102 	strd	r1, r1, [r3, #8]
 800a248:	2201      	movs	r2, #1
 800a24a:	f044 0101 	orr.w	r1, r4, #1
 800a24e:	6059      	str	r1, [r3, #4]
 800a250:	511c      	str	r4, [r3, r4]
 800a252:	2a00      	cmp	r2, #0
 800a254:	d1d3      	bne.n	800a1fe <_free_r+0x62>
 800a256:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
 800a25a:	d21b      	bcs.n	800a294 <_free_r+0xf8>
 800a25c:	0961      	lsrs	r1, r4, #5
 800a25e:	08e2      	lsrs	r2, r4, #3
 800a260:	2401      	movs	r4, #1
 800a262:	408c      	lsls	r4, r1
 800a264:	6841      	ldr	r1, [r0, #4]
 800a266:	3201      	adds	r2, #1
 800a268:	430c      	orrs	r4, r1
 800a26a:	6044      	str	r4, [r0, #4]
 800a26c:	eb00 01c2 	add.w	r1, r0, r2, lsl #3
 800a270:	f850 4032 	ldr.w	r4, [r0, r2, lsl #3]
 800a274:	3908      	subs	r1, #8
 800a276:	e9c3 4102 	strd	r4, r1, [r3, #8]
 800a27a:	f840 3032 	str.w	r3, [r0, r2, lsl #3]
 800a27e:	60e3      	str	r3, [r4, #12]
 800a280:	e7bd      	b.n	800a1fe <_free_r+0x62>
 800a282:	2200      	movs	r2, #0
 800a284:	e7d0      	b.n	800a228 <_free_r+0x8c>
 800a286:	2201      	movs	r2, #1
 800a288:	e7ce      	b.n	800a228 <_free_r+0x8c>
 800a28a:	f8dc 600c 	ldr.w	r6, [ip, #12]
 800a28e:	60ce      	str	r6, [r1, #12]
 800a290:	60b1      	str	r1, [r6, #8]
 800a292:	e7da      	b.n	800a24a <_free_r+0xae>
 800a294:	f5b4 6f20 	cmp.w	r4, #2560	; 0xa00
 800a298:	ea4f 2254 	mov.w	r2, r4, lsr #9
 800a29c:	d214      	bcs.n	800a2c8 <_free_r+0x12c>
 800a29e:	09a2      	lsrs	r2, r4, #6
 800a2a0:	3238      	adds	r2, #56	; 0x38
 800a2a2:	1c51      	adds	r1, r2, #1
 800a2a4:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 800a2a8:	f850 1031 	ldr.w	r1, [r0, r1, lsl #3]
 800a2ac:	428e      	cmp	r6, r1
 800a2ae:	d125      	bne.n	800a2fc <_free_r+0x160>
 800a2b0:	2401      	movs	r4, #1
 800a2b2:	1092      	asrs	r2, r2, #2
 800a2b4:	fa04 f202 	lsl.w	r2, r4, r2
 800a2b8:	6844      	ldr	r4, [r0, #4]
 800a2ba:	4322      	orrs	r2, r4
 800a2bc:	6042      	str	r2, [r0, #4]
 800a2be:	e9c3 1602 	strd	r1, r6, [r3, #8]
 800a2c2:	60b3      	str	r3, [r6, #8]
 800a2c4:	60cb      	str	r3, [r1, #12]
 800a2c6:	e79a      	b.n	800a1fe <_free_r+0x62>
 800a2c8:	2a14      	cmp	r2, #20
 800a2ca:	d801      	bhi.n	800a2d0 <_free_r+0x134>
 800a2cc:	325b      	adds	r2, #91	; 0x5b
 800a2ce:	e7e8      	b.n	800a2a2 <_free_r+0x106>
 800a2d0:	2a54      	cmp	r2, #84	; 0x54
 800a2d2:	d802      	bhi.n	800a2da <_free_r+0x13e>
 800a2d4:	0b22      	lsrs	r2, r4, #12
 800a2d6:	326e      	adds	r2, #110	; 0x6e
 800a2d8:	e7e3      	b.n	800a2a2 <_free_r+0x106>
 800a2da:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 800a2de:	d802      	bhi.n	800a2e6 <_free_r+0x14a>
 800a2e0:	0be2      	lsrs	r2, r4, #15
 800a2e2:	3277      	adds	r2, #119	; 0x77
 800a2e4:	e7dd      	b.n	800a2a2 <_free_r+0x106>
 800a2e6:	f240 5154 	movw	r1, #1364	; 0x554
 800a2ea:	428a      	cmp	r2, r1
 800a2ec:	bf9a      	itte	ls
 800a2ee:	0ca2      	lsrls	r2, r4, #18
 800a2f0:	327c      	addls	r2, #124	; 0x7c
 800a2f2:	227e      	movhi	r2, #126	; 0x7e
 800a2f4:	e7d5      	b.n	800a2a2 <_free_r+0x106>
 800a2f6:	6889      	ldr	r1, [r1, #8]
 800a2f8:	428e      	cmp	r6, r1
 800a2fa:	d004      	beq.n	800a306 <_free_r+0x16a>
 800a2fc:	684a      	ldr	r2, [r1, #4]
 800a2fe:	f022 0203 	bic.w	r2, r2, #3
 800a302:	42a2      	cmp	r2, r4
 800a304:	d8f7      	bhi.n	800a2f6 <_free_r+0x15a>
 800a306:	68ce      	ldr	r6, [r1, #12]
 800a308:	e7d9      	b.n	800a2be <_free_r+0x122>
 800a30a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a30c:	20000450 	.word	0x20000450
 800a310:	2000085c 	.word	0x2000085c
 800a314:	20017ad0 	.word	0x20017ad0
 800a318:	20000458 	.word	0x20000458

0800a31c <_fwalk_reent>:
 800a31c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a320:	4606      	mov	r6, r0
 800a322:	4688      	mov	r8, r1
 800a324:	f500 7438 	add.w	r4, r0, #736	; 0x2e0
 800a328:	2700      	movs	r7, #0
 800a32a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800a32e:	f1b9 0901 	subs.w	r9, r9, #1
 800a332:	d505      	bpl.n	800a340 <_fwalk_reent+0x24>
 800a334:	6824      	ldr	r4, [r4, #0]
 800a336:	2c00      	cmp	r4, #0
 800a338:	d1f7      	bne.n	800a32a <_fwalk_reent+0xe>
 800a33a:	4638      	mov	r0, r7
 800a33c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a340:	89ab      	ldrh	r3, [r5, #12]
 800a342:	2b01      	cmp	r3, #1
 800a344:	d907      	bls.n	800a356 <_fwalk_reent+0x3a>
 800a346:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800a34a:	3301      	adds	r3, #1
 800a34c:	d003      	beq.n	800a356 <_fwalk_reent+0x3a>
 800a34e:	4629      	mov	r1, r5
 800a350:	4630      	mov	r0, r6
 800a352:	47c0      	blx	r8
 800a354:	4307      	orrs	r7, r0
 800a356:	3568      	adds	r5, #104	; 0x68
 800a358:	e7e9      	b.n	800a32e <_fwalk_reent+0x12>
	...

0800a35c <__libc_init_array>:
 800a35c:	b570      	push	{r4, r5, r6, lr}
 800a35e:	4d0d      	ldr	r5, [pc, #52]	; (800a394 <__libc_init_array+0x38>)
 800a360:	4c0d      	ldr	r4, [pc, #52]	; (800a398 <__libc_init_array+0x3c>)
 800a362:	1b64      	subs	r4, r4, r5
 800a364:	10a4      	asrs	r4, r4, #2
 800a366:	2600      	movs	r6, #0
 800a368:	42a6      	cmp	r6, r4
 800a36a:	d109      	bne.n	800a380 <__libc_init_array+0x24>
 800a36c:	4d0b      	ldr	r5, [pc, #44]	; (800a39c <__libc_init_array+0x40>)
 800a36e:	4c0c      	ldr	r4, [pc, #48]	; (800a3a0 <__libc_init_array+0x44>)
 800a370:	f006 f904 	bl	801057c <_init>
 800a374:	1b64      	subs	r4, r4, r5
 800a376:	10a4      	asrs	r4, r4, #2
 800a378:	2600      	movs	r6, #0
 800a37a:	42a6      	cmp	r6, r4
 800a37c:	d105      	bne.n	800a38a <__libc_init_array+0x2e>
 800a37e:	bd70      	pop	{r4, r5, r6, pc}
 800a380:	f855 3b04 	ldr.w	r3, [r5], #4
 800a384:	4798      	blx	r3
 800a386:	3601      	adds	r6, #1
 800a388:	e7ee      	b.n	800a368 <__libc_init_array+0xc>
 800a38a:	f855 3b04 	ldr.w	r3, [r5], #4
 800a38e:	4798      	blx	r3
 800a390:	3601      	adds	r6, #1
 800a392:	e7f2      	b.n	800a37a <__libc_init_array+0x1e>
 800a394:	08010fd0 	.word	0x08010fd0
 800a398:	08010fd0 	.word	0x08010fd0
 800a39c:	08010fd0 	.word	0x08010fd0
 800a3a0:	08010fd8 	.word	0x08010fd8

0800a3a4 <__retarget_lock_init_recursive>:
 800a3a4:	4770      	bx	lr

0800a3a6 <__retarget_lock_close_recursive>:
 800a3a6:	4770      	bx	lr

0800a3a8 <__retarget_lock_acquire_recursive>:
 800a3a8:	4770      	bx	lr

0800a3aa <__retarget_lock_release_recursive>:
 800a3aa:	4770      	bx	lr

0800a3ac <malloc>:
 800a3ac:	4b02      	ldr	r3, [pc, #8]	; (800a3b8 <malloc+0xc>)
 800a3ae:	4601      	mov	r1, r0
 800a3b0:	6818      	ldr	r0, [r3, #0]
 800a3b2:	f000 b80b 	b.w	800a3cc <_malloc_r>
 800a3b6:	bf00      	nop
 800a3b8:	20000020 	.word	0x20000020

0800a3bc <free>:
 800a3bc:	4b02      	ldr	r3, [pc, #8]	; (800a3c8 <free+0xc>)
 800a3be:	4601      	mov	r1, r0
 800a3c0:	6818      	ldr	r0, [r3, #0]
 800a3c2:	f7ff beeb 	b.w	800a19c <_free_r>
 800a3c6:	bf00      	nop
 800a3c8:	20000020 	.word	0x20000020

0800a3cc <_malloc_r>:
 800a3cc:	f101 030b 	add.w	r3, r1, #11
 800a3d0:	2b16      	cmp	r3, #22
 800a3d2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a3d6:	4605      	mov	r5, r0
 800a3d8:	d906      	bls.n	800a3e8 <_malloc_r+0x1c>
 800a3da:	f033 0707 	bics.w	r7, r3, #7
 800a3de:	d504      	bpl.n	800a3ea <_malloc_r+0x1e>
 800a3e0:	230c      	movs	r3, #12
 800a3e2:	602b      	str	r3, [r5, #0]
 800a3e4:	2400      	movs	r4, #0
 800a3e6:	e1a5      	b.n	800a734 <_malloc_r+0x368>
 800a3e8:	2710      	movs	r7, #16
 800a3ea:	42b9      	cmp	r1, r7
 800a3ec:	d8f8      	bhi.n	800a3e0 <_malloc_r+0x14>
 800a3ee:	4628      	mov	r0, r5
 800a3f0:	f000 fa3e 	bl	800a870 <__malloc_lock>
 800a3f4:	f5b7 7ffc 	cmp.w	r7, #504	; 0x1f8
 800a3f8:	4eb0      	ldr	r6, [pc, #704]	; (800a6bc <_malloc_r+0x2f0>)
 800a3fa:	d237      	bcs.n	800a46c <_malloc_r+0xa0>
 800a3fc:	f107 0208 	add.w	r2, r7, #8
 800a400:	4432      	add	r2, r6
 800a402:	f1a2 0108 	sub.w	r1, r2, #8
 800a406:	6854      	ldr	r4, [r2, #4]
 800a408:	428c      	cmp	r4, r1
 800a40a:	ea4f 03d7 	mov.w	r3, r7, lsr #3
 800a40e:	d102      	bne.n	800a416 <_malloc_r+0x4a>
 800a410:	68d4      	ldr	r4, [r2, #12]
 800a412:	42a2      	cmp	r2, r4
 800a414:	d010      	beq.n	800a438 <_malloc_r+0x6c>
 800a416:	6863      	ldr	r3, [r4, #4]
 800a418:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 800a41c:	f023 0303 	bic.w	r3, r3, #3
 800a420:	60ca      	str	r2, [r1, #12]
 800a422:	4423      	add	r3, r4
 800a424:	6091      	str	r1, [r2, #8]
 800a426:	685a      	ldr	r2, [r3, #4]
 800a428:	f042 0201 	orr.w	r2, r2, #1
 800a42c:	605a      	str	r2, [r3, #4]
 800a42e:	4628      	mov	r0, r5
 800a430:	f000 fa24 	bl	800a87c <__malloc_unlock>
 800a434:	3408      	adds	r4, #8
 800a436:	e17d      	b.n	800a734 <_malloc_r+0x368>
 800a438:	3302      	adds	r3, #2
 800a43a:	6934      	ldr	r4, [r6, #16]
 800a43c:	49a0      	ldr	r1, [pc, #640]	; (800a6c0 <_malloc_r+0x2f4>)
 800a43e:	428c      	cmp	r4, r1
 800a440:	d077      	beq.n	800a532 <_malloc_r+0x166>
 800a442:	6862      	ldr	r2, [r4, #4]
 800a444:	f022 0c03 	bic.w	ip, r2, #3
 800a448:	ebac 0007 	sub.w	r0, ip, r7
 800a44c:	280f      	cmp	r0, #15
 800a44e:	dd48      	ble.n	800a4e2 <_malloc_r+0x116>
 800a450:	19e2      	adds	r2, r4, r7
 800a452:	f040 0301 	orr.w	r3, r0, #1
 800a456:	f047 0701 	orr.w	r7, r7, #1
 800a45a:	6067      	str	r7, [r4, #4]
 800a45c:	e9c6 2204 	strd	r2, r2, [r6, #16]
 800a460:	e9c2 1102 	strd	r1, r1, [r2, #8]
 800a464:	6053      	str	r3, [r2, #4]
 800a466:	f844 000c 	str.w	r0, [r4, ip]
 800a46a:	e7e0      	b.n	800a42e <_malloc_r+0x62>
 800a46c:	0a7b      	lsrs	r3, r7, #9
 800a46e:	d02a      	beq.n	800a4c6 <_malloc_r+0xfa>
 800a470:	2b04      	cmp	r3, #4
 800a472:	d812      	bhi.n	800a49a <_malloc_r+0xce>
 800a474:	09bb      	lsrs	r3, r7, #6
 800a476:	3338      	adds	r3, #56	; 0x38
 800a478:	1c5a      	adds	r2, r3, #1
 800a47a:	eb06 02c2 	add.w	r2, r6, r2, lsl #3
 800a47e:	f1a2 0c08 	sub.w	ip, r2, #8
 800a482:	6854      	ldr	r4, [r2, #4]
 800a484:	4564      	cmp	r4, ip
 800a486:	d006      	beq.n	800a496 <_malloc_r+0xca>
 800a488:	6862      	ldr	r2, [r4, #4]
 800a48a:	f022 0203 	bic.w	r2, r2, #3
 800a48e:	1bd0      	subs	r0, r2, r7
 800a490:	280f      	cmp	r0, #15
 800a492:	dd1c      	ble.n	800a4ce <_malloc_r+0x102>
 800a494:	3b01      	subs	r3, #1
 800a496:	3301      	adds	r3, #1
 800a498:	e7cf      	b.n	800a43a <_malloc_r+0x6e>
 800a49a:	2b14      	cmp	r3, #20
 800a49c:	d801      	bhi.n	800a4a2 <_malloc_r+0xd6>
 800a49e:	335b      	adds	r3, #91	; 0x5b
 800a4a0:	e7ea      	b.n	800a478 <_malloc_r+0xac>
 800a4a2:	2b54      	cmp	r3, #84	; 0x54
 800a4a4:	d802      	bhi.n	800a4ac <_malloc_r+0xe0>
 800a4a6:	0b3b      	lsrs	r3, r7, #12
 800a4a8:	336e      	adds	r3, #110	; 0x6e
 800a4aa:	e7e5      	b.n	800a478 <_malloc_r+0xac>
 800a4ac:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 800a4b0:	d802      	bhi.n	800a4b8 <_malloc_r+0xec>
 800a4b2:	0bfb      	lsrs	r3, r7, #15
 800a4b4:	3377      	adds	r3, #119	; 0x77
 800a4b6:	e7df      	b.n	800a478 <_malloc_r+0xac>
 800a4b8:	f240 5254 	movw	r2, #1364	; 0x554
 800a4bc:	4293      	cmp	r3, r2
 800a4be:	d804      	bhi.n	800a4ca <_malloc_r+0xfe>
 800a4c0:	0cbb      	lsrs	r3, r7, #18
 800a4c2:	337c      	adds	r3, #124	; 0x7c
 800a4c4:	e7d8      	b.n	800a478 <_malloc_r+0xac>
 800a4c6:	233f      	movs	r3, #63	; 0x3f
 800a4c8:	e7d6      	b.n	800a478 <_malloc_r+0xac>
 800a4ca:	237e      	movs	r3, #126	; 0x7e
 800a4cc:	e7d4      	b.n	800a478 <_malloc_r+0xac>
 800a4ce:	2800      	cmp	r0, #0
 800a4d0:	68e1      	ldr	r1, [r4, #12]
 800a4d2:	db04      	blt.n	800a4de <_malloc_r+0x112>
 800a4d4:	68a3      	ldr	r3, [r4, #8]
 800a4d6:	60d9      	str	r1, [r3, #12]
 800a4d8:	608b      	str	r3, [r1, #8]
 800a4da:	18a3      	adds	r3, r4, r2
 800a4dc:	e7a3      	b.n	800a426 <_malloc_r+0x5a>
 800a4de:	460c      	mov	r4, r1
 800a4e0:	e7d0      	b.n	800a484 <_malloc_r+0xb8>
 800a4e2:	2800      	cmp	r0, #0
 800a4e4:	e9c6 1104 	strd	r1, r1, [r6, #16]
 800a4e8:	db07      	blt.n	800a4fa <_malloc_r+0x12e>
 800a4ea:	44a4      	add	ip, r4
 800a4ec:	f8dc 3004 	ldr.w	r3, [ip, #4]
 800a4f0:	f043 0301 	orr.w	r3, r3, #1
 800a4f4:	f8cc 3004 	str.w	r3, [ip, #4]
 800a4f8:	e799      	b.n	800a42e <_malloc_r+0x62>
 800a4fa:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 800a4fe:	6870      	ldr	r0, [r6, #4]
 800a500:	f080 8096 	bcs.w	800a630 <_malloc_r+0x264>
 800a504:	ea4f 02dc 	mov.w	r2, ip, lsr #3
 800a508:	ea4f 1e5c 	mov.w	lr, ip, lsr #5
 800a50c:	f04f 0c01 	mov.w	ip, #1
 800a510:	3201      	adds	r2, #1
 800a512:	fa0c fc0e 	lsl.w	ip, ip, lr
 800a516:	ea4c 0000 	orr.w	r0, ip, r0
 800a51a:	6070      	str	r0, [r6, #4]
 800a51c:	f856 c032 	ldr.w	ip, [r6, r2, lsl #3]
 800a520:	eb06 00c2 	add.w	r0, r6, r2, lsl #3
 800a524:	3808      	subs	r0, #8
 800a526:	e9c4 c002 	strd	ip, r0, [r4, #8]
 800a52a:	f846 4032 	str.w	r4, [r6, r2, lsl #3]
 800a52e:	f8cc 400c 	str.w	r4, [ip, #12]
 800a532:	2001      	movs	r0, #1
 800a534:	109a      	asrs	r2, r3, #2
 800a536:	fa00 f202 	lsl.w	r2, r0, r2
 800a53a:	6870      	ldr	r0, [r6, #4]
 800a53c:	4290      	cmp	r0, r2
 800a53e:	d326      	bcc.n	800a58e <_malloc_r+0x1c2>
 800a540:	4210      	tst	r0, r2
 800a542:	d106      	bne.n	800a552 <_malloc_r+0x186>
 800a544:	f023 0303 	bic.w	r3, r3, #3
 800a548:	0052      	lsls	r2, r2, #1
 800a54a:	4210      	tst	r0, r2
 800a54c:	f103 0304 	add.w	r3, r3, #4
 800a550:	d0fa      	beq.n	800a548 <_malloc_r+0x17c>
 800a552:	eb06 08c3 	add.w	r8, r6, r3, lsl #3
 800a556:	46c1      	mov	r9, r8
 800a558:	469e      	mov	lr, r3
 800a55a:	f8d9 400c 	ldr.w	r4, [r9, #12]
 800a55e:	454c      	cmp	r4, r9
 800a560:	f040 80ba 	bne.w	800a6d8 <_malloc_r+0x30c>
 800a564:	f10e 0e01 	add.w	lr, lr, #1
 800a568:	f01e 0f03 	tst.w	lr, #3
 800a56c:	f109 0908 	add.w	r9, r9, #8
 800a570:	d1f3      	bne.n	800a55a <_malloc_r+0x18e>
 800a572:	0798      	lsls	r0, r3, #30
 800a574:	f040 80e4 	bne.w	800a740 <_malloc_r+0x374>
 800a578:	6873      	ldr	r3, [r6, #4]
 800a57a:	ea23 0302 	bic.w	r3, r3, r2
 800a57e:	6073      	str	r3, [r6, #4]
 800a580:	6870      	ldr	r0, [r6, #4]
 800a582:	0052      	lsls	r2, r2, #1
 800a584:	4290      	cmp	r0, r2
 800a586:	d302      	bcc.n	800a58e <_malloc_r+0x1c2>
 800a588:	2a00      	cmp	r2, #0
 800a58a:	f040 80e6 	bne.w	800a75a <_malloc_r+0x38e>
 800a58e:	f8d6 a008 	ldr.w	sl, [r6, #8]
 800a592:	f8da 3004 	ldr.w	r3, [sl, #4]
 800a596:	f023 0903 	bic.w	r9, r3, #3
 800a59a:	45b9      	cmp	r9, r7
 800a59c:	d304      	bcc.n	800a5a8 <_malloc_r+0x1dc>
 800a59e:	eba9 0207 	sub.w	r2, r9, r7
 800a5a2:	2a0f      	cmp	r2, #15
 800a5a4:	f300 8142 	bgt.w	800a82c <_malloc_r+0x460>
 800a5a8:	4b46      	ldr	r3, [pc, #280]	; (800a6c4 <_malloc_r+0x2f8>)
 800a5aa:	6819      	ldr	r1, [r3, #0]
 800a5ac:	3110      	adds	r1, #16
 800a5ae:	4439      	add	r1, r7
 800a5b0:	2008      	movs	r0, #8
 800a5b2:	9101      	str	r1, [sp, #4]
 800a5b4:	f002 fc74 	bl	800cea0 <sysconf>
 800a5b8:	4a43      	ldr	r2, [pc, #268]	; (800a6c8 <_malloc_r+0x2fc>)
 800a5ba:	9901      	ldr	r1, [sp, #4]
 800a5bc:	6813      	ldr	r3, [r2, #0]
 800a5be:	3301      	adds	r3, #1
 800a5c0:	bf1f      	itttt	ne
 800a5c2:	f101 31ff 	addne.w	r1, r1, #4294967295
 800a5c6:	1809      	addne	r1, r1, r0
 800a5c8:	4243      	negne	r3, r0
 800a5ca:	4019      	andne	r1, r3
 800a5cc:	4680      	mov	r8, r0
 800a5ce:	4628      	mov	r0, r5
 800a5d0:	9101      	str	r1, [sp, #4]
 800a5d2:	f000 fba5 	bl	800ad20 <_sbrk_r>
 800a5d6:	1c42      	adds	r2, r0, #1
 800a5d8:	eb0a 0b09 	add.w	fp, sl, r9
 800a5dc:	4604      	mov	r4, r0
 800a5de:	f000 80f8 	beq.w	800a7d2 <_malloc_r+0x406>
 800a5e2:	4583      	cmp	fp, r0
 800a5e4:	9901      	ldr	r1, [sp, #4]
 800a5e6:	4a38      	ldr	r2, [pc, #224]	; (800a6c8 <_malloc_r+0x2fc>)
 800a5e8:	d902      	bls.n	800a5f0 <_malloc_r+0x224>
 800a5ea:	45b2      	cmp	sl, r6
 800a5ec:	f040 80f1 	bne.w	800a7d2 <_malloc_r+0x406>
 800a5f0:	4b36      	ldr	r3, [pc, #216]	; (800a6cc <_malloc_r+0x300>)
 800a5f2:	6818      	ldr	r0, [r3, #0]
 800a5f4:	45a3      	cmp	fp, r4
 800a5f6:	eb00 0e01 	add.w	lr, r0, r1
 800a5fa:	f8c3 e000 	str.w	lr, [r3]
 800a5fe:	f108 3cff 	add.w	ip, r8, #4294967295
 800a602:	f040 80ac 	bne.w	800a75e <_malloc_r+0x392>
 800a606:	ea1b 0f0c 	tst.w	fp, ip
 800a60a:	f040 80a8 	bne.w	800a75e <_malloc_r+0x392>
 800a60e:	68b2      	ldr	r2, [r6, #8]
 800a610:	4449      	add	r1, r9
 800a612:	f041 0101 	orr.w	r1, r1, #1
 800a616:	6051      	str	r1, [r2, #4]
 800a618:	4a2d      	ldr	r2, [pc, #180]	; (800a6d0 <_malloc_r+0x304>)
 800a61a:	681b      	ldr	r3, [r3, #0]
 800a61c:	6811      	ldr	r1, [r2, #0]
 800a61e:	428b      	cmp	r3, r1
 800a620:	bf88      	it	hi
 800a622:	6013      	strhi	r3, [r2, #0]
 800a624:	4a2b      	ldr	r2, [pc, #172]	; (800a6d4 <_malloc_r+0x308>)
 800a626:	6811      	ldr	r1, [r2, #0]
 800a628:	428b      	cmp	r3, r1
 800a62a:	bf88      	it	hi
 800a62c:	6013      	strhi	r3, [r2, #0]
 800a62e:	e0d0      	b.n	800a7d2 <_malloc_r+0x406>
 800a630:	f5bc 6f20 	cmp.w	ip, #2560	; 0xa00
 800a634:	ea4f 225c 	mov.w	r2, ip, lsr #9
 800a638:	d218      	bcs.n	800a66c <_malloc_r+0x2a0>
 800a63a:	ea4f 129c 	mov.w	r2, ip, lsr #6
 800a63e:	3238      	adds	r2, #56	; 0x38
 800a640:	f102 0e01 	add.w	lr, r2, #1
 800a644:	eb06 08c2 	add.w	r8, r6, r2, lsl #3
 800a648:	f856 e03e 	ldr.w	lr, [r6, lr, lsl #3]
 800a64c:	45f0      	cmp	r8, lr
 800a64e:	d12b      	bne.n	800a6a8 <_malloc_r+0x2dc>
 800a650:	1092      	asrs	r2, r2, #2
 800a652:	f04f 0c01 	mov.w	ip, #1
 800a656:	fa0c f202 	lsl.w	r2, ip, r2
 800a65a:	4310      	orrs	r0, r2
 800a65c:	6070      	str	r0, [r6, #4]
 800a65e:	e9c4 e802 	strd	lr, r8, [r4, #8]
 800a662:	f8c8 4008 	str.w	r4, [r8, #8]
 800a666:	f8ce 400c 	str.w	r4, [lr, #12]
 800a66a:	e762      	b.n	800a532 <_malloc_r+0x166>
 800a66c:	2a14      	cmp	r2, #20
 800a66e:	d801      	bhi.n	800a674 <_malloc_r+0x2a8>
 800a670:	325b      	adds	r2, #91	; 0x5b
 800a672:	e7e5      	b.n	800a640 <_malloc_r+0x274>
 800a674:	2a54      	cmp	r2, #84	; 0x54
 800a676:	d803      	bhi.n	800a680 <_malloc_r+0x2b4>
 800a678:	ea4f 321c 	mov.w	r2, ip, lsr #12
 800a67c:	326e      	adds	r2, #110	; 0x6e
 800a67e:	e7df      	b.n	800a640 <_malloc_r+0x274>
 800a680:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 800a684:	d803      	bhi.n	800a68e <_malloc_r+0x2c2>
 800a686:	ea4f 32dc 	mov.w	r2, ip, lsr #15
 800a68a:	3277      	adds	r2, #119	; 0x77
 800a68c:	e7d8      	b.n	800a640 <_malloc_r+0x274>
 800a68e:	f240 5e54 	movw	lr, #1364	; 0x554
 800a692:	4572      	cmp	r2, lr
 800a694:	bf9a      	itte	ls
 800a696:	ea4f 429c 	movls.w	r2, ip, lsr #18
 800a69a:	327c      	addls	r2, #124	; 0x7c
 800a69c:	227e      	movhi	r2, #126	; 0x7e
 800a69e:	e7cf      	b.n	800a640 <_malloc_r+0x274>
 800a6a0:	f8de e008 	ldr.w	lr, [lr, #8]
 800a6a4:	45f0      	cmp	r8, lr
 800a6a6:	d005      	beq.n	800a6b4 <_malloc_r+0x2e8>
 800a6a8:	f8de 2004 	ldr.w	r2, [lr, #4]
 800a6ac:	f022 0203 	bic.w	r2, r2, #3
 800a6b0:	4562      	cmp	r2, ip
 800a6b2:	d8f5      	bhi.n	800a6a0 <_malloc_r+0x2d4>
 800a6b4:	f8de 800c 	ldr.w	r8, [lr, #12]
 800a6b8:	e7d1      	b.n	800a65e <_malloc_r+0x292>
 800a6ba:	bf00      	nop
 800a6bc:	20000450 	.word	0x20000450
 800a6c0:	20000458 	.word	0x20000458
 800a6c4:	20017ad0 	.word	0x20017ad0
 800a6c8:	20000858 	.word	0x20000858
 800a6cc:	20017aa0 	.word	0x20017aa0
 800a6d0:	20017ac8 	.word	0x20017ac8
 800a6d4:	20017acc 	.word	0x20017acc
 800a6d8:	6860      	ldr	r0, [r4, #4]
 800a6da:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 800a6de:	f020 0003 	bic.w	r0, r0, #3
 800a6e2:	eba0 0a07 	sub.w	sl, r0, r7
 800a6e6:	f1ba 0f0f 	cmp.w	sl, #15
 800a6ea:	dd12      	ble.n	800a712 <_malloc_r+0x346>
 800a6ec:	68a3      	ldr	r3, [r4, #8]
 800a6ee:	19e2      	adds	r2, r4, r7
 800a6f0:	f047 0701 	orr.w	r7, r7, #1
 800a6f4:	6067      	str	r7, [r4, #4]
 800a6f6:	f8c3 c00c 	str.w	ip, [r3, #12]
 800a6fa:	f8cc 3008 	str.w	r3, [ip, #8]
 800a6fe:	f04a 0301 	orr.w	r3, sl, #1
 800a702:	e9c6 2204 	strd	r2, r2, [r6, #16]
 800a706:	e9c2 1102 	strd	r1, r1, [r2, #8]
 800a70a:	6053      	str	r3, [r2, #4]
 800a70c:	f844 a000 	str.w	sl, [r4, r0]
 800a710:	e68d      	b.n	800a42e <_malloc_r+0x62>
 800a712:	f1ba 0f00 	cmp.w	sl, #0
 800a716:	db11      	blt.n	800a73c <_malloc_r+0x370>
 800a718:	4420      	add	r0, r4
 800a71a:	6843      	ldr	r3, [r0, #4]
 800a71c:	f043 0301 	orr.w	r3, r3, #1
 800a720:	6043      	str	r3, [r0, #4]
 800a722:	f854 3f08 	ldr.w	r3, [r4, #8]!
 800a726:	4628      	mov	r0, r5
 800a728:	f8c3 c00c 	str.w	ip, [r3, #12]
 800a72c:	f8cc 3008 	str.w	r3, [ip, #8]
 800a730:	f000 f8a4 	bl	800a87c <__malloc_unlock>
 800a734:	4620      	mov	r0, r4
 800a736:	b003      	add	sp, #12
 800a738:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a73c:	4664      	mov	r4, ip
 800a73e:	e70e      	b.n	800a55e <_malloc_r+0x192>
 800a740:	f858 0908 	ldr.w	r0, [r8], #-8
 800a744:	4540      	cmp	r0, r8
 800a746:	f103 33ff 	add.w	r3, r3, #4294967295
 800a74a:	f43f af12 	beq.w	800a572 <_malloc_r+0x1a6>
 800a74e:	e717      	b.n	800a580 <_malloc_r+0x1b4>
 800a750:	3304      	adds	r3, #4
 800a752:	0052      	lsls	r2, r2, #1
 800a754:	4210      	tst	r0, r2
 800a756:	d0fb      	beq.n	800a750 <_malloc_r+0x384>
 800a758:	e6fb      	b.n	800a552 <_malloc_r+0x186>
 800a75a:	4673      	mov	r3, lr
 800a75c:	e7fa      	b.n	800a754 <_malloc_r+0x388>
 800a75e:	6810      	ldr	r0, [r2, #0]
 800a760:	3001      	adds	r0, #1
 800a762:	bf1b      	ittet	ne
 800a764:	eba4 0b0b 	subne.w	fp, r4, fp
 800a768:	eb0b 020e 	addne.w	r2, fp, lr
 800a76c:	6014      	streq	r4, [r2, #0]
 800a76e:	601a      	strne	r2, [r3, #0]
 800a770:	f014 0b07 	ands.w	fp, r4, #7
 800a774:	bf1a      	itte	ne
 800a776:	f1cb 0008 	rsbne	r0, fp, #8
 800a77a:	1824      	addne	r4, r4, r0
 800a77c:	4658      	moveq	r0, fp
 800a77e:	1862      	adds	r2, r4, r1
 800a780:	ea02 010c 	and.w	r1, r2, ip
 800a784:	4480      	add	r8, r0
 800a786:	eba8 0801 	sub.w	r8, r8, r1
 800a78a:	ea08 080c 	and.w	r8, r8, ip
 800a78e:	4641      	mov	r1, r8
 800a790:	4628      	mov	r0, r5
 800a792:	9201      	str	r2, [sp, #4]
 800a794:	f000 fac4 	bl	800ad20 <_sbrk_r>
 800a798:	1c43      	adds	r3, r0, #1
 800a79a:	9a01      	ldr	r2, [sp, #4]
 800a79c:	4b28      	ldr	r3, [pc, #160]	; (800a840 <_malloc_r+0x474>)
 800a79e:	d107      	bne.n	800a7b0 <_malloc_r+0x3e4>
 800a7a0:	f1bb 0f00 	cmp.w	fp, #0
 800a7a4:	d023      	beq.n	800a7ee <_malloc_r+0x422>
 800a7a6:	f1ab 0008 	sub.w	r0, fp, #8
 800a7aa:	4410      	add	r0, r2
 800a7ac:	f04f 0800 	mov.w	r8, #0
 800a7b0:	681a      	ldr	r2, [r3, #0]
 800a7b2:	60b4      	str	r4, [r6, #8]
 800a7b4:	1b00      	subs	r0, r0, r4
 800a7b6:	4440      	add	r0, r8
 800a7b8:	4442      	add	r2, r8
 800a7ba:	f040 0001 	orr.w	r0, r0, #1
 800a7be:	45b2      	cmp	sl, r6
 800a7c0:	601a      	str	r2, [r3, #0]
 800a7c2:	6060      	str	r0, [r4, #4]
 800a7c4:	f43f af28 	beq.w	800a618 <_malloc_r+0x24c>
 800a7c8:	f1b9 0f0f 	cmp.w	r9, #15
 800a7cc:	d812      	bhi.n	800a7f4 <_malloc_r+0x428>
 800a7ce:	2301      	movs	r3, #1
 800a7d0:	6063      	str	r3, [r4, #4]
 800a7d2:	68b3      	ldr	r3, [r6, #8]
 800a7d4:	685b      	ldr	r3, [r3, #4]
 800a7d6:	f023 0303 	bic.w	r3, r3, #3
 800a7da:	42bb      	cmp	r3, r7
 800a7dc:	eba3 0207 	sub.w	r2, r3, r7
 800a7e0:	d301      	bcc.n	800a7e6 <_malloc_r+0x41a>
 800a7e2:	2a0f      	cmp	r2, #15
 800a7e4:	dc22      	bgt.n	800a82c <_malloc_r+0x460>
 800a7e6:	4628      	mov	r0, r5
 800a7e8:	f000 f848 	bl	800a87c <__malloc_unlock>
 800a7ec:	e5fa      	b.n	800a3e4 <_malloc_r+0x18>
 800a7ee:	4610      	mov	r0, r2
 800a7f0:	46d8      	mov	r8, fp
 800a7f2:	e7dd      	b.n	800a7b0 <_malloc_r+0x3e4>
 800a7f4:	f8da 2004 	ldr.w	r2, [sl, #4]
 800a7f8:	f1a9 090c 	sub.w	r9, r9, #12
 800a7fc:	f029 0907 	bic.w	r9, r9, #7
 800a800:	f002 0201 	and.w	r2, r2, #1
 800a804:	ea42 0209 	orr.w	r2, r2, r9
 800a808:	f8ca 2004 	str.w	r2, [sl, #4]
 800a80c:	2105      	movs	r1, #5
 800a80e:	eb0a 0209 	add.w	r2, sl, r9
 800a812:	f1b9 0f0f 	cmp.w	r9, #15
 800a816:	e9c2 1101 	strd	r1, r1, [r2, #4]
 800a81a:	f67f aefd 	bls.w	800a618 <_malloc_r+0x24c>
 800a81e:	f10a 0108 	add.w	r1, sl, #8
 800a822:	4628      	mov	r0, r5
 800a824:	f7ff fcba 	bl	800a19c <_free_r>
 800a828:	4b05      	ldr	r3, [pc, #20]	; (800a840 <_malloc_r+0x474>)
 800a82a:	e6f5      	b.n	800a618 <_malloc_r+0x24c>
 800a82c:	68b4      	ldr	r4, [r6, #8]
 800a82e:	f047 0301 	orr.w	r3, r7, #1
 800a832:	4427      	add	r7, r4
 800a834:	f042 0201 	orr.w	r2, r2, #1
 800a838:	6063      	str	r3, [r4, #4]
 800a83a:	60b7      	str	r7, [r6, #8]
 800a83c:	607a      	str	r2, [r7, #4]
 800a83e:	e5f6      	b.n	800a42e <_malloc_r+0x62>
 800a840:	20017aa0 	.word	0x20017aa0

0800a844 <memcpy>:
 800a844:	440a      	add	r2, r1
 800a846:	4291      	cmp	r1, r2
 800a848:	f100 33ff 	add.w	r3, r0, #4294967295
 800a84c:	d100      	bne.n	800a850 <memcpy+0xc>
 800a84e:	4770      	bx	lr
 800a850:	b510      	push	{r4, lr}
 800a852:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a856:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a85a:	4291      	cmp	r1, r2
 800a85c:	d1f9      	bne.n	800a852 <memcpy+0xe>
 800a85e:	bd10      	pop	{r4, pc}

0800a860 <memset>:
 800a860:	4402      	add	r2, r0
 800a862:	4603      	mov	r3, r0
 800a864:	4293      	cmp	r3, r2
 800a866:	d100      	bne.n	800a86a <memset+0xa>
 800a868:	4770      	bx	lr
 800a86a:	f803 1b01 	strb.w	r1, [r3], #1
 800a86e:	e7f9      	b.n	800a864 <memset+0x4>

0800a870 <__malloc_lock>:
 800a870:	4801      	ldr	r0, [pc, #4]	; (800a878 <__malloc_lock+0x8>)
 800a872:	f7ff bd99 	b.w	800a3a8 <__retarget_lock_acquire_recursive>
 800a876:	bf00      	nop
 800a878:	20017a9d 	.word	0x20017a9d

0800a87c <__malloc_unlock>:
 800a87c:	4801      	ldr	r0, [pc, #4]	; (800a884 <__malloc_unlock+0x8>)
 800a87e:	f7ff bd94 	b.w	800a3aa <__retarget_lock_release_recursive>
 800a882:	bf00      	nop
 800a884:	20017a9d 	.word	0x20017a9d

0800a888 <_puts_r>:
 800a888:	b530      	push	{r4, r5, lr}
 800a88a:	4605      	mov	r5, r0
 800a88c:	b089      	sub	sp, #36	; 0x24
 800a88e:	4608      	mov	r0, r1
 800a890:	460c      	mov	r4, r1
 800a892:	f7f5 fca5 	bl	80001e0 <strlen>
 800a896:	4b1e      	ldr	r3, [pc, #120]	; (800a910 <_puts_r+0x88>)
 800a898:	9306      	str	r3, [sp, #24]
 800a89a:	2301      	movs	r3, #1
 800a89c:	e9cd 4004 	strd	r4, r0, [sp, #16]
 800a8a0:	9307      	str	r3, [sp, #28]
 800a8a2:	4418      	add	r0, r3
 800a8a4:	ab04      	add	r3, sp, #16
 800a8a6:	9301      	str	r3, [sp, #4]
 800a8a8:	2302      	movs	r3, #2
 800a8aa:	9302      	str	r3, [sp, #8]
 800a8ac:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800a8ae:	68ac      	ldr	r4, [r5, #8]
 800a8b0:	9003      	str	r0, [sp, #12]
 800a8b2:	b913      	cbnz	r3, 800a8ba <_puts_r+0x32>
 800a8b4:	4628      	mov	r0, r5
 800a8b6:	f7ff fbf5 	bl	800a0a4 <__sinit>
 800a8ba:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800a8bc:	07db      	lsls	r3, r3, #31
 800a8be:	d405      	bmi.n	800a8cc <_puts_r+0x44>
 800a8c0:	89a3      	ldrh	r3, [r4, #12]
 800a8c2:	0598      	lsls	r0, r3, #22
 800a8c4:	d402      	bmi.n	800a8cc <_puts_r+0x44>
 800a8c6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a8c8:	f7ff fd6e 	bl	800a3a8 <__retarget_lock_acquire_recursive>
 800a8cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800a8d0:	0499      	lsls	r1, r3, #18
 800a8d2:	d406      	bmi.n	800a8e2 <_puts_r+0x5a>
 800a8d4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800a8d8:	81a3      	strh	r3, [r4, #12]
 800a8da:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800a8dc:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800a8e0:	6663      	str	r3, [r4, #100]	; 0x64
 800a8e2:	4628      	mov	r0, r5
 800a8e4:	aa01      	add	r2, sp, #4
 800a8e6:	4621      	mov	r1, r4
 800a8e8:	f003 fa08 	bl	800dcfc <__sfvwrite_r>
 800a8ec:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800a8ee:	2800      	cmp	r0, #0
 800a8f0:	bf14      	ite	ne
 800a8f2:	f04f 35ff 	movne.w	r5, #4294967295
 800a8f6:	250a      	moveq	r5, #10
 800a8f8:	07da      	lsls	r2, r3, #31
 800a8fa:	d405      	bmi.n	800a908 <_puts_r+0x80>
 800a8fc:	89a3      	ldrh	r3, [r4, #12]
 800a8fe:	059b      	lsls	r3, r3, #22
 800a900:	d402      	bmi.n	800a908 <_puts_r+0x80>
 800a902:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a904:	f7ff fd51 	bl	800a3aa <__retarget_lock_release_recursive>
 800a908:	4628      	mov	r0, r5
 800a90a:	b009      	add	sp, #36	; 0x24
 800a90c:	bd30      	pop	{r4, r5, pc}
 800a90e:	bf00      	nop
 800a910:	08010fa6 	.word	0x08010fa6

0800a914 <puts>:
 800a914:	4b02      	ldr	r3, [pc, #8]	; (800a920 <puts+0xc>)
 800a916:	4601      	mov	r1, r0
 800a918:	6818      	ldr	r0, [r3, #0]
 800a91a:	f7ff bfb5 	b.w	800a888 <_puts_r>
 800a91e:	bf00      	nop
 800a920:	20000020 	.word	0x20000020

0800a924 <realloc>:
 800a924:	4b02      	ldr	r3, [pc, #8]	; (800a930 <realloc+0xc>)
 800a926:	460a      	mov	r2, r1
 800a928:	4601      	mov	r1, r0
 800a92a:	6818      	ldr	r0, [r3, #0]
 800a92c:	f000 b802 	b.w	800a934 <_realloc_r>
 800a930:	20000020 	.word	0x20000020

0800a934 <_realloc_r>:
 800a934:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a938:	4681      	mov	r9, r0
 800a93a:	460c      	mov	r4, r1
 800a93c:	b929      	cbnz	r1, 800a94a <_realloc_r+0x16>
 800a93e:	4611      	mov	r1, r2
 800a940:	b003      	add	sp, #12
 800a942:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a946:	f7ff bd41 	b.w	800a3cc <_malloc_r>
 800a94a:	9201      	str	r2, [sp, #4]
 800a94c:	f7ff ff90 	bl	800a870 <__malloc_lock>
 800a950:	9a01      	ldr	r2, [sp, #4]
 800a952:	f102 080b 	add.w	r8, r2, #11
 800a956:	f1b8 0f16 	cmp.w	r8, #22
 800a95a:	d90b      	bls.n	800a974 <_realloc_r+0x40>
 800a95c:	f038 0807 	bics.w	r8, r8, #7
 800a960:	d50a      	bpl.n	800a978 <_realloc_r+0x44>
 800a962:	230c      	movs	r3, #12
 800a964:	f8c9 3000 	str.w	r3, [r9]
 800a968:	f04f 0b00 	mov.w	fp, #0
 800a96c:	4658      	mov	r0, fp
 800a96e:	b003      	add	sp, #12
 800a970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a974:	f04f 0810 	mov.w	r8, #16
 800a978:	4590      	cmp	r8, r2
 800a97a:	d3f2      	bcc.n	800a962 <_realloc_r+0x2e>
 800a97c:	f854 5c04 	ldr.w	r5, [r4, #-4]
 800a980:	f025 0603 	bic.w	r6, r5, #3
 800a984:	45b0      	cmp	r8, r6
 800a986:	f1a4 0a08 	sub.w	sl, r4, #8
 800a98a:	f340 816e 	ble.w	800ac6a <_realloc_r+0x336>
 800a98e:	499b      	ldr	r1, [pc, #620]	; (800abfc <_realloc_r+0x2c8>)
 800a990:	f8d1 c008 	ldr.w	ip, [r1, #8]
 800a994:	eb0a 0306 	add.w	r3, sl, r6
 800a998:	459c      	cmp	ip, r3
 800a99a:	6859      	ldr	r1, [r3, #4]
 800a99c:	d005      	beq.n	800a9aa <_realloc_r+0x76>
 800a99e:	f021 0001 	bic.w	r0, r1, #1
 800a9a2:	4418      	add	r0, r3
 800a9a4:	6840      	ldr	r0, [r0, #4]
 800a9a6:	07c7      	lsls	r7, r0, #31
 800a9a8:	d427      	bmi.n	800a9fa <_realloc_r+0xc6>
 800a9aa:	f021 0103 	bic.w	r1, r1, #3
 800a9ae:	459c      	cmp	ip, r3
 800a9b0:	eb06 0701 	add.w	r7, r6, r1
 800a9b4:	d119      	bne.n	800a9ea <_realloc_r+0xb6>
 800a9b6:	f108 0010 	add.w	r0, r8, #16
 800a9ba:	42b8      	cmp	r0, r7
 800a9bc:	dc1f      	bgt.n	800a9fe <_realloc_r+0xca>
 800a9be:	eb0a 0308 	add.w	r3, sl, r8
 800a9c2:	4a8e      	ldr	r2, [pc, #568]	; (800abfc <_realloc_r+0x2c8>)
 800a9c4:	eba7 0708 	sub.w	r7, r7, r8
 800a9c8:	f047 0701 	orr.w	r7, r7, #1
 800a9cc:	6093      	str	r3, [r2, #8]
 800a9ce:	605f      	str	r7, [r3, #4]
 800a9d0:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a9d4:	f003 0301 	and.w	r3, r3, #1
 800a9d8:	ea43 0308 	orr.w	r3, r3, r8
 800a9dc:	f844 3c04 	str.w	r3, [r4, #-4]
 800a9e0:	4648      	mov	r0, r9
 800a9e2:	f7ff ff4b 	bl	800a87c <__malloc_unlock>
 800a9e6:	46a3      	mov	fp, r4
 800a9e8:	e7c0      	b.n	800a96c <_realloc_r+0x38>
 800a9ea:	45b8      	cmp	r8, r7
 800a9ec:	dc07      	bgt.n	800a9fe <_realloc_r+0xca>
 800a9ee:	e9d3 3202 	ldrd	r3, r2, [r3, #8]
 800a9f2:	60da      	str	r2, [r3, #12]
 800a9f4:	6093      	str	r3, [r2, #8]
 800a9f6:	4655      	mov	r5, sl
 800a9f8:	e07f      	b.n	800aafa <_realloc_r+0x1c6>
 800a9fa:	2100      	movs	r1, #0
 800a9fc:	460b      	mov	r3, r1
 800a9fe:	07e8      	lsls	r0, r5, #31
 800aa00:	f100 80e5 	bmi.w	800abce <_realloc_r+0x29a>
 800aa04:	f854 5c08 	ldr.w	r5, [r4, #-8]
 800aa08:	ebaa 0505 	sub.w	r5, sl, r5
 800aa0c:	6868      	ldr	r0, [r5, #4]
 800aa0e:	f020 0003 	bic.w	r0, r0, #3
 800aa12:	eb00 0b06 	add.w	fp, r0, r6
 800aa16:	2b00      	cmp	r3, #0
 800aa18:	f000 80a5 	beq.w	800ab66 <_realloc_r+0x232>
 800aa1c:	459c      	cmp	ip, r3
 800aa1e:	eb01 070b 	add.w	r7, r1, fp
 800aa22:	d14a      	bne.n	800aaba <_realloc_r+0x186>
 800aa24:	f108 0310 	add.w	r3, r8, #16
 800aa28:	42bb      	cmp	r3, r7
 800aa2a:	f300 809c 	bgt.w	800ab66 <_realloc_r+0x232>
 800aa2e:	46ab      	mov	fp, r5
 800aa30:	68eb      	ldr	r3, [r5, #12]
 800aa32:	f85b 2f08 	ldr.w	r2, [fp, #8]!
 800aa36:	60d3      	str	r3, [r2, #12]
 800aa38:	609a      	str	r2, [r3, #8]
 800aa3a:	1f32      	subs	r2, r6, #4
 800aa3c:	2a24      	cmp	r2, #36	; 0x24
 800aa3e:	d837      	bhi.n	800aab0 <_realloc_r+0x17c>
 800aa40:	2a13      	cmp	r2, #19
 800aa42:	d933      	bls.n	800aaac <_realloc_r+0x178>
 800aa44:	6823      	ldr	r3, [r4, #0]
 800aa46:	60ab      	str	r3, [r5, #8]
 800aa48:	6863      	ldr	r3, [r4, #4]
 800aa4a:	60eb      	str	r3, [r5, #12]
 800aa4c:	2a1b      	cmp	r2, #27
 800aa4e:	d81b      	bhi.n	800aa88 <_realloc_r+0x154>
 800aa50:	3408      	adds	r4, #8
 800aa52:	f105 0310 	add.w	r3, r5, #16
 800aa56:	6822      	ldr	r2, [r4, #0]
 800aa58:	601a      	str	r2, [r3, #0]
 800aa5a:	6862      	ldr	r2, [r4, #4]
 800aa5c:	605a      	str	r2, [r3, #4]
 800aa5e:	68a2      	ldr	r2, [r4, #8]
 800aa60:	609a      	str	r2, [r3, #8]
 800aa62:	eb05 0308 	add.w	r3, r5, r8
 800aa66:	4a65      	ldr	r2, [pc, #404]	; (800abfc <_realloc_r+0x2c8>)
 800aa68:	eba7 0708 	sub.w	r7, r7, r8
 800aa6c:	f047 0701 	orr.w	r7, r7, #1
 800aa70:	6093      	str	r3, [r2, #8]
 800aa72:	605f      	str	r7, [r3, #4]
 800aa74:	686b      	ldr	r3, [r5, #4]
 800aa76:	f003 0301 	and.w	r3, r3, #1
 800aa7a:	ea43 0308 	orr.w	r3, r3, r8
 800aa7e:	606b      	str	r3, [r5, #4]
 800aa80:	4648      	mov	r0, r9
 800aa82:	f7ff fefb 	bl	800a87c <__malloc_unlock>
 800aa86:	e771      	b.n	800a96c <_realloc_r+0x38>
 800aa88:	68a3      	ldr	r3, [r4, #8]
 800aa8a:	612b      	str	r3, [r5, #16]
 800aa8c:	68e3      	ldr	r3, [r4, #12]
 800aa8e:	616b      	str	r3, [r5, #20]
 800aa90:	2a24      	cmp	r2, #36	; 0x24
 800aa92:	bf01      	itttt	eq
 800aa94:	6923      	ldreq	r3, [r4, #16]
 800aa96:	61ab      	streq	r3, [r5, #24]
 800aa98:	6962      	ldreq	r2, [r4, #20]
 800aa9a:	61ea      	streq	r2, [r5, #28]
 800aa9c:	bf19      	ittee	ne
 800aa9e:	3410      	addne	r4, #16
 800aaa0:	f105 0318 	addne.w	r3, r5, #24
 800aaa4:	f105 0320 	addeq.w	r3, r5, #32
 800aaa8:	3418      	addeq	r4, #24
 800aaaa:	e7d4      	b.n	800aa56 <_realloc_r+0x122>
 800aaac:	465b      	mov	r3, fp
 800aaae:	e7d2      	b.n	800aa56 <_realloc_r+0x122>
 800aab0:	4621      	mov	r1, r4
 800aab2:	4658      	mov	r0, fp
 800aab4:	f003 fe0a 	bl	800e6cc <memmove>
 800aab8:	e7d3      	b.n	800aa62 <_realloc_r+0x12e>
 800aaba:	45b8      	cmp	r8, r7
 800aabc:	dc53      	bgt.n	800ab66 <_realloc_r+0x232>
 800aabe:	e9d3 3202 	ldrd	r3, r2, [r3, #8]
 800aac2:	4628      	mov	r0, r5
 800aac4:	60da      	str	r2, [r3, #12]
 800aac6:	6093      	str	r3, [r2, #8]
 800aac8:	f850 2f08 	ldr.w	r2, [r0, #8]!
 800aacc:	68eb      	ldr	r3, [r5, #12]
 800aace:	60d3      	str	r3, [r2, #12]
 800aad0:	609a      	str	r2, [r3, #8]
 800aad2:	1f32      	subs	r2, r6, #4
 800aad4:	2a24      	cmp	r2, #36	; 0x24
 800aad6:	d842      	bhi.n	800ab5e <_realloc_r+0x22a>
 800aad8:	2a13      	cmp	r2, #19
 800aada:	d908      	bls.n	800aaee <_realloc_r+0x1ba>
 800aadc:	6823      	ldr	r3, [r4, #0]
 800aade:	60ab      	str	r3, [r5, #8]
 800aae0:	6863      	ldr	r3, [r4, #4]
 800aae2:	60eb      	str	r3, [r5, #12]
 800aae4:	2a1b      	cmp	r2, #27
 800aae6:	d828      	bhi.n	800ab3a <_realloc_r+0x206>
 800aae8:	3408      	adds	r4, #8
 800aaea:	f105 0010 	add.w	r0, r5, #16
 800aaee:	6823      	ldr	r3, [r4, #0]
 800aaf0:	6003      	str	r3, [r0, #0]
 800aaf2:	6863      	ldr	r3, [r4, #4]
 800aaf4:	6043      	str	r3, [r0, #4]
 800aaf6:	68a3      	ldr	r3, [r4, #8]
 800aaf8:	6083      	str	r3, [r0, #8]
 800aafa:	686b      	ldr	r3, [r5, #4]
 800aafc:	eba7 0008 	sub.w	r0, r7, r8
 800ab00:	280f      	cmp	r0, #15
 800ab02:	f003 0301 	and.w	r3, r3, #1
 800ab06:	eb05 0207 	add.w	r2, r5, r7
 800ab0a:	f240 80b0 	bls.w	800ac6e <_realloc_r+0x33a>
 800ab0e:	eb05 0108 	add.w	r1, r5, r8
 800ab12:	ea48 0303 	orr.w	r3, r8, r3
 800ab16:	f040 0001 	orr.w	r0, r0, #1
 800ab1a:	606b      	str	r3, [r5, #4]
 800ab1c:	6048      	str	r0, [r1, #4]
 800ab1e:	6853      	ldr	r3, [r2, #4]
 800ab20:	f043 0301 	orr.w	r3, r3, #1
 800ab24:	6053      	str	r3, [r2, #4]
 800ab26:	3108      	adds	r1, #8
 800ab28:	4648      	mov	r0, r9
 800ab2a:	f7ff fb37 	bl	800a19c <_free_r>
 800ab2e:	4648      	mov	r0, r9
 800ab30:	f7ff fea4 	bl	800a87c <__malloc_unlock>
 800ab34:	f105 0b08 	add.w	fp, r5, #8
 800ab38:	e718      	b.n	800a96c <_realloc_r+0x38>
 800ab3a:	68a3      	ldr	r3, [r4, #8]
 800ab3c:	612b      	str	r3, [r5, #16]
 800ab3e:	68e3      	ldr	r3, [r4, #12]
 800ab40:	616b      	str	r3, [r5, #20]
 800ab42:	2a24      	cmp	r2, #36	; 0x24
 800ab44:	bf01      	itttt	eq
 800ab46:	6923      	ldreq	r3, [r4, #16]
 800ab48:	61ab      	streq	r3, [r5, #24]
 800ab4a:	6963      	ldreq	r3, [r4, #20]
 800ab4c:	61eb      	streq	r3, [r5, #28]
 800ab4e:	bf19      	ittee	ne
 800ab50:	3410      	addne	r4, #16
 800ab52:	f105 0018 	addne.w	r0, r5, #24
 800ab56:	f105 0020 	addeq.w	r0, r5, #32
 800ab5a:	3418      	addeq	r4, #24
 800ab5c:	e7c7      	b.n	800aaee <_realloc_r+0x1ba>
 800ab5e:	4621      	mov	r1, r4
 800ab60:	f003 fdb4 	bl	800e6cc <memmove>
 800ab64:	e7c9      	b.n	800aafa <_realloc_r+0x1c6>
 800ab66:	45d8      	cmp	r8, fp
 800ab68:	dc31      	bgt.n	800abce <_realloc_r+0x29a>
 800ab6a:	4628      	mov	r0, r5
 800ab6c:	68eb      	ldr	r3, [r5, #12]
 800ab6e:	f850 2f08 	ldr.w	r2, [r0, #8]!
 800ab72:	60d3      	str	r3, [r2, #12]
 800ab74:	609a      	str	r2, [r3, #8]
 800ab76:	1f32      	subs	r2, r6, #4
 800ab78:	2a24      	cmp	r2, #36	; 0x24
 800ab7a:	d824      	bhi.n	800abc6 <_realloc_r+0x292>
 800ab7c:	2a13      	cmp	r2, #19
 800ab7e:	d908      	bls.n	800ab92 <_realloc_r+0x25e>
 800ab80:	6823      	ldr	r3, [r4, #0]
 800ab82:	60ab      	str	r3, [r5, #8]
 800ab84:	6863      	ldr	r3, [r4, #4]
 800ab86:	60eb      	str	r3, [r5, #12]
 800ab88:	2a1b      	cmp	r2, #27
 800ab8a:	d80a      	bhi.n	800aba2 <_realloc_r+0x26e>
 800ab8c:	3408      	adds	r4, #8
 800ab8e:	f105 0010 	add.w	r0, r5, #16
 800ab92:	6823      	ldr	r3, [r4, #0]
 800ab94:	6003      	str	r3, [r0, #0]
 800ab96:	6863      	ldr	r3, [r4, #4]
 800ab98:	6043      	str	r3, [r0, #4]
 800ab9a:	68a3      	ldr	r3, [r4, #8]
 800ab9c:	6083      	str	r3, [r0, #8]
 800ab9e:	465f      	mov	r7, fp
 800aba0:	e7ab      	b.n	800aafa <_realloc_r+0x1c6>
 800aba2:	68a3      	ldr	r3, [r4, #8]
 800aba4:	612b      	str	r3, [r5, #16]
 800aba6:	68e3      	ldr	r3, [r4, #12]
 800aba8:	616b      	str	r3, [r5, #20]
 800abaa:	2a24      	cmp	r2, #36	; 0x24
 800abac:	bf01      	itttt	eq
 800abae:	6923      	ldreq	r3, [r4, #16]
 800abb0:	61ab      	streq	r3, [r5, #24]
 800abb2:	6963      	ldreq	r3, [r4, #20]
 800abb4:	61eb      	streq	r3, [r5, #28]
 800abb6:	bf19      	ittee	ne
 800abb8:	3410      	addne	r4, #16
 800abba:	f105 0018 	addne.w	r0, r5, #24
 800abbe:	f105 0020 	addeq.w	r0, r5, #32
 800abc2:	3418      	addeq	r4, #24
 800abc4:	e7e5      	b.n	800ab92 <_realloc_r+0x25e>
 800abc6:	4621      	mov	r1, r4
 800abc8:	f003 fd80 	bl	800e6cc <memmove>
 800abcc:	e7e7      	b.n	800ab9e <_realloc_r+0x26a>
 800abce:	4611      	mov	r1, r2
 800abd0:	4648      	mov	r0, r9
 800abd2:	f7ff fbfb 	bl	800a3cc <_malloc_r>
 800abd6:	4683      	mov	fp, r0
 800abd8:	2800      	cmp	r0, #0
 800abda:	f43f af51 	beq.w	800aa80 <_realloc_r+0x14c>
 800abde:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800abe2:	f023 0301 	bic.w	r3, r3, #1
 800abe6:	4453      	add	r3, sl
 800abe8:	f1a0 0208 	sub.w	r2, r0, #8
 800abec:	4293      	cmp	r3, r2
 800abee:	d107      	bne.n	800ac00 <_realloc_r+0x2cc>
 800abf0:	f850 7c04 	ldr.w	r7, [r0, #-4]
 800abf4:	f027 0703 	bic.w	r7, r7, #3
 800abf8:	4437      	add	r7, r6
 800abfa:	e6fc      	b.n	800a9f6 <_realloc_r+0xc2>
 800abfc:	20000450 	.word	0x20000450
 800ac00:	1f32      	subs	r2, r6, #4
 800ac02:	2a24      	cmp	r2, #36	; 0x24
 800ac04:	d82d      	bhi.n	800ac62 <_realloc_r+0x32e>
 800ac06:	2a13      	cmp	r2, #19
 800ac08:	d928      	bls.n	800ac5c <_realloc_r+0x328>
 800ac0a:	6823      	ldr	r3, [r4, #0]
 800ac0c:	6003      	str	r3, [r0, #0]
 800ac0e:	6863      	ldr	r3, [r4, #4]
 800ac10:	6043      	str	r3, [r0, #4]
 800ac12:	2a1b      	cmp	r2, #27
 800ac14:	d80e      	bhi.n	800ac34 <_realloc_r+0x300>
 800ac16:	f104 0208 	add.w	r2, r4, #8
 800ac1a:	f100 0308 	add.w	r3, r0, #8
 800ac1e:	6811      	ldr	r1, [r2, #0]
 800ac20:	6019      	str	r1, [r3, #0]
 800ac22:	6851      	ldr	r1, [r2, #4]
 800ac24:	6059      	str	r1, [r3, #4]
 800ac26:	6892      	ldr	r2, [r2, #8]
 800ac28:	609a      	str	r2, [r3, #8]
 800ac2a:	4621      	mov	r1, r4
 800ac2c:	4648      	mov	r0, r9
 800ac2e:	f7ff fab5 	bl	800a19c <_free_r>
 800ac32:	e725      	b.n	800aa80 <_realloc_r+0x14c>
 800ac34:	68a3      	ldr	r3, [r4, #8]
 800ac36:	6083      	str	r3, [r0, #8]
 800ac38:	68e3      	ldr	r3, [r4, #12]
 800ac3a:	60c3      	str	r3, [r0, #12]
 800ac3c:	2a24      	cmp	r2, #36	; 0x24
 800ac3e:	bf01      	itttt	eq
 800ac40:	6923      	ldreq	r3, [r4, #16]
 800ac42:	6103      	streq	r3, [r0, #16]
 800ac44:	6961      	ldreq	r1, [r4, #20]
 800ac46:	6141      	streq	r1, [r0, #20]
 800ac48:	bf19      	ittee	ne
 800ac4a:	f104 0210 	addne.w	r2, r4, #16
 800ac4e:	f100 0310 	addne.w	r3, r0, #16
 800ac52:	f104 0218 	addeq.w	r2, r4, #24
 800ac56:	f100 0318 	addeq.w	r3, r0, #24
 800ac5a:	e7e0      	b.n	800ac1e <_realloc_r+0x2ea>
 800ac5c:	4603      	mov	r3, r0
 800ac5e:	4622      	mov	r2, r4
 800ac60:	e7dd      	b.n	800ac1e <_realloc_r+0x2ea>
 800ac62:	4621      	mov	r1, r4
 800ac64:	f003 fd32 	bl	800e6cc <memmove>
 800ac68:	e7df      	b.n	800ac2a <_realloc_r+0x2f6>
 800ac6a:	4637      	mov	r7, r6
 800ac6c:	e6c3      	b.n	800a9f6 <_realloc_r+0xc2>
 800ac6e:	431f      	orrs	r7, r3
 800ac70:	606f      	str	r7, [r5, #4]
 800ac72:	6853      	ldr	r3, [r2, #4]
 800ac74:	f043 0301 	orr.w	r3, r3, #1
 800ac78:	6053      	str	r3, [r2, #4]
 800ac7a:	e758      	b.n	800ab2e <_realloc_r+0x1fa>

0800ac7c <cleanup_glue>:
 800ac7c:	b538      	push	{r3, r4, r5, lr}
 800ac7e:	460c      	mov	r4, r1
 800ac80:	6809      	ldr	r1, [r1, #0]
 800ac82:	4605      	mov	r5, r0
 800ac84:	b109      	cbz	r1, 800ac8a <cleanup_glue+0xe>
 800ac86:	f7ff fff9 	bl	800ac7c <cleanup_glue>
 800ac8a:	4621      	mov	r1, r4
 800ac8c:	4628      	mov	r0, r5
 800ac8e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ac92:	f7ff ba83 	b.w	800a19c <_free_r>
	...

0800ac98 <_reclaim_reent>:
 800ac98:	4b20      	ldr	r3, [pc, #128]	; (800ad1c <_reclaim_reent+0x84>)
 800ac9a:	681b      	ldr	r3, [r3, #0]
 800ac9c:	4283      	cmp	r3, r0
 800ac9e:	b570      	push	{r4, r5, r6, lr}
 800aca0:	4604      	mov	r4, r0
 800aca2:	d039      	beq.n	800ad18 <_reclaim_reent+0x80>
 800aca4:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800aca6:	bb33      	cbnz	r3, 800acf6 <_reclaim_reent+0x5e>
 800aca8:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800acaa:	b111      	cbz	r1, 800acb2 <_reclaim_reent+0x1a>
 800acac:	4620      	mov	r0, r4
 800acae:	f7ff fa75 	bl	800a19c <_free_r>
 800acb2:	f8d4 5148 	ldr.w	r5, [r4, #328]	; 0x148
 800acb6:	bb05      	cbnz	r5, 800acfa <_reclaim_reent+0x62>
 800acb8:	6d61      	ldr	r1, [r4, #84]	; 0x54
 800acba:	bb49      	cbnz	r1, 800ad10 <_reclaim_reent+0x78>
 800acbc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800acbe:	b35b      	cbz	r3, 800ad18 <_reclaim_reent+0x80>
 800acc0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800acc2:	4620      	mov	r0, r4
 800acc4:	4798      	blx	r3
 800acc6:	f8d4 12e0 	ldr.w	r1, [r4, #736]	; 0x2e0
 800acca:	b329      	cbz	r1, 800ad18 <_reclaim_reent+0x80>
 800accc:	4620      	mov	r0, r4
 800acce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800acd2:	f7ff bfd3 	b.w	800ac7c <cleanup_glue>
 800acd6:	5949      	ldr	r1, [r1, r5]
 800acd8:	b939      	cbnz	r1, 800acea <_reclaim_reent+0x52>
 800acda:	3504      	adds	r5, #4
 800acdc:	2d80      	cmp	r5, #128	; 0x80
 800acde:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 800ace0:	d1f9      	bne.n	800acd6 <_reclaim_reent+0x3e>
 800ace2:	4620      	mov	r0, r4
 800ace4:	f7ff fa5a 	bl	800a19c <_free_r>
 800ace8:	e7de      	b.n	800aca8 <_reclaim_reent+0x10>
 800acea:	680e      	ldr	r6, [r1, #0]
 800acec:	4620      	mov	r0, r4
 800acee:	f7ff fa55 	bl	800a19c <_free_r>
 800acf2:	4631      	mov	r1, r6
 800acf4:	e7f0      	b.n	800acd8 <_reclaim_reent+0x40>
 800acf6:	2500      	movs	r5, #0
 800acf8:	e7f0      	b.n	800acdc <_reclaim_reent+0x44>
 800acfa:	f504 76a6 	add.w	r6, r4, #332	; 0x14c
 800acfe:	42b5      	cmp	r5, r6
 800ad00:	d0da      	beq.n	800acb8 <_reclaim_reent+0x20>
 800ad02:	4629      	mov	r1, r5
 800ad04:	682d      	ldr	r5, [r5, #0]
 800ad06:	4620      	mov	r0, r4
 800ad08:	f7ff fa48 	bl	800a19c <_free_r>
 800ad0c:	42ae      	cmp	r6, r5
 800ad0e:	e7f7      	b.n	800ad00 <_reclaim_reent+0x68>
 800ad10:	4620      	mov	r0, r4
 800ad12:	f7ff fa43 	bl	800a19c <_free_r>
 800ad16:	e7d1      	b.n	800acbc <_reclaim_reent+0x24>
 800ad18:	bd70      	pop	{r4, r5, r6, pc}
 800ad1a:	bf00      	nop
 800ad1c:	20000020 	.word	0x20000020

0800ad20 <_sbrk_r>:
 800ad20:	b538      	push	{r3, r4, r5, lr}
 800ad22:	4d06      	ldr	r5, [pc, #24]	; (800ad3c <_sbrk_r+0x1c>)
 800ad24:	2300      	movs	r3, #0
 800ad26:	4604      	mov	r4, r0
 800ad28:	4608      	mov	r0, r1
 800ad2a:	602b      	str	r3, [r5, #0]
 800ad2c:	f7f7 fdd8 	bl	80028e0 <_sbrk>
 800ad30:	1c43      	adds	r3, r0, #1
 800ad32:	d102      	bne.n	800ad3a <_sbrk_r+0x1a>
 800ad34:	682b      	ldr	r3, [r5, #0]
 800ad36:	b103      	cbz	r3, 800ad3a <_sbrk_r+0x1a>
 800ad38:	6023      	str	r3, [r4, #0]
 800ad3a:	bd38      	pop	{r3, r4, r5, pc}
 800ad3c:	20017ad4 	.word	0x20017ad4

0800ad40 <sprintf>:
 800ad40:	b40e      	push	{r1, r2, r3}
 800ad42:	b500      	push	{lr}
 800ad44:	b09c      	sub	sp, #112	; 0x70
 800ad46:	ab1d      	add	r3, sp, #116	; 0x74
 800ad48:	9002      	str	r0, [sp, #8]
 800ad4a:	9006      	str	r0, [sp, #24]
 800ad4c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800ad50:	4809      	ldr	r0, [pc, #36]	; (800ad78 <sprintf+0x38>)
 800ad52:	9107      	str	r1, [sp, #28]
 800ad54:	9104      	str	r1, [sp, #16]
 800ad56:	4909      	ldr	r1, [pc, #36]	; (800ad7c <sprintf+0x3c>)
 800ad58:	f853 2b04 	ldr.w	r2, [r3], #4
 800ad5c:	9105      	str	r1, [sp, #20]
 800ad5e:	6800      	ldr	r0, [r0, #0]
 800ad60:	9301      	str	r3, [sp, #4]
 800ad62:	a902      	add	r1, sp, #8
 800ad64:	f000 feb8 	bl	800bad8 <_svfprintf_r>
 800ad68:	9b02      	ldr	r3, [sp, #8]
 800ad6a:	2200      	movs	r2, #0
 800ad6c:	701a      	strb	r2, [r3, #0]
 800ad6e:	b01c      	add	sp, #112	; 0x70
 800ad70:	f85d eb04 	ldr.w	lr, [sp], #4
 800ad74:	b003      	add	sp, #12
 800ad76:	4770      	bx	lr
 800ad78:	20000020 	.word	0x20000020
 800ad7c:	ffff0208 	.word	0xffff0208

0800ad80 <__sread>:
 800ad80:	b510      	push	{r4, lr}
 800ad82:	460c      	mov	r4, r1
 800ad84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ad88:	f004 f92e 	bl	800efe8 <_read_r>
 800ad8c:	2800      	cmp	r0, #0
 800ad8e:	bfab      	itete	ge
 800ad90:	6d23      	ldrge	r3, [r4, #80]	; 0x50
 800ad92:	89a3      	ldrhlt	r3, [r4, #12]
 800ad94:	181b      	addge	r3, r3, r0
 800ad96:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800ad9a:	bfac      	ite	ge
 800ad9c:	6523      	strge	r3, [r4, #80]	; 0x50
 800ad9e:	81a3      	strhlt	r3, [r4, #12]
 800ada0:	bd10      	pop	{r4, pc}

0800ada2 <__swrite>:
 800ada2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ada6:	461f      	mov	r7, r3
 800ada8:	898b      	ldrh	r3, [r1, #12]
 800adaa:	05db      	lsls	r3, r3, #23
 800adac:	4605      	mov	r5, r0
 800adae:	460c      	mov	r4, r1
 800adb0:	4616      	mov	r6, r2
 800adb2:	d505      	bpl.n	800adc0 <__swrite+0x1e>
 800adb4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800adb8:	2302      	movs	r3, #2
 800adba:	2200      	movs	r2, #0
 800adbc:	f003 fc62 	bl	800e684 <_lseek_r>
 800adc0:	89a3      	ldrh	r3, [r4, #12]
 800adc2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800adc6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800adca:	81a3      	strh	r3, [r4, #12]
 800adcc:	4632      	mov	r2, r6
 800adce:	463b      	mov	r3, r7
 800add0:	4628      	mov	r0, r5
 800add2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800add6:	f002 b891 	b.w	800cefc <_write_r>

0800adda <__sseek>:
 800adda:	b510      	push	{r4, lr}
 800addc:	460c      	mov	r4, r1
 800adde:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ade2:	f003 fc4f 	bl	800e684 <_lseek_r>
 800ade6:	1c43      	adds	r3, r0, #1
 800ade8:	89a3      	ldrh	r3, [r4, #12]
 800adea:	bf15      	itete	ne
 800adec:	6520      	strne	r0, [r4, #80]	; 0x50
 800adee:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800adf2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800adf6:	81a3      	strheq	r3, [r4, #12]
 800adf8:	bf18      	it	ne
 800adfa:	81a3      	strhne	r3, [r4, #12]
 800adfc:	bd10      	pop	{r4, pc}

0800adfe <__sclose>:
 800adfe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ae02:	f002 b89d 	b.w	800cf40 <_close_r>

0800ae06 <strchr>:
 800ae06:	b2c9      	uxtb	r1, r1
 800ae08:	4603      	mov	r3, r0
 800ae0a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800ae0e:	b11a      	cbz	r2, 800ae18 <strchr+0x12>
 800ae10:	428a      	cmp	r2, r1
 800ae12:	d1f9      	bne.n	800ae08 <strchr+0x2>
 800ae14:	4618      	mov	r0, r3
 800ae16:	4770      	bx	lr
 800ae18:	2900      	cmp	r1, #0
 800ae1a:	bf18      	it	ne
 800ae1c:	2300      	movne	r3, #0
 800ae1e:	e7f9      	b.n	800ae14 <strchr+0xe>

0800ae20 <strncmp>:
 800ae20:	b510      	push	{r4, lr}
 800ae22:	b17a      	cbz	r2, 800ae44 <strncmp+0x24>
 800ae24:	4603      	mov	r3, r0
 800ae26:	3901      	subs	r1, #1
 800ae28:	1884      	adds	r4, r0, r2
 800ae2a:	f813 0b01 	ldrb.w	r0, [r3], #1
 800ae2e:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800ae32:	4290      	cmp	r0, r2
 800ae34:	d101      	bne.n	800ae3a <strncmp+0x1a>
 800ae36:	42a3      	cmp	r3, r4
 800ae38:	d101      	bne.n	800ae3e <strncmp+0x1e>
 800ae3a:	1a80      	subs	r0, r0, r2
 800ae3c:	bd10      	pop	{r4, pc}
 800ae3e:	2800      	cmp	r0, #0
 800ae40:	d1f3      	bne.n	800ae2a <strncmp+0xa>
 800ae42:	e7fa      	b.n	800ae3a <strncmp+0x1a>
 800ae44:	4610      	mov	r0, r2
 800ae46:	e7f9      	b.n	800ae3c <strncmp+0x1c>

0800ae48 <strstr>:
 800ae48:	780a      	ldrb	r2, [r1, #0]
 800ae4a:	b570      	push	{r4, r5, r6, lr}
 800ae4c:	b96a      	cbnz	r2, 800ae6a <strstr+0x22>
 800ae4e:	bd70      	pop	{r4, r5, r6, pc}
 800ae50:	429a      	cmp	r2, r3
 800ae52:	d109      	bne.n	800ae68 <strstr+0x20>
 800ae54:	460c      	mov	r4, r1
 800ae56:	4605      	mov	r5, r0
 800ae58:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800ae5c:	2b00      	cmp	r3, #0
 800ae5e:	d0f6      	beq.n	800ae4e <strstr+0x6>
 800ae60:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 800ae64:	429e      	cmp	r6, r3
 800ae66:	d0f7      	beq.n	800ae58 <strstr+0x10>
 800ae68:	3001      	adds	r0, #1
 800ae6a:	7803      	ldrb	r3, [r0, #0]
 800ae6c:	2b00      	cmp	r3, #0
 800ae6e:	d1ef      	bne.n	800ae50 <strstr+0x8>
 800ae70:	4618      	mov	r0, r3
 800ae72:	e7ec      	b.n	800ae4e <strstr+0x6>

0800ae74 <sulp>:
 800ae74:	b570      	push	{r4, r5, r6, lr}
 800ae76:	4604      	mov	r4, r0
 800ae78:	460d      	mov	r5, r1
 800ae7a:	ec45 4b10 	vmov	d0, r4, r5
 800ae7e:	4616      	mov	r6, r2
 800ae80:	f003 ff62 	bl	800ed48 <__ulp>
 800ae84:	ec51 0b10 	vmov	r0, r1, d0
 800ae88:	b17e      	cbz	r6, 800aeaa <sulp+0x36>
 800ae8a:	f3c5 530a 	ubfx	r3, r5, #20, #11
 800ae8e:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800ae92:	2b00      	cmp	r3, #0
 800ae94:	dd09      	ble.n	800aeaa <sulp+0x36>
 800ae96:	051b      	lsls	r3, r3, #20
 800ae98:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 800ae9c:	2400      	movs	r4, #0
 800ae9e:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800aea2:	4622      	mov	r2, r4
 800aea4:	462b      	mov	r3, r5
 800aea6:	f7f5 fbaf 	bl	8000608 <__aeabi_dmul>
 800aeaa:	bd70      	pop	{r4, r5, r6, pc}
 800aeac:	0000      	movs	r0, r0
	...

0800aeb0 <_strtod_l>:
 800aeb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aeb4:	ed2d 8b02 	vpush	{d8}
 800aeb8:	b09d      	sub	sp, #116	; 0x74
 800aeba:	461f      	mov	r7, r3
 800aebc:	2300      	movs	r3, #0
 800aebe:	9318      	str	r3, [sp, #96]	; 0x60
 800aec0:	4ba2      	ldr	r3, [pc, #648]	; (800b14c <_strtod_l+0x29c>)
 800aec2:	9213      	str	r2, [sp, #76]	; 0x4c
 800aec4:	681b      	ldr	r3, [r3, #0]
 800aec6:	9305      	str	r3, [sp, #20]
 800aec8:	4604      	mov	r4, r0
 800aeca:	4618      	mov	r0, r3
 800aecc:	4688      	mov	r8, r1
 800aece:	f7f5 f987 	bl	80001e0 <strlen>
 800aed2:	f04f 0a00 	mov.w	sl, #0
 800aed6:	4605      	mov	r5, r0
 800aed8:	f04f 0b00 	mov.w	fp, #0
 800aedc:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800aee0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800aee2:	781a      	ldrb	r2, [r3, #0]
 800aee4:	2a2b      	cmp	r2, #43	; 0x2b
 800aee6:	d04e      	beq.n	800af86 <_strtod_l+0xd6>
 800aee8:	d83b      	bhi.n	800af62 <_strtod_l+0xb2>
 800aeea:	2a0d      	cmp	r2, #13
 800aeec:	d834      	bhi.n	800af58 <_strtod_l+0xa8>
 800aeee:	2a08      	cmp	r2, #8
 800aef0:	d834      	bhi.n	800af5c <_strtod_l+0xac>
 800aef2:	2a00      	cmp	r2, #0
 800aef4:	d03e      	beq.n	800af74 <_strtod_l+0xc4>
 800aef6:	2300      	movs	r3, #0
 800aef8:	930a      	str	r3, [sp, #40]	; 0x28
 800aefa:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 800aefc:	7833      	ldrb	r3, [r6, #0]
 800aefe:	2b30      	cmp	r3, #48	; 0x30
 800af00:	f040 80b0 	bne.w	800b064 <_strtod_l+0x1b4>
 800af04:	7873      	ldrb	r3, [r6, #1]
 800af06:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800af0a:	2b58      	cmp	r3, #88	; 0x58
 800af0c:	d168      	bne.n	800afe0 <_strtod_l+0x130>
 800af0e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800af10:	9301      	str	r3, [sp, #4]
 800af12:	ab18      	add	r3, sp, #96	; 0x60
 800af14:	9702      	str	r7, [sp, #8]
 800af16:	9300      	str	r3, [sp, #0]
 800af18:	4a8d      	ldr	r2, [pc, #564]	; (800b150 <_strtod_l+0x2a0>)
 800af1a:	ab19      	add	r3, sp, #100	; 0x64
 800af1c:	a917      	add	r1, sp, #92	; 0x5c
 800af1e:	4620      	mov	r0, r4
 800af20:	f003 f89e 	bl	800e060 <__gethex>
 800af24:	f010 0707 	ands.w	r7, r0, #7
 800af28:	4605      	mov	r5, r0
 800af2a:	d005      	beq.n	800af38 <_strtod_l+0x88>
 800af2c:	2f06      	cmp	r7, #6
 800af2e:	d12c      	bne.n	800af8a <_strtod_l+0xda>
 800af30:	3601      	adds	r6, #1
 800af32:	2300      	movs	r3, #0
 800af34:	9617      	str	r6, [sp, #92]	; 0x5c
 800af36:	930a      	str	r3, [sp, #40]	; 0x28
 800af38:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800af3a:	2b00      	cmp	r3, #0
 800af3c:	f040 8590 	bne.w	800ba60 <_strtod_l+0xbb0>
 800af40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800af42:	b1eb      	cbz	r3, 800af80 <_strtod_l+0xd0>
 800af44:	4652      	mov	r2, sl
 800af46:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800af4a:	ec43 2b10 	vmov	d0, r2, r3
 800af4e:	b01d      	add	sp, #116	; 0x74
 800af50:	ecbd 8b02 	vpop	{d8}
 800af54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af58:	2a20      	cmp	r2, #32
 800af5a:	d1cc      	bne.n	800aef6 <_strtod_l+0x46>
 800af5c:	3301      	adds	r3, #1
 800af5e:	9317      	str	r3, [sp, #92]	; 0x5c
 800af60:	e7be      	b.n	800aee0 <_strtod_l+0x30>
 800af62:	2a2d      	cmp	r2, #45	; 0x2d
 800af64:	d1c7      	bne.n	800aef6 <_strtod_l+0x46>
 800af66:	2201      	movs	r2, #1
 800af68:	920a      	str	r2, [sp, #40]	; 0x28
 800af6a:	1c5a      	adds	r2, r3, #1
 800af6c:	9217      	str	r2, [sp, #92]	; 0x5c
 800af6e:	785b      	ldrb	r3, [r3, #1]
 800af70:	2b00      	cmp	r3, #0
 800af72:	d1c2      	bne.n	800aefa <_strtod_l+0x4a>
 800af74:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800af76:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800af7a:	2b00      	cmp	r3, #0
 800af7c:	f040 856e 	bne.w	800ba5c <_strtod_l+0xbac>
 800af80:	4652      	mov	r2, sl
 800af82:	465b      	mov	r3, fp
 800af84:	e7e1      	b.n	800af4a <_strtod_l+0x9a>
 800af86:	2200      	movs	r2, #0
 800af88:	e7ee      	b.n	800af68 <_strtod_l+0xb8>
 800af8a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800af8c:	b13a      	cbz	r2, 800af9e <_strtod_l+0xee>
 800af8e:	2135      	movs	r1, #53	; 0x35
 800af90:	a81a      	add	r0, sp, #104	; 0x68
 800af92:	f003 ffe4 	bl	800ef5e <__copybits>
 800af96:	9918      	ldr	r1, [sp, #96]	; 0x60
 800af98:	4620      	mov	r0, r4
 800af9a:	f003 fbd6 	bl	800e74a <_Bfree>
 800af9e:	3f01      	subs	r7, #1
 800afa0:	2f04      	cmp	r7, #4
 800afa2:	d806      	bhi.n	800afb2 <_strtod_l+0x102>
 800afa4:	e8df f007 	tbb	[pc, r7]
 800afa8:	1714030a 	.word	0x1714030a
 800afac:	0a          	.byte	0x0a
 800afad:	00          	.byte	0x00
 800afae:	e9dd ab1a 	ldrd	sl, fp, [sp, #104]	; 0x68
 800afb2:	0728      	lsls	r0, r5, #28
 800afb4:	d5c0      	bpl.n	800af38 <_strtod_l+0x88>
 800afb6:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 800afba:	e7bd      	b.n	800af38 <_strtod_l+0x88>
 800afbc:	e9dd a31a 	ldrd	sl, r3, [sp, #104]	; 0x68
 800afc0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800afc2:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800afc6:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800afca:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 800afce:	e7f0      	b.n	800afb2 <_strtod_l+0x102>
 800afd0:	f8df b180 	ldr.w	fp, [pc, #384]	; 800b154 <_strtod_l+0x2a4>
 800afd4:	e7ed      	b.n	800afb2 <_strtod_l+0x102>
 800afd6:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 800afda:	f04f 3aff 	mov.w	sl, #4294967295
 800afde:	e7e8      	b.n	800afb2 <_strtod_l+0x102>
 800afe0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800afe2:	1c5a      	adds	r2, r3, #1
 800afe4:	9217      	str	r2, [sp, #92]	; 0x5c
 800afe6:	785b      	ldrb	r3, [r3, #1]
 800afe8:	2b30      	cmp	r3, #48	; 0x30
 800afea:	d0f9      	beq.n	800afe0 <_strtod_l+0x130>
 800afec:	2b00      	cmp	r3, #0
 800afee:	d0a3      	beq.n	800af38 <_strtod_l+0x88>
 800aff0:	2301      	movs	r3, #1
 800aff2:	f04f 0900 	mov.w	r9, #0
 800aff6:	9304      	str	r3, [sp, #16]
 800aff8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800affa:	9308      	str	r3, [sp, #32]
 800affc:	f8cd 901c 	str.w	r9, [sp, #28]
 800b000:	464f      	mov	r7, r9
 800b002:	220a      	movs	r2, #10
 800b004:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800b006:	7806      	ldrb	r6, [r0, #0]
 800b008:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 800b00c:	b2d9      	uxtb	r1, r3
 800b00e:	2909      	cmp	r1, #9
 800b010:	d92a      	bls.n	800b068 <_strtod_l+0x1b8>
 800b012:	9905      	ldr	r1, [sp, #20]
 800b014:	462a      	mov	r2, r5
 800b016:	f7ff ff03 	bl	800ae20 <strncmp>
 800b01a:	b398      	cbz	r0, 800b084 <_strtod_l+0x1d4>
 800b01c:	2000      	movs	r0, #0
 800b01e:	4632      	mov	r2, r6
 800b020:	463d      	mov	r5, r7
 800b022:	9005      	str	r0, [sp, #20]
 800b024:	4603      	mov	r3, r0
 800b026:	2a65      	cmp	r2, #101	; 0x65
 800b028:	d001      	beq.n	800b02e <_strtod_l+0x17e>
 800b02a:	2a45      	cmp	r2, #69	; 0x45
 800b02c:	d118      	bne.n	800b060 <_strtod_l+0x1b0>
 800b02e:	b91d      	cbnz	r5, 800b038 <_strtod_l+0x188>
 800b030:	9a04      	ldr	r2, [sp, #16]
 800b032:	4302      	orrs	r2, r0
 800b034:	d09e      	beq.n	800af74 <_strtod_l+0xc4>
 800b036:	2500      	movs	r5, #0
 800b038:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
 800b03c:	f108 0201 	add.w	r2, r8, #1
 800b040:	9217      	str	r2, [sp, #92]	; 0x5c
 800b042:	f898 2001 	ldrb.w	r2, [r8, #1]
 800b046:	2a2b      	cmp	r2, #43	; 0x2b
 800b048:	d075      	beq.n	800b136 <_strtod_l+0x286>
 800b04a:	2a2d      	cmp	r2, #45	; 0x2d
 800b04c:	d07b      	beq.n	800b146 <_strtod_l+0x296>
 800b04e:	f04f 0c00 	mov.w	ip, #0
 800b052:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 800b056:	2909      	cmp	r1, #9
 800b058:	f240 8082 	bls.w	800b160 <_strtod_l+0x2b0>
 800b05c:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800b060:	2600      	movs	r6, #0
 800b062:	e09d      	b.n	800b1a0 <_strtod_l+0x2f0>
 800b064:	2300      	movs	r3, #0
 800b066:	e7c4      	b.n	800aff2 <_strtod_l+0x142>
 800b068:	2f08      	cmp	r7, #8
 800b06a:	bfd8      	it	le
 800b06c:	9907      	ldrle	r1, [sp, #28]
 800b06e:	f100 0001 	add.w	r0, r0, #1
 800b072:	bfda      	itte	le
 800b074:	fb02 3301 	mlale	r3, r2, r1, r3
 800b078:	9307      	strle	r3, [sp, #28]
 800b07a:	fb02 3909 	mlagt	r9, r2, r9, r3
 800b07e:	3701      	adds	r7, #1
 800b080:	9017      	str	r0, [sp, #92]	; 0x5c
 800b082:	e7bf      	b.n	800b004 <_strtod_l+0x154>
 800b084:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800b086:	195a      	adds	r2, r3, r5
 800b088:	9217      	str	r2, [sp, #92]	; 0x5c
 800b08a:	5d5a      	ldrb	r2, [r3, r5]
 800b08c:	2f00      	cmp	r7, #0
 800b08e:	d037      	beq.n	800b100 <_strtod_l+0x250>
 800b090:	9005      	str	r0, [sp, #20]
 800b092:	463d      	mov	r5, r7
 800b094:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800b098:	2b09      	cmp	r3, #9
 800b09a:	d912      	bls.n	800b0c2 <_strtod_l+0x212>
 800b09c:	2301      	movs	r3, #1
 800b09e:	e7c2      	b.n	800b026 <_strtod_l+0x176>
 800b0a0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800b0a2:	1c5a      	adds	r2, r3, #1
 800b0a4:	9217      	str	r2, [sp, #92]	; 0x5c
 800b0a6:	785a      	ldrb	r2, [r3, #1]
 800b0a8:	3001      	adds	r0, #1
 800b0aa:	2a30      	cmp	r2, #48	; 0x30
 800b0ac:	d0f8      	beq.n	800b0a0 <_strtod_l+0x1f0>
 800b0ae:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800b0b2:	2b08      	cmp	r3, #8
 800b0b4:	f200 84d9 	bhi.w	800ba6a <_strtod_l+0xbba>
 800b0b8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800b0ba:	9005      	str	r0, [sp, #20]
 800b0bc:	2000      	movs	r0, #0
 800b0be:	9308      	str	r3, [sp, #32]
 800b0c0:	4605      	mov	r5, r0
 800b0c2:	3a30      	subs	r2, #48	; 0x30
 800b0c4:	f100 0301 	add.w	r3, r0, #1
 800b0c8:	d014      	beq.n	800b0f4 <_strtod_l+0x244>
 800b0ca:	9905      	ldr	r1, [sp, #20]
 800b0cc:	4419      	add	r1, r3
 800b0ce:	9105      	str	r1, [sp, #20]
 800b0d0:	462b      	mov	r3, r5
 800b0d2:	eb00 0e05 	add.w	lr, r0, r5
 800b0d6:	210a      	movs	r1, #10
 800b0d8:	4573      	cmp	r3, lr
 800b0da:	d113      	bne.n	800b104 <_strtod_l+0x254>
 800b0dc:	182b      	adds	r3, r5, r0
 800b0de:	2b08      	cmp	r3, #8
 800b0e0:	f105 0501 	add.w	r5, r5, #1
 800b0e4:	4405      	add	r5, r0
 800b0e6:	dc1c      	bgt.n	800b122 <_strtod_l+0x272>
 800b0e8:	9907      	ldr	r1, [sp, #28]
 800b0ea:	230a      	movs	r3, #10
 800b0ec:	fb03 2301 	mla	r3, r3, r1, r2
 800b0f0:	9307      	str	r3, [sp, #28]
 800b0f2:	2300      	movs	r3, #0
 800b0f4:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800b0f6:	1c51      	adds	r1, r2, #1
 800b0f8:	9117      	str	r1, [sp, #92]	; 0x5c
 800b0fa:	7852      	ldrb	r2, [r2, #1]
 800b0fc:	4618      	mov	r0, r3
 800b0fe:	e7c9      	b.n	800b094 <_strtod_l+0x1e4>
 800b100:	4638      	mov	r0, r7
 800b102:	e7d2      	b.n	800b0aa <_strtod_l+0x1fa>
 800b104:	2b08      	cmp	r3, #8
 800b106:	dc04      	bgt.n	800b112 <_strtod_l+0x262>
 800b108:	9e07      	ldr	r6, [sp, #28]
 800b10a:	434e      	muls	r6, r1
 800b10c:	9607      	str	r6, [sp, #28]
 800b10e:	3301      	adds	r3, #1
 800b110:	e7e2      	b.n	800b0d8 <_strtod_l+0x228>
 800b112:	f103 0c01 	add.w	ip, r3, #1
 800b116:	f1bc 0f10 	cmp.w	ip, #16
 800b11a:	bfd8      	it	le
 800b11c:	fb01 f909 	mulle.w	r9, r1, r9
 800b120:	e7f5      	b.n	800b10e <_strtod_l+0x25e>
 800b122:	2d10      	cmp	r5, #16
 800b124:	bfdc      	itt	le
 800b126:	230a      	movle	r3, #10
 800b128:	fb03 2909 	mlale	r9, r3, r9, r2
 800b12c:	e7e1      	b.n	800b0f2 <_strtod_l+0x242>
 800b12e:	2300      	movs	r3, #0
 800b130:	9305      	str	r3, [sp, #20]
 800b132:	2301      	movs	r3, #1
 800b134:	e77c      	b.n	800b030 <_strtod_l+0x180>
 800b136:	f04f 0c00 	mov.w	ip, #0
 800b13a:	f108 0202 	add.w	r2, r8, #2
 800b13e:	9217      	str	r2, [sp, #92]	; 0x5c
 800b140:	f898 2002 	ldrb.w	r2, [r8, #2]
 800b144:	e785      	b.n	800b052 <_strtod_l+0x1a2>
 800b146:	f04f 0c01 	mov.w	ip, #1
 800b14a:	e7f6      	b.n	800b13a <_strtod_l+0x28a>
 800b14c:	08010dfc 	.word	0x08010dfc
 800b150:	08010c74 	.word	0x08010c74
 800b154:	7ff00000 	.word	0x7ff00000
 800b158:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800b15a:	1c51      	adds	r1, r2, #1
 800b15c:	9117      	str	r1, [sp, #92]	; 0x5c
 800b15e:	7852      	ldrb	r2, [r2, #1]
 800b160:	2a30      	cmp	r2, #48	; 0x30
 800b162:	d0f9      	beq.n	800b158 <_strtod_l+0x2a8>
 800b164:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 800b168:	2908      	cmp	r1, #8
 800b16a:	f63f af79 	bhi.w	800b060 <_strtod_l+0x1b0>
 800b16e:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 800b172:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800b174:	9206      	str	r2, [sp, #24]
 800b176:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800b178:	1c51      	adds	r1, r2, #1
 800b17a:	9117      	str	r1, [sp, #92]	; 0x5c
 800b17c:	7852      	ldrb	r2, [r2, #1]
 800b17e:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 800b182:	2e09      	cmp	r6, #9
 800b184:	d937      	bls.n	800b1f6 <_strtod_l+0x346>
 800b186:	9e06      	ldr	r6, [sp, #24]
 800b188:	1b89      	subs	r1, r1, r6
 800b18a:	2908      	cmp	r1, #8
 800b18c:	f644 661f 	movw	r6, #19999	; 0x4e1f
 800b190:	dc02      	bgt.n	800b198 <_strtod_l+0x2e8>
 800b192:	4576      	cmp	r6, lr
 800b194:	bfa8      	it	ge
 800b196:	4676      	movge	r6, lr
 800b198:	f1bc 0f00 	cmp.w	ip, #0
 800b19c:	d000      	beq.n	800b1a0 <_strtod_l+0x2f0>
 800b19e:	4276      	negs	r6, r6
 800b1a0:	2d00      	cmp	r5, #0
 800b1a2:	d14d      	bne.n	800b240 <_strtod_l+0x390>
 800b1a4:	9904      	ldr	r1, [sp, #16]
 800b1a6:	4301      	orrs	r1, r0
 800b1a8:	f47f aec6 	bne.w	800af38 <_strtod_l+0x88>
 800b1ac:	2b00      	cmp	r3, #0
 800b1ae:	f47f aee1 	bne.w	800af74 <_strtod_l+0xc4>
 800b1b2:	2a69      	cmp	r2, #105	; 0x69
 800b1b4:	d027      	beq.n	800b206 <_strtod_l+0x356>
 800b1b6:	dc24      	bgt.n	800b202 <_strtod_l+0x352>
 800b1b8:	2a49      	cmp	r2, #73	; 0x49
 800b1ba:	d024      	beq.n	800b206 <_strtod_l+0x356>
 800b1bc:	2a4e      	cmp	r2, #78	; 0x4e
 800b1be:	f47f aed9 	bne.w	800af74 <_strtod_l+0xc4>
 800b1c2:	499f      	ldr	r1, [pc, #636]	; (800b440 <_strtod_l+0x590>)
 800b1c4:	a817      	add	r0, sp, #92	; 0x5c
 800b1c6:	f003 f9a3 	bl	800e510 <__match>
 800b1ca:	2800      	cmp	r0, #0
 800b1cc:	f43f aed2 	beq.w	800af74 <_strtod_l+0xc4>
 800b1d0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800b1d2:	781b      	ldrb	r3, [r3, #0]
 800b1d4:	2b28      	cmp	r3, #40	; 0x28
 800b1d6:	d12d      	bne.n	800b234 <_strtod_l+0x384>
 800b1d8:	499a      	ldr	r1, [pc, #616]	; (800b444 <_strtod_l+0x594>)
 800b1da:	aa1a      	add	r2, sp, #104	; 0x68
 800b1dc:	a817      	add	r0, sp, #92	; 0x5c
 800b1de:	f003 f9ab 	bl	800e538 <__hexnan>
 800b1e2:	2805      	cmp	r0, #5
 800b1e4:	d126      	bne.n	800b234 <_strtod_l+0x384>
 800b1e6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800b1e8:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 800b1ec:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 800b1f0:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 800b1f4:	e6a0      	b.n	800af38 <_strtod_l+0x88>
 800b1f6:	210a      	movs	r1, #10
 800b1f8:	fb01 2e0e 	mla	lr, r1, lr, r2
 800b1fc:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 800b200:	e7b9      	b.n	800b176 <_strtod_l+0x2c6>
 800b202:	2a6e      	cmp	r2, #110	; 0x6e
 800b204:	e7db      	b.n	800b1be <_strtod_l+0x30e>
 800b206:	4990      	ldr	r1, [pc, #576]	; (800b448 <_strtod_l+0x598>)
 800b208:	a817      	add	r0, sp, #92	; 0x5c
 800b20a:	f003 f981 	bl	800e510 <__match>
 800b20e:	2800      	cmp	r0, #0
 800b210:	f43f aeb0 	beq.w	800af74 <_strtod_l+0xc4>
 800b214:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800b216:	498d      	ldr	r1, [pc, #564]	; (800b44c <_strtod_l+0x59c>)
 800b218:	3b01      	subs	r3, #1
 800b21a:	a817      	add	r0, sp, #92	; 0x5c
 800b21c:	9317      	str	r3, [sp, #92]	; 0x5c
 800b21e:	f003 f977 	bl	800e510 <__match>
 800b222:	b910      	cbnz	r0, 800b22a <_strtod_l+0x37a>
 800b224:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800b226:	3301      	adds	r3, #1
 800b228:	9317      	str	r3, [sp, #92]	; 0x5c
 800b22a:	f8df b230 	ldr.w	fp, [pc, #560]	; 800b45c <_strtod_l+0x5ac>
 800b22e:	f04f 0a00 	mov.w	sl, #0
 800b232:	e681      	b.n	800af38 <_strtod_l+0x88>
 800b234:	4886      	ldr	r0, [pc, #536]	; (800b450 <_strtod_l+0x5a0>)
 800b236:	f003 ff23 	bl	800f080 <nan>
 800b23a:	ec5b ab10 	vmov	sl, fp, d0
 800b23e:	e67b      	b.n	800af38 <_strtod_l+0x88>
 800b240:	9b05      	ldr	r3, [sp, #20]
 800b242:	9807      	ldr	r0, [sp, #28]
 800b244:	1af3      	subs	r3, r6, r3
 800b246:	2f00      	cmp	r7, #0
 800b248:	bf08      	it	eq
 800b24a:	462f      	moveq	r7, r5
 800b24c:	2d10      	cmp	r5, #16
 800b24e:	9306      	str	r3, [sp, #24]
 800b250:	46a8      	mov	r8, r5
 800b252:	bfa8      	it	ge
 800b254:	f04f 0810 	movge.w	r8, #16
 800b258:	f7f5 f95c 	bl	8000514 <__aeabi_ui2d>
 800b25c:	2d09      	cmp	r5, #9
 800b25e:	4682      	mov	sl, r0
 800b260:	468b      	mov	fp, r1
 800b262:	dd13      	ble.n	800b28c <_strtod_l+0x3dc>
 800b264:	4b7b      	ldr	r3, [pc, #492]	; (800b454 <_strtod_l+0x5a4>)
 800b266:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 800b26a:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800b26e:	f7f5 f9cb 	bl	8000608 <__aeabi_dmul>
 800b272:	4682      	mov	sl, r0
 800b274:	4648      	mov	r0, r9
 800b276:	468b      	mov	fp, r1
 800b278:	f7f5 f94c 	bl	8000514 <__aeabi_ui2d>
 800b27c:	4602      	mov	r2, r0
 800b27e:	460b      	mov	r3, r1
 800b280:	4650      	mov	r0, sl
 800b282:	4659      	mov	r1, fp
 800b284:	f7f5 f80a 	bl	800029c <__adddf3>
 800b288:	4682      	mov	sl, r0
 800b28a:	468b      	mov	fp, r1
 800b28c:	2d0f      	cmp	r5, #15
 800b28e:	dc38      	bgt.n	800b302 <_strtod_l+0x452>
 800b290:	9b06      	ldr	r3, [sp, #24]
 800b292:	2b00      	cmp	r3, #0
 800b294:	f43f ae50 	beq.w	800af38 <_strtod_l+0x88>
 800b298:	dd24      	ble.n	800b2e4 <_strtod_l+0x434>
 800b29a:	2b16      	cmp	r3, #22
 800b29c:	dc0b      	bgt.n	800b2b6 <_strtod_l+0x406>
 800b29e:	496d      	ldr	r1, [pc, #436]	; (800b454 <_strtod_l+0x5a4>)
 800b2a0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800b2a4:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b2a8:	4652      	mov	r2, sl
 800b2aa:	465b      	mov	r3, fp
 800b2ac:	f7f5 f9ac 	bl	8000608 <__aeabi_dmul>
 800b2b0:	4682      	mov	sl, r0
 800b2b2:	468b      	mov	fp, r1
 800b2b4:	e640      	b.n	800af38 <_strtod_l+0x88>
 800b2b6:	9a06      	ldr	r2, [sp, #24]
 800b2b8:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 800b2bc:	4293      	cmp	r3, r2
 800b2be:	db20      	blt.n	800b302 <_strtod_l+0x452>
 800b2c0:	4c64      	ldr	r4, [pc, #400]	; (800b454 <_strtod_l+0x5a4>)
 800b2c2:	f1c5 050f 	rsb	r5, r5, #15
 800b2c6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 800b2ca:	4652      	mov	r2, sl
 800b2cc:	465b      	mov	r3, fp
 800b2ce:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b2d2:	f7f5 f999 	bl	8000608 <__aeabi_dmul>
 800b2d6:	9b06      	ldr	r3, [sp, #24]
 800b2d8:	1b5d      	subs	r5, r3, r5
 800b2da:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 800b2de:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b2e2:	e7e3      	b.n	800b2ac <_strtod_l+0x3fc>
 800b2e4:	9b06      	ldr	r3, [sp, #24]
 800b2e6:	3316      	adds	r3, #22
 800b2e8:	db0b      	blt.n	800b302 <_strtod_l+0x452>
 800b2ea:	9b05      	ldr	r3, [sp, #20]
 800b2ec:	1b9e      	subs	r6, r3, r6
 800b2ee:	4b59      	ldr	r3, [pc, #356]	; (800b454 <_strtod_l+0x5a4>)
 800b2f0:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 800b2f4:	e9d6 2300 	ldrd	r2, r3, [r6]
 800b2f8:	4650      	mov	r0, sl
 800b2fa:	4659      	mov	r1, fp
 800b2fc:	f7f5 faae 	bl	800085c <__aeabi_ddiv>
 800b300:	e7d6      	b.n	800b2b0 <_strtod_l+0x400>
 800b302:	9b06      	ldr	r3, [sp, #24]
 800b304:	eba5 0808 	sub.w	r8, r5, r8
 800b308:	4498      	add	r8, r3
 800b30a:	f1b8 0f00 	cmp.w	r8, #0
 800b30e:	dd74      	ble.n	800b3fa <_strtod_l+0x54a>
 800b310:	f018 030f 	ands.w	r3, r8, #15
 800b314:	d00a      	beq.n	800b32c <_strtod_l+0x47c>
 800b316:	494f      	ldr	r1, [pc, #316]	; (800b454 <_strtod_l+0x5a4>)
 800b318:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800b31c:	4652      	mov	r2, sl
 800b31e:	465b      	mov	r3, fp
 800b320:	e9d1 0100 	ldrd	r0, r1, [r1]
 800b324:	f7f5 f970 	bl	8000608 <__aeabi_dmul>
 800b328:	4682      	mov	sl, r0
 800b32a:	468b      	mov	fp, r1
 800b32c:	f038 080f 	bics.w	r8, r8, #15
 800b330:	d04f      	beq.n	800b3d2 <_strtod_l+0x522>
 800b332:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 800b336:	dd22      	ble.n	800b37e <_strtod_l+0x4ce>
 800b338:	2500      	movs	r5, #0
 800b33a:	462e      	mov	r6, r5
 800b33c:	9507      	str	r5, [sp, #28]
 800b33e:	9505      	str	r5, [sp, #20]
 800b340:	2322      	movs	r3, #34	; 0x22
 800b342:	f8df b118 	ldr.w	fp, [pc, #280]	; 800b45c <_strtod_l+0x5ac>
 800b346:	6023      	str	r3, [r4, #0]
 800b348:	f04f 0a00 	mov.w	sl, #0
 800b34c:	9b07      	ldr	r3, [sp, #28]
 800b34e:	2b00      	cmp	r3, #0
 800b350:	f43f adf2 	beq.w	800af38 <_strtod_l+0x88>
 800b354:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b356:	4620      	mov	r0, r4
 800b358:	f003 f9f7 	bl	800e74a <_Bfree>
 800b35c:	9905      	ldr	r1, [sp, #20]
 800b35e:	4620      	mov	r0, r4
 800b360:	f003 f9f3 	bl	800e74a <_Bfree>
 800b364:	4631      	mov	r1, r6
 800b366:	4620      	mov	r0, r4
 800b368:	f003 f9ef 	bl	800e74a <_Bfree>
 800b36c:	9907      	ldr	r1, [sp, #28]
 800b36e:	4620      	mov	r0, r4
 800b370:	f003 f9eb 	bl	800e74a <_Bfree>
 800b374:	4629      	mov	r1, r5
 800b376:	4620      	mov	r0, r4
 800b378:	f003 f9e7 	bl	800e74a <_Bfree>
 800b37c:	e5dc      	b.n	800af38 <_strtod_l+0x88>
 800b37e:	4b36      	ldr	r3, [pc, #216]	; (800b458 <_strtod_l+0x5a8>)
 800b380:	9304      	str	r3, [sp, #16]
 800b382:	2300      	movs	r3, #0
 800b384:	ea4f 1828 	mov.w	r8, r8, asr #4
 800b388:	4650      	mov	r0, sl
 800b38a:	4659      	mov	r1, fp
 800b38c:	4699      	mov	r9, r3
 800b38e:	f1b8 0f01 	cmp.w	r8, #1
 800b392:	dc21      	bgt.n	800b3d8 <_strtod_l+0x528>
 800b394:	b10b      	cbz	r3, 800b39a <_strtod_l+0x4ea>
 800b396:	4682      	mov	sl, r0
 800b398:	468b      	mov	fp, r1
 800b39a:	4b2f      	ldr	r3, [pc, #188]	; (800b458 <_strtod_l+0x5a8>)
 800b39c:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 800b3a0:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 800b3a4:	4652      	mov	r2, sl
 800b3a6:	465b      	mov	r3, fp
 800b3a8:	e9d9 0100 	ldrd	r0, r1, [r9]
 800b3ac:	f7f5 f92c 	bl	8000608 <__aeabi_dmul>
 800b3b0:	4b2a      	ldr	r3, [pc, #168]	; (800b45c <_strtod_l+0x5ac>)
 800b3b2:	460a      	mov	r2, r1
 800b3b4:	400b      	ands	r3, r1
 800b3b6:	492a      	ldr	r1, [pc, #168]	; (800b460 <_strtod_l+0x5b0>)
 800b3b8:	428b      	cmp	r3, r1
 800b3ba:	4682      	mov	sl, r0
 800b3bc:	d8bc      	bhi.n	800b338 <_strtod_l+0x488>
 800b3be:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 800b3c2:	428b      	cmp	r3, r1
 800b3c4:	bf86      	itte	hi
 800b3c6:	f8df b09c 	ldrhi.w	fp, [pc, #156]	; 800b464 <_strtod_l+0x5b4>
 800b3ca:	f04f 3aff 	movhi.w	sl, #4294967295
 800b3ce:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 800b3d2:	2300      	movs	r3, #0
 800b3d4:	9304      	str	r3, [sp, #16]
 800b3d6:	e084      	b.n	800b4e2 <_strtod_l+0x632>
 800b3d8:	f018 0f01 	tst.w	r8, #1
 800b3dc:	d005      	beq.n	800b3ea <_strtod_l+0x53a>
 800b3de:	9b04      	ldr	r3, [sp, #16]
 800b3e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b3e4:	f7f5 f910 	bl	8000608 <__aeabi_dmul>
 800b3e8:	2301      	movs	r3, #1
 800b3ea:	9a04      	ldr	r2, [sp, #16]
 800b3ec:	3208      	adds	r2, #8
 800b3ee:	f109 0901 	add.w	r9, r9, #1
 800b3f2:	ea4f 0868 	mov.w	r8, r8, asr #1
 800b3f6:	9204      	str	r2, [sp, #16]
 800b3f8:	e7c9      	b.n	800b38e <_strtod_l+0x4de>
 800b3fa:	d0ea      	beq.n	800b3d2 <_strtod_l+0x522>
 800b3fc:	f1c8 0800 	rsb	r8, r8, #0
 800b400:	f018 020f 	ands.w	r2, r8, #15
 800b404:	d00a      	beq.n	800b41c <_strtod_l+0x56c>
 800b406:	4b13      	ldr	r3, [pc, #76]	; (800b454 <_strtod_l+0x5a4>)
 800b408:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800b40c:	4650      	mov	r0, sl
 800b40e:	4659      	mov	r1, fp
 800b410:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b414:	f7f5 fa22 	bl	800085c <__aeabi_ddiv>
 800b418:	4682      	mov	sl, r0
 800b41a:	468b      	mov	fp, r1
 800b41c:	ea5f 1828 	movs.w	r8, r8, asr #4
 800b420:	d0d7      	beq.n	800b3d2 <_strtod_l+0x522>
 800b422:	f1b8 0f1f 	cmp.w	r8, #31
 800b426:	dd1f      	ble.n	800b468 <_strtod_l+0x5b8>
 800b428:	2500      	movs	r5, #0
 800b42a:	462e      	mov	r6, r5
 800b42c:	9507      	str	r5, [sp, #28]
 800b42e:	9505      	str	r5, [sp, #20]
 800b430:	2322      	movs	r3, #34	; 0x22
 800b432:	f04f 0a00 	mov.w	sl, #0
 800b436:	f04f 0b00 	mov.w	fp, #0
 800b43a:	6023      	str	r3, [r4, #0]
 800b43c:	e786      	b.n	800b34c <_strtod_l+0x49c>
 800b43e:	bf00      	nop
 800b440:	08010cd5 	.word	0x08010cd5
 800b444:	08010c88 	.word	0x08010c88
 800b448:	08010ccd 	.word	0x08010ccd
 800b44c:	08010d23 	.word	0x08010d23
 800b450:	08010fa7 	.word	0x08010fa7
 800b454:	08010e98 	.word	0x08010e98
 800b458:	08010e70 	.word	0x08010e70
 800b45c:	7ff00000 	.word	0x7ff00000
 800b460:	7ca00000 	.word	0x7ca00000
 800b464:	7fefffff 	.word	0x7fefffff
 800b468:	f018 0310 	ands.w	r3, r8, #16
 800b46c:	bf18      	it	ne
 800b46e:	236a      	movne	r3, #106	; 0x6a
 800b470:	f8df 93ac 	ldr.w	r9, [pc, #940]	; 800b820 <_strtod_l+0x970>
 800b474:	9304      	str	r3, [sp, #16]
 800b476:	4650      	mov	r0, sl
 800b478:	4659      	mov	r1, fp
 800b47a:	2300      	movs	r3, #0
 800b47c:	f018 0f01 	tst.w	r8, #1
 800b480:	d004      	beq.n	800b48c <_strtod_l+0x5dc>
 800b482:	e9d9 2300 	ldrd	r2, r3, [r9]
 800b486:	f7f5 f8bf 	bl	8000608 <__aeabi_dmul>
 800b48a:	2301      	movs	r3, #1
 800b48c:	ea5f 0868 	movs.w	r8, r8, asr #1
 800b490:	f109 0908 	add.w	r9, r9, #8
 800b494:	d1f2      	bne.n	800b47c <_strtod_l+0x5cc>
 800b496:	b10b      	cbz	r3, 800b49c <_strtod_l+0x5ec>
 800b498:	4682      	mov	sl, r0
 800b49a:	468b      	mov	fp, r1
 800b49c:	9b04      	ldr	r3, [sp, #16]
 800b49e:	b1c3      	cbz	r3, 800b4d2 <_strtod_l+0x622>
 800b4a0:	f3cb 520a 	ubfx	r2, fp, #20, #11
 800b4a4:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 800b4a8:	2b00      	cmp	r3, #0
 800b4aa:	4659      	mov	r1, fp
 800b4ac:	dd11      	ble.n	800b4d2 <_strtod_l+0x622>
 800b4ae:	2b1f      	cmp	r3, #31
 800b4b0:	f340 8124 	ble.w	800b6fc <_strtod_l+0x84c>
 800b4b4:	2b34      	cmp	r3, #52	; 0x34
 800b4b6:	bfde      	ittt	le
 800b4b8:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 800b4bc:	f04f 33ff 	movle.w	r3, #4294967295
 800b4c0:	fa03 f202 	lslle.w	r2, r3, r2
 800b4c4:	f04f 0a00 	mov.w	sl, #0
 800b4c8:	bfcc      	ite	gt
 800b4ca:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 800b4ce:	ea02 0b01 	andle.w	fp, r2, r1
 800b4d2:	2200      	movs	r2, #0
 800b4d4:	2300      	movs	r3, #0
 800b4d6:	4650      	mov	r0, sl
 800b4d8:	4659      	mov	r1, fp
 800b4da:	f7f5 fafd 	bl	8000ad8 <__aeabi_dcmpeq>
 800b4de:	2800      	cmp	r0, #0
 800b4e0:	d1a2      	bne.n	800b428 <_strtod_l+0x578>
 800b4e2:	9b07      	ldr	r3, [sp, #28]
 800b4e4:	9300      	str	r3, [sp, #0]
 800b4e6:	9908      	ldr	r1, [sp, #32]
 800b4e8:	462b      	mov	r3, r5
 800b4ea:	463a      	mov	r2, r7
 800b4ec:	4620      	mov	r0, r4
 800b4ee:	f003 f97b 	bl	800e7e8 <__s2b>
 800b4f2:	9007      	str	r0, [sp, #28]
 800b4f4:	2800      	cmp	r0, #0
 800b4f6:	f43f af1f 	beq.w	800b338 <_strtod_l+0x488>
 800b4fa:	9b05      	ldr	r3, [sp, #20]
 800b4fc:	1b9e      	subs	r6, r3, r6
 800b4fe:	9b06      	ldr	r3, [sp, #24]
 800b500:	2b00      	cmp	r3, #0
 800b502:	bfb4      	ite	lt
 800b504:	4633      	movlt	r3, r6
 800b506:	2300      	movge	r3, #0
 800b508:	930c      	str	r3, [sp, #48]	; 0x30
 800b50a:	9b06      	ldr	r3, [sp, #24]
 800b50c:	2500      	movs	r5, #0
 800b50e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800b512:	9312      	str	r3, [sp, #72]	; 0x48
 800b514:	462e      	mov	r6, r5
 800b516:	9b07      	ldr	r3, [sp, #28]
 800b518:	4620      	mov	r0, r4
 800b51a:	6859      	ldr	r1, [r3, #4]
 800b51c:	f003 f8f0 	bl	800e700 <_Balloc>
 800b520:	9005      	str	r0, [sp, #20]
 800b522:	2800      	cmp	r0, #0
 800b524:	f43f af0c 	beq.w	800b340 <_strtod_l+0x490>
 800b528:	9b07      	ldr	r3, [sp, #28]
 800b52a:	691a      	ldr	r2, [r3, #16]
 800b52c:	3202      	adds	r2, #2
 800b52e:	f103 010c 	add.w	r1, r3, #12
 800b532:	0092      	lsls	r2, r2, #2
 800b534:	300c      	adds	r0, #12
 800b536:	f7ff f985 	bl	800a844 <memcpy>
 800b53a:	ec4b ab10 	vmov	d0, sl, fp
 800b53e:	aa1a      	add	r2, sp, #104	; 0x68
 800b540:	a919      	add	r1, sp, #100	; 0x64
 800b542:	4620      	mov	r0, r4
 800b544:	f003 fc7c 	bl	800ee40 <__d2b>
 800b548:	ec4b ab18 	vmov	d8, sl, fp
 800b54c:	9018      	str	r0, [sp, #96]	; 0x60
 800b54e:	2800      	cmp	r0, #0
 800b550:	f43f aef6 	beq.w	800b340 <_strtod_l+0x490>
 800b554:	2101      	movs	r1, #1
 800b556:	4620      	mov	r0, r4
 800b558:	f003 f9e0 	bl	800e91c <__i2b>
 800b55c:	4606      	mov	r6, r0
 800b55e:	2800      	cmp	r0, #0
 800b560:	f43f aeee 	beq.w	800b340 <_strtod_l+0x490>
 800b564:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b566:	9904      	ldr	r1, [sp, #16]
 800b568:	2b00      	cmp	r3, #0
 800b56a:	bfab      	itete	ge
 800b56c:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 800b56e:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 800b570:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 800b572:	f8dd 9030 	ldrlt.w	r9, [sp, #48]	; 0x30
 800b576:	bfac      	ite	ge
 800b578:	eb03 0902 	addge.w	r9, r3, r2
 800b57c:	1ad7      	sublt	r7, r2, r3
 800b57e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800b580:	eba3 0801 	sub.w	r8, r3, r1
 800b584:	4490      	add	r8, r2
 800b586:	4ba1      	ldr	r3, [pc, #644]	; (800b80c <_strtod_l+0x95c>)
 800b588:	f108 38ff 	add.w	r8, r8, #4294967295
 800b58c:	4598      	cmp	r8, r3
 800b58e:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 800b592:	f280 80c7 	bge.w	800b724 <_strtod_l+0x874>
 800b596:	eba3 0308 	sub.w	r3, r3, r8
 800b59a:	2b1f      	cmp	r3, #31
 800b59c:	eba2 0203 	sub.w	r2, r2, r3
 800b5a0:	f04f 0101 	mov.w	r1, #1
 800b5a4:	f300 80b1 	bgt.w	800b70a <_strtod_l+0x85a>
 800b5a8:	fa01 f303 	lsl.w	r3, r1, r3
 800b5ac:	930d      	str	r3, [sp, #52]	; 0x34
 800b5ae:	2300      	movs	r3, #0
 800b5b0:	9308      	str	r3, [sp, #32]
 800b5b2:	eb09 0802 	add.w	r8, r9, r2
 800b5b6:	9b04      	ldr	r3, [sp, #16]
 800b5b8:	45c1      	cmp	r9, r8
 800b5ba:	4417      	add	r7, r2
 800b5bc:	441f      	add	r7, r3
 800b5be:	464b      	mov	r3, r9
 800b5c0:	bfa8      	it	ge
 800b5c2:	4643      	movge	r3, r8
 800b5c4:	42bb      	cmp	r3, r7
 800b5c6:	bfa8      	it	ge
 800b5c8:	463b      	movge	r3, r7
 800b5ca:	2b00      	cmp	r3, #0
 800b5cc:	bfc2      	ittt	gt
 800b5ce:	eba8 0803 	subgt.w	r8, r8, r3
 800b5d2:	1aff      	subgt	r7, r7, r3
 800b5d4:	eba9 0903 	subgt.w	r9, r9, r3
 800b5d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b5da:	2b00      	cmp	r3, #0
 800b5dc:	dd17      	ble.n	800b60e <_strtod_l+0x75e>
 800b5de:	4631      	mov	r1, r6
 800b5e0:	461a      	mov	r2, r3
 800b5e2:	4620      	mov	r0, r4
 800b5e4:	f003 fa5a 	bl	800ea9c <__pow5mult>
 800b5e8:	4606      	mov	r6, r0
 800b5ea:	2800      	cmp	r0, #0
 800b5ec:	f43f aea8 	beq.w	800b340 <_strtod_l+0x490>
 800b5f0:	4601      	mov	r1, r0
 800b5f2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800b5f4:	4620      	mov	r0, r4
 800b5f6:	f003 f9a7 	bl	800e948 <__multiply>
 800b5fa:	900b      	str	r0, [sp, #44]	; 0x2c
 800b5fc:	2800      	cmp	r0, #0
 800b5fe:	f43f ae9f 	beq.w	800b340 <_strtod_l+0x490>
 800b602:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b604:	4620      	mov	r0, r4
 800b606:	f003 f8a0 	bl	800e74a <_Bfree>
 800b60a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b60c:	9318      	str	r3, [sp, #96]	; 0x60
 800b60e:	f1b8 0f00 	cmp.w	r8, #0
 800b612:	f300 808c 	bgt.w	800b72e <_strtod_l+0x87e>
 800b616:	9b06      	ldr	r3, [sp, #24]
 800b618:	2b00      	cmp	r3, #0
 800b61a:	dd08      	ble.n	800b62e <_strtod_l+0x77e>
 800b61c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800b61e:	9905      	ldr	r1, [sp, #20]
 800b620:	4620      	mov	r0, r4
 800b622:	f003 fa3b 	bl	800ea9c <__pow5mult>
 800b626:	9005      	str	r0, [sp, #20]
 800b628:	2800      	cmp	r0, #0
 800b62a:	f43f ae89 	beq.w	800b340 <_strtod_l+0x490>
 800b62e:	2f00      	cmp	r7, #0
 800b630:	dd08      	ble.n	800b644 <_strtod_l+0x794>
 800b632:	9905      	ldr	r1, [sp, #20]
 800b634:	463a      	mov	r2, r7
 800b636:	4620      	mov	r0, r4
 800b638:	f003 fa70 	bl	800eb1c <__lshift>
 800b63c:	9005      	str	r0, [sp, #20]
 800b63e:	2800      	cmp	r0, #0
 800b640:	f43f ae7e 	beq.w	800b340 <_strtod_l+0x490>
 800b644:	f1b9 0f00 	cmp.w	r9, #0
 800b648:	dd08      	ble.n	800b65c <_strtod_l+0x7ac>
 800b64a:	4631      	mov	r1, r6
 800b64c:	464a      	mov	r2, r9
 800b64e:	4620      	mov	r0, r4
 800b650:	f003 fa64 	bl	800eb1c <__lshift>
 800b654:	4606      	mov	r6, r0
 800b656:	2800      	cmp	r0, #0
 800b658:	f43f ae72 	beq.w	800b340 <_strtod_l+0x490>
 800b65c:	9a05      	ldr	r2, [sp, #20]
 800b65e:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b660:	4620      	mov	r0, r4
 800b662:	f003 fae7 	bl	800ec34 <__mdiff>
 800b666:	4605      	mov	r5, r0
 800b668:	2800      	cmp	r0, #0
 800b66a:	f43f ae69 	beq.w	800b340 <_strtod_l+0x490>
 800b66e:	68c3      	ldr	r3, [r0, #12]
 800b670:	930b      	str	r3, [sp, #44]	; 0x2c
 800b672:	2300      	movs	r3, #0
 800b674:	60c3      	str	r3, [r0, #12]
 800b676:	4631      	mov	r1, r6
 800b678:	f003 fac0 	bl	800ebfc <__mcmp>
 800b67c:	2800      	cmp	r0, #0
 800b67e:	da60      	bge.n	800b742 <_strtod_l+0x892>
 800b680:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b682:	ea53 030a 	orrs.w	r3, r3, sl
 800b686:	f040 8082 	bne.w	800b78e <_strtod_l+0x8de>
 800b68a:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800b68e:	2b00      	cmp	r3, #0
 800b690:	d17d      	bne.n	800b78e <_strtod_l+0x8de>
 800b692:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800b696:	0d1b      	lsrs	r3, r3, #20
 800b698:	051b      	lsls	r3, r3, #20
 800b69a:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800b69e:	d976      	bls.n	800b78e <_strtod_l+0x8de>
 800b6a0:	696b      	ldr	r3, [r5, #20]
 800b6a2:	b913      	cbnz	r3, 800b6aa <_strtod_l+0x7fa>
 800b6a4:	692b      	ldr	r3, [r5, #16]
 800b6a6:	2b01      	cmp	r3, #1
 800b6a8:	dd71      	ble.n	800b78e <_strtod_l+0x8de>
 800b6aa:	4629      	mov	r1, r5
 800b6ac:	2201      	movs	r2, #1
 800b6ae:	4620      	mov	r0, r4
 800b6b0:	f003 fa34 	bl	800eb1c <__lshift>
 800b6b4:	4631      	mov	r1, r6
 800b6b6:	4605      	mov	r5, r0
 800b6b8:	f003 faa0 	bl	800ebfc <__mcmp>
 800b6bc:	2800      	cmp	r0, #0
 800b6be:	dd66      	ble.n	800b78e <_strtod_l+0x8de>
 800b6c0:	9904      	ldr	r1, [sp, #16]
 800b6c2:	4a53      	ldr	r2, [pc, #332]	; (800b810 <_strtod_l+0x960>)
 800b6c4:	465b      	mov	r3, fp
 800b6c6:	2900      	cmp	r1, #0
 800b6c8:	f000 8081 	beq.w	800b7ce <_strtod_l+0x91e>
 800b6cc:	ea02 010b 	and.w	r1, r2, fp
 800b6d0:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 800b6d4:	dc7b      	bgt.n	800b7ce <_strtod_l+0x91e>
 800b6d6:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 800b6da:	f77f aea9 	ble.w	800b430 <_strtod_l+0x580>
 800b6de:	4b4d      	ldr	r3, [pc, #308]	; (800b814 <_strtod_l+0x964>)
 800b6e0:	4650      	mov	r0, sl
 800b6e2:	4659      	mov	r1, fp
 800b6e4:	2200      	movs	r2, #0
 800b6e6:	f7f4 ff8f 	bl	8000608 <__aeabi_dmul>
 800b6ea:	460b      	mov	r3, r1
 800b6ec:	4303      	orrs	r3, r0
 800b6ee:	bf08      	it	eq
 800b6f0:	2322      	moveq	r3, #34	; 0x22
 800b6f2:	4682      	mov	sl, r0
 800b6f4:	468b      	mov	fp, r1
 800b6f6:	bf08      	it	eq
 800b6f8:	6023      	streq	r3, [r4, #0]
 800b6fa:	e62b      	b.n	800b354 <_strtod_l+0x4a4>
 800b6fc:	f04f 32ff 	mov.w	r2, #4294967295
 800b700:	fa02 f303 	lsl.w	r3, r2, r3
 800b704:	ea03 0a0a 	and.w	sl, r3, sl
 800b708:	e6e3      	b.n	800b4d2 <_strtod_l+0x622>
 800b70a:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 800b70e:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 800b712:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 800b716:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 800b71a:	fa01 f308 	lsl.w	r3, r1, r8
 800b71e:	9308      	str	r3, [sp, #32]
 800b720:	910d      	str	r1, [sp, #52]	; 0x34
 800b722:	e746      	b.n	800b5b2 <_strtod_l+0x702>
 800b724:	2300      	movs	r3, #0
 800b726:	9308      	str	r3, [sp, #32]
 800b728:	2301      	movs	r3, #1
 800b72a:	930d      	str	r3, [sp, #52]	; 0x34
 800b72c:	e741      	b.n	800b5b2 <_strtod_l+0x702>
 800b72e:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b730:	4642      	mov	r2, r8
 800b732:	4620      	mov	r0, r4
 800b734:	f003 f9f2 	bl	800eb1c <__lshift>
 800b738:	9018      	str	r0, [sp, #96]	; 0x60
 800b73a:	2800      	cmp	r0, #0
 800b73c:	f47f af6b 	bne.w	800b616 <_strtod_l+0x766>
 800b740:	e5fe      	b.n	800b340 <_strtod_l+0x490>
 800b742:	465f      	mov	r7, fp
 800b744:	d16e      	bne.n	800b824 <_strtod_l+0x974>
 800b746:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b748:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800b74c:	b342      	cbz	r2, 800b7a0 <_strtod_l+0x8f0>
 800b74e:	4a32      	ldr	r2, [pc, #200]	; (800b818 <_strtod_l+0x968>)
 800b750:	4293      	cmp	r3, r2
 800b752:	d128      	bne.n	800b7a6 <_strtod_l+0x8f6>
 800b754:	9b04      	ldr	r3, [sp, #16]
 800b756:	4651      	mov	r1, sl
 800b758:	b1eb      	cbz	r3, 800b796 <_strtod_l+0x8e6>
 800b75a:	4b2d      	ldr	r3, [pc, #180]	; (800b810 <_strtod_l+0x960>)
 800b75c:	403b      	ands	r3, r7
 800b75e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800b762:	f04f 32ff 	mov.w	r2, #4294967295
 800b766:	d819      	bhi.n	800b79c <_strtod_l+0x8ec>
 800b768:	0d1b      	lsrs	r3, r3, #20
 800b76a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800b76e:	fa02 f303 	lsl.w	r3, r2, r3
 800b772:	4299      	cmp	r1, r3
 800b774:	d117      	bne.n	800b7a6 <_strtod_l+0x8f6>
 800b776:	4b29      	ldr	r3, [pc, #164]	; (800b81c <_strtod_l+0x96c>)
 800b778:	429f      	cmp	r7, r3
 800b77a:	d102      	bne.n	800b782 <_strtod_l+0x8d2>
 800b77c:	3101      	adds	r1, #1
 800b77e:	f43f addf 	beq.w	800b340 <_strtod_l+0x490>
 800b782:	4b23      	ldr	r3, [pc, #140]	; (800b810 <_strtod_l+0x960>)
 800b784:	403b      	ands	r3, r7
 800b786:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 800b78a:	f04f 0a00 	mov.w	sl, #0
 800b78e:	9b04      	ldr	r3, [sp, #16]
 800b790:	2b00      	cmp	r3, #0
 800b792:	d1a4      	bne.n	800b6de <_strtod_l+0x82e>
 800b794:	e5de      	b.n	800b354 <_strtod_l+0x4a4>
 800b796:	f04f 33ff 	mov.w	r3, #4294967295
 800b79a:	e7ea      	b.n	800b772 <_strtod_l+0x8c2>
 800b79c:	4613      	mov	r3, r2
 800b79e:	e7e8      	b.n	800b772 <_strtod_l+0x8c2>
 800b7a0:	ea53 030a 	orrs.w	r3, r3, sl
 800b7a4:	d08c      	beq.n	800b6c0 <_strtod_l+0x810>
 800b7a6:	9b08      	ldr	r3, [sp, #32]
 800b7a8:	b1db      	cbz	r3, 800b7e2 <_strtod_l+0x932>
 800b7aa:	423b      	tst	r3, r7
 800b7ac:	d0ef      	beq.n	800b78e <_strtod_l+0x8de>
 800b7ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b7b0:	9a04      	ldr	r2, [sp, #16]
 800b7b2:	4650      	mov	r0, sl
 800b7b4:	4659      	mov	r1, fp
 800b7b6:	b1c3      	cbz	r3, 800b7ea <_strtod_l+0x93a>
 800b7b8:	f7ff fb5c 	bl	800ae74 <sulp>
 800b7bc:	4602      	mov	r2, r0
 800b7be:	460b      	mov	r3, r1
 800b7c0:	ec51 0b18 	vmov	r0, r1, d8
 800b7c4:	f7f4 fd6a 	bl	800029c <__adddf3>
 800b7c8:	4682      	mov	sl, r0
 800b7ca:	468b      	mov	fp, r1
 800b7cc:	e7df      	b.n	800b78e <_strtod_l+0x8de>
 800b7ce:	4013      	ands	r3, r2
 800b7d0:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 800b7d4:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800b7d8:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800b7dc:	f04f 3aff 	mov.w	sl, #4294967295
 800b7e0:	e7d5      	b.n	800b78e <_strtod_l+0x8de>
 800b7e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b7e4:	ea13 0f0a 	tst.w	r3, sl
 800b7e8:	e7e0      	b.n	800b7ac <_strtod_l+0x8fc>
 800b7ea:	f7ff fb43 	bl	800ae74 <sulp>
 800b7ee:	4602      	mov	r2, r0
 800b7f0:	460b      	mov	r3, r1
 800b7f2:	ec51 0b18 	vmov	r0, r1, d8
 800b7f6:	f7f4 fd4f 	bl	8000298 <__aeabi_dsub>
 800b7fa:	2200      	movs	r2, #0
 800b7fc:	2300      	movs	r3, #0
 800b7fe:	4682      	mov	sl, r0
 800b800:	468b      	mov	fp, r1
 800b802:	f7f5 f969 	bl	8000ad8 <__aeabi_dcmpeq>
 800b806:	2800      	cmp	r0, #0
 800b808:	d0c1      	beq.n	800b78e <_strtod_l+0x8de>
 800b80a:	e611      	b.n	800b430 <_strtod_l+0x580>
 800b80c:	fffffc02 	.word	0xfffffc02
 800b810:	7ff00000 	.word	0x7ff00000
 800b814:	39500000 	.word	0x39500000
 800b818:	000fffff 	.word	0x000fffff
 800b81c:	7fefffff 	.word	0x7fefffff
 800b820:	08010ca0 	.word	0x08010ca0
 800b824:	4631      	mov	r1, r6
 800b826:	4628      	mov	r0, r5
 800b828:	f003 fb66 	bl	800eef8 <__ratio>
 800b82c:	ec59 8b10 	vmov	r8, r9, d0
 800b830:	ee10 0a10 	vmov	r0, s0
 800b834:	2200      	movs	r2, #0
 800b836:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800b83a:	4649      	mov	r1, r9
 800b83c:	f7f5 f960 	bl	8000b00 <__aeabi_dcmple>
 800b840:	2800      	cmp	r0, #0
 800b842:	d07a      	beq.n	800b93a <_strtod_l+0xa8a>
 800b844:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b846:	2b00      	cmp	r3, #0
 800b848:	d04a      	beq.n	800b8e0 <_strtod_l+0xa30>
 800b84a:	4b95      	ldr	r3, [pc, #596]	; (800baa0 <_strtod_l+0xbf0>)
 800b84c:	2200      	movs	r2, #0
 800b84e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800b852:	f8df 924c 	ldr.w	r9, [pc, #588]	; 800baa0 <_strtod_l+0xbf0>
 800b856:	f04f 0800 	mov.w	r8, #0
 800b85a:	4b92      	ldr	r3, [pc, #584]	; (800baa4 <_strtod_l+0xbf4>)
 800b85c:	403b      	ands	r3, r7
 800b85e:	930d      	str	r3, [sp, #52]	; 0x34
 800b860:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b862:	4b91      	ldr	r3, [pc, #580]	; (800baa8 <_strtod_l+0xbf8>)
 800b864:	429a      	cmp	r2, r3
 800b866:	f040 80b0 	bne.w	800b9ca <_strtod_l+0xb1a>
 800b86a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800b86e:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 800b872:	ec4b ab10 	vmov	d0, sl, fp
 800b876:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800b87a:	f003 fa65 	bl	800ed48 <__ulp>
 800b87e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800b882:	ec53 2b10 	vmov	r2, r3, d0
 800b886:	f7f4 febf 	bl	8000608 <__aeabi_dmul>
 800b88a:	4652      	mov	r2, sl
 800b88c:	465b      	mov	r3, fp
 800b88e:	f7f4 fd05 	bl	800029c <__adddf3>
 800b892:	460b      	mov	r3, r1
 800b894:	4983      	ldr	r1, [pc, #524]	; (800baa4 <_strtod_l+0xbf4>)
 800b896:	4a85      	ldr	r2, [pc, #532]	; (800baac <_strtod_l+0xbfc>)
 800b898:	4019      	ands	r1, r3
 800b89a:	4291      	cmp	r1, r2
 800b89c:	4682      	mov	sl, r0
 800b89e:	d960      	bls.n	800b962 <_strtod_l+0xab2>
 800b8a0:	ee18 3a90 	vmov	r3, s17
 800b8a4:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 800b8a8:	4293      	cmp	r3, r2
 800b8aa:	d104      	bne.n	800b8b6 <_strtod_l+0xa06>
 800b8ac:	ee18 3a10 	vmov	r3, s16
 800b8b0:	3301      	adds	r3, #1
 800b8b2:	f43f ad45 	beq.w	800b340 <_strtod_l+0x490>
 800b8b6:	f8df b200 	ldr.w	fp, [pc, #512]	; 800bab8 <_strtod_l+0xc08>
 800b8ba:	f04f 3aff 	mov.w	sl, #4294967295
 800b8be:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b8c0:	4620      	mov	r0, r4
 800b8c2:	f002 ff42 	bl	800e74a <_Bfree>
 800b8c6:	9905      	ldr	r1, [sp, #20]
 800b8c8:	4620      	mov	r0, r4
 800b8ca:	f002 ff3e 	bl	800e74a <_Bfree>
 800b8ce:	4631      	mov	r1, r6
 800b8d0:	4620      	mov	r0, r4
 800b8d2:	f002 ff3a 	bl	800e74a <_Bfree>
 800b8d6:	4629      	mov	r1, r5
 800b8d8:	4620      	mov	r0, r4
 800b8da:	f002 ff36 	bl	800e74a <_Bfree>
 800b8de:	e61a      	b.n	800b516 <_strtod_l+0x666>
 800b8e0:	f1ba 0f00 	cmp.w	sl, #0
 800b8e4:	d11b      	bne.n	800b91e <_strtod_l+0xa6e>
 800b8e6:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800b8ea:	b9f3      	cbnz	r3, 800b92a <_strtod_l+0xa7a>
 800b8ec:	4b6c      	ldr	r3, [pc, #432]	; (800baa0 <_strtod_l+0xbf0>)
 800b8ee:	2200      	movs	r2, #0
 800b8f0:	4640      	mov	r0, r8
 800b8f2:	4649      	mov	r1, r9
 800b8f4:	f7f5 f8fa 	bl	8000aec <__aeabi_dcmplt>
 800b8f8:	b9d0      	cbnz	r0, 800b930 <_strtod_l+0xa80>
 800b8fa:	4640      	mov	r0, r8
 800b8fc:	4649      	mov	r1, r9
 800b8fe:	4b6c      	ldr	r3, [pc, #432]	; (800bab0 <_strtod_l+0xc00>)
 800b900:	2200      	movs	r2, #0
 800b902:	f7f4 fe81 	bl	8000608 <__aeabi_dmul>
 800b906:	4680      	mov	r8, r0
 800b908:	4689      	mov	r9, r1
 800b90a:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800b90e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
 800b912:	9315      	str	r3, [sp, #84]	; 0x54
 800b914:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 800b918:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800b91c:	e79d      	b.n	800b85a <_strtod_l+0x9aa>
 800b91e:	f1ba 0f01 	cmp.w	sl, #1
 800b922:	d102      	bne.n	800b92a <_strtod_l+0xa7a>
 800b924:	2f00      	cmp	r7, #0
 800b926:	f43f ad83 	beq.w	800b430 <_strtod_l+0x580>
 800b92a:	4b62      	ldr	r3, [pc, #392]	; (800bab4 <_strtod_l+0xc04>)
 800b92c:	2200      	movs	r2, #0
 800b92e:	e78e      	b.n	800b84e <_strtod_l+0x99e>
 800b930:	f8df 917c 	ldr.w	r9, [pc, #380]	; 800bab0 <_strtod_l+0xc00>
 800b934:	f04f 0800 	mov.w	r8, #0
 800b938:	e7e7      	b.n	800b90a <_strtod_l+0xa5a>
 800b93a:	4b5d      	ldr	r3, [pc, #372]	; (800bab0 <_strtod_l+0xc00>)
 800b93c:	4640      	mov	r0, r8
 800b93e:	4649      	mov	r1, r9
 800b940:	2200      	movs	r2, #0
 800b942:	f7f4 fe61 	bl	8000608 <__aeabi_dmul>
 800b946:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b948:	4680      	mov	r8, r0
 800b94a:	4689      	mov	r9, r1
 800b94c:	b933      	cbnz	r3, 800b95c <_strtod_l+0xaac>
 800b94e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800b952:	900e      	str	r0, [sp, #56]	; 0x38
 800b954:	930f      	str	r3, [sp, #60]	; 0x3c
 800b956:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 800b95a:	e7dd      	b.n	800b918 <_strtod_l+0xa68>
 800b95c:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38
 800b960:	e7f9      	b.n	800b956 <_strtod_l+0xaa6>
 800b962:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 800b966:	9b04      	ldr	r3, [sp, #16]
 800b968:	2b00      	cmp	r3, #0
 800b96a:	d1a8      	bne.n	800b8be <_strtod_l+0xa0e>
 800b96c:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800b970:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b972:	0d1b      	lsrs	r3, r3, #20
 800b974:	051b      	lsls	r3, r3, #20
 800b976:	429a      	cmp	r2, r3
 800b978:	d1a1      	bne.n	800b8be <_strtod_l+0xa0e>
 800b97a:	4640      	mov	r0, r8
 800b97c:	4649      	mov	r1, r9
 800b97e:	f7f5 f9a3 	bl	8000cc8 <__aeabi_d2lz>
 800b982:	f7f4 fe13 	bl	80005ac <__aeabi_l2d>
 800b986:	4602      	mov	r2, r0
 800b988:	460b      	mov	r3, r1
 800b98a:	4640      	mov	r0, r8
 800b98c:	4649      	mov	r1, r9
 800b98e:	f7f4 fc83 	bl	8000298 <__aeabi_dsub>
 800b992:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b994:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800b998:	ea43 030a 	orr.w	r3, r3, sl
 800b99c:	4313      	orrs	r3, r2
 800b99e:	4680      	mov	r8, r0
 800b9a0:	4689      	mov	r9, r1
 800b9a2:	d055      	beq.n	800ba50 <_strtod_l+0xba0>
 800b9a4:	a336      	add	r3, pc, #216	; (adr r3, 800ba80 <_strtod_l+0xbd0>)
 800b9a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b9aa:	f7f5 f89f 	bl	8000aec <__aeabi_dcmplt>
 800b9ae:	2800      	cmp	r0, #0
 800b9b0:	f47f acd0 	bne.w	800b354 <_strtod_l+0x4a4>
 800b9b4:	a334      	add	r3, pc, #208	; (adr r3, 800ba88 <_strtod_l+0xbd8>)
 800b9b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b9ba:	4640      	mov	r0, r8
 800b9bc:	4649      	mov	r1, r9
 800b9be:	f7f5 f8b3 	bl	8000b28 <__aeabi_dcmpgt>
 800b9c2:	2800      	cmp	r0, #0
 800b9c4:	f43f af7b 	beq.w	800b8be <_strtod_l+0xa0e>
 800b9c8:	e4c4      	b.n	800b354 <_strtod_l+0x4a4>
 800b9ca:	9b04      	ldr	r3, [sp, #16]
 800b9cc:	b333      	cbz	r3, 800ba1c <_strtod_l+0xb6c>
 800b9ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b9d0:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800b9d4:	d822      	bhi.n	800ba1c <_strtod_l+0xb6c>
 800b9d6:	a32e      	add	r3, pc, #184	; (adr r3, 800ba90 <_strtod_l+0xbe0>)
 800b9d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b9dc:	4640      	mov	r0, r8
 800b9de:	4649      	mov	r1, r9
 800b9e0:	f7f5 f88e 	bl	8000b00 <__aeabi_dcmple>
 800b9e4:	b1a0      	cbz	r0, 800ba10 <_strtod_l+0xb60>
 800b9e6:	4649      	mov	r1, r9
 800b9e8:	4640      	mov	r0, r8
 800b9ea:	f7f5 f8e5 	bl	8000bb8 <__aeabi_d2uiz>
 800b9ee:	2801      	cmp	r0, #1
 800b9f0:	bf38      	it	cc
 800b9f2:	2001      	movcc	r0, #1
 800b9f4:	f7f4 fd8e 	bl	8000514 <__aeabi_ui2d>
 800b9f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b9fa:	4680      	mov	r8, r0
 800b9fc:	4689      	mov	r9, r1
 800b9fe:	bb23      	cbnz	r3, 800ba4a <_strtod_l+0xb9a>
 800ba00:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800ba04:	9010      	str	r0, [sp, #64]	; 0x40
 800ba06:	9311      	str	r3, [sp, #68]	; 0x44
 800ba08:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800ba0c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800ba10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ba12:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800ba14:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 800ba18:	1a9b      	subs	r3, r3, r2
 800ba1a:	9309      	str	r3, [sp, #36]	; 0x24
 800ba1c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800ba20:	eeb0 0a48 	vmov.f32	s0, s16
 800ba24:	eef0 0a68 	vmov.f32	s1, s17
 800ba28:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800ba2c:	f003 f98c 	bl	800ed48 <__ulp>
 800ba30:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800ba34:	ec53 2b10 	vmov	r2, r3, d0
 800ba38:	f7f4 fde6 	bl	8000608 <__aeabi_dmul>
 800ba3c:	ec53 2b18 	vmov	r2, r3, d8
 800ba40:	f7f4 fc2c 	bl	800029c <__adddf3>
 800ba44:	4682      	mov	sl, r0
 800ba46:	468b      	mov	fp, r1
 800ba48:	e78d      	b.n	800b966 <_strtod_l+0xab6>
 800ba4a:	e9cd 8910 	strd	r8, r9, [sp, #64]	; 0x40
 800ba4e:	e7db      	b.n	800ba08 <_strtod_l+0xb58>
 800ba50:	a311      	add	r3, pc, #68	; (adr r3, 800ba98 <_strtod_l+0xbe8>)
 800ba52:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ba56:	f7f5 f849 	bl	8000aec <__aeabi_dcmplt>
 800ba5a:	e7b2      	b.n	800b9c2 <_strtod_l+0xb12>
 800ba5c:	2300      	movs	r3, #0
 800ba5e:	930a      	str	r3, [sp, #40]	; 0x28
 800ba60:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ba62:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800ba64:	6013      	str	r3, [r2, #0]
 800ba66:	f7ff ba6b 	b.w	800af40 <_strtod_l+0x90>
 800ba6a:	2a65      	cmp	r2, #101	; 0x65
 800ba6c:	f43f ab5f 	beq.w	800b12e <_strtod_l+0x27e>
 800ba70:	2a45      	cmp	r2, #69	; 0x45
 800ba72:	f43f ab5c 	beq.w	800b12e <_strtod_l+0x27e>
 800ba76:	2301      	movs	r3, #1
 800ba78:	f7ff bb94 	b.w	800b1a4 <_strtod_l+0x2f4>
 800ba7c:	f3af 8000 	nop.w
 800ba80:	94a03595 	.word	0x94a03595
 800ba84:	3fdfffff 	.word	0x3fdfffff
 800ba88:	35afe535 	.word	0x35afe535
 800ba8c:	3fe00000 	.word	0x3fe00000
 800ba90:	ffc00000 	.word	0xffc00000
 800ba94:	41dfffff 	.word	0x41dfffff
 800ba98:	94a03595 	.word	0x94a03595
 800ba9c:	3fcfffff 	.word	0x3fcfffff
 800baa0:	3ff00000 	.word	0x3ff00000
 800baa4:	7ff00000 	.word	0x7ff00000
 800baa8:	7fe00000 	.word	0x7fe00000
 800baac:	7c9fffff 	.word	0x7c9fffff
 800bab0:	3fe00000 	.word	0x3fe00000
 800bab4:	bff00000 	.word	0xbff00000
 800bab8:	7fefffff 	.word	0x7fefffff

0800babc <strtod>:
 800babc:	460a      	mov	r2, r1
 800babe:	4601      	mov	r1, r0
 800bac0:	4802      	ldr	r0, [pc, #8]	; (800bacc <strtod+0x10>)
 800bac2:	4b03      	ldr	r3, [pc, #12]	; (800bad0 <strtod+0x14>)
 800bac4:	6800      	ldr	r0, [r0, #0]
 800bac6:	f7ff b9f3 	b.w	800aeb0 <_strtod_l>
 800baca:	bf00      	nop
 800bacc:	20000020 	.word	0x20000020
 800bad0:	20000868 	.word	0x20000868
 800bad4:	00000000 	.word	0x00000000

0800bad8 <_svfprintf_r>:
 800bad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800badc:	ed2d 8b04 	vpush	{d8-d9}
 800bae0:	b0cf      	sub	sp, #316	; 0x13c
 800bae2:	4688      	mov	r8, r1
 800bae4:	4691      	mov	r9, r2
 800bae6:	461e      	mov	r6, r3
 800bae8:	4682      	mov	sl, r0
 800baea:	f002 fdc7 	bl	800e67c <_localeconv_r>
 800baee:	6803      	ldr	r3, [r0, #0]
 800baf0:	9313      	str	r3, [sp, #76]	; 0x4c
 800baf2:	4618      	mov	r0, r3
 800baf4:	f7f4 fb74 	bl	80001e0 <strlen>
 800baf8:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 800bafc:	900d      	str	r0, [sp, #52]	; 0x34
 800bafe:	0618      	lsls	r0, r3, #24
 800bb00:	d51a      	bpl.n	800bb38 <_svfprintf_r+0x60>
 800bb02:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800bb06:	b9bb      	cbnz	r3, 800bb38 <_svfprintf_r+0x60>
 800bb08:	2140      	movs	r1, #64	; 0x40
 800bb0a:	4650      	mov	r0, sl
 800bb0c:	f7fe fc5e 	bl	800a3cc <_malloc_r>
 800bb10:	f8c8 0000 	str.w	r0, [r8]
 800bb14:	f8c8 0010 	str.w	r0, [r8, #16]
 800bb18:	b958      	cbnz	r0, 800bb32 <_svfprintf_r+0x5a>
 800bb1a:	230c      	movs	r3, #12
 800bb1c:	f8ca 3000 	str.w	r3, [sl]
 800bb20:	f04f 33ff 	mov.w	r3, #4294967295
 800bb24:	930c      	str	r3, [sp, #48]	; 0x30
 800bb26:	980c      	ldr	r0, [sp, #48]	; 0x30
 800bb28:	b04f      	add	sp, #316	; 0x13c
 800bb2a:	ecbd 8b04 	vpop	{d8-d9}
 800bb2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bb32:	2340      	movs	r3, #64	; 0x40
 800bb34:	f8c8 3014 	str.w	r3, [r8, #20]
 800bb38:	ed9f 7b93 	vldr	d7, [pc, #588]	; 800bd88 <_svfprintf_r+0x2b0>
 800bb3c:	2500      	movs	r5, #0
 800bb3e:	e9cd 5523 	strd	r5, r5, [sp, #140]	; 0x8c
 800bb42:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
 800bb46:	e9cd 5515 	strd	r5, r5, [sp, #84]	; 0x54
 800bb4a:	ac25      	add	r4, sp, #148	; 0x94
 800bb4c:	9422      	str	r4, [sp, #136]	; 0x88
 800bb4e:	9505      	str	r5, [sp, #20]
 800bb50:	950a      	str	r5, [sp, #40]	; 0x28
 800bb52:	9512      	str	r5, [sp, #72]	; 0x48
 800bb54:	9514      	str	r5, [sp, #80]	; 0x50
 800bb56:	950c      	str	r5, [sp, #48]	; 0x30
 800bb58:	464b      	mov	r3, r9
 800bb5a:	461d      	mov	r5, r3
 800bb5c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800bb60:	b10a      	cbz	r2, 800bb66 <_svfprintf_r+0x8e>
 800bb62:	2a25      	cmp	r2, #37	; 0x25
 800bb64:	d1f9      	bne.n	800bb5a <_svfprintf_r+0x82>
 800bb66:	ebb5 0709 	subs.w	r7, r5, r9
 800bb6a:	d00d      	beq.n	800bb88 <_svfprintf_r+0xb0>
 800bb6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800bb6e:	443b      	add	r3, r7
 800bb70:	9324      	str	r3, [sp, #144]	; 0x90
 800bb72:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800bb74:	3301      	adds	r3, #1
 800bb76:	2b07      	cmp	r3, #7
 800bb78:	e9c4 9700 	strd	r9, r7, [r4]
 800bb7c:	9323      	str	r3, [sp, #140]	; 0x8c
 800bb7e:	dc79      	bgt.n	800bc74 <_svfprintf_r+0x19c>
 800bb80:	3408      	adds	r4, #8
 800bb82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800bb84:	443b      	add	r3, r7
 800bb86:	930c      	str	r3, [sp, #48]	; 0x30
 800bb88:	782b      	ldrb	r3, [r5, #0]
 800bb8a:	2b00      	cmp	r3, #0
 800bb8c:	f001 8148 	beq.w	800ce20 <_svfprintf_r+0x1348>
 800bb90:	2300      	movs	r3, #0
 800bb92:	f04f 32ff 	mov.w	r2, #4294967295
 800bb96:	9204      	str	r2, [sp, #16]
 800bb98:	3501      	adds	r5, #1
 800bb9a:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
 800bb9e:	9310      	str	r3, [sp, #64]	; 0x40
 800bba0:	469b      	mov	fp, r3
 800bba2:	270a      	movs	r7, #10
 800bba4:	222b      	movs	r2, #43	; 0x2b
 800bba6:	462b      	mov	r3, r5
 800bba8:	f813 1b01 	ldrb.w	r1, [r3], #1
 800bbac:	9106      	str	r1, [sp, #24]
 800bbae:	930b      	str	r3, [sp, #44]	; 0x2c
 800bbb0:	9b06      	ldr	r3, [sp, #24]
 800bbb2:	3b20      	subs	r3, #32
 800bbb4:	2b5a      	cmp	r3, #90	; 0x5a
 800bbb6:	f200 85bf 	bhi.w	800c738 <_svfprintf_r+0xc60>
 800bbba:	e8df f013 	tbh	[pc, r3, lsl #1]
 800bbbe:	007e      	.short	0x007e
 800bbc0:	05bd05bd 	.word	0x05bd05bd
 800bbc4:	05bd0086 	.word	0x05bd0086
 800bbc8:	05bd05bd 	.word	0x05bd05bd
 800bbcc:	05bd0065 	.word	0x05bd0065
 800bbd0:	008905bd 	.word	0x008905bd
 800bbd4:	05bd0093 	.word	0x05bd0093
 800bbd8:	00960090 	.word	0x00960090
 800bbdc:	00b305bd 	.word	0x00b305bd
 800bbe0:	00b600b6 	.word	0x00b600b6
 800bbe4:	00b600b6 	.word	0x00b600b6
 800bbe8:	00b600b6 	.word	0x00b600b6
 800bbec:	00b600b6 	.word	0x00b600b6
 800bbf0:	05bd00b6 	.word	0x05bd00b6
 800bbf4:	05bd05bd 	.word	0x05bd05bd
 800bbf8:	05bd05bd 	.word	0x05bd05bd
 800bbfc:	05bd05bd 	.word	0x05bd05bd
 800bc00:	05bd012c 	.word	0x05bd012c
 800bc04:	00fc00e9 	.word	0x00fc00e9
 800bc08:	012c012c 	.word	0x012c012c
 800bc0c:	05bd012c 	.word	0x05bd012c
 800bc10:	05bd05bd 	.word	0x05bd05bd
 800bc14:	00c605bd 	.word	0x00c605bd
 800bc18:	05bd05bd 	.word	0x05bd05bd
 800bc1c:	05bd0498 	.word	0x05bd0498
 800bc20:	05bd05bd 	.word	0x05bd05bd
 800bc24:	05bd04e2 	.word	0x05bd04e2
 800bc28:	05bd0503 	.word	0x05bd0503
 800bc2c:	052505bd 	.word	0x052505bd
 800bc30:	05bd05bd 	.word	0x05bd05bd
 800bc34:	05bd05bd 	.word	0x05bd05bd
 800bc38:	05bd05bd 	.word	0x05bd05bd
 800bc3c:	05bd05bd 	.word	0x05bd05bd
 800bc40:	05bd012c 	.word	0x05bd012c
 800bc44:	00fe00e9 	.word	0x00fe00e9
 800bc48:	012c012c 	.word	0x012c012c
 800bc4c:	00c9012c 	.word	0x00c9012c
 800bc50:	00dd00fe 	.word	0x00dd00fe
 800bc54:	00d605bd 	.word	0x00d605bd
 800bc58:	047305bd 	.word	0x047305bd
 800bc5c:	04d0049a 	.word	0x04d0049a
 800bc60:	05bd00dd 	.word	0x05bd00dd
 800bc64:	007c04e2 	.word	0x007c04e2
 800bc68:	05bd0505 	.word	0x05bd0505
 800bc6c:	054405bd 	.word	0x054405bd
 800bc70:	007c05bd 	.word	0x007c05bd
 800bc74:	aa22      	add	r2, sp, #136	; 0x88
 800bc76:	4641      	mov	r1, r8
 800bc78:	4650      	mov	r0, sl
 800bc7a:	f003 fa1c 	bl	800f0b6 <__ssprint_r>
 800bc7e:	2800      	cmp	r0, #0
 800bc80:	f040 8137 	bne.w	800bef2 <_svfprintf_r+0x41a>
 800bc84:	ac25      	add	r4, sp, #148	; 0x94
 800bc86:	e77c      	b.n	800bb82 <_svfprintf_r+0xaa>
 800bc88:	4650      	mov	r0, sl
 800bc8a:	f002 fcf7 	bl	800e67c <_localeconv_r>
 800bc8e:	6843      	ldr	r3, [r0, #4]
 800bc90:	9314      	str	r3, [sp, #80]	; 0x50
 800bc92:	4618      	mov	r0, r3
 800bc94:	f7f4 faa4 	bl	80001e0 <strlen>
 800bc98:	9012      	str	r0, [sp, #72]	; 0x48
 800bc9a:	4650      	mov	r0, sl
 800bc9c:	f002 fcee 	bl	800e67c <_localeconv_r>
 800bca0:	6883      	ldr	r3, [r0, #8]
 800bca2:	930a      	str	r3, [sp, #40]	; 0x28
 800bca4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800bca6:	222b      	movs	r2, #43	; 0x2b
 800bca8:	b12b      	cbz	r3, 800bcb6 <_svfprintf_r+0x1de>
 800bcaa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bcac:	b11b      	cbz	r3, 800bcb6 <_svfprintf_r+0x1de>
 800bcae:	781b      	ldrb	r3, [r3, #0]
 800bcb0:	b10b      	cbz	r3, 800bcb6 <_svfprintf_r+0x1de>
 800bcb2:	f44b 6b80 	orr.w	fp, fp, #1024	; 0x400
 800bcb6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800bcb8:	e775      	b.n	800bba6 <_svfprintf_r+0xce>
 800bcba:	f89d 306b 	ldrb.w	r3, [sp, #107]	; 0x6b
 800bcbe:	2b00      	cmp	r3, #0
 800bcc0:	d1f9      	bne.n	800bcb6 <_svfprintf_r+0x1de>
 800bcc2:	2320      	movs	r3, #32
 800bcc4:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
 800bcc8:	e7f5      	b.n	800bcb6 <_svfprintf_r+0x1de>
 800bcca:	f04b 0b01 	orr.w	fp, fp, #1
 800bcce:	e7f2      	b.n	800bcb6 <_svfprintf_r+0x1de>
 800bcd0:	f856 3b04 	ldr.w	r3, [r6], #4
 800bcd4:	9310      	str	r3, [sp, #64]	; 0x40
 800bcd6:	2b00      	cmp	r3, #0
 800bcd8:	daed      	bge.n	800bcb6 <_svfprintf_r+0x1de>
 800bcda:	425b      	negs	r3, r3
 800bcdc:	9310      	str	r3, [sp, #64]	; 0x40
 800bcde:	f04b 0b04 	orr.w	fp, fp, #4
 800bce2:	e7e8      	b.n	800bcb6 <_svfprintf_r+0x1de>
 800bce4:	f88d 206b 	strb.w	r2, [sp, #107]	; 0x6b
 800bce8:	e7e5      	b.n	800bcb6 <_svfprintf_r+0x1de>
 800bcea:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800bcec:	f815 3b01 	ldrb.w	r3, [r5], #1
 800bcf0:	9306      	str	r3, [sp, #24]
 800bcf2:	2b2a      	cmp	r3, #42	; 0x2a
 800bcf4:	d113      	bne.n	800bd1e <_svfprintf_r+0x246>
 800bcf6:	f856 0b04 	ldr.w	r0, [r6], #4
 800bcfa:	950b      	str	r5, [sp, #44]	; 0x2c
 800bcfc:	ea40 73e0 	orr.w	r3, r0, r0, asr #31
 800bd00:	9304      	str	r3, [sp, #16]
 800bd02:	e7d8      	b.n	800bcb6 <_svfprintf_r+0x1de>
 800bd04:	9904      	ldr	r1, [sp, #16]
 800bd06:	fb07 3301 	mla	r3, r7, r1, r3
 800bd0a:	9304      	str	r3, [sp, #16]
 800bd0c:	f815 3b01 	ldrb.w	r3, [r5], #1
 800bd10:	9306      	str	r3, [sp, #24]
 800bd12:	9b06      	ldr	r3, [sp, #24]
 800bd14:	3b30      	subs	r3, #48	; 0x30
 800bd16:	2b09      	cmp	r3, #9
 800bd18:	d9f4      	bls.n	800bd04 <_svfprintf_r+0x22c>
 800bd1a:	950b      	str	r5, [sp, #44]	; 0x2c
 800bd1c:	e748      	b.n	800bbb0 <_svfprintf_r+0xd8>
 800bd1e:	2300      	movs	r3, #0
 800bd20:	9304      	str	r3, [sp, #16]
 800bd22:	e7f6      	b.n	800bd12 <_svfprintf_r+0x23a>
 800bd24:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
 800bd28:	e7c5      	b.n	800bcb6 <_svfprintf_r+0x1de>
 800bd2a:	2300      	movs	r3, #0
 800bd2c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800bd2e:	9310      	str	r3, [sp, #64]	; 0x40
 800bd30:	9b06      	ldr	r3, [sp, #24]
 800bd32:	9910      	ldr	r1, [sp, #64]	; 0x40
 800bd34:	3b30      	subs	r3, #48	; 0x30
 800bd36:	fb07 3301 	mla	r3, r7, r1, r3
 800bd3a:	9310      	str	r3, [sp, #64]	; 0x40
 800bd3c:	f815 3b01 	ldrb.w	r3, [r5], #1
 800bd40:	9306      	str	r3, [sp, #24]
 800bd42:	3b30      	subs	r3, #48	; 0x30
 800bd44:	2b09      	cmp	r3, #9
 800bd46:	d9f3      	bls.n	800bd30 <_svfprintf_r+0x258>
 800bd48:	e7e7      	b.n	800bd1a <_svfprintf_r+0x242>
 800bd4a:	f04b 0b08 	orr.w	fp, fp, #8
 800bd4e:	e7b2      	b.n	800bcb6 <_svfprintf_r+0x1de>
 800bd50:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bd52:	781b      	ldrb	r3, [r3, #0]
 800bd54:	2b68      	cmp	r3, #104	; 0x68
 800bd56:	bf01      	itttt	eq
 800bd58:	9b0b      	ldreq	r3, [sp, #44]	; 0x2c
 800bd5a:	3301      	addeq	r3, #1
 800bd5c:	930b      	streq	r3, [sp, #44]	; 0x2c
 800bd5e:	f44b 7b00 	orreq.w	fp, fp, #512	; 0x200
 800bd62:	bf18      	it	ne
 800bd64:	f04b 0b40 	orrne.w	fp, fp, #64	; 0x40
 800bd68:	e7a5      	b.n	800bcb6 <_svfprintf_r+0x1de>
 800bd6a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bd6c:	781b      	ldrb	r3, [r3, #0]
 800bd6e:	2b6c      	cmp	r3, #108	; 0x6c
 800bd70:	d105      	bne.n	800bd7e <_svfprintf_r+0x2a6>
 800bd72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bd74:	3301      	adds	r3, #1
 800bd76:	930b      	str	r3, [sp, #44]	; 0x2c
 800bd78:	f04b 0b20 	orr.w	fp, fp, #32
 800bd7c:	e79b      	b.n	800bcb6 <_svfprintf_r+0x1de>
 800bd7e:	f04b 0b10 	orr.w	fp, fp, #16
 800bd82:	e798      	b.n	800bcb6 <_svfprintf_r+0x1de>
 800bd84:	f3af 8000 	nop.w
	...
 800bd90:	4632      	mov	r2, r6
 800bd92:	2000      	movs	r0, #0
 800bd94:	f852 3b04 	ldr.w	r3, [r2], #4
 800bd98:	9207      	str	r2, [sp, #28]
 800bd9a:	f88d 30d4 	strb.w	r3, [sp, #212]	; 0xd4
 800bd9e:	f88d 006b 	strb.w	r0, [sp, #107]	; 0x6b
 800bda2:	2301      	movs	r3, #1
 800bda4:	e9cd 0008 	strd	r0, r0, [sp, #32]
 800bda8:	9003      	str	r0, [sp, #12]
 800bdaa:	9304      	str	r3, [sp, #16]
 800bdac:	4606      	mov	r6, r0
 800bdae:	4605      	mov	r5, r0
 800bdb0:	f10d 09d4 	add.w	r9, sp, #212	; 0xd4
 800bdb4:	e1bc      	b.n	800c130 <_svfprintf_r+0x658>
 800bdb6:	f04b 0b10 	orr.w	fp, fp, #16
 800bdba:	f01b 0f20 	tst.w	fp, #32
 800bdbe:	d012      	beq.n	800bde6 <_svfprintf_r+0x30e>
 800bdc0:	1df3      	adds	r3, r6, #7
 800bdc2:	f023 0307 	bic.w	r3, r3, #7
 800bdc6:	461a      	mov	r2, r3
 800bdc8:	685d      	ldr	r5, [r3, #4]
 800bdca:	f852 6b08 	ldr.w	r6, [r2], #8
 800bdce:	9207      	str	r2, [sp, #28]
 800bdd0:	2d00      	cmp	r5, #0
 800bdd2:	da06      	bge.n	800bde2 <_svfprintf_r+0x30a>
 800bdd4:	4276      	negs	r6, r6
 800bdd6:	f04f 032d 	mov.w	r3, #45	; 0x2d
 800bdda:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 800bdde:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
 800bde2:	2301      	movs	r3, #1
 800bde4:	e396      	b.n	800c514 <_svfprintf_r+0xa3c>
 800bde6:	4633      	mov	r3, r6
 800bde8:	f01b 0f10 	tst.w	fp, #16
 800bdec:	f853 5b04 	ldr.w	r5, [r3], #4
 800bdf0:	9307      	str	r3, [sp, #28]
 800bdf2:	d002      	beq.n	800bdfa <_svfprintf_r+0x322>
 800bdf4:	462e      	mov	r6, r5
 800bdf6:	17ed      	asrs	r5, r5, #31
 800bdf8:	e7ea      	b.n	800bdd0 <_svfprintf_r+0x2f8>
 800bdfa:	f01b 0f40 	tst.w	fp, #64	; 0x40
 800bdfe:	d003      	beq.n	800be08 <_svfprintf_r+0x330>
 800be00:	b22e      	sxth	r6, r5
 800be02:	f345 35c0 	sbfx	r5, r5, #15, #1
 800be06:	e7e3      	b.n	800bdd0 <_svfprintf_r+0x2f8>
 800be08:	f41b 7f00 	tst.w	fp, #512	; 0x200
 800be0c:	d0f2      	beq.n	800bdf4 <_svfprintf_r+0x31c>
 800be0e:	b26e      	sxtb	r6, r5
 800be10:	f345 15c0 	sbfx	r5, r5, #7, #1
 800be14:	e7dc      	b.n	800bdd0 <_svfprintf_r+0x2f8>
 800be16:	3607      	adds	r6, #7
 800be18:	f026 0307 	bic.w	r3, r6, #7
 800be1c:	ecb3 7b02 	vldmia	r3!, {d7}
 800be20:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
 800be24:	9307      	str	r3, [sp, #28]
 800be26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800be28:	ee09 3a10 	vmov	s18, r3
 800be2c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800be2e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800be32:	ee09 3a90 	vmov	s19, r3
 800be36:	f04f 32ff 	mov.w	r2, #4294967295
 800be3a:	4b3a      	ldr	r3, [pc, #232]	; (800bf24 <_svfprintf_r+0x44c>)
 800be3c:	ec51 0b19 	vmov	r0, r1, d9
 800be40:	f7f4 fe7c 	bl	8000b3c <__aeabi_dcmpun>
 800be44:	bb10      	cbnz	r0, 800be8c <_svfprintf_r+0x3b4>
 800be46:	4b37      	ldr	r3, [pc, #220]	; (800bf24 <_svfprintf_r+0x44c>)
 800be48:	ec51 0b19 	vmov	r0, r1, d9
 800be4c:	f04f 32ff 	mov.w	r2, #4294967295
 800be50:	f7f4 fe56 	bl	8000b00 <__aeabi_dcmple>
 800be54:	b9d0      	cbnz	r0, 800be8c <_svfprintf_r+0x3b4>
 800be56:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800be5a:	2200      	movs	r2, #0
 800be5c:	2300      	movs	r3, #0
 800be5e:	f7f4 fe45 	bl	8000aec <__aeabi_dcmplt>
 800be62:	b110      	cbz	r0, 800be6a <_svfprintf_r+0x392>
 800be64:	232d      	movs	r3, #45	; 0x2d
 800be66:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
 800be6a:	4a2f      	ldr	r2, [pc, #188]	; (800bf28 <_svfprintf_r+0x450>)
 800be6c:	482f      	ldr	r0, [pc, #188]	; (800bf2c <_svfprintf_r+0x454>)
 800be6e:	9b06      	ldr	r3, [sp, #24]
 800be70:	2100      	movs	r1, #0
 800be72:	2b47      	cmp	r3, #71	; 0x47
 800be74:	bfd4      	ite	le
 800be76:	4691      	movle	r9, r2
 800be78:	4681      	movgt	r9, r0
 800be7a:	2303      	movs	r3, #3
 800be7c:	e9cd 1303 	strd	r1, r3, [sp, #12]
 800be80:	f02b 0b80 	bic.w	fp, fp, #128	; 0x80
 800be84:	2600      	movs	r6, #0
 800be86:	4633      	mov	r3, r6
 800be88:	f001 b800 	b.w	800ce8c <_svfprintf_r+0x13b4>
 800be8c:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 800be90:	4610      	mov	r0, r2
 800be92:	4619      	mov	r1, r3
 800be94:	f7f4 fe52 	bl	8000b3c <__aeabi_dcmpun>
 800be98:	b140      	cbz	r0, 800beac <_svfprintf_r+0x3d4>
 800be9a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800be9c:	4a24      	ldr	r2, [pc, #144]	; (800bf30 <_svfprintf_r+0x458>)
 800be9e:	4825      	ldr	r0, [pc, #148]	; (800bf34 <_svfprintf_r+0x45c>)
 800bea0:	2b00      	cmp	r3, #0
 800bea2:	bfbc      	itt	lt
 800bea4:	232d      	movlt	r3, #45	; 0x2d
 800bea6:	f88d 306b 	strblt.w	r3, [sp, #107]	; 0x6b
 800beaa:	e7e0      	b.n	800be6e <_svfprintf_r+0x396>
 800beac:	9b06      	ldr	r3, [sp, #24]
 800beae:	f023 0320 	bic.w	r3, r3, #32
 800beb2:	2b41      	cmp	r3, #65	; 0x41
 800beb4:	9308      	str	r3, [sp, #32]
 800beb6:	d125      	bne.n	800bf04 <_svfprintf_r+0x42c>
 800beb8:	2330      	movs	r3, #48	; 0x30
 800beba:	f88d 306c 	strb.w	r3, [sp, #108]	; 0x6c
 800bebe:	9b06      	ldr	r3, [sp, #24]
 800bec0:	2b61      	cmp	r3, #97	; 0x61
 800bec2:	bf0c      	ite	eq
 800bec4:	2378      	moveq	r3, #120	; 0x78
 800bec6:	2358      	movne	r3, #88	; 0x58
 800bec8:	f88d 306d 	strb.w	r3, [sp, #109]	; 0x6d
 800becc:	9b04      	ldr	r3, [sp, #16]
 800bece:	2b63      	cmp	r3, #99	; 0x63
 800bed0:	f04b 0b02 	orr.w	fp, fp, #2
 800bed4:	dd30      	ble.n	800bf38 <_svfprintf_r+0x460>
 800bed6:	1c59      	adds	r1, r3, #1
 800bed8:	4650      	mov	r0, sl
 800beda:	f7fe fa77 	bl	800a3cc <_malloc_r>
 800bede:	4681      	mov	r9, r0
 800bee0:	2800      	cmp	r0, #0
 800bee2:	f040 81fd 	bne.w	800c2e0 <_svfprintf_r+0x808>
 800bee6:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 800beea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800beee:	f8a8 300c 	strh.w	r3, [r8, #12]
 800bef2:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 800bef6:	f013 0f40 	tst.w	r3, #64	; 0x40
 800befa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800befc:	bf18      	it	ne
 800befe:	f04f 33ff 	movne.w	r3, #4294967295
 800bf02:	e60f      	b.n	800bb24 <_svfprintf_r+0x4c>
 800bf04:	9b04      	ldr	r3, [sp, #16]
 800bf06:	3301      	adds	r3, #1
 800bf08:	f000 81ec 	beq.w	800c2e4 <_svfprintf_r+0x80c>
 800bf0c:	9b08      	ldr	r3, [sp, #32]
 800bf0e:	2b47      	cmp	r3, #71	; 0x47
 800bf10:	f040 81eb 	bne.w	800c2ea <_svfprintf_r+0x812>
 800bf14:	9b04      	ldr	r3, [sp, #16]
 800bf16:	2b00      	cmp	r3, #0
 800bf18:	f040 81e7 	bne.w	800c2ea <_svfprintf_r+0x812>
 800bf1c:	9303      	str	r3, [sp, #12]
 800bf1e:	2301      	movs	r3, #1
 800bf20:	9304      	str	r3, [sp, #16]
 800bf22:	e00c      	b.n	800bf3e <_svfprintf_r+0x466>
 800bf24:	7fefffff 	.word	0x7fefffff
 800bf28:	08010cc8 	.word	0x08010cc8
 800bf2c:	08010ccc 	.word	0x08010ccc
 800bf30:	08010cd0 	.word	0x08010cd0
 800bf34:	08010cd4 	.word	0x08010cd4
 800bf38:	9003      	str	r0, [sp, #12]
 800bf3a:	f10d 09d4 	add.w	r9, sp, #212	; 0xd4
 800bf3e:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
 800bf42:	9311      	str	r3, [sp, #68]	; 0x44
 800bf44:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800bf46:	2b00      	cmp	r3, #0
 800bf48:	f280 81d1 	bge.w	800c2ee <_svfprintf_r+0x816>
 800bf4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bf4e:	ee08 3a10 	vmov	s16, r3
 800bf52:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800bf54:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 800bf58:	ee08 3a90 	vmov	s17, r3
 800bf5c:	232d      	movs	r3, #45	; 0x2d
 800bf5e:	9318      	str	r3, [sp, #96]	; 0x60
 800bf60:	9b08      	ldr	r3, [sp, #32]
 800bf62:	2b41      	cmp	r3, #65	; 0x41
 800bf64:	f040 81e1 	bne.w	800c32a <_svfprintf_r+0x852>
 800bf68:	eeb0 0a48 	vmov.f32	s0, s16
 800bf6c:	eef0 0a68 	vmov.f32	s1, s17
 800bf70:	a81c      	add	r0, sp, #112	; 0x70
 800bf72:	f003 f84b 	bl	800f00c <frexp>
 800bf76:	2200      	movs	r2, #0
 800bf78:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 800bf7c:	ec51 0b10 	vmov	r0, r1, d0
 800bf80:	f7f4 fb42 	bl	8000608 <__aeabi_dmul>
 800bf84:	2200      	movs	r2, #0
 800bf86:	2300      	movs	r3, #0
 800bf88:	4606      	mov	r6, r0
 800bf8a:	460f      	mov	r7, r1
 800bf8c:	f7f4 fda4 	bl	8000ad8 <__aeabi_dcmpeq>
 800bf90:	b108      	cbz	r0, 800bf96 <_svfprintf_r+0x4be>
 800bf92:	2301      	movs	r3, #1
 800bf94:	931c      	str	r3, [sp, #112]	; 0x70
 800bf96:	4ba7      	ldr	r3, [pc, #668]	; (800c234 <_svfprintf_r+0x75c>)
 800bf98:	4aa7      	ldr	r2, [pc, #668]	; (800c238 <_svfprintf_r+0x760>)
 800bf9a:	9906      	ldr	r1, [sp, #24]
 800bf9c:	2961      	cmp	r1, #97	; 0x61
 800bf9e:	bf18      	it	ne
 800bfa0:	461a      	movne	r2, r3
 800bfa2:	9b04      	ldr	r3, [sp, #16]
 800bfa4:	9217      	str	r2, [sp, #92]	; 0x5c
 800bfa6:	3b01      	subs	r3, #1
 800bfa8:	9305      	str	r3, [sp, #20]
 800bfaa:	464d      	mov	r5, r9
 800bfac:	4ba3      	ldr	r3, [pc, #652]	; (800c23c <_svfprintf_r+0x764>)
 800bfae:	2200      	movs	r2, #0
 800bfb0:	4630      	mov	r0, r6
 800bfb2:	4639      	mov	r1, r7
 800bfb4:	f7f4 fb28 	bl	8000608 <__aeabi_dmul>
 800bfb8:	460f      	mov	r7, r1
 800bfba:	4606      	mov	r6, r0
 800bfbc:	f7f4 fdd4 	bl	8000b68 <__aeabi_d2iz>
 800bfc0:	9019      	str	r0, [sp, #100]	; 0x64
 800bfc2:	f7f4 fab7 	bl	8000534 <__aeabi_i2d>
 800bfc6:	4602      	mov	r2, r0
 800bfc8:	460b      	mov	r3, r1
 800bfca:	4630      	mov	r0, r6
 800bfcc:	4639      	mov	r1, r7
 800bfce:	f7f4 f963 	bl	8000298 <__aeabi_dsub>
 800bfd2:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800bfd4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800bfd6:	5c9b      	ldrb	r3, [r3, r2]
 800bfd8:	f805 3b01 	strb.w	r3, [r5], #1
 800bfdc:	9b05      	ldr	r3, [sp, #20]
 800bfde:	9309      	str	r3, [sp, #36]	; 0x24
 800bfe0:	1c5a      	adds	r2, r3, #1
 800bfe2:	4606      	mov	r6, r0
 800bfe4:	460f      	mov	r7, r1
 800bfe6:	d007      	beq.n	800bff8 <_svfprintf_r+0x520>
 800bfe8:	3b01      	subs	r3, #1
 800bfea:	9305      	str	r3, [sp, #20]
 800bfec:	2200      	movs	r2, #0
 800bfee:	2300      	movs	r3, #0
 800bff0:	f7f4 fd72 	bl	8000ad8 <__aeabi_dcmpeq>
 800bff4:	2800      	cmp	r0, #0
 800bff6:	d0d9      	beq.n	800bfac <_svfprintf_r+0x4d4>
 800bff8:	4b91      	ldr	r3, [pc, #580]	; (800c240 <_svfprintf_r+0x768>)
 800bffa:	2200      	movs	r2, #0
 800bffc:	4630      	mov	r0, r6
 800bffe:	4639      	mov	r1, r7
 800c000:	f7f4 fd92 	bl	8000b28 <__aeabi_dcmpgt>
 800c004:	b960      	cbnz	r0, 800c020 <_svfprintf_r+0x548>
 800c006:	4b8e      	ldr	r3, [pc, #568]	; (800c240 <_svfprintf_r+0x768>)
 800c008:	2200      	movs	r2, #0
 800c00a:	4630      	mov	r0, r6
 800c00c:	4639      	mov	r1, r7
 800c00e:	f7f4 fd63 	bl	8000ad8 <__aeabi_dcmpeq>
 800c012:	2800      	cmp	r0, #0
 800c014:	f000 8184 	beq.w	800c320 <_svfprintf_r+0x848>
 800c018:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c01a:	07db      	lsls	r3, r3, #31
 800c01c:	f140 8180 	bpl.w	800c320 <_svfprintf_r+0x848>
 800c020:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800c022:	9520      	str	r5, [sp, #128]	; 0x80
 800c024:	7bd9      	ldrb	r1, [r3, #15]
 800c026:	2030      	movs	r0, #48	; 0x30
 800c028:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800c02a:	1e53      	subs	r3, r2, #1
 800c02c:	9320      	str	r3, [sp, #128]	; 0x80
 800c02e:	f812 3c01 	ldrb.w	r3, [r2, #-1]
 800c032:	428b      	cmp	r3, r1
 800c034:	f000 8163 	beq.w	800c2fe <_svfprintf_r+0x826>
 800c038:	2b39      	cmp	r3, #57	; 0x39
 800c03a:	bf0b      	itete	eq
 800c03c:	9b17      	ldreq	r3, [sp, #92]	; 0x5c
 800c03e:	3301      	addne	r3, #1
 800c040:	7a9b      	ldrbeq	r3, [r3, #10]
 800c042:	b2db      	uxtbne	r3, r3
 800c044:	f802 3c01 	strb.w	r3, [r2, #-1]
 800c048:	eba5 0309 	sub.w	r3, r5, r9
 800c04c:	9305      	str	r3, [sp, #20]
 800c04e:	9b08      	ldr	r3, [sp, #32]
 800c050:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 800c052:	2b47      	cmp	r3, #71	; 0x47
 800c054:	f040 81b1 	bne.w	800c3ba <_svfprintf_r+0x8e2>
 800c058:	1cef      	adds	r7, r5, #3
 800c05a:	db03      	blt.n	800c064 <_svfprintf_r+0x58c>
 800c05c:	9b04      	ldr	r3, [sp, #16]
 800c05e:	42ab      	cmp	r3, r5
 800c060:	f280 81d6 	bge.w	800c410 <_svfprintf_r+0x938>
 800c064:	9b06      	ldr	r3, [sp, #24]
 800c066:	3b02      	subs	r3, #2
 800c068:	9306      	str	r3, [sp, #24]
 800c06a:	9906      	ldr	r1, [sp, #24]
 800c06c:	f89d 2018 	ldrb.w	r2, [sp, #24]
 800c070:	f021 0120 	bic.w	r1, r1, #32
 800c074:	2941      	cmp	r1, #65	; 0x41
 800c076:	bf08      	it	eq
 800c078:	320f      	addeq	r2, #15
 800c07a:	f105 33ff 	add.w	r3, r5, #4294967295
 800c07e:	bf06      	itte	eq
 800c080:	b2d2      	uxtbeq	r2, r2
 800c082:	2101      	moveq	r1, #1
 800c084:	2100      	movne	r1, #0
 800c086:	2b00      	cmp	r3, #0
 800c088:	931c      	str	r3, [sp, #112]	; 0x70
 800c08a:	bfb8      	it	lt
 800c08c:	f1c5 0301 	rsblt	r3, r5, #1
 800c090:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
 800c094:	bfb4      	ite	lt
 800c096:	222d      	movlt	r2, #45	; 0x2d
 800c098:	222b      	movge	r2, #43	; 0x2b
 800c09a:	2b09      	cmp	r3, #9
 800c09c:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
 800c0a0:	f340 81a4 	ble.w	800c3ec <_svfprintf_r+0x914>
 800c0a4:	f10d 0287 	add.w	r2, sp, #135	; 0x87
 800c0a8:	260a      	movs	r6, #10
 800c0aa:	4611      	mov	r1, r2
 800c0ac:	fb93 f5f6 	sdiv	r5, r3, r6
 800c0b0:	fb06 3015 	mls	r0, r6, r5, r3
 800c0b4:	3030      	adds	r0, #48	; 0x30
 800c0b6:	f801 0c01 	strb.w	r0, [r1, #-1]
 800c0ba:	4618      	mov	r0, r3
 800c0bc:	2863      	cmp	r0, #99	; 0x63
 800c0be:	f102 32ff 	add.w	r2, r2, #4294967295
 800c0c2:	462b      	mov	r3, r5
 800c0c4:	dcf1      	bgt.n	800c0aa <_svfprintf_r+0x5d2>
 800c0c6:	3330      	adds	r3, #48	; 0x30
 800c0c8:	1e88      	subs	r0, r1, #2
 800c0ca:	f802 3c01 	strb.w	r3, [r2, #-1]
 800c0ce:	f10d 0587 	add.w	r5, sp, #135	; 0x87
 800c0d2:	f10d 027a 	add.w	r2, sp, #122	; 0x7a
 800c0d6:	4603      	mov	r3, r0
 800c0d8:	42ab      	cmp	r3, r5
 800c0da:	f0c0 8182 	bcc.w	800c3e2 <_svfprintf_r+0x90a>
 800c0de:	f10d 0289 	add.w	r2, sp, #137	; 0x89
 800c0e2:	1a52      	subs	r2, r2, r1
 800c0e4:	42a8      	cmp	r0, r5
 800c0e6:	bf88      	it	hi
 800c0e8:	2200      	movhi	r2, #0
 800c0ea:	f10d 037a 	add.w	r3, sp, #122	; 0x7a
 800c0ee:	441a      	add	r2, r3
 800c0f0:	ab1e      	add	r3, sp, #120	; 0x78
 800c0f2:	1ad3      	subs	r3, r2, r3
 800c0f4:	9a05      	ldr	r2, [sp, #20]
 800c0f6:	9315      	str	r3, [sp, #84]	; 0x54
 800c0f8:	2a01      	cmp	r2, #1
 800c0fa:	4413      	add	r3, r2
 800c0fc:	9304      	str	r3, [sp, #16]
 800c0fe:	dc02      	bgt.n	800c106 <_svfprintf_r+0x62e>
 800c100:	f01b 0f01 	tst.w	fp, #1
 800c104:	d003      	beq.n	800c10e <_svfprintf_r+0x636>
 800c106:	9b04      	ldr	r3, [sp, #16]
 800c108:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800c10a:	4413      	add	r3, r2
 800c10c:	9304      	str	r3, [sp, #16]
 800c10e:	f42b 6380 	bic.w	r3, fp, #1024	; 0x400
 800c112:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c116:	9311      	str	r3, [sp, #68]	; 0x44
 800c118:	2300      	movs	r3, #0
 800c11a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800c11e:	461d      	mov	r5, r3
 800c120:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800c122:	b113      	cbz	r3, 800c12a <_svfprintf_r+0x652>
 800c124:	232d      	movs	r3, #45	; 0x2d
 800c126:	f88d 306b 	strb.w	r3, [sp, #107]	; 0x6b
 800c12a:	f8dd b044 	ldr.w	fp, [sp, #68]	; 0x44
 800c12e:	2600      	movs	r6, #0
 800c130:	9b04      	ldr	r3, [sp, #16]
 800c132:	42b3      	cmp	r3, r6
 800c134:	bfb8      	it	lt
 800c136:	4633      	movlt	r3, r6
 800c138:	9311      	str	r3, [sp, #68]	; 0x44
 800c13a:	f89d 306b 	ldrb.w	r3, [sp, #107]	; 0x6b
 800c13e:	b113      	cbz	r3, 800c146 <_svfprintf_r+0x66e>
 800c140:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c142:	3301      	adds	r3, #1
 800c144:	9311      	str	r3, [sp, #68]	; 0x44
 800c146:	f01b 0302 	ands.w	r3, fp, #2
 800c14a:	9317      	str	r3, [sp, #92]	; 0x5c
 800c14c:	bf1e      	ittt	ne
 800c14e:	9b11      	ldrne	r3, [sp, #68]	; 0x44
 800c150:	3302      	addne	r3, #2
 800c152:	9311      	strne	r3, [sp, #68]	; 0x44
 800c154:	f01b 0384 	ands.w	r3, fp, #132	; 0x84
 800c158:	9318      	str	r3, [sp, #96]	; 0x60
 800c15a:	d11f      	bne.n	800c19c <_svfprintf_r+0x6c4>
 800c15c:	e9dd 3210 	ldrd	r3, r2, [sp, #64]	; 0x40
 800c160:	1a9f      	subs	r7, r3, r2
 800c162:	2f00      	cmp	r7, #0
 800c164:	dd1a      	ble.n	800c19c <_svfprintf_r+0x6c4>
 800c166:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 800c16a:	4836      	ldr	r0, [pc, #216]	; (800c244 <_svfprintf_r+0x76c>)
 800c16c:	6020      	str	r0, [r4, #0]
 800c16e:	2f10      	cmp	r7, #16
 800c170:	f103 0301 	add.w	r3, r3, #1
 800c174:	f104 0108 	add.w	r1, r4, #8
 800c178:	f300 82ed 	bgt.w	800c756 <_svfprintf_r+0xc7e>
 800c17c:	6067      	str	r7, [r4, #4]
 800c17e:	2b07      	cmp	r3, #7
 800c180:	4417      	add	r7, r2
 800c182:	e9cd 3723 	strd	r3, r7, [sp, #140]	; 0x8c
 800c186:	f340 82f9 	ble.w	800c77c <_svfprintf_r+0xca4>
 800c18a:	aa22      	add	r2, sp, #136	; 0x88
 800c18c:	4641      	mov	r1, r8
 800c18e:	4650      	mov	r0, sl
 800c190:	f002 ff91 	bl	800f0b6 <__ssprint_r>
 800c194:	2800      	cmp	r0, #0
 800c196:	f040 8621 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c19a:	ac25      	add	r4, sp, #148	; 0x94
 800c19c:	f89d 306b 	ldrb.w	r3, [sp, #107]	; 0x6b
 800c1a0:	b173      	cbz	r3, 800c1c0 <_svfprintf_r+0x6e8>
 800c1a2:	f10d 036b 	add.w	r3, sp, #107	; 0x6b
 800c1a6:	6023      	str	r3, [r4, #0]
 800c1a8:	2301      	movs	r3, #1
 800c1aa:	6063      	str	r3, [r4, #4]
 800c1ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800c1ae:	3301      	adds	r3, #1
 800c1b0:	9324      	str	r3, [sp, #144]	; 0x90
 800c1b2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800c1b4:	3301      	adds	r3, #1
 800c1b6:	2b07      	cmp	r3, #7
 800c1b8:	9323      	str	r3, [sp, #140]	; 0x8c
 800c1ba:	f300 82e1 	bgt.w	800c780 <_svfprintf_r+0xca8>
 800c1be:	3408      	adds	r4, #8
 800c1c0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800c1c2:	b16b      	cbz	r3, 800c1e0 <_svfprintf_r+0x708>
 800c1c4:	ab1b      	add	r3, sp, #108	; 0x6c
 800c1c6:	6023      	str	r3, [r4, #0]
 800c1c8:	2302      	movs	r3, #2
 800c1ca:	6063      	str	r3, [r4, #4]
 800c1cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800c1ce:	3302      	adds	r3, #2
 800c1d0:	9324      	str	r3, [sp, #144]	; 0x90
 800c1d2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800c1d4:	3301      	adds	r3, #1
 800c1d6:	2b07      	cmp	r3, #7
 800c1d8:	9323      	str	r3, [sp, #140]	; 0x8c
 800c1da:	f300 82db 	bgt.w	800c794 <_svfprintf_r+0xcbc>
 800c1de:	3408      	adds	r4, #8
 800c1e0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800c1e2:	2b80      	cmp	r3, #128	; 0x80
 800c1e4:	d11f      	bne.n	800c226 <_svfprintf_r+0x74e>
 800c1e6:	e9dd 3210 	ldrd	r3, r2, [sp, #64]	; 0x40
 800c1ea:	1a9f      	subs	r7, r3, r2
 800c1ec:	2f00      	cmp	r7, #0
 800c1ee:	dd1a      	ble.n	800c226 <_svfprintf_r+0x74e>
 800c1f0:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 800c1f4:	4814      	ldr	r0, [pc, #80]	; (800c248 <_svfprintf_r+0x770>)
 800c1f6:	6020      	str	r0, [r4, #0]
 800c1f8:	2f10      	cmp	r7, #16
 800c1fa:	f103 0301 	add.w	r3, r3, #1
 800c1fe:	f104 0108 	add.w	r1, r4, #8
 800c202:	f300 82d1 	bgt.w	800c7a8 <_svfprintf_r+0xcd0>
 800c206:	6067      	str	r7, [r4, #4]
 800c208:	2b07      	cmp	r3, #7
 800c20a:	4417      	add	r7, r2
 800c20c:	e9cd 3723 	strd	r3, r7, [sp, #140]	; 0x8c
 800c210:	f340 82dd 	ble.w	800c7ce <_svfprintf_r+0xcf6>
 800c214:	aa22      	add	r2, sp, #136	; 0x88
 800c216:	4641      	mov	r1, r8
 800c218:	4650      	mov	r0, sl
 800c21a:	f002 ff4c 	bl	800f0b6 <__ssprint_r>
 800c21e:	2800      	cmp	r0, #0
 800c220:	f040 85dc 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c224:	ac25      	add	r4, sp, #148	; 0x94
 800c226:	9b04      	ldr	r3, [sp, #16]
 800c228:	1af6      	subs	r6, r6, r3
 800c22a:	2e00      	cmp	r6, #0
 800c22c:	dd28      	ble.n	800c280 <_svfprintf_r+0x7a8>
 800c22e:	4f06      	ldr	r7, [pc, #24]	; (800c248 <_svfprintf_r+0x770>)
 800c230:	e00c      	b.n	800c24c <_svfprintf_r+0x774>
 800c232:	bf00      	nop
 800c234:	08010ce9 	.word	0x08010ce9
 800c238:	08010cd8 	.word	0x08010cd8
 800c23c:	40300000 	.word	0x40300000
 800c240:	3fe00000 	.word	0x3fe00000
 800c244:	08010cfc 	.word	0x08010cfc
 800c248:	08010d0c 	.word	0x08010d0c
 800c24c:	6027      	str	r7, [r4, #0]
 800c24e:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 800c252:	2e10      	cmp	r6, #16
 800c254:	f103 0301 	add.w	r3, r3, #1
 800c258:	f104 0108 	add.w	r1, r4, #8
 800c25c:	f300 82b9 	bgt.w	800c7d2 <_svfprintf_r+0xcfa>
 800c260:	6066      	str	r6, [r4, #4]
 800c262:	2b07      	cmp	r3, #7
 800c264:	4416      	add	r6, r2
 800c266:	e9cd 3623 	strd	r3, r6, [sp, #140]	; 0x8c
 800c26a:	f340 82c5 	ble.w	800c7f8 <_svfprintf_r+0xd20>
 800c26e:	aa22      	add	r2, sp, #136	; 0x88
 800c270:	4641      	mov	r1, r8
 800c272:	4650      	mov	r0, sl
 800c274:	f002 ff1f 	bl	800f0b6 <__ssprint_r>
 800c278:	2800      	cmp	r0, #0
 800c27a:	f040 85af 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c27e:	ac25      	add	r4, sp, #148	; 0x94
 800c280:	f41b 7f80 	tst.w	fp, #256	; 0x100
 800c284:	9e24      	ldr	r6, [sp, #144]	; 0x90
 800c286:	f040 82bd 	bne.w	800c804 <_svfprintf_r+0xd2c>
 800c28a:	9b04      	ldr	r3, [sp, #16]
 800c28c:	f8c4 9000 	str.w	r9, [r4]
 800c290:	441e      	add	r6, r3
 800c292:	6063      	str	r3, [r4, #4]
 800c294:	9624      	str	r6, [sp, #144]	; 0x90
 800c296:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800c298:	3301      	adds	r3, #1
 800c29a:	2b07      	cmp	r3, #7
 800c29c:	9323      	str	r3, [sp, #140]	; 0x8c
 800c29e:	f300 82f6 	bgt.w	800c88e <_svfprintf_r+0xdb6>
 800c2a2:	3408      	adds	r4, #8
 800c2a4:	f01b 0f04 	tst.w	fp, #4
 800c2a8:	f040 857a 	bne.w	800cda0 <_svfprintf_r+0x12c8>
 800c2ac:	e9dd 2110 	ldrd	r2, r1, [sp, #64]	; 0x40
 800c2b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c2b2:	428a      	cmp	r2, r1
 800c2b4:	bfac      	ite	ge
 800c2b6:	189b      	addge	r3, r3, r2
 800c2b8:	185b      	addlt	r3, r3, r1
 800c2ba:	930c      	str	r3, [sp, #48]	; 0x30
 800c2bc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800c2be:	b13b      	cbz	r3, 800c2d0 <_svfprintf_r+0x7f8>
 800c2c0:	aa22      	add	r2, sp, #136	; 0x88
 800c2c2:	4641      	mov	r1, r8
 800c2c4:	4650      	mov	r0, sl
 800c2c6:	f002 fef6 	bl	800f0b6 <__ssprint_r>
 800c2ca:	2800      	cmp	r0, #0
 800c2cc:	f040 8586 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c2d0:	2300      	movs	r3, #0
 800c2d2:	9323      	str	r3, [sp, #140]	; 0x8c
 800c2d4:	9b03      	ldr	r3, [sp, #12]
 800c2d6:	2b00      	cmp	r3, #0
 800c2d8:	f040 859c 	bne.w	800ce14 <_svfprintf_r+0x133c>
 800c2dc:	ac25      	add	r4, sp, #148	; 0x94
 800c2de:	e0ec      	b.n	800c4ba <_svfprintf_r+0x9e2>
 800c2e0:	9003      	str	r0, [sp, #12]
 800c2e2:	e62c      	b.n	800bf3e <_svfprintf_r+0x466>
 800c2e4:	9003      	str	r0, [sp, #12]
 800c2e6:	2306      	movs	r3, #6
 800c2e8:	e61a      	b.n	800bf20 <_svfprintf_r+0x448>
 800c2ea:	9003      	str	r0, [sp, #12]
 800c2ec:	e627      	b.n	800bf3e <_svfprintf_r+0x466>
 800c2ee:	ed9d 7b0e 	vldr	d7, [sp, #56]	; 0x38
 800c2f2:	2300      	movs	r3, #0
 800c2f4:	eeb0 8a47 	vmov.f32	s16, s14
 800c2f8:	eef0 8a67 	vmov.f32	s17, s15
 800c2fc:	e62f      	b.n	800bf5e <_svfprintf_r+0x486>
 800c2fe:	f802 0c01 	strb.w	r0, [r2, #-1]
 800c302:	e691      	b.n	800c028 <_svfprintf_r+0x550>
 800c304:	f803 0b01 	strb.w	r0, [r3], #1
 800c308:	1aca      	subs	r2, r1, r3
 800c30a:	2a00      	cmp	r2, #0
 800c30c:	dafa      	bge.n	800c304 <_svfprintf_r+0x82c>
 800c30e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c310:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c312:	3201      	adds	r2, #1
 800c314:	f103 0301 	add.w	r3, r3, #1
 800c318:	bfb8      	it	lt
 800c31a:	2300      	movlt	r3, #0
 800c31c:	441d      	add	r5, r3
 800c31e:	e693      	b.n	800c048 <_svfprintf_r+0x570>
 800c320:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c322:	462b      	mov	r3, r5
 800c324:	18a9      	adds	r1, r5, r2
 800c326:	2030      	movs	r0, #48	; 0x30
 800c328:	e7ee      	b.n	800c308 <_svfprintf_r+0x830>
 800c32a:	9b08      	ldr	r3, [sp, #32]
 800c32c:	2b46      	cmp	r3, #70	; 0x46
 800c32e:	d005      	beq.n	800c33c <_svfprintf_r+0x864>
 800c330:	2b45      	cmp	r3, #69	; 0x45
 800c332:	d11b      	bne.n	800c36c <_svfprintf_r+0x894>
 800c334:	9b04      	ldr	r3, [sp, #16]
 800c336:	1c5d      	adds	r5, r3, #1
 800c338:	2102      	movs	r1, #2
 800c33a:	e001      	b.n	800c340 <_svfprintf_r+0x868>
 800c33c:	9d04      	ldr	r5, [sp, #16]
 800c33e:	2103      	movs	r1, #3
 800c340:	ab20      	add	r3, sp, #128	; 0x80
 800c342:	9301      	str	r3, [sp, #4]
 800c344:	ab1d      	add	r3, sp, #116	; 0x74
 800c346:	9300      	str	r3, [sp, #0]
 800c348:	462a      	mov	r2, r5
 800c34a:	ab1c      	add	r3, sp, #112	; 0x70
 800c34c:	4650      	mov	r0, sl
 800c34e:	eeb0 0a48 	vmov.f32	s0, s16
 800c352:	eef0 0a68 	vmov.f32	s1, s17
 800c356:	f000 fe8f 	bl	800d078 <_dtoa_r>
 800c35a:	9b08      	ldr	r3, [sp, #32]
 800c35c:	2b47      	cmp	r3, #71	; 0x47
 800c35e:	4681      	mov	r9, r0
 800c360:	d106      	bne.n	800c370 <_svfprintf_r+0x898>
 800c362:	f01b 0f01 	tst.w	fp, #1
 800c366:	d103      	bne.n	800c370 <_svfprintf_r+0x898>
 800c368:	9d20      	ldr	r5, [sp, #128]	; 0x80
 800c36a:	e66d      	b.n	800c048 <_svfprintf_r+0x570>
 800c36c:	9d04      	ldr	r5, [sp, #16]
 800c36e:	e7e3      	b.n	800c338 <_svfprintf_r+0x860>
 800c370:	9b08      	ldr	r3, [sp, #32]
 800c372:	2b46      	cmp	r3, #70	; 0x46
 800c374:	eb09 0605 	add.w	r6, r9, r5
 800c378:	d10f      	bne.n	800c39a <_svfprintf_r+0x8c2>
 800c37a:	f899 3000 	ldrb.w	r3, [r9]
 800c37e:	2b30      	cmp	r3, #48	; 0x30
 800c380:	d109      	bne.n	800c396 <_svfprintf_r+0x8be>
 800c382:	ec51 0b18 	vmov	r0, r1, d8
 800c386:	2200      	movs	r2, #0
 800c388:	2300      	movs	r3, #0
 800c38a:	f7f4 fba5 	bl	8000ad8 <__aeabi_dcmpeq>
 800c38e:	b910      	cbnz	r0, 800c396 <_svfprintf_r+0x8be>
 800c390:	f1c5 0501 	rsb	r5, r5, #1
 800c394:	951c      	str	r5, [sp, #112]	; 0x70
 800c396:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800c398:	441e      	add	r6, r3
 800c39a:	ec51 0b18 	vmov	r0, r1, d8
 800c39e:	2200      	movs	r2, #0
 800c3a0:	2300      	movs	r3, #0
 800c3a2:	f7f4 fb99 	bl	8000ad8 <__aeabi_dcmpeq>
 800c3a6:	b100      	cbz	r0, 800c3aa <_svfprintf_r+0x8d2>
 800c3a8:	9620      	str	r6, [sp, #128]	; 0x80
 800c3aa:	2230      	movs	r2, #48	; 0x30
 800c3ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800c3ae:	429e      	cmp	r6, r3
 800c3b0:	d9da      	bls.n	800c368 <_svfprintf_r+0x890>
 800c3b2:	1c59      	adds	r1, r3, #1
 800c3b4:	9120      	str	r1, [sp, #128]	; 0x80
 800c3b6:	701a      	strb	r2, [r3, #0]
 800c3b8:	e7f8      	b.n	800c3ac <_svfprintf_r+0x8d4>
 800c3ba:	9b08      	ldr	r3, [sp, #32]
 800c3bc:	2b46      	cmp	r3, #70	; 0x46
 800c3be:	f47f ae54 	bne.w	800c06a <_svfprintf_r+0x592>
 800c3c2:	9a04      	ldr	r2, [sp, #16]
 800c3c4:	f00b 0301 	and.w	r3, fp, #1
 800c3c8:	2d00      	cmp	r5, #0
 800c3ca:	ea43 0302 	orr.w	r3, r3, r2
 800c3ce:	dd1a      	ble.n	800c406 <_svfprintf_r+0x92e>
 800c3d0:	2b00      	cmp	r3, #0
 800c3d2:	d034      	beq.n	800c43e <_svfprintf_r+0x966>
 800c3d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c3d6:	18eb      	adds	r3, r5, r3
 800c3d8:	441a      	add	r2, r3
 800c3da:	9204      	str	r2, [sp, #16]
 800c3dc:	2366      	movs	r3, #102	; 0x66
 800c3de:	9306      	str	r3, [sp, #24]
 800c3e0:	e033      	b.n	800c44a <_svfprintf_r+0x972>
 800c3e2:	f813 6b01 	ldrb.w	r6, [r3], #1
 800c3e6:	f802 6b01 	strb.w	r6, [r2], #1
 800c3ea:	e675      	b.n	800c0d8 <_svfprintf_r+0x600>
 800c3ec:	b941      	cbnz	r1, 800c400 <_svfprintf_r+0x928>
 800c3ee:	2230      	movs	r2, #48	; 0x30
 800c3f0:	f88d 207a 	strb.w	r2, [sp, #122]	; 0x7a
 800c3f4:	f10d 027b 	add.w	r2, sp, #123	; 0x7b
 800c3f8:	3330      	adds	r3, #48	; 0x30
 800c3fa:	f802 3b01 	strb.w	r3, [r2], #1
 800c3fe:	e677      	b.n	800c0f0 <_svfprintf_r+0x618>
 800c400:	f10d 027a 	add.w	r2, sp, #122	; 0x7a
 800c404:	e7f8      	b.n	800c3f8 <_svfprintf_r+0x920>
 800c406:	b1e3      	cbz	r3, 800c442 <_svfprintf_r+0x96a>
 800c408:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c40a:	9a04      	ldr	r2, [sp, #16]
 800c40c:	3301      	adds	r3, #1
 800c40e:	e7e3      	b.n	800c3d8 <_svfprintf_r+0x900>
 800c410:	9b05      	ldr	r3, [sp, #20]
 800c412:	429d      	cmp	r5, r3
 800c414:	db07      	blt.n	800c426 <_svfprintf_r+0x94e>
 800c416:	f01b 0f01 	tst.w	fp, #1
 800c41a:	d02d      	beq.n	800c478 <_svfprintf_r+0x9a0>
 800c41c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c41e:	18eb      	adds	r3, r5, r3
 800c420:	9304      	str	r3, [sp, #16]
 800c422:	2367      	movs	r3, #103	; 0x67
 800c424:	e7db      	b.n	800c3de <_svfprintf_r+0x906>
 800c426:	9b05      	ldr	r3, [sp, #20]
 800c428:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800c42a:	2d00      	cmp	r5, #0
 800c42c:	4413      	add	r3, r2
 800c42e:	9304      	str	r3, [sp, #16]
 800c430:	dcf7      	bgt.n	800c422 <_svfprintf_r+0x94a>
 800c432:	9a04      	ldr	r2, [sp, #16]
 800c434:	f1c5 0301 	rsb	r3, r5, #1
 800c438:	441a      	add	r2, r3
 800c43a:	9204      	str	r2, [sp, #16]
 800c43c:	e7f1      	b.n	800c422 <_svfprintf_r+0x94a>
 800c43e:	9504      	str	r5, [sp, #16]
 800c440:	e7cc      	b.n	800c3dc <_svfprintf_r+0x904>
 800c442:	2366      	movs	r3, #102	; 0x66
 800c444:	9306      	str	r3, [sp, #24]
 800c446:	2301      	movs	r3, #1
 800c448:	9304      	str	r3, [sp, #16]
 800c44a:	f41b 6380 	ands.w	r3, fp, #1024	; 0x400
 800c44e:	9309      	str	r3, [sp, #36]	; 0x24
 800c450:	d025      	beq.n	800c49e <_svfprintf_r+0x9c6>
 800c452:	2300      	movs	r3, #0
 800c454:	2d00      	cmp	r5, #0
 800c456:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800c45a:	f77f ae61 	ble.w	800c120 <_svfprintf_r+0x648>
 800c45e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c460:	781b      	ldrb	r3, [r3, #0]
 800c462:	2bff      	cmp	r3, #255	; 0xff
 800c464:	d10a      	bne.n	800c47c <_svfprintf_r+0x9a4>
 800c466:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c46a:	9912      	ldr	r1, [sp, #72]	; 0x48
 800c46c:	4413      	add	r3, r2
 800c46e:	9a04      	ldr	r2, [sp, #16]
 800c470:	fb01 2303 	mla	r3, r1, r3, r2
 800c474:	9304      	str	r3, [sp, #16]
 800c476:	e653      	b.n	800c120 <_svfprintf_r+0x648>
 800c478:	9504      	str	r5, [sp, #16]
 800c47a:	e7d2      	b.n	800c422 <_svfprintf_r+0x94a>
 800c47c:	42ab      	cmp	r3, r5
 800c47e:	daf2      	bge.n	800c466 <_svfprintf_r+0x98e>
 800c480:	1aed      	subs	r5, r5, r3
 800c482:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c484:	785b      	ldrb	r3, [r3, #1]
 800c486:	b133      	cbz	r3, 800c496 <_svfprintf_r+0x9be>
 800c488:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c48a:	3301      	adds	r3, #1
 800c48c:	9309      	str	r3, [sp, #36]	; 0x24
 800c48e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c490:	3301      	adds	r3, #1
 800c492:	930a      	str	r3, [sp, #40]	; 0x28
 800c494:	e7e3      	b.n	800c45e <_svfprintf_r+0x986>
 800c496:	9b08      	ldr	r3, [sp, #32]
 800c498:	3301      	adds	r3, #1
 800c49a:	9308      	str	r3, [sp, #32]
 800c49c:	e7df      	b.n	800c45e <_svfprintf_r+0x986>
 800c49e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c4a0:	9308      	str	r3, [sp, #32]
 800c4a2:	e63d      	b.n	800c120 <_svfprintf_r+0x648>
 800c4a4:	1d33      	adds	r3, r6, #4
 800c4a6:	f01b 0f20 	tst.w	fp, #32
 800c4aa:	9307      	str	r3, [sp, #28]
 800c4ac:	d00a      	beq.n	800c4c4 <_svfprintf_r+0x9ec>
 800c4ae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800c4b0:	6833      	ldr	r3, [r6, #0]
 800c4b2:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c4b4:	17d2      	asrs	r2, r2, #31
 800c4b6:	e9c3 1200 	strd	r1, r2, [r3]
 800c4ba:	9e07      	ldr	r6, [sp, #28]
 800c4bc:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 800c4c0:	f7ff bb4a 	b.w	800bb58 <_svfprintf_r+0x80>
 800c4c4:	f01b 0f10 	tst.w	fp, #16
 800c4c8:	d003      	beq.n	800c4d2 <_svfprintf_r+0x9fa>
 800c4ca:	6833      	ldr	r3, [r6, #0]
 800c4cc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800c4ce:	601a      	str	r2, [r3, #0]
 800c4d0:	e7f3      	b.n	800c4ba <_svfprintf_r+0x9e2>
 800c4d2:	f01b 0f40 	tst.w	fp, #64	; 0x40
 800c4d6:	d003      	beq.n	800c4e0 <_svfprintf_r+0xa08>
 800c4d8:	6833      	ldr	r3, [r6, #0]
 800c4da:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800c4dc:	801a      	strh	r2, [r3, #0]
 800c4de:	e7ec      	b.n	800c4ba <_svfprintf_r+0x9e2>
 800c4e0:	f41b 7f00 	tst.w	fp, #512	; 0x200
 800c4e4:	d0f1      	beq.n	800c4ca <_svfprintf_r+0x9f2>
 800c4e6:	6833      	ldr	r3, [r6, #0]
 800c4e8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800c4ea:	701a      	strb	r2, [r3, #0]
 800c4ec:	e7e5      	b.n	800c4ba <_svfprintf_r+0x9e2>
 800c4ee:	f04b 0b10 	orr.w	fp, fp, #16
 800c4f2:	f01b 0320 	ands.w	r3, fp, #32
 800c4f6:	d01f      	beq.n	800c538 <_svfprintf_r+0xa60>
 800c4f8:	1df3      	adds	r3, r6, #7
 800c4fa:	f023 0307 	bic.w	r3, r3, #7
 800c4fe:	461a      	mov	r2, r3
 800c500:	685d      	ldr	r5, [r3, #4]
 800c502:	f852 6b08 	ldr.w	r6, [r2], #8
 800c506:	9207      	str	r2, [sp, #28]
 800c508:	f42b 6b80 	bic.w	fp, fp, #1024	; 0x400
 800c50c:	2300      	movs	r3, #0
 800c50e:	2200      	movs	r2, #0
 800c510:	f88d 206b 	strb.w	r2, [sp, #107]	; 0x6b
 800c514:	9a04      	ldr	r2, [sp, #16]
 800c516:	3201      	adds	r2, #1
 800c518:	f000 848d 	beq.w	800ce36 <_svfprintf_r+0x135e>
 800c51c:	ea56 0205 	orrs.w	r2, r6, r5
 800c520:	f02b 0780 	bic.w	r7, fp, #128	; 0x80
 800c524:	f040 848c 	bne.w	800ce40 <_svfprintf_r+0x1368>
 800c528:	9a04      	ldr	r2, [sp, #16]
 800c52a:	2a00      	cmp	r2, #0
 800c52c:	f000 80f9 	beq.w	800c722 <_svfprintf_r+0xc4a>
 800c530:	2b01      	cmp	r3, #1
 800c532:	f040 8488 	bne.w	800ce46 <_svfprintf_r+0x136e>
 800c536:	e09f      	b.n	800c678 <_svfprintf_r+0xba0>
 800c538:	4632      	mov	r2, r6
 800c53a:	f01b 0510 	ands.w	r5, fp, #16
 800c53e:	f852 6b04 	ldr.w	r6, [r2], #4
 800c542:	9207      	str	r2, [sp, #28]
 800c544:	d001      	beq.n	800c54a <_svfprintf_r+0xa72>
 800c546:	461d      	mov	r5, r3
 800c548:	e7de      	b.n	800c508 <_svfprintf_r+0xa30>
 800c54a:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
 800c54e:	d001      	beq.n	800c554 <_svfprintf_r+0xa7c>
 800c550:	b2b6      	uxth	r6, r6
 800c552:	e7d9      	b.n	800c508 <_svfprintf_r+0xa30>
 800c554:	f41b 7500 	ands.w	r5, fp, #512	; 0x200
 800c558:	d0d6      	beq.n	800c508 <_svfprintf_r+0xa30>
 800c55a:	b2f6      	uxtb	r6, r6
 800c55c:	e7f3      	b.n	800c546 <_svfprintf_r+0xa6e>
 800c55e:	4633      	mov	r3, r6
 800c560:	2278      	movs	r2, #120	; 0x78
 800c562:	f853 6b04 	ldr.w	r6, [r3], #4
 800c566:	9307      	str	r3, [sp, #28]
 800c568:	2330      	movs	r3, #48	; 0x30
 800c56a:	f88d 306c 	strb.w	r3, [sp, #108]	; 0x6c
 800c56e:	4ba3      	ldr	r3, [pc, #652]	; (800c7fc <_svfprintf_r+0xd24>)
 800c570:	9316      	str	r3, [sp, #88]	; 0x58
 800c572:	2500      	movs	r5, #0
 800c574:	f04b 0b02 	orr.w	fp, fp, #2
 800c578:	f88d 206d 	strb.w	r2, [sp, #109]	; 0x6d
 800c57c:	2302      	movs	r3, #2
 800c57e:	9206      	str	r2, [sp, #24]
 800c580:	e7c5      	b.n	800c50e <_svfprintf_r+0xa36>
 800c582:	4633      	mov	r3, r6
 800c584:	2500      	movs	r5, #0
 800c586:	f853 9b04 	ldr.w	r9, [r3], #4
 800c58a:	9307      	str	r3, [sp, #28]
 800c58c:	9b04      	ldr	r3, [sp, #16]
 800c58e:	f88d 506b 	strb.w	r5, [sp, #107]	; 0x6b
 800c592:	1c58      	adds	r0, r3, #1
 800c594:	d010      	beq.n	800c5b8 <_svfprintf_r+0xae0>
 800c596:	461a      	mov	r2, r3
 800c598:	4629      	mov	r1, r5
 800c59a:	4648      	mov	r0, r9
 800c59c:	f7f3 fe28 	bl	80001f0 <memchr>
 800c5a0:	9003      	str	r0, [sp, #12]
 800c5a2:	2800      	cmp	r0, #0
 800c5a4:	f000 80d4 	beq.w	800c750 <_svfprintf_r+0xc78>
 800c5a8:	eba0 0309 	sub.w	r3, r0, r9
 800c5ac:	e9cd 5303 	strd	r5, r3, [sp, #12]
 800c5b0:	e9cd 5508 	strd	r5, r5, [sp, #32]
 800c5b4:	462e      	mov	r6, r5
 800c5b6:	e5bb      	b.n	800c130 <_svfprintf_r+0x658>
 800c5b8:	4648      	mov	r0, r9
 800c5ba:	f7f3 fe11 	bl	80001e0 <strlen>
 800c5be:	e9cd 5003 	strd	r5, r0, [sp, #12]
 800c5c2:	e45f      	b.n	800be84 <_svfprintf_r+0x3ac>
 800c5c4:	f04b 0b10 	orr.w	fp, fp, #16
 800c5c8:	f01b 0320 	ands.w	r3, fp, #32
 800c5cc:	d009      	beq.n	800c5e2 <_svfprintf_r+0xb0a>
 800c5ce:	1df3      	adds	r3, r6, #7
 800c5d0:	f023 0307 	bic.w	r3, r3, #7
 800c5d4:	461a      	mov	r2, r3
 800c5d6:	685d      	ldr	r5, [r3, #4]
 800c5d8:	f852 6b08 	ldr.w	r6, [r2], #8
 800c5dc:	9207      	str	r2, [sp, #28]
 800c5de:	2301      	movs	r3, #1
 800c5e0:	e795      	b.n	800c50e <_svfprintf_r+0xa36>
 800c5e2:	4632      	mov	r2, r6
 800c5e4:	f01b 0510 	ands.w	r5, fp, #16
 800c5e8:	f852 6b04 	ldr.w	r6, [r2], #4
 800c5ec:	9207      	str	r2, [sp, #28]
 800c5ee:	d001      	beq.n	800c5f4 <_svfprintf_r+0xb1c>
 800c5f0:	461d      	mov	r5, r3
 800c5f2:	e7f4      	b.n	800c5de <_svfprintf_r+0xb06>
 800c5f4:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
 800c5f8:	d001      	beq.n	800c5fe <_svfprintf_r+0xb26>
 800c5fa:	b2b6      	uxth	r6, r6
 800c5fc:	e7ef      	b.n	800c5de <_svfprintf_r+0xb06>
 800c5fe:	f41b 7500 	ands.w	r5, fp, #512	; 0x200
 800c602:	d0ec      	beq.n	800c5de <_svfprintf_r+0xb06>
 800c604:	b2f6      	uxtb	r6, r6
 800c606:	e7f3      	b.n	800c5f0 <_svfprintf_r+0xb18>
 800c608:	4b7d      	ldr	r3, [pc, #500]	; (800c800 <_svfprintf_r+0xd28>)
 800c60a:	9316      	str	r3, [sp, #88]	; 0x58
 800c60c:	f01b 0320 	ands.w	r3, fp, #32
 800c610:	d01b      	beq.n	800c64a <_svfprintf_r+0xb72>
 800c612:	1df3      	adds	r3, r6, #7
 800c614:	f023 0307 	bic.w	r3, r3, #7
 800c618:	461a      	mov	r2, r3
 800c61a:	685d      	ldr	r5, [r3, #4]
 800c61c:	f852 6b08 	ldr.w	r6, [r2], #8
 800c620:	9207      	str	r2, [sp, #28]
 800c622:	f01b 0f01 	tst.w	fp, #1
 800c626:	d00a      	beq.n	800c63e <_svfprintf_r+0xb66>
 800c628:	ea56 0305 	orrs.w	r3, r6, r5
 800c62c:	d007      	beq.n	800c63e <_svfprintf_r+0xb66>
 800c62e:	2330      	movs	r3, #48	; 0x30
 800c630:	f88d 306c 	strb.w	r3, [sp, #108]	; 0x6c
 800c634:	9b06      	ldr	r3, [sp, #24]
 800c636:	f88d 306d 	strb.w	r3, [sp, #109]	; 0x6d
 800c63a:	f04b 0b02 	orr.w	fp, fp, #2
 800c63e:	f42b 6b80 	bic.w	fp, fp, #1024	; 0x400
 800c642:	2302      	movs	r3, #2
 800c644:	e763      	b.n	800c50e <_svfprintf_r+0xa36>
 800c646:	4b6d      	ldr	r3, [pc, #436]	; (800c7fc <_svfprintf_r+0xd24>)
 800c648:	e7df      	b.n	800c60a <_svfprintf_r+0xb32>
 800c64a:	4632      	mov	r2, r6
 800c64c:	f01b 0510 	ands.w	r5, fp, #16
 800c650:	f852 6b04 	ldr.w	r6, [r2], #4
 800c654:	9207      	str	r2, [sp, #28]
 800c656:	d001      	beq.n	800c65c <_svfprintf_r+0xb84>
 800c658:	461d      	mov	r5, r3
 800c65a:	e7e2      	b.n	800c622 <_svfprintf_r+0xb4a>
 800c65c:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
 800c660:	d001      	beq.n	800c666 <_svfprintf_r+0xb8e>
 800c662:	b2b6      	uxth	r6, r6
 800c664:	e7dd      	b.n	800c622 <_svfprintf_r+0xb4a>
 800c666:	f41b 7500 	ands.w	r5, fp, #512	; 0x200
 800c66a:	d0da      	beq.n	800c622 <_svfprintf_r+0xb4a>
 800c66c:	b2f6      	uxtb	r6, r6
 800c66e:	e7f3      	b.n	800c658 <_svfprintf_r+0xb80>
 800c670:	2e0a      	cmp	r6, #10
 800c672:	f175 0300 	sbcs.w	r3, r5, #0
 800c676:	d205      	bcs.n	800c684 <_svfprintf_r+0xbac>
 800c678:	3630      	adds	r6, #48	; 0x30
 800c67a:	f88d 6137 	strb.w	r6, [sp, #311]	; 0x137
 800c67e:	f20d 1937 	addw	r9, sp, #311	; 0x137
 800c682:	e3fb      	b.n	800ce7c <_svfprintf_r+0x13a4>
 800c684:	2300      	movs	r3, #0
 800c686:	9305      	str	r3, [sp, #20]
 800c688:	f407 6380 	and.w	r3, r7, #1024	; 0x400
 800c68c:	f50d 7b9c 	add.w	fp, sp, #312	; 0x138
 800c690:	9303      	str	r3, [sp, #12]
 800c692:	220a      	movs	r2, #10
 800c694:	2300      	movs	r3, #0
 800c696:	4630      	mov	r0, r6
 800c698:	4629      	mov	r1, r5
 800c69a:	f7f4 fafd 	bl	8000c98 <__aeabi_uldivmod>
 800c69e:	9b05      	ldr	r3, [sp, #20]
 800c6a0:	3301      	adds	r3, #1
 800c6a2:	9305      	str	r3, [sp, #20]
 800c6a4:	9b03      	ldr	r3, [sp, #12]
 800c6a6:	3230      	adds	r2, #48	; 0x30
 800c6a8:	f10b 39ff 	add.w	r9, fp, #4294967295
 800c6ac:	f80b 2c01 	strb.w	r2, [fp, #-1]
 800c6b0:	b1d3      	cbz	r3, 800c6e8 <_svfprintf_r+0xc10>
 800c6b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c6b4:	9a05      	ldr	r2, [sp, #20]
 800c6b6:	781b      	ldrb	r3, [r3, #0]
 800c6b8:	429a      	cmp	r2, r3
 800c6ba:	d115      	bne.n	800c6e8 <_svfprintf_r+0xc10>
 800c6bc:	2aff      	cmp	r2, #255	; 0xff
 800c6be:	d013      	beq.n	800c6e8 <_svfprintf_r+0xc10>
 800c6c0:	2e0a      	cmp	r6, #10
 800c6c2:	f175 0300 	sbcs.w	r3, r5, #0
 800c6c6:	d30f      	bcc.n	800c6e8 <_svfprintf_r+0xc10>
 800c6c8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800c6ca:	9914      	ldr	r1, [sp, #80]	; 0x50
 800c6cc:	eba9 0903 	sub.w	r9, r9, r3
 800c6d0:	461a      	mov	r2, r3
 800c6d2:	4648      	mov	r0, r9
 800c6d4:	f002 fcdc 	bl	800f090 <strncpy>
 800c6d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c6da:	785b      	ldrb	r3, [r3, #1]
 800c6dc:	b11b      	cbz	r3, 800c6e6 <_svfprintf_r+0xc0e>
 800c6de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c6e0:	3301      	adds	r3, #1
 800c6e2:	930a      	str	r3, [sp, #40]	; 0x28
 800c6e4:	2300      	movs	r3, #0
 800c6e6:	9305      	str	r3, [sp, #20]
 800c6e8:	2300      	movs	r3, #0
 800c6ea:	220a      	movs	r2, #10
 800c6ec:	4630      	mov	r0, r6
 800c6ee:	4629      	mov	r1, r5
 800c6f0:	f7f4 fad2 	bl	8000c98 <__aeabi_uldivmod>
 800c6f4:	2e0a      	cmp	r6, #10
 800c6f6:	f175 0300 	sbcs.w	r3, r5, #0
 800c6fa:	f0c0 83bf 	bcc.w	800ce7c <_svfprintf_r+0x13a4>
 800c6fe:	4606      	mov	r6, r0
 800c700:	460d      	mov	r5, r1
 800c702:	46cb      	mov	fp, r9
 800c704:	e7c5      	b.n	800c692 <_svfprintf_r+0xbba>
 800c706:	f006 030f 	and.w	r3, r6, #15
 800c70a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800c70c:	0936      	lsrs	r6, r6, #4
 800c70e:	5cd3      	ldrb	r3, [r2, r3]
 800c710:	f809 3d01 	strb.w	r3, [r9, #-1]!
 800c714:	ea46 7605 	orr.w	r6, r6, r5, lsl #28
 800c718:	092d      	lsrs	r5, r5, #4
 800c71a:	ea56 0305 	orrs.w	r3, r6, r5
 800c71e:	d1f2      	bne.n	800c706 <_svfprintf_r+0xc2e>
 800c720:	e3ac      	b.n	800ce7c <_svfprintf_r+0x13a4>
 800c722:	b933      	cbnz	r3, 800c732 <_svfprintf_r+0xc5a>
 800c724:	f01b 0f01 	tst.w	fp, #1
 800c728:	d003      	beq.n	800c732 <_svfprintf_r+0xc5a>
 800c72a:	2330      	movs	r3, #48	; 0x30
 800c72c:	f88d 3137 	strb.w	r3, [sp, #311]	; 0x137
 800c730:	e7a5      	b.n	800c67e <_svfprintf_r+0xba6>
 800c732:	f50d 799c 	add.w	r9, sp, #312	; 0x138
 800c736:	e3a1      	b.n	800ce7c <_svfprintf_r+0x13a4>
 800c738:	9b06      	ldr	r3, [sp, #24]
 800c73a:	2b00      	cmp	r3, #0
 800c73c:	f000 8370 	beq.w	800ce20 <_svfprintf_r+0x1348>
 800c740:	2000      	movs	r0, #0
 800c742:	f88d 30d4 	strb.w	r3, [sp, #212]	; 0xd4
 800c746:	f88d 006b 	strb.w	r0, [sp, #107]	; 0x6b
 800c74a:	9607      	str	r6, [sp, #28]
 800c74c:	f7ff bb29 	b.w	800bda2 <_svfprintf_r+0x2ca>
 800c750:	9e03      	ldr	r6, [sp, #12]
 800c752:	f7ff bb98 	b.w	800be86 <_svfprintf_r+0x3ae>
 800c756:	2010      	movs	r0, #16
 800c758:	4402      	add	r2, r0
 800c75a:	2b07      	cmp	r3, #7
 800c75c:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800c760:	6060      	str	r0, [r4, #4]
 800c762:	dd08      	ble.n	800c776 <_svfprintf_r+0xc9e>
 800c764:	aa22      	add	r2, sp, #136	; 0x88
 800c766:	4641      	mov	r1, r8
 800c768:	4650      	mov	r0, sl
 800c76a:	f002 fca4 	bl	800f0b6 <__ssprint_r>
 800c76e:	2800      	cmp	r0, #0
 800c770:	f040 8334 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c774:	a925      	add	r1, sp, #148	; 0x94
 800c776:	3f10      	subs	r7, #16
 800c778:	460c      	mov	r4, r1
 800c77a:	e4f4      	b.n	800c166 <_svfprintf_r+0x68e>
 800c77c:	460c      	mov	r4, r1
 800c77e:	e50d      	b.n	800c19c <_svfprintf_r+0x6c4>
 800c780:	aa22      	add	r2, sp, #136	; 0x88
 800c782:	4641      	mov	r1, r8
 800c784:	4650      	mov	r0, sl
 800c786:	f002 fc96 	bl	800f0b6 <__ssprint_r>
 800c78a:	2800      	cmp	r0, #0
 800c78c:	f040 8326 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c790:	ac25      	add	r4, sp, #148	; 0x94
 800c792:	e515      	b.n	800c1c0 <_svfprintf_r+0x6e8>
 800c794:	aa22      	add	r2, sp, #136	; 0x88
 800c796:	4641      	mov	r1, r8
 800c798:	4650      	mov	r0, sl
 800c79a:	f002 fc8c 	bl	800f0b6 <__ssprint_r>
 800c79e:	2800      	cmp	r0, #0
 800c7a0:	f040 831c 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c7a4:	ac25      	add	r4, sp, #148	; 0x94
 800c7a6:	e51b      	b.n	800c1e0 <_svfprintf_r+0x708>
 800c7a8:	2010      	movs	r0, #16
 800c7aa:	4402      	add	r2, r0
 800c7ac:	2b07      	cmp	r3, #7
 800c7ae:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800c7b2:	6060      	str	r0, [r4, #4]
 800c7b4:	dd08      	ble.n	800c7c8 <_svfprintf_r+0xcf0>
 800c7b6:	aa22      	add	r2, sp, #136	; 0x88
 800c7b8:	4641      	mov	r1, r8
 800c7ba:	4650      	mov	r0, sl
 800c7bc:	f002 fc7b 	bl	800f0b6 <__ssprint_r>
 800c7c0:	2800      	cmp	r0, #0
 800c7c2:	f040 830b 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c7c6:	a925      	add	r1, sp, #148	; 0x94
 800c7c8:	3f10      	subs	r7, #16
 800c7ca:	460c      	mov	r4, r1
 800c7cc:	e510      	b.n	800c1f0 <_svfprintf_r+0x718>
 800c7ce:	460c      	mov	r4, r1
 800c7d0:	e529      	b.n	800c226 <_svfprintf_r+0x74e>
 800c7d2:	2010      	movs	r0, #16
 800c7d4:	4402      	add	r2, r0
 800c7d6:	2b07      	cmp	r3, #7
 800c7d8:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800c7dc:	6060      	str	r0, [r4, #4]
 800c7de:	dd08      	ble.n	800c7f2 <_svfprintf_r+0xd1a>
 800c7e0:	aa22      	add	r2, sp, #136	; 0x88
 800c7e2:	4641      	mov	r1, r8
 800c7e4:	4650      	mov	r0, sl
 800c7e6:	f002 fc66 	bl	800f0b6 <__ssprint_r>
 800c7ea:	2800      	cmp	r0, #0
 800c7ec:	f040 82f6 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c7f0:	a925      	add	r1, sp, #148	; 0x94
 800c7f2:	3e10      	subs	r6, #16
 800c7f4:	460c      	mov	r4, r1
 800c7f6:	e529      	b.n	800c24c <_svfprintf_r+0x774>
 800c7f8:	460c      	mov	r4, r1
 800c7fa:	e541      	b.n	800c280 <_svfprintf_r+0x7a8>
 800c7fc:	08010cd8 	.word	0x08010cd8
 800c800:	08010ce9 	.word	0x08010ce9
 800c804:	9b06      	ldr	r3, [sp, #24]
 800c806:	2b65      	cmp	r3, #101	; 0x65
 800c808:	f340 8230 	ble.w	800cc6c <_svfprintf_r+0x1194>
 800c80c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800c810:	2200      	movs	r2, #0
 800c812:	2300      	movs	r3, #0
 800c814:	f7f4 f960 	bl	8000ad8 <__aeabi_dcmpeq>
 800c818:	2800      	cmp	r0, #0
 800c81a:	d068      	beq.n	800c8ee <_svfprintf_r+0xe16>
 800c81c:	4b6d      	ldr	r3, [pc, #436]	; (800c9d4 <_svfprintf_r+0xefc>)
 800c81e:	6023      	str	r3, [r4, #0]
 800c820:	2301      	movs	r3, #1
 800c822:	441e      	add	r6, r3
 800c824:	6063      	str	r3, [r4, #4]
 800c826:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800c828:	9624      	str	r6, [sp, #144]	; 0x90
 800c82a:	3301      	adds	r3, #1
 800c82c:	2b07      	cmp	r3, #7
 800c82e:	9323      	str	r3, [sp, #140]	; 0x8c
 800c830:	dc37      	bgt.n	800c8a2 <_svfprintf_r+0xdca>
 800c832:	3408      	adds	r4, #8
 800c834:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800c836:	9a05      	ldr	r2, [sp, #20]
 800c838:	4293      	cmp	r3, r2
 800c83a:	db03      	blt.n	800c844 <_svfprintf_r+0xd6c>
 800c83c:	f01b 0f01 	tst.w	fp, #1
 800c840:	f43f ad30 	beq.w	800c2a4 <_svfprintf_r+0x7cc>
 800c844:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800c846:	6023      	str	r3, [r4, #0]
 800c848:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c84a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800c84c:	6063      	str	r3, [r4, #4]
 800c84e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800c850:	4413      	add	r3, r2
 800c852:	9324      	str	r3, [sp, #144]	; 0x90
 800c854:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800c856:	3301      	adds	r3, #1
 800c858:	2b07      	cmp	r3, #7
 800c85a:	9323      	str	r3, [sp, #140]	; 0x8c
 800c85c:	dc2b      	bgt.n	800c8b6 <_svfprintf_r+0xdde>
 800c85e:	3408      	adds	r4, #8
 800c860:	9b05      	ldr	r3, [sp, #20]
 800c862:	1e5d      	subs	r5, r3, #1
 800c864:	2d00      	cmp	r5, #0
 800c866:	f77f ad1d 	ble.w	800c2a4 <_svfprintf_r+0x7cc>
 800c86a:	4e5b      	ldr	r6, [pc, #364]	; (800c9d8 <_svfprintf_r+0xf00>)
 800c86c:	2710      	movs	r7, #16
 800c86e:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 800c872:	2d10      	cmp	r5, #16
 800c874:	f103 0301 	add.w	r3, r3, #1
 800c878:	f104 0108 	add.w	r1, r4, #8
 800c87c:	6026      	str	r6, [r4, #0]
 800c87e:	dc24      	bgt.n	800c8ca <_svfprintf_r+0xdf2>
 800c880:	6065      	str	r5, [r4, #4]
 800c882:	2b07      	cmp	r3, #7
 800c884:	4415      	add	r5, r2
 800c886:	e9cd 3523 	strd	r3, r5, [sp, #140]	; 0x8c
 800c88a:	f340 8286 	ble.w	800cd9a <_svfprintf_r+0x12c2>
 800c88e:	aa22      	add	r2, sp, #136	; 0x88
 800c890:	4641      	mov	r1, r8
 800c892:	4650      	mov	r0, sl
 800c894:	f002 fc0f 	bl	800f0b6 <__ssprint_r>
 800c898:	2800      	cmp	r0, #0
 800c89a:	f040 829f 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c89e:	ac25      	add	r4, sp, #148	; 0x94
 800c8a0:	e500      	b.n	800c2a4 <_svfprintf_r+0x7cc>
 800c8a2:	aa22      	add	r2, sp, #136	; 0x88
 800c8a4:	4641      	mov	r1, r8
 800c8a6:	4650      	mov	r0, sl
 800c8a8:	f002 fc05 	bl	800f0b6 <__ssprint_r>
 800c8ac:	2800      	cmp	r0, #0
 800c8ae:	f040 8295 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c8b2:	ac25      	add	r4, sp, #148	; 0x94
 800c8b4:	e7be      	b.n	800c834 <_svfprintf_r+0xd5c>
 800c8b6:	aa22      	add	r2, sp, #136	; 0x88
 800c8b8:	4641      	mov	r1, r8
 800c8ba:	4650      	mov	r0, sl
 800c8bc:	f002 fbfb 	bl	800f0b6 <__ssprint_r>
 800c8c0:	2800      	cmp	r0, #0
 800c8c2:	f040 828b 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c8c6:	ac25      	add	r4, sp, #148	; 0x94
 800c8c8:	e7ca      	b.n	800c860 <_svfprintf_r+0xd88>
 800c8ca:	3210      	adds	r2, #16
 800c8cc:	2b07      	cmp	r3, #7
 800c8ce:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800c8d2:	6067      	str	r7, [r4, #4]
 800c8d4:	dd08      	ble.n	800c8e8 <_svfprintf_r+0xe10>
 800c8d6:	aa22      	add	r2, sp, #136	; 0x88
 800c8d8:	4641      	mov	r1, r8
 800c8da:	4650      	mov	r0, sl
 800c8dc:	f002 fbeb 	bl	800f0b6 <__ssprint_r>
 800c8e0:	2800      	cmp	r0, #0
 800c8e2:	f040 827b 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c8e6:	a925      	add	r1, sp, #148	; 0x94
 800c8e8:	3d10      	subs	r5, #16
 800c8ea:	460c      	mov	r4, r1
 800c8ec:	e7bf      	b.n	800c86e <_svfprintf_r+0xd96>
 800c8ee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800c8f0:	2b00      	cmp	r3, #0
 800c8f2:	dc73      	bgt.n	800c9dc <_svfprintf_r+0xf04>
 800c8f4:	4b37      	ldr	r3, [pc, #220]	; (800c9d4 <_svfprintf_r+0xefc>)
 800c8f6:	6023      	str	r3, [r4, #0]
 800c8f8:	2301      	movs	r3, #1
 800c8fa:	441e      	add	r6, r3
 800c8fc:	6063      	str	r3, [r4, #4]
 800c8fe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800c900:	9624      	str	r6, [sp, #144]	; 0x90
 800c902:	3301      	adds	r3, #1
 800c904:	2b07      	cmp	r3, #7
 800c906:	9323      	str	r3, [sp, #140]	; 0x8c
 800c908:	dc3d      	bgt.n	800c986 <_svfprintf_r+0xeae>
 800c90a:	3408      	adds	r4, #8
 800c90c:	9905      	ldr	r1, [sp, #20]
 800c90e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800c910:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800c912:	430a      	orrs	r2, r1
 800c914:	f00b 0101 	and.w	r1, fp, #1
 800c918:	430a      	orrs	r2, r1
 800c91a:	f43f acc3 	beq.w	800c2a4 <_svfprintf_r+0x7cc>
 800c91e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800c920:	6022      	str	r2, [r4, #0]
 800c922:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800c924:	6062      	str	r2, [r4, #4]
 800c926:	4413      	add	r3, r2
 800c928:	9324      	str	r3, [sp, #144]	; 0x90
 800c92a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800c92c:	3301      	adds	r3, #1
 800c92e:	2b07      	cmp	r3, #7
 800c930:	9323      	str	r3, [sp, #140]	; 0x8c
 800c932:	dc32      	bgt.n	800c99a <_svfprintf_r+0xec2>
 800c934:	3408      	adds	r4, #8
 800c936:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 800c938:	2d00      	cmp	r5, #0
 800c93a:	da1b      	bge.n	800c974 <_svfprintf_r+0xe9c>
 800c93c:	4e26      	ldr	r6, [pc, #152]	; (800c9d8 <_svfprintf_r+0xf00>)
 800c93e:	426d      	negs	r5, r5
 800c940:	4623      	mov	r3, r4
 800c942:	2710      	movs	r7, #16
 800c944:	e9dd 2123 	ldrd	r2, r1, [sp, #140]	; 0x8c
 800c948:	2d10      	cmp	r5, #16
 800c94a:	f102 0201 	add.w	r2, r2, #1
 800c94e:	f104 0408 	add.w	r4, r4, #8
 800c952:	601e      	str	r6, [r3, #0]
 800c954:	dc2b      	bgt.n	800c9ae <_svfprintf_r+0xed6>
 800c956:	605d      	str	r5, [r3, #4]
 800c958:	2a07      	cmp	r2, #7
 800c95a:	440d      	add	r5, r1
 800c95c:	e9cd 2523 	strd	r2, r5, [sp, #140]	; 0x8c
 800c960:	dd08      	ble.n	800c974 <_svfprintf_r+0xe9c>
 800c962:	aa22      	add	r2, sp, #136	; 0x88
 800c964:	4641      	mov	r1, r8
 800c966:	4650      	mov	r0, sl
 800c968:	f002 fba5 	bl	800f0b6 <__ssprint_r>
 800c96c:	2800      	cmp	r0, #0
 800c96e:	f040 8235 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c972:	ac25      	add	r4, sp, #148	; 0x94
 800c974:	9b05      	ldr	r3, [sp, #20]
 800c976:	9a05      	ldr	r2, [sp, #20]
 800c978:	6063      	str	r3, [r4, #4]
 800c97a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800c97c:	f8c4 9000 	str.w	r9, [r4]
 800c980:	4413      	add	r3, r2
 800c982:	9324      	str	r3, [sp, #144]	; 0x90
 800c984:	e487      	b.n	800c296 <_svfprintf_r+0x7be>
 800c986:	aa22      	add	r2, sp, #136	; 0x88
 800c988:	4641      	mov	r1, r8
 800c98a:	4650      	mov	r0, sl
 800c98c:	f002 fb93 	bl	800f0b6 <__ssprint_r>
 800c990:	2800      	cmp	r0, #0
 800c992:	f040 8223 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c996:	ac25      	add	r4, sp, #148	; 0x94
 800c998:	e7b8      	b.n	800c90c <_svfprintf_r+0xe34>
 800c99a:	aa22      	add	r2, sp, #136	; 0x88
 800c99c:	4641      	mov	r1, r8
 800c99e:	4650      	mov	r0, sl
 800c9a0:	f002 fb89 	bl	800f0b6 <__ssprint_r>
 800c9a4:	2800      	cmp	r0, #0
 800c9a6:	f040 8219 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c9aa:	ac25      	add	r4, sp, #148	; 0x94
 800c9ac:	e7c3      	b.n	800c936 <_svfprintf_r+0xe5e>
 800c9ae:	3110      	adds	r1, #16
 800c9b0:	2a07      	cmp	r2, #7
 800c9b2:	e9cd 2123 	strd	r2, r1, [sp, #140]	; 0x8c
 800c9b6:	605f      	str	r7, [r3, #4]
 800c9b8:	dd08      	ble.n	800c9cc <_svfprintf_r+0xef4>
 800c9ba:	aa22      	add	r2, sp, #136	; 0x88
 800c9bc:	4641      	mov	r1, r8
 800c9be:	4650      	mov	r0, sl
 800c9c0:	f002 fb79 	bl	800f0b6 <__ssprint_r>
 800c9c4:	2800      	cmp	r0, #0
 800c9c6:	f040 8209 	bne.w	800cddc <_svfprintf_r+0x1304>
 800c9ca:	ac25      	add	r4, sp, #148	; 0x94
 800c9cc:	3d10      	subs	r5, #16
 800c9ce:	4623      	mov	r3, r4
 800c9d0:	e7b8      	b.n	800c944 <_svfprintf_r+0xe6c>
 800c9d2:	bf00      	nop
 800c9d4:	08010cfa 	.word	0x08010cfa
 800c9d8:	08010d0c 	.word	0x08010d0c
 800c9dc:	9f05      	ldr	r7, [sp, #20]
 800c9de:	42af      	cmp	r7, r5
 800c9e0:	bfa8      	it	ge
 800c9e2:	462f      	movge	r7, r5
 800c9e4:	2f00      	cmp	r7, #0
 800c9e6:	dd0a      	ble.n	800c9fe <_svfprintf_r+0xf26>
 800c9e8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800c9ea:	3301      	adds	r3, #1
 800c9ec:	443e      	add	r6, r7
 800c9ee:	2b07      	cmp	r3, #7
 800c9f0:	e9c4 9700 	strd	r9, r7, [r4]
 800c9f4:	9624      	str	r6, [sp, #144]	; 0x90
 800c9f6:	9323      	str	r3, [sp, #140]	; 0x8c
 800c9f8:	f300 8085 	bgt.w	800cb06 <_svfprintf_r+0x102e>
 800c9fc:	3408      	adds	r4, #8
 800c9fe:	2f00      	cmp	r7, #0
 800ca00:	bfac      	ite	ge
 800ca02:	1bee      	subge	r6, r5, r7
 800ca04:	462e      	movlt	r6, r5
 800ca06:	2e00      	cmp	r6, #0
 800ca08:	dd19      	ble.n	800ca3e <_svfprintf_r+0xf66>
 800ca0a:	4f97      	ldr	r7, [pc, #604]	; (800cc68 <_svfprintf_r+0x1190>)
 800ca0c:	6027      	str	r7, [r4, #0]
 800ca0e:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 800ca12:	2e10      	cmp	r6, #16
 800ca14:	f103 0301 	add.w	r3, r3, #1
 800ca18:	f104 0108 	add.w	r1, r4, #8
 800ca1c:	dc7d      	bgt.n	800cb1a <_svfprintf_r+0x1042>
 800ca1e:	6066      	str	r6, [r4, #4]
 800ca20:	2b07      	cmp	r3, #7
 800ca22:	4416      	add	r6, r2
 800ca24:	e9cd 3623 	strd	r3, r6, [sp, #140]	; 0x8c
 800ca28:	f340 808a 	ble.w	800cb40 <_svfprintf_r+0x1068>
 800ca2c:	aa22      	add	r2, sp, #136	; 0x88
 800ca2e:	4641      	mov	r1, r8
 800ca30:	4650      	mov	r0, sl
 800ca32:	f002 fb40 	bl	800f0b6 <__ssprint_r>
 800ca36:	2800      	cmp	r0, #0
 800ca38:	f040 81d0 	bne.w	800cddc <_svfprintf_r+0x1304>
 800ca3c:	ac25      	add	r4, sp, #148	; 0x94
 800ca3e:	f41b 6f80 	tst.w	fp, #1024	; 0x400
 800ca42:	444d      	add	r5, r9
 800ca44:	d00a      	beq.n	800ca5c <_svfprintf_r+0xf84>
 800ca46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ca48:	2b00      	cmp	r3, #0
 800ca4a:	d17b      	bne.n	800cb44 <_svfprintf_r+0x106c>
 800ca4c:	9b08      	ldr	r3, [sp, #32]
 800ca4e:	2b00      	cmp	r3, #0
 800ca50:	d17b      	bne.n	800cb4a <_svfprintf_r+0x1072>
 800ca52:	9b05      	ldr	r3, [sp, #20]
 800ca54:	444b      	add	r3, r9
 800ca56:	429d      	cmp	r5, r3
 800ca58:	bf28      	it	cs
 800ca5a:	461d      	movcs	r5, r3
 800ca5c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800ca5e:	9a05      	ldr	r2, [sp, #20]
 800ca60:	4293      	cmp	r3, r2
 800ca62:	db02      	blt.n	800ca6a <_svfprintf_r+0xf92>
 800ca64:	f01b 0f01 	tst.w	fp, #1
 800ca68:	d00e      	beq.n	800ca88 <_svfprintf_r+0xfb0>
 800ca6a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ca6c:	6023      	str	r3, [r4, #0]
 800ca6e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ca70:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800ca72:	6063      	str	r3, [r4, #4]
 800ca74:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800ca76:	4413      	add	r3, r2
 800ca78:	9324      	str	r3, [sp, #144]	; 0x90
 800ca7a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800ca7c:	3301      	adds	r3, #1
 800ca7e:	2b07      	cmp	r3, #7
 800ca80:	9323      	str	r3, [sp, #140]	; 0x8c
 800ca82:	f300 80dd 	bgt.w	800cc40 <_svfprintf_r+0x1168>
 800ca86:	3408      	adds	r4, #8
 800ca88:	9b05      	ldr	r3, [sp, #20]
 800ca8a:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 800ca8c:	eb09 0203 	add.w	r2, r9, r3
 800ca90:	1b9e      	subs	r6, r3, r6
 800ca92:	1b52      	subs	r2, r2, r5
 800ca94:	4296      	cmp	r6, r2
 800ca96:	bfa8      	it	ge
 800ca98:	4616      	movge	r6, r2
 800ca9a:	2e00      	cmp	r6, #0
 800ca9c:	dd0b      	ble.n	800cab6 <_svfprintf_r+0xfde>
 800ca9e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800caa0:	4433      	add	r3, r6
 800caa2:	9324      	str	r3, [sp, #144]	; 0x90
 800caa4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800caa6:	3301      	adds	r3, #1
 800caa8:	2b07      	cmp	r3, #7
 800caaa:	e9c4 5600 	strd	r5, r6, [r4]
 800caae:	9323      	str	r3, [sp, #140]	; 0x8c
 800cab0:	f300 80d0 	bgt.w	800cc54 <_svfprintf_r+0x117c>
 800cab4:	3408      	adds	r4, #8
 800cab6:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 800cab8:	9b05      	ldr	r3, [sp, #20]
 800caba:	2e00      	cmp	r6, #0
 800cabc:	eba3 0505 	sub.w	r5, r3, r5
 800cac0:	bfa8      	it	ge
 800cac2:	1bad      	subge	r5, r5, r6
 800cac4:	2d00      	cmp	r5, #0
 800cac6:	f77f abed 	ble.w	800c2a4 <_svfprintf_r+0x7cc>
 800caca:	4e67      	ldr	r6, [pc, #412]	; (800cc68 <_svfprintf_r+0x1190>)
 800cacc:	2710      	movs	r7, #16
 800cace:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 800cad2:	2d10      	cmp	r5, #16
 800cad4:	f103 0301 	add.w	r3, r3, #1
 800cad8:	f104 0108 	add.w	r1, r4, #8
 800cadc:	6026      	str	r6, [r4, #0]
 800cade:	f77f aecf 	ble.w	800c880 <_svfprintf_r+0xda8>
 800cae2:	3210      	adds	r2, #16
 800cae4:	2b07      	cmp	r3, #7
 800cae6:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800caea:	6067      	str	r7, [r4, #4]
 800caec:	dd08      	ble.n	800cb00 <_svfprintf_r+0x1028>
 800caee:	aa22      	add	r2, sp, #136	; 0x88
 800caf0:	4641      	mov	r1, r8
 800caf2:	4650      	mov	r0, sl
 800caf4:	f002 fadf 	bl	800f0b6 <__ssprint_r>
 800caf8:	2800      	cmp	r0, #0
 800cafa:	f040 816f 	bne.w	800cddc <_svfprintf_r+0x1304>
 800cafe:	a925      	add	r1, sp, #148	; 0x94
 800cb00:	3d10      	subs	r5, #16
 800cb02:	460c      	mov	r4, r1
 800cb04:	e7e3      	b.n	800cace <_svfprintf_r+0xff6>
 800cb06:	aa22      	add	r2, sp, #136	; 0x88
 800cb08:	4641      	mov	r1, r8
 800cb0a:	4650      	mov	r0, sl
 800cb0c:	f002 fad3 	bl	800f0b6 <__ssprint_r>
 800cb10:	2800      	cmp	r0, #0
 800cb12:	f040 8163 	bne.w	800cddc <_svfprintf_r+0x1304>
 800cb16:	ac25      	add	r4, sp, #148	; 0x94
 800cb18:	e771      	b.n	800c9fe <_svfprintf_r+0xf26>
 800cb1a:	2010      	movs	r0, #16
 800cb1c:	4402      	add	r2, r0
 800cb1e:	2b07      	cmp	r3, #7
 800cb20:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800cb24:	6060      	str	r0, [r4, #4]
 800cb26:	dd08      	ble.n	800cb3a <_svfprintf_r+0x1062>
 800cb28:	aa22      	add	r2, sp, #136	; 0x88
 800cb2a:	4641      	mov	r1, r8
 800cb2c:	4650      	mov	r0, sl
 800cb2e:	f002 fac2 	bl	800f0b6 <__ssprint_r>
 800cb32:	2800      	cmp	r0, #0
 800cb34:	f040 8152 	bne.w	800cddc <_svfprintf_r+0x1304>
 800cb38:	a925      	add	r1, sp, #148	; 0x94
 800cb3a:	3e10      	subs	r6, #16
 800cb3c:	460c      	mov	r4, r1
 800cb3e:	e765      	b.n	800ca0c <_svfprintf_r+0xf34>
 800cb40:	460c      	mov	r4, r1
 800cb42:	e77c      	b.n	800ca3e <_svfprintf_r+0xf66>
 800cb44:	9b08      	ldr	r3, [sp, #32]
 800cb46:	2b00      	cmp	r3, #0
 800cb48:	d04a      	beq.n	800cbe0 <_svfprintf_r+0x1108>
 800cb4a:	9b08      	ldr	r3, [sp, #32]
 800cb4c:	3b01      	subs	r3, #1
 800cb4e:	9308      	str	r3, [sp, #32]
 800cb50:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800cb52:	6023      	str	r3, [r4, #0]
 800cb54:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800cb56:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800cb58:	6063      	str	r3, [r4, #4]
 800cb5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800cb5c:	4413      	add	r3, r2
 800cb5e:	9324      	str	r3, [sp, #144]	; 0x90
 800cb60:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800cb62:	3301      	adds	r3, #1
 800cb64:	2b07      	cmp	r3, #7
 800cb66:	9323      	str	r3, [sp, #140]	; 0x8c
 800cb68:	dc41      	bgt.n	800cbee <_svfprintf_r+0x1116>
 800cb6a:	3408      	adds	r4, #8
 800cb6c:	9b05      	ldr	r3, [sp, #20]
 800cb6e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cb70:	eb09 0703 	add.w	r7, r9, r3
 800cb74:	1b7b      	subs	r3, r7, r5
 800cb76:	7817      	ldrb	r7, [r2, #0]
 800cb78:	429f      	cmp	r7, r3
 800cb7a:	bfa8      	it	ge
 800cb7c:	461f      	movge	r7, r3
 800cb7e:	2f00      	cmp	r7, #0
 800cb80:	dd0a      	ble.n	800cb98 <_svfprintf_r+0x10c0>
 800cb82:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800cb84:	443b      	add	r3, r7
 800cb86:	9324      	str	r3, [sp, #144]	; 0x90
 800cb88:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800cb8a:	3301      	adds	r3, #1
 800cb8c:	2b07      	cmp	r3, #7
 800cb8e:	e9c4 5700 	strd	r5, r7, [r4]
 800cb92:	9323      	str	r3, [sp, #140]	; 0x8c
 800cb94:	dc35      	bgt.n	800cc02 <_svfprintf_r+0x112a>
 800cb96:	3408      	adds	r4, #8
 800cb98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cb9a:	781e      	ldrb	r6, [r3, #0]
 800cb9c:	2f00      	cmp	r7, #0
 800cb9e:	bfa8      	it	ge
 800cba0:	1bf6      	subge	r6, r6, r7
 800cba2:	2e00      	cmp	r6, #0
 800cba4:	dd18      	ble.n	800cbd8 <_svfprintf_r+0x1100>
 800cba6:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 800cbaa:	482f      	ldr	r0, [pc, #188]	; (800cc68 <_svfprintf_r+0x1190>)
 800cbac:	6020      	str	r0, [r4, #0]
 800cbae:	2e10      	cmp	r6, #16
 800cbb0:	f103 0301 	add.w	r3, r3, #1
 800cbb4:	f104 0108 	add.w	r1, r4, #8
 800cbb8:	dc2d      	bgt.n	800cc16 <_svfprintf_r+0x113e>
 800cbba:	4432      	add	r2, r6
 800cbbc:	2b07      	cmp	r3, #7
 800cbbe:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800cbc2:	6066      	str	r6, [r4, #4]
 800cbc4:	dd3a      	ble.n	800cc3c <_svfprintf_r+0x1164>
 800cbc6:	aa22      	add	r2, sp, #136	; 0x88
 800cbc8:	4641      	mov	r1, r8
 800cbca:	4650      	mov	r0, sl
 800cbcc:	f002 fa73 	bl	800f0b6 <__ssprint_r>
 800cbd0:	2800      	cmp	r0, #0
 800cbd2:	f040 8103 	bne.w	800cddc <_svfprintf_r+0x1304>
 800cbd6:	ac25      	add	r4, sp, #148	; 0x94
 800cbd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cbda:	781b      	ldrb	r3, [r3, #0]
 800cbdc:	441d      	add	r5, r3
 800cbde:	e732      	b.n	800ca46 <_svfprintf_r+0xf6e>
 800cbe0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cbe2:	3b01      	subs	r3, #1
 800cbe4:	930a      	str	r3, [sp, #40]	; 0x28
 800cbe6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cbe8:	3b01      	subs	r3, #1
 800cbea:	9309      	str	r3, [sp, #36]	; 0x24
 800cbec:	e7b0      	b.n	800cb50 <_svfprintf_r+0x1078>
 800cbee:	aa22      	add	r2, sp, #136	; 0x88
 800cbf0:	4641      	mov	r1, r8
 800cbf2:	4650      	mov	r0, sl
 800cbf4:	f002 fa5f 	bl	800f0b6 <__ssprint_r>
 800cbf8:	2800      	cmp	r0, #0
 800cbfa:	f040 80ef 	bne.w	800cddc <_svfprintf_r+0x1304>
 800cbfe:	ac25      	add	r4, sp, #148	; 0x94
 800cc00:	e7b4      	b.n	800cb6c <_svfprintf_r+0x1094>
 800cc02:	aa22      	add	r2, sp, #136	; 0x88
 800cc04:	4641      	mov	r1, r8
 800cc06:	4650      	mov	r0, sl
 800cc08:	f002 fa55 	bl	800f0b6 <__ssprint_r>
 800cc0c:	2800      	cmp	r0, #0
 800cc0e:	f040 80e5 	bne.w	800cddc <_svfprintf_r+0x1304>
 800cc12:	ac25      	add	r4, sp, #148	; 0x94
 800cc14:	e7c0      	b.n	800cb98 <_svfprintf_r+0x10c0>
 800cc16:	2010      	movs	r0, #16
 800cc18:	4402      	add	r2, r0
 800cc1a:	2b07      	cmp	r3, #7
 800cc1c:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800cc20:	6060      	str	r0, [r4, #4]
 800cc22:	dd08      	ble.n	800cc36 <_svfprintf_r+0x115e>
 800cc24:	aa22      	add	r2, sp, #136	; 0x88
 800cc26:	4641      	mov	r1, r8
 800cc28:	4650      	mov	r0, sl
 800cc2a:	f002 fa44 	bl	800f0b6 <__ssprint_r>
 800cc2e:	2800      	cmp	r0, #0
 800cc30:	f040 80d4 	bne.w	800cddc <_svfprintf_r+0x1304>
 800cc34:	a925      	add	r1, sp, #148	; 0x94
 800cc36:	3e10      	subs	r6, #16
 800cc38:	460c      	mov	r4, r1
 800cc3a:	e7b4      	b.n	800cba6 <_svfprintf_r+0x10ce>
 800cc3c:	460c      	mov	r4, r1
 800cc3e:	e7cb      	b.n	800cbd8 <_svfprintf_r+0x1100>
 800cc40:	aa22      	add	r2, sp, #136	; 0x88
 800cc42:	4641      	mov	r1, r8
 800cc44:	4650      	mov	r0, sl
 800cc46:	f002 fa36 	bl	800f0b6 <__ssprint_r>
 800cc4a:	2800      	cmp	r0, #0
 800cc4c:	f040 80c6 	bne.w	800cddc <_svfprintf_r+0x1304>
 800cc50:	ac25      	add	r4, sp, #148	; 0x94
 800cc52:	e719      	b.n	800ca88 <_svfprintf_r+0xfb0>
 800cc54:	aa22      	add	r2, sp, #136	; 0x88
 800cc56:	4641      	mov	r1, r8
 800cc58:	4650      	mov	r0, sl
 800cc5a:	f002 fa2c 	bl	800f0b6 <__ssprint_r>
 800cc5e:	2800      	cmp	r0, #0
 800cc60:	f040 80bc 	bne.w	800cddc <_svfprintf_r+0x1304>
 800cc64:	ac25      	add	r4, sp, #148	; 0x94
 800cc66:	e726      	b.n	800cab6 <_svfprintf_r+0xfde>
 800cc68:	08010d0c 	.word	0x08010d0c
 800cc6c:	9a05      	ldr	r2, [sp, #20]
 800cc6e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800cc70:	2a01      	cmp	r2, #1
 800cc72:	f106 0601 	add.w	r6, r6, #1
 800cc76:	f103 0301 	add.w	r3, r3, #1
 800cc7a:	f104 0508 	add.w	r5, r4, #8
 800cc7e:	dc02      	bgt.n	800cc86 <_svfprintf_r+0x11ae>
 800cc80:	f01b 0f01 	tst.w	fp, #1
 800cc84:	d07e      	beq.n	800cd84 <_svfprintf_r+0x12ac>
 800cc86:	2201      	movs	r2, #1
 800cc88:	2b07      	cmp	r3, #7
 800cc8a:	e9cd 3623 	strd	r3, r6, [sp, #140]	; 0x8c
 800cc8e:	f8c4 9000 	str.w	r9, [r4]
 800cc92:	6062      	str	r2, [r4, #4]
 800cc94:	dd08      	ble.n	800cca8 <_svfprintf_r+0x11d0>
 800cc96:	aa22      	add	r2, sp, #136	; 0x88
 800cc98:	4641      	mov	r1, r8
 800cc9a:	4650      	mov	r0, sl
 800cc9c:	f002 fa0b 	bl	800f0b6 <__ssprint_r>
 800cca0:	2800      	cmp	r0, #0
 800cca2:	f040 809b 	bne.w	800cddc <_svfprintf_r+0x1304>
 800cca6:	ad25      	add	r5, sp, #148	; 0x94
 800cca8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ccaa:	602b      	str	r3, [r5, #0]
 800ccac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ccae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800ccb0:	606b      	str	r3, [r5, #4]
 800ccb2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800ccb4:	4413      	add	r3, r2
 800ccb6:	9324      	str	r3, [sp, #144]	; 0x90
 800ccb8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800ccba:	3301      	adds	r3, #1
 800ccbc:	2b07      	cmp	r3, #7
 800ccbe:	9323      	str	r3, [sp, #140]	; 0x8c
 800ccc0:	dc32      	bgt.n	800cd28 <_svfprintf_r+0x1250>
 800ccc2:	3508      	adds	r5, #8
 800ccc4:	9b05      	ldr	r3, [sp, #20]
 800ccc6:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800ccca:	1e5c      	subs	r4, r3, #1
 800cccc:	2200      	movs	r2, #0
 800ccce:	2300      	movs	r3, #0
 800ccd0:	f7f3 ff02 	bl	8000ad8 <__aeabi_dcmpeq>
 800ccd4:	2800      	cmp	r0, #0
 800ccd6:	d130      	bne.n	800cd3a <_svfprintf_r+0x1262>
 800ccd8:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800ccda:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800ccdc:	9a05      	ldr	r2, [sp, #20]
 800ccde:	3101      	adds	r1, #1
 800cce0:	3b01      	subs	r3, #1
 800cce2:	f109 0001 	add.w	r0, r9, #1
 800cce6:	4413      	add	r3, r2
 800cce8:	2907      	cmp	r1, #7
 800ccea:	e9c5 0400 	strd	r0, r4, [r5]
 800ccee:	e9cd 1323 	strd	r1, r3, [sp, #140]	; 0x8c
 800ccf2:	dd50      	ble.n	800cd96 <_svfprintf_r+0x12be>
 800ccf4:	aa22      	add	r2, sp, #136	; 0x88
 800ccf6:	4641      	mov	r1, r8
 800ccf8:	4650      	mov	r0, sl
 800ccfa:	f002 f9dc 	bl	800f0b6 <__ssprint_r>
 800ccfe:	2800      	cmp	r0, #0
 800cd00:	d16c      	bne.n	800cddc <_svfprintf_r+0x1304>
 800cd02:	ad25      	add	r5, sp, #148	; 0x94
 800cd04:	ab1e      	add	r3, sp, #120	; 0x78
 800cd06:	602b      	str	r3, [r5, #0]
 800cd08:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800cd0a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800cd0c:	606b      	str	r3, [r5, #4]
 800cd0e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800cd10:	4413      	add	r3, r2
 800cd12:	9324      	str	r3, [sp, #144]	; 0x90
 800cd14:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800cd16:	3301      	adds	r3, #1
 800cd18:	2b07      	cmp	r3, #7
 800cd1a:	9323      	str	r3, [sp, #140]	; 0x8c
 800cd1c:	f73f adb7 	bgt.w	800c88e <_svfprintf_r+0xdb6>
 800cd20:	f105 0408 	add.w	r4, r5, #8
 800cd24:	f7ff babe 	b.w	800c2a4 <_svfprintf_r+0x7cc>
 800cd28:	aa22      	add	r2, sp, #136	; 0x88
 800cd2a:	4641      	mov	r1, r8
 800cd2c:	4650      	mov	r0, sl
 800cd2e:	f002 f9c2 	bl	800f0b6 <__ssprint_r>
 800cd32:	2800      	cmp	r0, #0
 800cd34:	d152      	bne.n	800cddc <_svfprintf_r+0x1304>
 800cd36:	ad25      	add	r5, sp, #148	; 0x94
 800cd38:	e7c4      	b.n	800ccc4 <_svfprintf_r+0x11ec>
 800cd3a:	2c00      	cmp	r4, #0
 800cd3c:	dde2      	ble.n	800cd04 <_svfprintf_r+0x122c>
 800cd3e:	4e56      	ldr	r6, [pc, #344]	; (800ce98 <_svfprintf_r+0x13c0>)
 800cd40:	2710      	movs	r7, #16
 800cd42:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 800cd46:	2c10      	cmp	r4, #16
 800cd48:	f103 0301 	add.w	r3, r3, #1
 800cd4c:	f105 0108 	add.w	r1, r5, #8
 800cd50:	602e      	str	r6, [r5, #0]
 800cd52:	dc07      	bgt.n	800cd64 <_svfprintf_r+0x128c>
 800cd54:	606c      	str	r4, [r5, #4]
 800cd56:	2b07      	cmp	r3, #7
 800cd58:	4414      	add	r4, r2
 800cd5a:	e9cd 3423 	strd	r3, r4, [sp, #140]	; 0x8c
 800cd5e:	dcc9      	bgt.n	800ccf4 <_svfprintf_r+0x121c>
 800cd60:	460d      	mov	r5, r1
 800cd62:	e7cf      	b.n	800cd04 <_svfprintf_r+0x122c>
 800cd64:	3210      	adds	r2, #16
 800cd66:	2b07      	cmp	r3, #7
 800cd68:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800cd6c:	606f      	str	r7, [r5, #4]
 800cd6e:	dd06      	ble.n	800cd7e <_svfprintf_r+0x12a6>
 800cd70:	aa22      	add	r2, sp, #136	; 0x88
 800cd72:	4641      	mov	r1, r8
 800cd74:	4650      	mov	r0, sl
 800cd76:	f002 f99e 	bl	800f0b6 <__ssprint_r>
 800cd7a:	bb78      	cbnz	r0, 800cddc <_svfprintf_r+0x1304>
 800cd7c:	a925      	add	r1, sp, #148	; 0x94
 800cd7e:	3c10      	subs	r4, #16
 800cd80:	460d      	mov	r5, r1
 800cd82:	e7de      	b.n	800cd42 <_svfprintf_r+0x126a>
 800cd84:	2201      	movs	r2, #1
 800cd86:	2b07      	cmp	r3, #7
 800cd88:	e9cd 3623 	strd	r3, r6, [sp, #140]	; 0x8c
 800cd8c:	f8c4 9000 	str.w	r9, [r4]
 800cd90:	6062      	str	r2, [r4, #4]
 800cd92:	ddb7      	ble.n	800cd04 <_svfprintf_r+0x122c>
 800cd94:	e7ae      	b.n	800ccf4 <_svfprintf_r+0x121c>
 800cd96:	3508      	adds	r5, #8
 800cd98:	e7b4      	b.n	800cd04 <_svfprintf_r+0x122c>
 800cd9a:	460c      	mov	r4, r1
 800cd9c:	f7ff ba82 	b.w	800c2a4 <_svfprintf_r+0x7cc>
 800cda0:	e9dd 3210 	ldrd	r3, r2, [sp, #64]	; 0x40
 800cda4:	1a9d      	subs	r5, r3, r2
 800cda6:	2d00      	cmp	r5, #0
 800cda8:	f77f aa80 	ble.w	800c2ac <_svfprintf_r+0x7d4>
 800cdac:	4e3b      	ldr	r6, [pc, #236]	; (800ce9c <_svfprintf_r+0x13c4>)
 800cdae:	2710      	movs	r7, #16
 800cdb0:	e9dd 3223 	ldrd	r3, r2, [sp, #140]	; 0x8c
 800cdb4:	2d10      	cmp	r5, #16
 800cdb6:	f103 0301 	add.w	r3, r3, #1
 800cdba:	6026      	str	r6, [r4, #0]
 800cdbc:	dc18      	bgt.n	800cdf0 <_svfprintf_r+0x1318>
 800cdbe:	6065      	str	r5, [r4, #4]
 800cdc0:	2b07      	cmp	r3, #7
 800cdc2:	4415      	add	r5, r2
 800cdc4:	e9cd 3523 	strd	r3, r5, [sp, #140]	; 0x8c
 800cdc8:	f77f aa70 	ble.w	800c2ac <_svfprintf_r+0x7d4>
 800cdcc:	aa22      	add	r2, sp, #136	; 0x88
 800cdce:	4641      	mov	r1, r8
 800cdd0:	4650      	mov	r0, sl
 800cdd2:	f002 f970 	bl	800f0b6 <__ssprint_r>
 800cdd6:	2800      	cmp	r0, #0
 800cdd8:	f43f aa68 	beq.w	800c2ac <_svfprintf_r+0x7d4>
 800cddc:	9b03      	ldr	r3, [sp, #12]
 800cdde:	2b00      	cmp	r3, #0
 800cde0:	f43f a887 	beq.w	800bef2 <_svfprintf_r+0x41a>
 800cde4:	4619      	mov	r1, r3
 800cde6:	4650      	mov	r0, sl
 800cde8:	f7fd f9d8 	bl	800a19c <_free_r>
 800cdec:	f7ff b881 	b.w	800bef2 <_svfprintf_r+0x41a>
 800cdf0:	3210      	adds	r2, #16
 800cdf2:	2b07      	cmp	r3, #7
 800cdf4:	e9cd 3223 	strd	r3, r2, [sp, #140]	; 0x8c
 800cdf8:	6067      	str	r7, [r4, #4]
 800cdfa:	dc02      	bgt.n	800ce02 <_svfprintf_r+0x132a>
 800cdfc:	3408      	adds	r4, #8
 800cdfe:	3d10      	subs	r5, #16
 800ce00:	e7d6      	b.n	800cdb0 <_svfprintf_r+0x12d8>
 800ce02:	aa22      	add	r2, sp, #136	; 0x88
 800ce04:	4641      	mov	r1, r8
 800ce06:	4650      	mov	r0, sl
 800ce08:	f002 f955 	bl	800f0b6 <__ssprint_r>
 800ce0c:	2800      	cmp	r0, #0
 800ce0e:	d1e5      	bne.n	800cddc <_svfprintf_r+0x1304>
 800ce10:	ac25      	add	r4, sp, #148	; 0x94
 800ce12:	e7f4      	b.n	800cdfe <_svfprintf_r+0x1326>
 800ce14:	9903      	ldr	r1, [sp, #12]
 800ce16:	4650      	mov	r0, sl
 800ce18:	f7fd f9c0 	bl	800a19c <_free_r>
 800ce1c:	f7ff ba5e 	b.w	800c2dc <_svfprintf_r+0x804>
 800ce20:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800ce22:	2b00      	cmp	r3, #0
 800ce24:	f43f a865 	beq.w	800bef2 <_svfprintf_r+0x41a>
 800ce28:	aa22      	add	r2, sp, #136	; 0x88
 800ce2a:	4641      	mov	r1, r8
 800ce2c:	4650      	mov	r0, sl
 800ce2e:	f002 f942 	bl	800f0b6 <__ssprint_r>
 800ce32:	f7ff b85e 	b.w	800bef2 <_svfprintf_r+0x41a>
 800ce36:	ea56 0205 	orrs.w	r2, r6, r5
 800ce3a:	465f      	mov	r7, fp
 800ce3c:	f43f ab78 	beq.w	800c530 <_svfprintf_r+0xa58>
 800ce40:	2b01      	cmp	r3, #1
 800ce42:	f43f ac15 	beq.w	800c670 <_svfprintf_r+0xb98>
 800ce46:	2b02      	cmp	r3, #2
 800ce48:	f50d 799c 	add.w	r9, sp, #312	; 0x138
 800ce4c:	f43f ac5b 	beq.w	800c706 <_svfprintf_r+0xc2e>
 800ce50:	f006 0307 	and.w	r3, r6, #7
 800ce54:	08f6      	lsrs	r6, r6, #3
 800ce56:	ea46 7645 	orr.w	r6, r6, r5, lsl #29
 800ce5a:	08ed      	lsrs	r5, r5, #3
 800ce5c:	3330      	adds	r3, #48	; 0x30
 800ce5e:	ea56 0105 	orrs.w	r1, r6, r5
 800ce62:	464a      	mov	r2, r9
 800ce64:	f809 3d01 	strb.w	r3, [r9, #-1]!
 800ce68:	d1f2      	bne.n	800ce50 <_svfprintf_r+0x1378>
 800ce6a:	07f9      	lsls	r1, r7, #31
 800ce6c:	d506      	bpl.n	800ce7c <_svfprintf_r+0x13a4>
 800ce6e:	2b30      	cmp	r3, #48	; 0x30
 800ce70:	d004      	beq.n	800ce7c <_svfprintf_r+0x13a4>
 800ce72:	2330      	movs	r3, #48	; 0x30
 800ce74:	f809 3c01 	strb.w	r3, [r9, #-1]
 800ce78:	f1a2 0902 	sub.w	r9, r2, #2
 800ce7c:	ab4e      	add	r3, sp, #312	; 0x138
 800ce7e:	eba3 0309 	sub.w	r3, r3, r9
 800ce82:	9e04      	ldr	r6, [sp, #16]
 800ce84:	9304      	str	r3, [sp, #16]
 800ce86:	2300      	movs	r3, #0
 800ce88:	46bb      	mov	fp, r7
 800ce8a:	9303      	str	r3, [sp, #12]
 800ce8c:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800ce90:	461d      	mov	r5, r3
 800ce92:	f7ff b94d 	b.w	800c130 <_svfprintf_r+0x658>
 800ce96:	bf00      	nop
 800ce98:	08010d0c 	.word	0x08010d0c
 800ce9c:	08010cfc 	.word	0x08010cfc

0800cea0 <sysconf>:
 800cea0:	2808      	cmp	r0, #8
 800cea2:	b508      	push	{r3, lr}
 800cea4:	d006      	beq.n	800ceb4 <sysconf+0x14>
 800cea6:	f7fc ffeb 	bl	8009e80 <__errno>
 800ceaa:	2316      	movs	r3, #22
 800ceac:	6003      	str	r3, [r0, #0]
 800ceae:	f04f 30ff 	mov.w	r0, #4294967295
 800ceb2:	bd08      	pop	{r3, pc}
 800ceb4:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800ceb8:	e7fb      	b.n	800ceb2 <sysconf+0x12>
	...

0800cebc <_vsprintf_r>:
 800cebc:	b500      	push	{lr}
 800cebe:	b09b      	sub	sp, #108	; 0x6c
 800cec0:	9100      	str	r1, [sp, #0]
 800cec2:	9104      	str	r1, [sp, #16]
 800cec4:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800cec8:	9105      	str	r1, [sp, #20]
 800ceca:	9102      	str	r1, [sp, #8]
 800cecc:	4905      	ldr	r1, [pc, #20]	; (800cee4 <_vsprintf_r+0x28>)
 800cece:	9103      	str	r1, [sp, #12]
 800ced0:	4669      	mov	r1, sp
 800ced2:	f7fe fe01 	bl	800bad8 <_svfprintf_r>
 800ced6:	9b00      	ldr	r3, [sp, #0]
 800ced8:	2200      	movs	r2, #0
 800ceda:	701a      	strb	r2, [r3, #0]
 800cedc:	b01b      	add	sp, #108	; 0x6c
 800cede:	f85d fb04 	ldr.w	pc, [sp], #4
 800cee2:	bf00      	nop
 800cee4:	ffff0208 	.word	0xffff0208

0800cee8 <vsprintf>:
 800cee8:	4613      	mov	r3, r2
 800ceea:	460a      	mov	r2, r1
 800ceec:	4601      	mov	r1, r0
 800ceee:	4802      	ldr	r0, [pc, #8]	; (800cef8 <vsprintf+0x10>)
 800cef0:	6800      	ldr	r0, [r0, #0]
 800cef2:	f7ff bfe3 	b.w	800cebc <_vsprintf_r>
 800cef6:	bf00      	nop
 800cef8:	20000020 	.word	0x20000020

0800cefc <_write_r>:
 800cefc:	b538      	push	{r3, r4, r5, lr}
 800cefe:	4d07      	ldr	r5, [pc, #28]	; (800cf1c <_write_r+0x20>)
 800cf00:	4604      	mov	r4, r0
 800cf02:	4608      	mov	r0, r1
 800cf04:	4611      	mov	r1, r2
 800cf06:	2200      	movs	r2, #0
 800cf08:	602a      	str	r2, [r5, #0]
 800cf0a:	461a      	mov	r2, r3
 800cf0c:	f7f5 fc97 	bl	800283e <_write>
 800cf10:	1c43      	adds	r3, r0, #1
 800cf12:	d102      	bne.n	800cf1a <_write_r+0x1e>
 800cf14:	682b      	ldr	r3, [r5, #0]
 800cf16:	b103      	cbz	r3, 800cf1a <_write_r+0x1e>
 800cf18:	6023      	str	r3, [r4, #0]
 800cf1a:	bd38      	pop	{r3, r4, r5, pc}
 800cf1c:	20017ad4 	.word	0x20017ad4

0800cf20 <register_fini>:
 800cf20:	4b02      	ldr	r3, [pc, #8]	; (800cf2c <register_fini+0xc>)
 800cf22:	b113      	cbz	r3, 800cf2a <register_fini+0xa>
 800cf24:	4802      	ldr	r0, [pc, #8]	; (800cf30 <register_fini+0x10>)
 800cf26:	f000 b805 	b.w	800cf34 <atexit>
 800cf2a:	4770      	bx	lr
 800cf2c:	00000000 	.word	0x00000000
 800cf30:	0800dcd5 	.word	0x0800dcd5

0800cf34 <atexit>:
 800cf34:	2300      	movs	r3, #0
 800cf36:	4601      	mov	r1, r0
 800cf38:	461a      	mov	r2, r3
 800cf3a:	4618      	mov	r0, r3
 800cf3c:	f002 b99c 	b.w	800f278 <__register_exitproc>

0800cf40 <_close_r>:
 800cf40:	b538      	push	{r3, r4, r5, lr}
 800cf42:	4d06      	ldr	r5, [pc, #24]	; (800cf5c <_close_r+0x1c>)
 800cf44:	2300      	movs	r3, #0
 800cf46:	4604      	mov	r4, r0
 800cf48:	4608      	mov	r0, r1
 800cf4a:	602b      	str	r3, [r5, #0]
 800cf4c:	f7f5 fc93 	bl	8002876 <_close>
 800cf50:	1c43      	adds	r3, r0, #1
 800cf52:	d102      	bne.n	800cf5a <_close_r+0x1a>
 800cf54:	682b      	ldr	r3, [r5, #0]
 800cf56:	b103      	cbz	r3, 800cf5a <_close_r+0x1a>
 800cf58:	6023      	str	r3, [r4, #0]
 800cf5a:	bd38      	pop	{r3, r4, r5, pc}
 800cf5c:	20017ad4 	.word	0x20017ad4

0800cf60 <quorem>:
 800cf60:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf64:	6903      	ldr	r3, [r0, #16]
 800cf66:	690c      	ldr	r4, [r1, #16]
 800cf68:	42a3      	cmp	r3, r4
 800cf6a:	4607      	mov	r7, r0
 800cf6c:	f2c0 8081 	blt.w	800d072 <quorem+0x112>
 800cf70:	3c01      	subs	r4, #1
 800cf72:	f101 0814 	add.w	r8, r1, #20
 800cf76:	f100 0514 	add.w	r5, r0, #20
 800cf7a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800cf7e:	9301      	str	r3, [sp, #4]
 800cf80:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800cf84:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800cf88:	3301      	adds	r3, #1
 800cf8a:	429a      	cmp	r2, r3
 800cf8c:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800cf90:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800cf94:	fbb2 f6f3 	udiv	r6, r2, r3
 800cf98:	d331      	bcc.n	800cffe <quorem+0x9e>
 800cf9a:	f04f 0e00 	mov.w	lr, #0
 800cf9e:	4640      	mov	r0, r8
 800cfa0:	46ac      	mov	ip, r5
 800cfa2:	46f2      	mov	sl, lr
 800cfa4:	f850 2b04 	ldr.w	r2, [r0], #4
 800cfa8:	b293      	uxth	r3, r2
 800cfaa:	fb06 e303 	mla	r3, r6, r3, lr
 800cfae:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800cfb2:	b29b      	uxth	r3, r3
 800cfb4:	ebaa 0303 	sub.w	r3, sl, r3
 800cfb8:	f8dc a000 	ldr.w	sl, [ip]
 800cfbc:	0c12      	lsrs	r2, r2, #16
 800cfbe:	fa13 f38a 	uxtah	r3, r3, sl
 800cfc2:	fb06 e202 	mla	r2, r6, r2, lr
 800cfc6:	9300      	str	r3, [sp, #0]
 800cfc8:	9b00      	ldr	r3, [sp, #0]
 800cfca:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800cfce:	b292      	uxth	r2, r2
 800cfd0:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800cfd4:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800cfd8:	f8bd 3000 	ldrh.w	r3, [sp]
 800cfdc:	4581      	cmp	r9, r0
 800cfde:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800cfe2:	f84c 3b04 	str.w	r3, [ip], #4
 800cfe6:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800cfea:	d2db      	bcs.n	800cfa4 <quorem+0x44>
 800cfec:	f855 300b 	ldr.w	r3, [r5, fp]
 800cff0:	b92b      	cbnz	r3, 800cffe <quorem+0x9e>
 800cff2:	9b01      	ldr	r3, [sp, #4]
 800cff4:	3b04      	subs	r3, #4
 800cff6:	429d      	cmp	r5, r3
 800cff8:	461a      	mov	r2, r3
 800cffa:	d32e      	bcc.n	800d05a <quorem+0xfa>
 800cffc:	613c      	str	r4, [r7, #16]
 800cffe:	4638      	mov	r0, r7
 800d000:	f001 fdfc 	bl	800ebfc <__mcmp>
 800d004:	2800      	cmp	r0, #0
 800d006:	db24      	blt.n	800d052 <quorem+0xf2>
 800d008:	3601      	adds	r6, #1
 800d00a:	4628      	mov	r0, r5
 800d00c:	f04f 0c00 	mov.w	ip, #0
 800d010:	f858 2b04 	ldr.w	r2, [r8], #4
 800d014:	f8d0 e000 	ldr.w	lr, [r0]
 800d018:	b293      	uxth	r3, r2
 800d01a:	ebac 0303 	sub.w	r3, ip, r3
 800d01e:	0c12      	lsrs	r2, r2, #16
 800d020:	fa13 f38e 	uxtah	r3, r3, lr
 800d024:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800d028:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800d02c:	b29b      	uxth	r3, r3
 800d02e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800d032:	45c1      	cmp	r9, r8
 800d034:	f840 3b04 	str.w	r3, [r0], #4
 800d038:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800d03c:	d2e8      	bcs.n	800d010 <quorem+0xb0>
 800d03e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800d042:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800d046:	b922      	cbnz	r2, 800d052 <quorem+0xf2>
 800d048:	3b04      	subs	r3, #4
 800d04a:	429d      	cmp	r5, r3
 800d04c:	461a      	mov	r2, r3
 800d04e:	d30a      	bcc.n	800d066 <quorem+0x106>
 800d050:	613c      	str	r4, [r7, #16]
 800d052:	4630      	mov	r0, r6
 800d054:	b003      	add	sp, #12
 800d056:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d05a:	6812      	ldr	r2, [r2, #0]
 800d05c:	3b04      	subs	r3, #4
 800d05e:	2a00      	cmp	r2, #0
 800d060:	d1cc      	bne.n	800cffc <quorem+0x9c>
 800d062:	3c01      	subs	r4, #1
 800d064:	e7c7      	b.n	800cff6 <quorem+0x96>
 800d066:	6812      	ldr	r2, [r2, #0]
 800d068:	3b04      	subs	r3, #4
 800d06a:	2a00      	cmp	r2, #0
 800d06c:	d1f0      	bne.n	800d050 <quorem+0xf0>
 800d06e:	3c01      	subs	r4, #1
 800d070:	e7eb      	b.n	800d04a <quorem+0xea>
 800d072:	2000      	movs	r0, #0
 800d074:	e7ee      	b.n	800d054 <quorem+0xf4>
	...

0800d078 <_dtoa_r>:
 800d078:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d07c:	ed2d 8b04 	vpush	{d8-d9}
 800d080:	b093      	sub	sp, #76	; 0x4c
 800d082:	ec57 6b10 	vmov	r6, r7, d0
 800d086:	9106      	str	r1, [sp, #24]
 800d088:	6c01      	ldr	r1, [r0, #64]	; 0x40
 800d08a:	9d20      	ldr	r5, [sp, #128]	; 0x80
 800d08c:	9209      	str	r2, [sp, #36]	; 0x24
 800d08e:	ee10 aa10 	vmov	sl, s0
 800d092:	4604      	mov	r4, r0
 800d094:	930c      	str	r3, [sp, #48]	; 0x30
 800d096:	46bb      	mov	fp, r7
 800d098:	b141      	cbz	r1, 800d0ac <_dtoa_r+0x34>
 800d09a:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800d09c:	604a      	str	r2, [r1, #4]
 800d09e:	2301      	movs	r3, #1
 800d0a0:	4093      	lsls	r3, r2
 800d0a2:	608b      	str	r3, [r1, #8]
 800d0a4:	f001 fb51 	bl	800e74a <_Bfree>
 800d0a8:	2300      	movs	r3, #0
 800d0aa:	6423      	str	r3, [r4, #64]	; 0x40
 800d0ac:	1e3b      	subs	r3, r7, #0
 800d0ae:	bfaa      	itet	ge
 800d0b0:	2300      	movge	r3, #0
 800d0b2:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 800d0b6:	602b      	strge	r3, [r5, #0]
 800d0b8:	4ba3      	ldr	r3, [pc, #652]	; (800d348 <_dtoa_r+0x2d0>)
 800d0ba:	bfbc      	itt	lt
 800d0bc:	2201      	movlt	r2, #1
 800d0be:	602a      	strlt	r2, [r5, #0]
 800d0c0:	ea33 030b 	bics.w	r3, r3, fp
 800d0c4:	d11b      	bne.n	800d0fe <_dtoa_r+0x86>
 800d0c6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800d0c8:	f242 730f 	movw	r3, #9999	; 0x270f
 800d0cc:	6013      	str	r3, [r2, #0]
 800d0ce:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800d0d2:	4333      	orrs	r3, r6
 800d0d4:	f000 8590 	beq.w	800dbf8 <_dtoa_r+0xb80>
 800d0d8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800d0da:	b90b      	cbnz	r3, 800d0e0 <_dtoa_r+0x68>
 800d0dc:	4b9b      	ldr	r3, [pc, #620]	; (800d34c <_dtoa_r+0x2d4>)
 800d0de:	e022      	b.n	800d126 <_dtoa_r+0xae>
 800d0e0:	4b9a      	ldr	r3, [pc, #616]	; (800d34c <_dtoa_r+0x2d4>)
 800d0e2:	9301      	str	r3, [sp, #4]
 800d0e4:	3303      	adds	r3, #3
 800d0e6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800d0e8:	6013      	str	r3, [r2, #0]
 800d0ea:	9801      	ldr	r0, [sp, #4]
 800d0ec:	b013      	add	sp, #76	; 0x4c
 800d0ee:	ecbd 8b04 	vpop	{d8-d9}
 800d0f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d0f6:	4b96      	ldr	r3, [pc, #600]	; (800d350 <_dtoa_r+0x2d8>)
 800d0f8:	9301      	str	r3, [sp, #4]
 800d0fa:	3308      	adds	r3, #8
 800d0fc:	e7f3      	b.n	800d0e6 <_dtoa_r+0x6e>
 800d0fe:	2200      	movs	r2, #0
 800d100:	2300      	movs	r3, #0
 800d102:	4650      	mov	r0, sl
 800d104:	4659      	mov	r1, fp
 800d106:	f7f3 fce7 	bl	8000ad8 <__aeabi_dcmpeq>
 800d10a:	ec4b ab19 	vmov	d9, sl, fp
 800d10e:	4680      	mov	r8, r0
 800d110:	b158      	cbz	r0, 800d12a <_dtoa_r+0xb2>
 800d112:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800d114:	2301      	movs	r3, #1
 800d116:	6013      	str	r3, [r2, #0]
 800d118:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800d11a:	2b00      	cmp	r3, #0
 800d11c:	f000 8569 	beq.w	800dbf2 <_dtoa_r+0xb7a>
 800d120:	488c      	ldr	r0, [pc, #560]	; (800d354 <_dtoa_r+0x2dc>)
 800d122:	6018      	str	r0, [r3, #0]
 800d124:	1e43      	subs	r3, r0, #1
 800d126:	9301      	str	r3, [sp, #4]
 800d128:	e7df      	b.n	800d0ea <_dtoa_r+0x72>
 800d12a:	ec4b ab10 	vmov	d0, sl, fp
 800d12e:	aa10      	add	r2, sp, #64	; 0x40
 800d130:	a911      	add	r1, sp, #68	; 0x44
 800d132:	4620      	mov	r0, r4
 800d134:	f001 fe84 	bl	800ee40 <__d2b>
 800d138:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800d13c:	ee08 0a10 	vmov	s16, r0
 800d140:	2d00      	cmp	r5, #0
 800d142:	f000 8082 	beq.w	800d24a <_dtoa_r+0x1d2>
 800d146:	ee19 3a90 	vmov	r3, s19
 800d14a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800d14e:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 800d152:	4656      	mov	r6, sl
 800d154:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800d158:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800d15c:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800d160:	4b7d      	ldr	r3, [pc, #500]	; (800d358 <_dtoa_r+0x2e0>)
 800d162:	2200      	movs	r2, #0
 800d164:	4630      	mov	r0, r6
 800d166:	4639      	mov	r1, r7
 800d168:	f7f3 f896 	bl	8000298 <__aeabi_dsub>
 800d16c:	a370      	add	r3, pc, #448	; (adr r3, 800d330 <_dtoa_r+0x2b8>)
 800d16e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d172:	f7f3 fa49 	bl	8000608 <__aeabi_dmul>
 800d176:	a370      	add	r3, pc, #448	; (adr r3, 800d338 <_dtoa_r+0x2c0>)
 800d178:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d17c:	f7f3 f88e 	bl	800029c <__adddf3>
 800d180:	4606      	mov	r6, r0
 800d182:	4628      	mov	r0, r5
 800d184:	460f      	mov	r7, r1
 800d186:	f7f3 f9d5 	bl	8000534 <__aeabi_i2d>
 800d18a:	a36d      	add	r3, pc, #436	; (adr r3, 800d340 <_dtoa_r+0x2c8>)
 800d18c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d190:	f7f3 fa3a 	bl	8000608 <__aeabi_dmul>
 800d194:	4602      	mov	r2, r0
 800d196:	460b      	mov	r3, r1
 800d198:	4630      	mov	r0, r6
 800d19a:	4639      	mov	r1, r7
 800d19c:	f7f3 f87e 	bl	800029c <__adddf3>
 800d1a0:	4606      	mov	r6, r0
 800d1a2:	460f      	mov	r7, r1
 800d1a4:	f7f3 fce0 	bl	8000b68 <__aeabi_d2iz>
 800d1a8:	2200      	movs	r2, #0
 800d1aa:	9000      	str	r0, [sp, #0]
 800d1ac:	2300      	movs	r3, #0
 800d1ae:	4630      	mov	r0, r6
 800d1b0:	4639      	mov	r1, r7
 800d1b2:	f7f3 fc9b 	bl	8000aec <__aeabi_dcmplt>
 800d1b6:	b150      	cbz	r0, 800d1ce <_dtoa_r+0x156>
 800d1b8:	9800      	ldr	r0, [sp, #0]
 800d1ba:	f7f3 f9bb 	bl	8000534 <__aeabi_i2d>
 800d1be:	4632      	mov	r2, r6
 800d1c0:	463b      	mov	r3, r7
 800d1c2:	f7f3 fc89 	bl	8000ad8 <__aeabi_dcmpeq>
 800d1c6:	b910      	cbnz	r0, 800d1ce <_dtoa_r+0x156>
 800d1c8:	9b00      	ldr	r3, [sp, #0]
 800d1ca:	3b01      	subs	r3, #1
 800d1cc:	9300      	str	r3, [sp, #0]
 800d1ce:	9b00      	ldr	r3, [sp, #0]
 800d1d0:	2b16      	cmp	r3, #22
 800d1d2:	d858      	bhi.n	800d286 <_dtoa_r+0x20e>
 800d1d4:	9a00      	ldr	r2, [sp, #0]
 800d1d6:	4b61      	ldr	r3, [pc, #388]	; (800d35c <_dtoa_r+0x2e4>)
 800d1d8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800d1dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d1e0:	ec51 0b19 	vmov	r0, r1, d9
 800d1e4:	f7f3 fc82 	bl	8000aec <__aeabi_dcmplt>
 800d1e8:	2800      	cmp	r0, #0
 800d1ea:	d04e      	beq.n	800d28a <_dtoa_r+0x212>
 800d1ec:	9b00      	ldr	r3, [sp, #0]
 800d1ee:	3b01      	subs	r3, #1
 800d1f0:	9300      	str	r3, [sp, #0]
 800d1f2:	2300      	movs	r3, #0
 800d1f4:	930b      	str	r3, [sp, #44]	; 0x2c
 800d1f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d1f8:	1b5d      	subs	r5, r3, r5
 800d1fa:	1e6b      	subs	r3, r5, #1
 800d1fc:	9305      	str	r3, [sp, #20]
 800d1fe:	bf45      	ittet	mi
 800d200:	f1c5 0301 	rsbmi	r3, r5, #1
 800d204:	9304      	strmi	r3, [sp, #16]
 800d206:	2300      	movpl	r3, #0
 800d208:	2300      	movmi	r3, #0
 800d20a:	bf4c      	ite	mi
 800d20c:	9305      	strmi	r3, [sp, #20]
 800d20e:	9304      	strpl	r3, [sp, #16]
 800d210:	9b00      	ldr	r3, [sp, #0]
 800d212:	2b00      	cmp	r3, #0
 800d214:	db3b      	blt.n	800d28e <_dtoa_r+0x216>
 800d216:	9b05      	ldr	r3, [sp, #20]
 800d218:	9a00      	ldr	r2, [sp, #0]
 800d21a:	920a      	str	r2, [sp, #40]	; 0x28
 800d21c:	4413      	add	r3, r2
 800d21e:	9305      	str	r3, [sp, #20]
 800d220:	2300      	movs	r3, #0
 800d222:	9307      	str	r3, [sp, #28]
 800d224:	9b06      	ldr	r3, [sp, #24]
 800d226:	2b09      	cmp	r3, #9
 800d228:	d869      	bhi.n	800d2fe <_dtoa_r+0x286>
 800d22a:	2b05      	cmp	r3, #5
 800d22c:	bfc4      	itt	gt
 800d22e:	3b04      	subgt	r3, #4
 800d230:	9306      	strgt	r3, [sp, #24]
 800d232:	9b06      	ldr	r3, [sp, #24]
 800d234:	f1a3 0302 	sub.w	r3, r3, #2
 800d238:	bfcc      	ite	gt
 800d23a:	2500      	movgt	r5, #0
 800d23c:	2501      	movle	r5, #1
 800d23e:	2b03      	cmp	r3, #3
 800d240:	d868      	bhi.n	800d314 <_dtoa_r+0x29c>
 800d242:	e8df f003 	tbb	[pc, r3]
 800d246:	3a2d      	.short	0x3a2d
 800d248:	5a38      	.short	0x5a38
 800d24a:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800d24e:	441d      	add	r5, r3
 800d250:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800d254:	2b20      	cmp	r3, #32
 800d256:	bfc1      	itttt	gt
 800d258:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800d25c:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800d260:	fa0b f303 	lslgt.w	r3, fp, r3
 800d264:	fa26 f000 	lsrgt.w	r0, r6, r0
 800d268:	bfda      	itte	le
 800d26a:	f1c3 0320 	rsble	r3, r3, #32
 800d26e:	fa06 f003 	lslle.w	r0, r6, r3
 800d272:	4318      	orrgt	r0, r3
 800d274:	f7f3 f94e 	bl	8000514 <__aeabi_ui2d>
 800d278:	2301      	movs	r3, #1
 800d27a:	4606      	mov	r6, r0
 800d27c:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800d280:	3d01      	subs	r5, #1
 800d282:	930e      	str	r3, [sp, #56]	; 0x38
 800d284:	e76c      	b.n	800d160 <_dtoa_r+0xe8>
 800d286:	2301      	movs	r3, #1
 800d288:	e7b4      	b.n	800d1f4 <_dtoa_r+0x17c>
 800d28a:	900b      	str	r0, [sp, #44]	; 0x2c
 800d28c:	e7b3      	b.n	800d1f6 <_dtoa_r+0x17e>
 800d28e:	9b04      	ldr	r3, [sp, #16]
 800d290:	9a00      	ldr	r2, [sp, #0]
 800d292:	1a9b      	subs	r3, r3, r2
 800d294:	9304      	str	r3, [sp, #16]
 800d296:	4253      	negs	r3, r2
 800d298:	9307      	str	r3, [sp, #28]
 800d29a:	2300      	movs	r3, #0
 800d29c:	930a      	str	r3, [sp, #40]	; 0x28
 800d29e:	e7c1      	b.n	800d224 <_dtoa_r+0x1ac>
 800d2a0:	2300      	movs	r3, #0
 800d2a2:	9308      	str	r3, [sp, #32]
 800d2a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d2a6:	2b00      	cmp	r3, #0
 800d2a8:	dc37      	bgt.n	800d31a <_dtoa_r+0x2a2>
 800d2aa:	2301      	movs	r3, #1
 800d2ac:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800d2b0:	461a      	mov	r2, r3
 800d2b2:	9209      	str	r2, [sp, #36]	; 0x24
 800d2b4:	e00c      	b.n	800d2d0 <_dtoa_r+0x258>
 800d2b6:	2301      	movs	r3, #1
 800d2b8:	e7f3      	b.n	800d2a2 <_dtoa_r+0x22a>
 800d2ba:	2300      	movs	r3, #0
 800d2bc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800d2be:	9308      	str	r3, [sp, #32]
 800d2c0:	9b00      	ldr	r3, [sp, #0]
 800d2c2:	4413      	add	r3, r2
 800d2c4:	9302      	str	r3, [sp, #8]
 800d2c6:	3301      	adds	r3, #1
 800d2c8:	2b01      	cmp	r3, #1
 800d2ca:	9303      	str	r3, [sp, #12]
 800d2cc:	bfb8      	it	lt
 800d2ce:	2301      	movlt	r3, #1
 800d2d0:	2200      	movs	r2, #0
 800d2d2:	6462      	str	r2, [r4, #68]	; 0x44
 800d2d4:	2204      	movs	r2, #4
 800d2d6:	f102 0014 	add.w	r0, r2, #20
 800d2da:	4298      	cmp	r0, r3
 800d2dc:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800d2de:	d920      	bls.n	800d322 <_dtoa_r+0x2aa>
 800d2e0:	4620      	mov	r0, r4
 800d2e2:	f001 fa0d 	bl	800e700 <_Balloc>
 800d2e6:	9001      	str	r0, [sp, #4]
 800d2e8:	2800      	cmp	r0, #0
 800d2ea:	d13d      	bne.n	800d368 <_dtoa_r+0x2f0>
 800d2ec:	4b1c      	ldr	r3, [pc, #112]	; (800d360 <_dtoa_r+0x2e8>)
 800d2ee:	4602      	mov	r2, r0
 800d2f0:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800d2f4:	481b      	ldr	r0, [pc, #108]	; (800d364 <_dtoa_r+0x2ec>)
 800d2f6:	f002 f801 	bl	800f2fc <__assert_func>
 800d2fa:	2301      	movs	r3, #1
 800d2fc:	e7de      	b.n	800d2bc <_dtoa_r+0x244>
 800d2fe:	2501      	movs	r5, #1
 800d300:	2300      	movs	r3, #0
 800d302:	9306      	str	r3, [sp, #24]
 800d304:	9508      	str	r5, [sp, #32]
 800d306:	f04f 33ff 	mov.w	r3, #4294967295
 800d30a:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800d30e:	2200      	movs	r2, #0
 800d310:	2312      	movs	r3, #18
 800d312:	e7ce      	b.n	800d2b2 <_dtoa_r+0x23a>
 800d314:	2301      	movs	r3, #1
 800d316:	9308      	str	r3, [sp, #32]
 800d318:	e7f5      	b.n	800d306 <_dtoa_r+0x28e>
 800d31a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d31c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800d320:	e7d6      	b.n	800d2d0 <_dtoa_r+0x258>
 800d322:	3101      	adds	r1, #1
 800d324:	6461      	str	r1, [r4, #68]	; 0x44
 800d326:	0052      	lsls	r2, r2, #1
 800d328:	e7d5      	b.n	800d2d6 <_dtoa_r+0x25e>
 800d32a:	bf00      	nop
 800d32c:	f3af 8000 	nop.w
 800d330:	636f4361 	.word	0x636f4361
 800d334:	3fd287a7 	.word	0x3fd287a7
 800d338:	8b60c8b3 	.word	0x8b60c8b3
 800d33c:	3fc68a28 	.word	0x3fc68a28
 800d340:	509f79fb 	.word	0x509f79fb
 800d344:	3fd34413 	.word	0x3fd34413
 800d348:	7ff00000 	.word	0x7ff00000
 800d34c:	08010d1c 	.word	0x08010d1c
 800d350:	08010d20 	.word	0x08010d20
 800d354:	08010cfb 	.word	0x08010cfb
 800d358:	3ff80000 	.word	0x3ff80000
 800d35c:	08010e98 	.word	0x08010e98
 800d360:	08010d29 	.word	0x08010d29
 800d364:	08010d3a 	.word	0x08010d3a
 800d368:	9b01      	ldr	r3, [sp, #4]
 800d36a:	6423      	str	r3, [r4, #64]	; 0x40
 800d36c:	9b03      	ldr	r3, [sp, #12]
 800d36e:	2b0e      	cmp	r3, #14
 800d370:	f200 809d 	bhi.w	800d4ae <_dtoa_r+0x436>
 800d374:	2d00      	cmp	r5, #0
 800d376:	f000 809a 	beq.w	800d4ae <_dtoa_r+0x436>
 800d37a:	9b00      	ldr	r3, [sp, #0]
 800d37c:	2b00      	cmp	r3, #0
 800d37e:	dd32      	ble.n	800d3e6 <_dtoa_r+0x36e>
 800d380:	4ab7      	ldr	r2, [pc, #732]	; (800d660 <_dtoa_r+0x5e8>)
 800d382:	f003 030f 	and.w	r3, r3, #15
 800d386:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800d38a:	e9d3 8900 	ldrd	r8, r9, [r3]
 800d38e:	9b00      	ldr	r3, [sp, #0]
 800d390:	05d8      	lsls	r0, r3, #23
 800d392:	ea4f 1723 	mov.w	r7, r3, asr #4
 800d396:	d516      	bpl.n	800d3c6 <_dtoa_r+0x34e>
 800d398:	4bb2      	ldr	r3, [pc, #712]	; (800d664 <_dtoa_r+0x5ec>)
 800d39a:	ec51 0b19 	vmov	r0, r1, d9
 800d39e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800d3a2:	f7f3 fa5b 	bl	800085c <__aeabi_ddiv>
 800d3a6:	f007 070f 	and.w	r7, r7, #15
 800d3aa:	4682      	mov	sl, r0
 800d3ac:	468b      	mov	fp, r1
 800d3ae:	2503      	movs	r5, #3
 800d3b0:	4eac      	ldr	r6, [pc, #688]	; (800d664 <_dtoa_r+0x5ec>)
 800d3b2:	b957      	cbnz	r7, 800d3ca <_dtoa_r+0x352>
 800d3b4:	4642      	mov	r2, r8
 800d3b6:	464b      	mov	r3, r9
 800d3b8:	4650      	mov	r0, sl
 800d3ba:	4659      	mov	r1, fp
 800d3bc:	f7f3 fa4e 	bl	800085c <__aeabi_ddiv>
 800d3c0:	4682      	mov	sl, r0
 800d3c2:	468b      	mov	fp, r1
 800d3c4:	e028      	b.n	800d418 <_dtoa_r+0x3a0>
 800d3c6:	2502      	movs	r5, #2
 800d3c8:	e7f2      	b.n	800d3b0 <_dtoa_r+0x338>
 800d3ca:	07f9      	lsls	r1, r7, #31
 800d3cc:	d508      	bpl.n	800d3e0 <_dtoa_r+0x368>
 800d3ce:	4640      	mov	r0, r8
 800d3d0:	4649      	mov	r1, r9
 800d3d2:	e9d6 2300 	ldrd	r2, r3, [r6]
 800d3d6:	f7f3 f917 	bl	8000608 <__aeabi_dmul>
 800d3da:	3501      	adds	r5, #1
 800d3dc:	4680      	mov	r8, r0
 800d3de:	4689      	mov	r9, r1
 800d3e0:	107f      	asrs	r7, r7, #1
 800d3e2:	3608      	adds	r6, #8
 800d3e4:	e7e5      	b.n	800d3b2 <_dtoa_r+0x33a>
 800d3e6:	f000 809b 	beq.w	800d520 <_dtoa_r+0x4a8>
 800d3ea:	9b00      	ldr	r3, [sp, #0]
 800d3ec:	4f9d      	ldr	r7, [pc, #628]	; (800d664 <_dtoa_r+0x5ec>)
 800d3ee:	425e      	negs	r6, r3
 800d3f0:	4b9b      	ldr	r3, [pc, #620]	; (800d660 <_dtoa_r+0x5e8>)
 800d3f2:	f006 020f 	and.w	r2, r6, #15
 800d3f6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800d3fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d3fe:	ec51 0b19 	vmov	r0, r1, d9
 800d402:	f7f3 f901 	bl	8000608 <__aeabi_dmul>
 800d406:	1136      	asrs	r6, r6, #4
 800d408:	4682      	mov	sl, r0
 800d40a:	468b      	mov	fp, r1
 800d40c:	2300      	movs	r3, #0
 800d40e:	2502      	movs	r5, #2
 800d410:	2e00      	cmp	r6, #0
 800d412:	d17a      	bne.n	800d50a <_dtoa_r+0x492>
 800d414:	2b00      	cmp	r3, #0
 800d416:	d1d3      	bne.n	800d3c0 <_dtoa_r+0x348>
 800d418:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d41a:	2b00      	cmp	r3, #0
 800d41c:	f000 8082 	beq.w	800d524 <_dtoa_r+0x4ac>
 800d420:	4b91      	ldr	r3, [pc, #580]	; (800d668 <_dtoa_r+0x5f0>)
 800d422:	2200      	movs	r2, #0
 800d424:	4650      	mov	r0, sl
 800d426:	4659      	mov	r1, fp
 800d428:	f7f3 fb60 	bl	8000aec <__aeabi_dcmplt>
 800d42c:	2800      	cmp	r0, #0
 800d42e:	d079      	beq.n	800d524 <_dtoa_r+0x4ac>
 800d430:	9b03      	ldr	r3, [sp, #12]
 800d432:	2b00      	cmp	r3, #0
 800d434:	d076      	beq.n	800d524 <_dtoa_r+0x4ac>
 800d436:	9b02      	ldr	r3, [sp, #8]
 800d438:	2b00      	cmp	r3, #0
 800d43a:	dd36      	ble.n	800d4aa <_dtoa_r+0x432>
 800d43c:	9b00      	ldr	r3, [sp, #0]
 800d43e:	4650      	mov	r0, sl
 800d440:	4659      	mov	r1, fp
 800d442:	1e5f      	subs	r7, r3, #1
 800d444:	2200      	movs	r2, #0
 800d446:	4b89      	ldr	r3, [pc, #548]	; (800d66c <_dtoa_r+0x5f4>)
 800d448:	f7f3 f8de 	bl	8000608 <__aeabi_dmul>
 800d44c:	9e02      	ldr	r6, [sp, #8]
 800d44e:	4682      	mov	sl, r0
 800d450:	468b      	mov	fp, r1
 800d452:	3501      	adds	r5, #1
 800d454:	4628      	mov	r0, r5
 800d456:	f7f3 f86d 	bl	8000534 <__aeabi_i2d>
 800d45a:	4652      	mov	r2, sl
 800d45c:	465b      	mov	r3, fp
 800d45e:	f7f3 f8d3 	bl	8000608 <__aeabi_dmul>
 800d462:	4b83      	ldr	r3, [pc, #524]	; (800d670 <_dtoa_r+0x5f8>)
 800d464:	2200      	movs	r2, #0
 800d466:	f7f2 ff19 	bl	800029c <__adddf3>
 800d46a:	46d0      	mov	r8, sl
 800d46c:	46d9      	mov	r9, fp
 800d46e:	4682      	mov	sl, r0
 800d470:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800d474:	2e00      	cmp	r6, #0
 800d476:	d158      	bne.n	800d52a <_dtoa_r+0x4b2>
 800d478:	4b7e      	ldr	r3, [pc, #504]	; (800d674 <_dtoa_r+0x5fc>)
 800d47a:	2200      	movs	r2, #0
 800d47c:	4640      	mov	r0, r8
 800d47e:	4649      	mov	r1, r9
 800d480:	f7f2 ff0a 	bl	8000298 <__aeabi_dsub>
 800d484:	4652      	mov	r2, sl
 800d486:	465b      	mov	r3, fp
 800d488:	4680      	mov	r8, r0
 800d48a:	4689      	mov	r9, r1
 800d48c:	f7f3 fb4c 	bl	8000b28 <__aeabi_dcmpgt>
 800d490:	2800      	cmp	r0, #0
 800d492:	f040 8296 	bne.w	800d9c2 <_dtoa_r+0x94a>
 800d496:	4652      	mov	r2, sl
 800d498:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800d49c:	4640      	mov	r0, r8
 800d49e:	4649      	mov	r1, r9
 800d4a0:	f7f3 fb24 	bl	8000aec <__aeabi_dcmplt>
 800d4a4:	2800      	cmp	r0, #0
 800d4a6:	f040 828a 	bne.w	800d9be <_dtoa_r+0x946>
 800d4aa:	ec5b ab19 	vmov	sl, fp, d9
 800d4ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d4b0:	2b00      	cmp	r3, #0
 800d4b2:	f2c0 8149 	blt.w	800d748 <_dtoa_r+0x6d0>
 800d4b6:	9a00      	ldr	r2, [sp, #0]
 800d4b8:	2a0e      	cmp	r2, #14
 800d4ba:	f300 8145 	bgt.w	800d748 <_dtoa_r+0x6d0>
 800d4be:	4b68      	ldr	r3, [pc, #416]	; (800d660 <_dtoa_r+0x5e8>)
 800d4c0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800d4c4:	e9d3 8900 	ldrd	r8, r9, [r3]
 800d4c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d4ca:	2b00      	cmp	r3, #0
 800d4cc:	f280 80d6 	bge.w	800d67c <_dtoa_r+0x604>
 800d4d0:	9b03      	ldr	r3, [sp, #12]
 800d4d2:	2b00      	cmp	r3, #0
 800d4d4:	f300 80d2 	bgt.w	800d67c <_dtoa_r+0x604>
 800d4d8:	f040 8270 	bne.w	800d9bc <_dtoa_r+0x944>
 800d4dc:	4b65      	ldr	r3, [pc, #404]	; (800d674 <_dtoa_r+0x5fc>)
 800d4de:	2200      	movs	r2, #0
 800d4e0:	4640      	mov	r0, r8
 800d4e2:	4649      	mov	r1, r9
 800d4e4:	f7f3 f890 	bl	8000608 <__aeabi_dmul>
 800d4e8:	4652      	mov	r2, sl
 800d4ea:	465b      	mov	r3, fp
 800d4ec:	f7f3 fb12 	bl	8000b14 <__aeabi_dcmpge>
 800d4f0:	9e03      	ldr	r6, [sp, #12]
 800d4f2:	4637      	mov	r7, r6
 800d4f4:	2800      	cmp	r0, #0
 800d4f6:	f040 8246 	bne.w	800d986 <_dtoa_r+0x90e>
 800d4fa:	9d01      	ldr	r5, [sp, #4]
 800d4fc:	2331      	movs	r3, #49	; 0x31
 800d4fe:	f805 3b01 	strb.w	r3, [r5], #1
 800d502:	9b00      	ldr	r3, [sp, #0]
 800d504:	3301      	adds	r3, #1
 800d506:	9300      	str	r3, [sp, #0]
 800d508:	e241      	b.n	800d98e <_dtoa_r+0x916>
 800d50a:	07f2      	lsls	r2, r6, #31
 800d50c:	d505      	bpl.n	800d51a <_dtoa_r+0x4a2>
 800d50e:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d512:	f7f3 f879 	bl	8000608 <__aeabi_dmul>
 800d516:	3501      	adds	r5, #1
 800d518:	2301      	movs	r3, #1
 800d51a:	1076      	asrs	r6, r6, #1
 800d51c:	3708      	adds	r7, #8
 800d51e:	e777      	b.n	800d410 <_dtoa_r+0x398>
 800d520:	2502      	movs	r5, #2
 800d522:	e779      	b.n	800d418 <_dtoa_r+0x3a0>
 800d524:	9f00      	ldr	r7, [sp, #0]
 800d526:	9e03      	ldr	r6, [sp, #12]
 800d528:	e794      	b.n	800d454 <_dtoa_r+0x3dc>
 800d52a:	9901      	ldr	r1, [sp, #4]
 800d52c:	4b4c      	ldr	r3, [pc, #304]	; (800d660 <_dtoa_r+0x5e8>)
 800d52e:	4431      	add	r1, r6
 800d530:	910d      	str	r1, [sp, #52]	; 0x34
 800d532:	9908      	ldr	r1, [sp, #32]
 800d534:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800d538:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800d53c:	2900      	cmp	r1, #0
 800d53e:	d043      	beq.n	800d5c8 <_dtoa_r+0x550>
 800d540:	494d      	ldr	r1, [pc, #308]	; (800d678 <_dtoa_r+0x600>)
 800d542:	2000      	movs	r0, #0
 800d544:	f7f3 f98a 	bl	800085c <__aeabi_ddiv>
 800d548:	4652      	mov	r2, sl
 800d54a:	465b      	mov	r3, fp
 800d54c:	f7f2 fea4 	bl	8000298 <__aeabi_dsub>
 800d550:	9d01      	ldr	r5, [sp, #4]
 800d552:	4682      	mov	sl, r0
 800d554:	468b      	mov	fp, r1
 800d556:	4649      	mov	r1, r9
 800d558:	4640      	mov	r0, r8
 800d55a:	f7f3 fb05 	bl	8000b68 <__aeabi_d2iz>
 800d55e:	4606      	mov	r6, r0
 800d560:	f7f2 ffe8 	bl	8000534 <__aeabi_i2d>
 800d564:	4602      	mov	r2, r0
 800d566:	460b      	mov	r3, r1
 800d568:	4640      	mov	r0, r8
 800d56a:	4649      	mov	r1, r9
 800d56c:	f7f2 fe94 	bl	8000298 <__aeabi_dsub>
 800d570:	3630      	adds	r6, #48	; 0x30
 800d572:	f805 6b01 	strb.w	r6, [r5], #1
 800d576:	4652      	mov	r2, sl
 800d578:	465b      	mov	r3, fp
 800d57a:	4680      	mov	r8, r0
 800d57c:	4689      	mov	r9, r1
 800d57e:	f7f3 fab5 	bl	8000aec <__aeabi_dcmplt>
 800d582:	2800      	cmp	r0, #0
 800d584:	d163      	bne.n	800d64e <_dtoa_r+0x5d6>
 800d586:	4642      	mov	r2, r8
 800d588:	464b      	mov	r3, r9
 800d58a:	4937      	ldr	r1, [pc, #220]	; (800d668 <_dtoa_r+0x5f0>)
 800d58c:	2000      	movs	r0, #0
 800d58e:	f7f2 fe83 	bl	8000298 <__aeabi_dsub>
 800d592:	4652      	mov	r2, sl
 800d594:	465b      	mov	r3, fp
 800d596:	f7f3 faa9 	bl	8000aec <__aeabi_dcmplt>
 800d59a:	2800      	cmp	r0, #0
 800d59c:	f040 80b6 	bne.w	800d70c <_dtoa_r+0x694>
 800d5a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d5a2:	429d      	cmp	r5, r3
 800d5a4:	d081      	beq.n	800d4aa <_dtoa_r+0x432>
 800d5a6:	4b31      	ldr	r3, [pc, #196]	; (800d66c <_dtoa_r+0x5f4>)
 800d5a8:	2200      	movs	r2, #0
 800d5aa:	4650      	mov	r0, sl
 800d5ac:	4659      	mov	r1, fp
 800d5ae:	f7f3 f82b 	bl	8000608 <__aeabi_dmul>
 800d5b2:	4b2e      	ldr	r3, [pc, #184]	; (800d66c <_dtoa_r+0x5f4>)
 800d5b4:	4682      	mov	sl, r0
 800d5b6:	468b      	mov	fp, r1
 800d5b8:	4640      	mov	r0, r8
 800d5ba:	4649      	mov	r1, r9
 800d5bc:	2200      	movs	r2, #0
 800d5be:	f7f3 f823 	bl	8000608 <__aeabi_dmul>
 800d5c2:	4680      	mov	r8, r0
 800d5c4:	4689      	mov	r9, r1
 800d5c6:	e7c6      	b.n	800d556 <_dtoa_r+0x4de>
 800d5c8:	4650      	mov	r0, sl
 800d5ca:	4659      	mov	r1, fp
 800d5cc:	f7f3 f81c 	bl	8000608 <__aeabi_dmul>
 800d5d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d5d2:	9d01      	ldr	r5, [sp, #4]
 800d5d4:	930f      	str	r3, [sp, #60]	; 0x3c
 800d5d6:	4682      	mov	sl, r0
 800d5d8:	468b      	mov	fp, r1
 800d5da:	4649      	mov	r1, r9
 800d5dc:	4640      	mov	r0, r8
 800d5de:	f7f3 fac3 	bl	8000b68 <__aeabi_d2iz>
 800d5e2:	4606      	mov	r6, r0
 800d5e4:	f7f2 ffa6 	bl	8000534 <__aeabi_i2d>
 800d5e8:	3630      	adds	r6, #48	; 0x30
 800d5ea:	4602      	mov	r2, r0
 800d5ec:	460b      	mov	r3, r1
 800d5ee:	4640      	mov	r0, r8
 800d5f0:	4649      	mov	r1, r9
 800d5f2:	f7f2 fe51 	bl	8000298 <__aeabi_dsub>
 800d5f6:	f805 6b01 	strb.w	r6, [r5], #1
 800d5fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d5fc:	429d      	cmp	r5, r3
 800d5fe:	4680      	mov	r8, r0
 800d600:	4689      	mov	r9, r1
 800d602:	f04f 0200 	mov.w	r2, #0
 800d606:	d124      	bne.n	800d652 <_dtoa_r+0x5da>
 800d608:	4b1b      	ldr	r3, [pc, #108]	; (800d678 <_dtoa_r+0x600>)
 800d60a:	4650      	mov	r0, sl
 800d60c:	4659      	mov	r1, fp
 800d60e:	f7f2 fe45 	bl	800029c <__adddf3>
 800d612:	4602      	mov	r2, r0
 800d614:	460b      	mov	r3, r1
 800d616:	4640      	mov	r0, r8
 800d618:	4649      	mov	r1, r9
 800d61a:	f7f3 fa85 	bl	8000b28 <__aeabi_dcmpgt>
 800d61e:	2800      	cmp	r0, #0
 800d620:	d174      	bne.n	800d70c <_dtoa_r+0x694>
 800d622:	4652      	mov	r2, sl
 800d624:	465b      	mov	r3, fp
 800d626:	4914      	ldr	r1, [pc, #80]	; (800d678 <_dtoa_r+0x600>)
 800d628:	2000      	movs	r0, #0
 800d62a:	f7f2 fe35 	bl	8000298 <__aeabi_dsub>
 800d62e:	4602      	mov	r2, r0
 800d630:	460b      	mov	r3, r1
 800d632:	4640      	mov	r0, r8
 800d634:	4649      	mov	r1, r9
 800d636:	f7f3 fa59 	bl	8000aec <__aeabi_dcmplt>
 800d63a:	2800      	cmp	r0, #0
 800d63c:	f43f af35 	beq.w	800d4aa <_dtoa_r+0x432>
 800d640:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800d642:	1e6b      	subs	r3, r5, #1
 800d644:	930f      	str	r3, [sp, #60]	; 0x3c
 800d646:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800d64a:	2b30      	cmp	r3, #48	; 0x30
 800d64c:	d0f8      	beq.n	800d640 <_dtoa_r+0x5c8>
 800d64e:	9700      	str	r7, [sp, #0]
 800d650:	e04a      	b.n	800d6e8 <_dtoa_r+0x670>
 800d652:	4b06      	ldr	r3, [pc, #24]	; (800d66c <_dtoa_r+0x5f4>)
 800d654:	f7f2 ffd8 	bl	8000608 <__aeabi_dmul>
 800d658:	4680      	mov	r8, r0
 800d65a:	4689      	mov	r9, r1
 800d65c:	e7bd      	b.n	800d5da <_dtoa_r+0x562>
 800d65e:	bf00      	nop
 800d660:	08010e98 	.word	0x08010e98
 800d664:	08010e70 	.word	0x08010e70
 800d668:	3ff00000 	.word	0x3ff00000
 800d66c:	40240000 	.word	0x40240000
 800d670:	401c0000 	.word	0x401c0000
 800d674:	40140000 	.word	0x40140000
 800d678:	3fe00000 	.word	0x3fe00000
 800d67c:	9d01      	ldr	r5, [sp, #4]
 800d67e:	4656      	mov	r6, sl
 800d680:	465f      	mov	r7, fp
 800d682:	4642      	mov	r2, r8
 800d684:	464b      	mov	r3, r9
 800d686:	4630      	mov	r0, r6
 800d688:	4639      	mov	r1, r7
 800d68a:	f7f3 f8e7 	bl	800085c <__aeabi_ddiv>
 800d68e:	f7f3 fa6b 	bl	8000b68 <__aeabi_d2iz>
 800d692:	4682      	mov	sl, r0
 800d694:	f7f2 ff4e 	bl	8000534 <__aeabi_i2d>
 800d698:	4642      	mov	r2, r8
 800d69a:	464b      	mov	r3, r9
 800d69c:	f7f2 ffb4 	bl	8000608 <__aeabi_dmul>
 800d6a0:	4602      	mov	r2, r0
 800d6a2:	460b      	mov	r3, r1
 800d6a4:	4630      	mov	r0, r6
 800d6a6:	4639      	mov	r1, r7
 800d6a8:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800d6ac:	f7f2 fdf4 	bl	8000298 <__aeabi_dsub>
 800d6b0:	f805 6b01 	strb.w	r6, [r5], #1
 800d6b4:	9e01      	ldr	r6, [sp, #4]
 800d6b6:	9f03      	ldr	r7, [sp, #12]
 800d6b8:	1bae      	subs	r6, r5, r6
 800d6ba:	42b7      	cmp	r7, r6
 800d6bc:	4602      	mov	r2, r0
 800d6be:	460b      	mov	r3, r1
 800d6c0:	d135      	bne.n	800d72e <_dtoa_r+0x6b6>
 800d6c2:	f7f2 fdeb 	bl	800029c <__adddf3>
 800d6c6:	4642      	mov	r2, r8
 800d6c8:	464b      	mov	r3, r9
 800d6ca:	4606      	mov	r6, r0
 800d6cc:	460f      	mov	r7, r1
 800d6ce:	f7f3 fa2b 	bl	8000b28 <__aeabi_dcmpgt>
 800d6d2:	b9d0      	cbnz	r0, 800d70a <_dtoa_r+0x692>
 800d6d4:	4642      	mov	r2, r8
 800d6d6:	464b      	mov	r3, r9
 800d6d8:	4630      	mov	r0, r6
 800d6da:	4639      	mov	r1, r7
 800d6dc:	f7f3 f9fc 	bl	8000ad8 <__aeabi_dcmpeq>
 800d6e0:	b110      	cbz	r0, 800d6e8 <_dtoa_r+0x670>
 800d6e2:	f01a 0f01 	tst.w	sl, #1
 800d6e6:	d110      	bne.n	800d70a <_dtoa_r+0x692>
 800d6e8:	4620      	mov	r0, r4
 800d6ea:	ee18 1a10 	vmov	r1, s16
 800d6ee:	f001 f82c 	bl	800e74a <_Bfree>
 800d6f2:	2300      	movs	r3, #0
 800d6f4:	9800      	ldr	r0, [sp, #0]
 800d6f6:	702b      	strb	r3, [r5, #0]
 800d6f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d6fa:	3001      	adds	r0, #1
 800d6fc:	6018      	str	r0, [r3, #0]
 800d6fe:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800d700:	2b00      	cmp	r3, #0
 800d702:	f43f acf2 	beq.w	800d0ea <_dtoa_r+0x72>
 800d706:	601d      	str	r5, [r3, #0]
 800d708:	e4ef      	b.n	800d0ea <_dtoa_r+0x72>
 800d70a:	9f00      	ldr	r7, [sp, #0]
 800d70c:	462b      	mov	r3, r5
 800d70e:	461d      	mov	r5, r3
 800d710:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800d714:	2a39      	cmp	r2, #57	; 0x39
 800d716:	d106      	bne.n	800d726 <_dtoa_r+0x6ae>
 800d718:	9a01      	ldr	r2, [sp, #4]
 800d71a:	429a      	cmp	r2, r3
 800d71c:	d1f7      	bne.n	800d70e <_dtoa_r+0x696>
 800d71e:	9901      	ldr	r1, [sp, #4]
 800d720:	2230      	movs	r2, #48	; 0x30
 800d722:	3701      	adds	r7, #1
 800d724:	700a      	strb	r2, [r1, #0]
 800d726:	781a      	ldrb	r2, [r3, #0]
 800d728:	3201      	adds	r2, #1
 800d72a:	701a      	strb	r2, [r3, #0]
 800d72c:	e78f      	b.n	800d64e <_dtoa_r+0x5d6>
 800d72e:	4ba6      	ldr	r3, [pc, #664]	; (800d9c8 <_dtoa_r+0x950>)
 800d730:	2200      	movs	r2, #0
 800d732:	f7f2 ff69 	bl	8000608 <__aeabi_dmul>
 800d736:	2200      	movs	r2, #0
 800d738:	2300      	movs	r3, #0
 800d73a:	4606      	mov	r6, r0
 800d73c:	460f      	mov	r7, r1
 800d73e:	f7f3 f9cb 	bl	8000ad8 <__aeabi_dcmpeq>
 800d742:	2800      	cmp	r0, #0
 800d744:	d09d      	beq.n	800d682 <_dtoa_r+0x60a>
 800d746:	e7cf      	b.n	800d6e8 <_dtoa_r+0x670>
 800d748:	9a08      	ldr	r2, [sp, #32]
 800d74a:	2a00      	cmp	r2, #0
 800d74c:	f000 80d7 	beq.w	800d8fe <_dtoa_r+0x886>
 800d750:	9a06      	ldr	r2, [sp, #24]
 800d752:	2a01      	cmp	r2, #1
 800d754:	f300 80ba 	bgt.w	800d8cc <_dtoa_r+0x854>
 800d758:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d75a:	2a00      	cmp	r2, #0
 800d75c:	f000 80b2 	beq.w	800d8c4 <_dtoa_r+0x84c>
 800d760:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800d764:	9e07      	ldr	r6, [sp, #28]
 800d766:	9d04      	ldr	r5, [sp, #16]
 800d768:	9a04      	ldr	r2, [sp, #16]
 800d76a:	441a      	add	r2, r3
 800d76c:	9204      	str	r2, [sp, #16]
 800d76e:	9a05      	ldr	r2, [sp, #20]
 800d770:	2101      	movs	r1, #1
 800d772:	441a      	add	r2, r3
 800d774:	4620      	mov	r0, r4
 800d776:	9205      	str	r2, [sp, #20]
 800d778:	f001 f8d0 	bl	800e91c <__i2b>
 800d77c:	4607      	mov	r7, r0
 800d77e:	2d00      	cmp	r5, #0
 800d780:	dd0c      	ble.n	800d79c <_dtoa_r+0x724>
 800d782:	9b05      	ldr	r3, [sp, #20]
 800d784:	2b00      	cmp	r3, #0
 800d786:	dd09      	ble.n	800d79c <_dtoa_r+0x724>
 800d788:	42ab      	cmp	r3, r5
 800d78a:	9a04      	ldr	r2, [sp, #16]
 800d78c:	bfa8      	it	ge
 800d78e:	462b      	movge	r3, r5
 800d790:	1ad2      	subs	r2, r2, r3
 800d792:	9204      	str	r2, [sp, #16]
 800d794:	9a05      	ldr	r2, [sp, #20]
 800d796:	1aed      	subs	r5, r5, r3
 800d798:	1ad3      	subs	r3, r2, r3
 800d79a:	9305      	str	r3, [sp, #20]
 800d79c:	9b07      	ldr	r3, [sp, #28]
 800d79e:	b31b      	cbz	r3, 800d7e8 <_dtoa_r+0x770>
 800d7a0:	9b08      	ldr	r3, [sp, #32]
 800d7a2:	2b00      	cmp	r3, #0
 800d7a4:	f000 80af 	beq.w	800d906 <_dtoa_r+0x88e>
 800d7a8:	2e00      	cmp	r6, #0
 800d7aa:	dd13      	ble.n	800d7d4 <_dtoa_r+0x75c>
 800d7ac:	4639      	mov	r1, r7
 800d7ae:	4632      	mov	r2, r6
 800d7b0:	4620      	mov	r0, r4
 800d7b2:	f001 f973 	bl	800ea9c <__pow5mult>
 800d7b6:	ee18 2a10 	vmov	r2, s16
 800d7ba:	4601      	mov	r1, r0
 800d7bc:	4607      	mov	r7, r0
 800d7be:	4620      	mov	r0, r4
 800d7c0:	f001 f8c2 	bl	800e948 <__multiply>
 800d7c4:	ee18 1a10 	vmov	r1, s16
 800d7c8:	4680      	mov	r8, r0
 800d7ca:	4620      	mov	r0, r4
 800d7cc:	f000 ffbd 	bl	800e74a <_Bfree>
 800d7d0:	ee08 8a10 	vmov	s16, r8
 800d7d4:	9b07      	ldr	r3, [sp, #28]
 800d7d6:	1b9a      	subs	r2, r3, r6
 800d7d8:	d006      	beq.n	800d7e8 <_dtoa_r+0x770>
 800d7da:	ee18 1a10 	vmov	r1, s16
 800d7de:	4620      	mov	r0, r4
 800d7e0:	f001 f95c 	bl	800ea9c <__pow5mult>
 800d7e4:	ee08 0a10 	vmov	s16, r0
 800d7e8:	2101      	movs	r1, #1
 800d7ea:	4620      	mov	r0, r4
 800d7ec:	f001 f896 	bl	800e91c <__i2b>
 800d7f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d7f2:	2b00      	cmp	r3, #0
 800d7f4:	4606      	mov	r6, r0
 800d7f6:	f340 8088 	ble.w	800d90a <_dtoa_r+0x892>
 800d7fa:	461a      	mov	r2, r3
 800d7fc:	4601      	mov	r1, r0
 800d7fe:	4620      	mov	r0, r4
 800d800:	f001 f94c 	bl	800ea9c <__pow5mult>
 800d804:	9b06      	ldr	r3, [sp, #24]
 800d806:	2b01      	cmp	r3, #1
 800d808:	4606      	mov	r6, r0
 800d80a:	f340 8081 	ble.w	800d910 <_dtoa_r+0x898>
 800d80e:	f04f 0800 	mov.w	r8, #0
 800d812:	6933      	ldr	r3, [r6, #16]
 800d814:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800d818:	6918      	ldr	r0, [r3, #16]
 800d81a:	f001 f82f 	bl	800e87c <__hi0bits>
 800d81e:	f1c0 0020 	rsb	r0, r0, #32
 800d822:	9b05      	ldr	r3, [sp, #20]
 800d824:	4418      	add	r0, r3
 800d826:	f010 001f 	ands.w	r0, r0, #31
 800d82a:	f000 8092 	beq.w	800d952 <_dtoa_r+0x8da>
 800d82e:	f1c0 0320 	rsb	r3, r0, #32
 800d832:	2b04      	cmp	r3, #4
 800d834:	f340 808a 	ble.w	800d94c <_dtoa_r+0x8d4>
 800d838:	f1c0 001c 	rsb	r0, r0, #28
 800d83c:	9b04      	ldr	r3, [sp, #16]
 800d83e:	4403      	add	r3, r0
 800d840:	9304      	str	r3, [sp, #16]
 800d842:	9b05      	ldr	r3, [sp, #20]
 800d844:	4403      	add	r3, r0
 800d846:	4405      	add	r5, r0
 800d848:	9305      	str	r3, [sp, #20]
 800d84a:	9b04      	ldr	r3, [sp, #16]
 800d84c:	2b00      	cmp	r3, #0
 800d84e:	dd07      	ble.n	800d860 <_dtoa_r+0x7e8>
 800d850:	ee18 1a10 	vmov	r1, s16
 800d854:	461a      	mov	r2, r3
 800d856:	4620      	mov	r0, r4
 800d858:	f001 f960 	bl	800eb1c <__lshift>
 800d85c:	ee08 0a10 	vmov	s16, r0
 800d860:	9b05      	ldr	r3, [sp, #20]
 800d862:	2b00      	cmp	r3, #0
 800d864:	dd05      	ble.n	800d872 <_dtoa_r+0x7fa>
 800d866:	4631      	mov	r1, r6
 800d868:	461a      	mov	r2, r3
 800d86a:	4620      	mov	r0, r4
 800d86c:	f001 f956 	bl	800eb1c <__lshift>
 800d870:	4606      	mov	r6, r0
 800d872:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d874:	2b00      	cmp	r3, #0
 800d876:	d06e      	beq.n	800d956 <_dtoa_r+0x8de>
 800d878:	ee18 0a10 	vmov	r0, s16
 800d87c:	4631      	mov	r1, r6
 800d87e:	f001 f9bd 	bl	800ebfc <__mcmp>
 800d882:	2800      	cmp	r0, #0
 800d884:	da67      	bge.n	800d956 <_dtoa_r+0x8de>
 800d886:	9b00      	ldr	r3, [sp, #0]
 800d888:	3b01      	subs	r3, #1
 800d88a:	ee18 1a10 	vmov	r1, s16
 800d88e:	9300      	str	r3, [sp, #0]
 800d890:	220a      	movs	r2, #10
 800d892:	2300      	movs	r3, #0
 800d894:	4620      	mov	r0, r4
 800d896:	f000 ff61 	bl	800e75c <__multadd>
 800d89a:	9b08      	ldr	r3, [sp, #32]
 800d89c:	ee08 0a10 	vmov	s16, r0
 800d8a0:	2b00      	cmp	r3, #0
 800d8a2:	f000 81b0 	beq.w	800dc06 <_dtoa_r+0xb8e>
 800d8a6:	2300      	movs	r3, #0
 800d8a8:	4639      	mov	r1, r7
 800d8aa:	220a      	movs	r2, #10
 800d8ac:	4620      	mov	r0, r4
 800d8ae:	f000 ff55 	bl	800e75c <__multadd>
 800d8b2:	9b02      	ldr	r3, [sp, #8]
 800d8b4:	2b00      	cmp	r3, #0
 800d8b6:	4607      	mov	r7, r0
 800d8b8:	f300 808e 	bgt.w	800d9d8 <_dtoa_r+0x960>
 800d8bc:	9b06      	ldr	r3, [sp, #24]
 800d8be:	2b02      	cmp	r3, #2
 800d8c0:	dc51      	bgt.n	800d966 <_dtoa_r+0x8ee>
 800d8c2:	e089      	b.n	800d9d8 <_dtoa_r+0x960>
 800d8c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d8c6:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800d8ca:	e74b      	b.n	800d764 <_dtoa_r+0x6ec>
 800d8cc:	9b03      	ldr	r3, [sp, #12]
 800d8ce:	1e5e      	subs	r6, r3, #1
 800d8d0:	9b07      	ldr	r3, [sp, #28]
 800d8d2:	42b3      	cmp	r3, r6
 800d8d4:	bfbf      	itttt	lt
 800d8d6:	9b07      	ldrlt	r3, [sp, #28]
 800d8d8:	9607      	strlt	r6, [sp, #28]
 800d8da:	1af2      	sublt	r2, r6, r3
 800d8dc:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800d8de:	bfb6      	itet	lt
 800d8e0:	189b      	addlt	r3, r3, r2
 800d8e2:	1b9e      	subge	r6, r3, r6
 800d8e4:	930a      	strlt	r3, [sp, #40]	; 0x28
 800d8e6:	9b03      	ldr	r3, [sp, #12]
 800d8e8:	bfb8      	it	lt
 800d8ea:	2600      	movlt	r6, #0
 800d8ec:	2b00      	cmp	r3, #0
 800d8ee:	bfb7      	itett	lt
 800d8f0:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800d8f4:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 800d8f8:	1a9d      	sublt	r5, r3, r2
 800d8fa:	2300      	movlt	r3, #0
 800d8fc:	e734      	b.n	800d768 <_dtoa_r+0x6f0>
 800d8fe:	9e07      	ldr	r6, [sp, #28]
 800d900:	9d04      	ldr	r5, [sp, #16]
 800d902:	9f08      	ldr	r7, [sp, #32]
 800d904:	e73b      	b.n	800d77e <_dtoa_r+0x706>
 800d906:	9a07      	ldr	r2, [sp, #28]
 800d908:	e767      	b.n	800d7da <_dtoa_r+0x762>
 800d90a:	9b06      	ldr	r3, [sp, #24]
 800d90c:	2b01      	cmp	r3, #1
 800d90e:	dc18      	bgt.n	800d942 <_dtoa_r+0x8ca>
 800d910:	f1ba 0f00 	cmp.w	sl, #0
 800d914:	d115      	bne.n	800d942 <_dtoa_r+0x8ca>
 800d916:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800d91a:	b993      	cbnz	r3, 800d942 <_dtoa_r+0x8ca>
 800d91c:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800d920:	0d1b      	lsrs	r3, r3, #20
 800d922:	051b      	lsls	r3, r3, #20
 800d924:	b183      	cbz	r3, 800d948 <_dtoa_r+0x8d0>
 800d926:	9b04      	ldr	r3, [sp, #16]
 800d928:	3301      	adds	r3, #1
 800d92a:	9304      	str	r3, [sp, #16]
 800d92c:	9b05      	ldr	r3, [sp, #20]
 800d92e:	3301      	adds	r3, #1
 800d930:	9305      	str	r3, [sp, #20]
 800d932:	f04f 0801 	mov.w	r8, #1
 800d936:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d938:	2b00      	cmp	r3, #0
 800d93a:	f47f af6a 	bne.w	800d812 <_dtoa_r+0x79a>
 800d93e:	2001      	movs	r0, #1
 800d940:	e76f      	b.n	800d822 <_dtoa_r+0x7aa>
 800d942:	f04f 0800 	mov.w	r8, #0
 800d946:	e7f6      	b.n	800d936 <_dtoa_r+0x8be>
 800d948:	4698      	mov	r8, r3
 800d94a:	e7f4      	b.n	800d936 <_dtoa_r+0x8be>
 800d94c:	f43f af7d 	beq.w	800d84a <_dtoa_r+0x7d2>
 800d950:	4618      	mov	r0, r3
 800d952:	301c      	adds	r0, #28
 800d954:	e772      	b.n	800d83c <_dtoa_r+0x7c4>
 800d956:	9b03      	ldr	r3, [sp, #12]
 800d958:	2b00      	cmp	r3, #0
 800d95a:	dc37      	bgt.n	800d9cc <_dtoa_r+0x954>
 800d95c:	9b06      	ldr	r3, [sp, #24]
 800d95e:	2b02      	cmp	r3, #2
 800d960:	dd34      	ble.n	800d9cc <_dtoa_r+0x954>
 800d962:	9b03      	ldr	r3, [sp, #12]
 800d964:	9302      	str	r3, [sp, #8]
 800d966:	9b02      	ldr	r3, [sp, #8]
 800d968:	b96b      	cbnz	r3, 800d986 <_dtoa_r+0x90e>
 800d96a:	4631      	mov	r1, r6
 800d96c:	2205      	movs	r2, #5
 800d96e:	4620      	mov	r0, r4
 800d970:	f000 fef4 	bl	800e75c <__multadd>
 800d974:	4601      	mov	r1, r0
 800d976:	4606      	mov	r6, r0
 800d978:	ee18 0a10 	vmov	r0, s16
 800d97c:	f001 f93e 	bl	800ebfc <__mcmp>
 800d980:	2800      	cmp	r0, #0
 800d982:	f73f adba 	bgt.w	800d4fa <_dtoa_r+0x482>
 800d986:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d988:	9d01      	ldr	r5, [sp, #4]
 800d98a:	43db      	mvns	r3, r3
 800d98c:	9300      	str	r3, [sp, #0]
 800d98e:	f04f 0800 	mov.w	r8, #0
 800d992:	4631      	mov	r1, r6
 800d994:	4620      	mov	r0, r4
 800d996:	f000 fed8 	bl	800e74a <_Bfree>
 800d99a:	2f00      	cmp	r7, #0
 800d99c:	f43f aea4 	beq.w	800d6e8 <_dtoa_r+0x670>
 800d9a0:	f1b8 0f00 	cmp.w	r8, #0
 800d9a4:	d005      	beq.n	800d9b2 <_dtoa_r+0x93a>
 800d9a6:	45b8      	cmp	r8, r7
 800d9a8:	d003      	beq.n	800d9b2 <_dtoa_r+0x93a>
 800d9aa:	4641      	mov	r1, r8
 800d9ac:	4620      	mov	r0, r4
 800d9ae:	f000 fecc 	bl	800e74a <_Bfree>
 800d9b2:	4639      	mov	r1, r7
 800d9b4:	4620      	mov	r0, r4
 800d9b6:	f000 fec8 	bl	800e74a <_Bfree>
 800d9ba:	e695      	b.n	800d6e8 <_dtoa_r+0x670>
 800d9bc:	2600      	movs	r6, #0
 800d9be:	4637      	mov	r7, r6
 800d9c0:	e7e1      	b.n	800d986 <_dtoa_r+0x90e>
 800d9c2:	9700      	str	r7, [sp, #0]
 800d9c4:	4637      	mov	r7, r6
 800d9c6:	e598      	b.n	800d4fa <_dtoa_r+0x482>
 800d9c8:	40240000 	.word	0x40240000
 800d9cc:	9b08      	ldr	r3, [sp, #32]
 800d9ce:	2b00      	cmp	r3, #0
 800d9d0:	f000 80c9 	beq.w	800db66 <_dtoa_r+0xaee>
 800d9d4:	9b03      	ldr	r3, [sp, #12]
 800d9d6:	9302      	str	r3, [sp, #8]
 800d9d8:	2d00      	cmp	r5, #0
 800d9da:	dd05      	ble.n	800d9e8 <_dtoa_r+0x970>
 800d9dc:	4639      	mov	r1, r7
 800d9de:	462a      	mov	r2, r5
 800d9e0:	4620      	mov	r0, r4
 800d9e2:	f001 f89b 	bl	800eb1c <__lshift>
 800d9e6:	4607      	mov	r7, r0
 800d9e8:	f1b8 0f00 	cmp.w	r8, #0
 800d9ec:	d05a      	beq.n	800daa4 <_dtoa_r+0xa2c>
 800d9ee:	6879      	ldr	r1, [r7, #4]
 800d9f0:	4620      	mov	r0, r4
 800d9f2:	f000 fe85 	bl	800e700 <_Balloc>
 800d9f6:	4605      	mov	r5, r0
 800d9f8:	b920      	cbnz	r0, 800da04 <_dtoa_r+0x98c>
 800d9fa:	4b87      	ldr	r3, [pc, #540]	; (800dc18 <_dtoa_r+0xba0>)
 800d9fc:	4602      	mov	r2, r0
 800d9fe:	f240 21ea 	movw	r1, #746	; 0x2ea
 800da02:	e477      	b.n	800d2f4 <_dtoa_r+0x27c>
 800da04:	693a      	ldr	r2, [r7, #16]
 800da06:	3202      	adds	r2, #2
 800da08:	0092      	lsls	r2, r2, #2
 800da0a:	f107 010c 	add.w	r1, r7, #12
 800da0e:	300c      	adds	r0, #12
 800da10:	f7fc ff18 	bl	800a844 <memcpy>
 800da14:	2201      	movs	r2, #1
 800da16:	4629      	mov	r1, r5
 800da18:	4620      	mov	r0, r4
 800da1a:	f001 f87f 	bl	800eb1c <__lshift>
 800da1e:	9b01      	ldr	r3, [sp, #4]
 800da20:	f103 0901 	add.w	r9, r3, #1
 800da24:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800da28:	4413      	add	r3, r2
 800da2a:	9305      	str	r3, [sp, #20]
 800da2c:	f00a 0301 	and.w	r3, sl, #1
 800da30:	46b8      	mov	r8, r7
 800da32:	9304      	str	r3, [sp, #16]
 800da34:	4607      	mov	r7, r0
 800da36:	4631      	mov	r1, r6
 800da38:	ee18 0a10 	vmov	r0, s16
 800da3c:	f7ff fa90 	bl	800cf60 <quorem>
 800da40:	4641      	mov	r1, r8
 800da42:	9002      	str	r0, [sp, #8]
 800da44:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800da48:	ee18 0a10 	vmov	r0, s16
 800da4c:	f001 f8d6 	bl	800ebfc <__mcmp>
 800da50:	463a      	mov	r2, r7
 800da52:	9003      	str	r0, [sp, #12]
 800da54:	4631      	mov	r1, r6
 800da56:	4620      	mov	r0, r4
 800da58:	f001 f8ec 	bl	800ec34 <__mdiff>
 800da5c:	68c2      	ldr	r2, [r0, #12]
 800da5e:	f109 3bff 	add.w	fp, r9, #4294967295
 800da62:	4605      	mov	r5, r0
 800da64:	bb02      	cbnz	r2, 800daa8 <_dtoa_r+0xa30>
 800da66:	4601      	mov	r1, r0
 800da68:	ee18 0a10 	vmov	r0, s16
 800da6c:	f001 f8c6 	bl	800ebfc <__mcmp>
 800da70:	4602      	mov	r2, r0
 800da72:	4629      	mov	r1, r5
 800da74:	4620      	mov	r0, r4
 800da76:	9207      	str	r2, [sp, #28]
 800da78:	f000 fe67 	bl	800e74a <_Bfree>
 800da7c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800da80:	ea43 0102 	orr.w	r1, r3, r2
 800da84:	9b04      	ldr	r3, [sp, #16]
 800da86:	430b      	orrs	r3, r1
 800da88:	464d      	mov	r5, r9
 800da8a:	d10f      	bne.n	800daac <_dtoa_r+0xa34>
 800da8c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800da90:	d02a      	beq.n	800dae8 <_dtoa_r+0xa70>
 800da92:	9b03      	ldr	r3, [sp, #12]
 800da94:	2b00      	cmp	r3, #0
 800da96:	dd02      	ble.n	800da9e <_dtoa_r+0xa26>
 800da98:	9b02      	ldr	r3, [sp, #8]
 800da9a:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 800da9e:	f88b a000 	strb.w	sl, [fp]
 800daa2:	e776      	b.n	800d992 <_dtoa_r+0x91a>
 800daa4:	4638      	mov	r0, r7
 800daa6:	e7ba      	b.n	800da1e <_dtoa_r+0x9a6>
 800daa8:	2201      	movs	r2, #1
 800daaa:	e7e2      	b.n	800da72 <_dtoa_r+0x9fa>
 800daac:	9b03      	ldr	r3, [sp, #12]
 800daae:	2b00      	cmp	r3, #0
 800dab0:	db04      	blt.n	800dabc <_dtoa_r+0xa44>
 800dab2:	9906      	ldr	r1, [sp, #24]
 800dab4:	430b      	orrs	r3, r1
 800dab6:	9904      	ldr	r1, [sp, #16]
 800dab8:	430b      	orrs	r3, r1
 800daba:	d122      	bne.n	800db02 <_dtoa_r+0xa8a>
 800dabc:	2a00      	cmp	r2, #0
 800dabe:	ddee      	ble.n	800da9e <_dtoa_r+0xa26>
 800dac0:	ee18 1a10 	vmov	r1, s16
 800dac4:	2201      	movs	r2, #1
 800dac6:	4620      	mov	r0, r4
 800dac8:	f001 f828 	bl	800eb1c <__lshift>
 800dacc:	4631      	mov	r1, r6
 800dace:	ee08 0a10 	vmov	s16, r0
 800dad2:	f001 f893 	bl	800ebfc <__mcmp>
 800dad6:	2800      	cmp	r0, #0
 800dad8:	dc03      	bgt.n	800dae2 <_dtoa_r+0xa6a>
 800dada:	d1e0      	bne.n	800da9e <_dtoa_r+0xa26>
 800dadc:	f01a 0f01 	tst.w	sl, #1
 800dae0:	d0dd      	beq.n	800da9e <_dtoa_r+0xa26>
 800dae2:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800dae6:	d1d7      	bne.n	800da98 <_dtoa_r+0xa20>
 800dae8:	2339      	movs	r3, #57	; 0x39
 800daea:	f88b 3000 	strb.w	r3, [fp]
 800daee:	462b      	mov	r3, r5
 800daf0:	461d      	mov	r5, r3
 800daf2:	3b01      	subs	r3, #1
 800daf4:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800daf8:	2a39      	cmp	r2, #57	; 0x39
 800dafa:	d071      	beq.n	800dbe0 <_dtoa_r+0xb68>
 800dafc:	3201      	adds	r2, #1
 800dafe:	701a      	strb	r2, [r3, #0]
 800db00:	e747      	b.n	800d992 <_dtoa_r+0x91a>
 800db02:	2a00      	cmp	r2, #0
 800db04:	dd07      	ble.n	800db16 <_dtoa_r+0xa9e>
 800db06:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800db0a:	d0ed      	beq.n	800dae8 <_dtoa_r+0xa70>
 800db0c:	f10a 0301 	add.w	r3, sl, #1
 800db10:	f88b 3000 	strb.w	r3, [fp]
 800db14:	e73d      	b.n	800d992 <_dtoa_r+0x91a>
 800db16:	9b05      	ldr	r3, [sp, #20]
 800db18:	f809 ac01 	strb.w	sl, [r9, #-1]
 800db1c:	4599      	cmp	r9, r3
 800db1e:	d047      	beq.n	800dbb0 <_dtoa_r+0xb38>
 800db20:	ee18 1a10 	vmov	r1, s16
 800db24:	2300      	movs	r3, #0
 800db26:	220a      	movs	r2, #10
 800db28:	4620      	mov	r0, r4
 800db2a:	f000 fe17 	bl	800e75c <__multadd>
 800db2e:	45b8      	cmp	r8, r7
 800db30:	ee08 0a10 	vmov	s16, r0
 800db34:	f04f 0300 	mov.w	r3, #0
 800db38:	f04f 020a 	mov.w	r2, #10
 800db3c:	4641      	mov	r1, r8
 800db3e:	4620      	mov	r0, r4
 800db40:	d106      	bne.n	800db50 <_dtoa_r+0xad8>
 800db42:	f000 fe0b 	bl	800e75c <__multadd>
 800db46:	4680      	mov	r8, r0
 800db48:	4607      	mov	r7, r0
 800db4a:	f109 0901 	add.w	r9, r9, #1
 800db4e:	e772      	b.n	800da36 <_dtoa_r+0x9be>
 800db50:	f000 fe04 	bl	800e75c <__multadd>
 800db54:	4639      	mov	r1, r7
 800db56:	4680      	mov	r8, r0
 800db58:	2300      	movs	r3, #0
 800db5a:	220a      	movs	r2, #10
 800db5c:	4620      	mov	r0, r4
 800db5e:	f000 fdfd 	bl	800e75c <__multadd>
 800db62:	4607      	mov	r7, r0
 800db64:	e7f1      	b.n	800db4a <_dtoa_r+0xad2>
 800db66:	9b03      	ldr	r3, [sp, #12]
 800db68:	9302      	str	r3, [sp, #8]
 800db6a:	9d01      	ldr	r5, [sp, #4]
 800db6c:	ee18 0a10 	vmov	r0, s16
 800db70:	4631      	mov	r1, r6
 800db72:	f7ff f9f5 	bl	800cf60 <quorem>
 800db76:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800db7a:	9b01      	ldr	r3, [sp, #4]
 800db7c:	f805 ab01 	strb.w	sl, [r5], #1
 800db80:	1aea      	subs	r2, r5, r3
 800db82:	9b02      	ldr	r3, [sp, #8]
 800db84:	4293      	cmp	r3, r2
 800db86:	dd09      	ble.n	800db9c <_dtoa_r+0xb24>
 800db88:	ee18 1a10 	vmov	r1, s16
 800db8c:	2300      	movs	r3, #0
 800db8e:	220a      	movs	r2, #10
 800db90:	4620      	mov	r0, r4
 800db92:	f000 fde3 	bl	800e75c <__multadd>
 800db96:	ee08 0a10 	vmov	s16, r0
 800db9a:	e7e7      	b.n	800db6c <_dtoa_r+0xaf4>
 800db9c:	9b02      	ldr	r3, [sp, #8]
 800db9e:	2b00      	cmp	r3, #0
 800dba0:	bfc8      	it	gt
 800dba2:	461d      	movgt	r5, r3
 800dba4:	9b01      	ldr	r3, [sp, #4]
 800dba6:	bfd8      	it	le
 800dba8:	2501      	movle	r5, #1
 800dbaa:	441d      	add	r5, r3
 800dbac:	f04f 0800 	mov.w	r8, #0
 800dbb0:	ee18 1a10 	vmov	r1, s16
 800dbb4:	2201      	movs	r2, #1
 800dbb6:	4620      	mov	r0, r4
 800dbb8:	f000 ffb0 	bl	800eb1c <__lshift>
 800dbbc:	4631      	mov	r1, r6
 800dbbe:	ee08 0a10 	vmov	s16, r0
 800dbc2:	f001 f81b 	bl	800ebfc <__mcmp>
 800dbc6:	2800      	cmp	r0, #0
 800dbc8:	dc91      	bgt.n	800daee <_dtoa_r+0xa76>
 800dbca:	d102      	bne.n	800dbd2 <_dtoa_r+0xb5a>
 800dbcc:	f01a 0f01 	tst.w	sl, #1
 800dbd0:	d18d      	bne.n	800daee <_dtoa_r+0xa76>
 800dbd2:	462b      	mov	r3, r5
 800dbd4:	461d      	mov	r5, r3
 800dbd6:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800dbda:	2a30      	cmp	r2, #48	; 0x30
 800dbdc:	d0fa      	beq.n	800dbd4 <_dtoa_r+0xb5c>
 800dbde:	e6d8      	b.n	800d992 <_dtoa_r+0x91a>
 800dbe0:	9a01      	ldr	r2, [sp, #4]
 800dbe2:	429a      	cmp	r2, r3
 800dbe4:	d184      	bne.n	800daf0 <_dtoa_r+0xa78>
 800dbe6:	9b00      	ldr	r3, [sp, #0]
 800dbe8:	3301      	adds	r3, #1
 800dbea:	9300      	str	r3, [sp, #0]
 800dbec:	2331      	movs	r3, #49	; 0x31
 800dbee:	7013      	strb	r3, [r2, #0]
 800dbf0:	e6cf      	b.n	800d992 <_dtoa_r+0x91a>
 800dbf2:	4b0a      	ldr	r3, [pc, #40]	; (800dc1c <_dtoa_r+0xba4>)
 800dbf4:	f7ff ba97 	b.w	800d126 <_dtoa_r+0xae>
 800dbf8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800dbfa:	2b00      	cmp	r3, #0
 800dbfc:	f47f aa7b 	bne.w	800d0f6 <_dtoa_r+0x7e>
 800dc00:	4b07      	ldr	r3, [pc, #28]	; (800dc20 <_dtoa_r+0xba8>)
 800dc02:	f7ff ba90 	b.w	800d126 <_dtoa_r+0xae>
 800dc06:	9b02      	ldr	r3, [sp, #8]
 800dc08:	2b00      	cmp	r3, #0
 800dc0a:	dcae      	bgt.n	800db6a <_dtoa_r+0xaf2>
 800dc0c:	9b06      	ldr	r3, [sp, #24]
 800dc0e:	2b02      	cmp	r3, #2
 800dc10:	f73f aea9 	bgt.w	800d966 <_dtoa_r+0x8ee>
 800dc14:	e7a9      	b.n	800db6a <_dtoa_r+0xaf2>
 800dc16:	bf00      	nop
 800dc18:	08010d29 	.word	0x08010d29
 800dc1c:	08010cfa 	.word	0x08010cfa
 800dc20:	08010d20 	.word	0x08010d20

0800dc24 <_fclose_r>:
 800dc24:	b570      	push	{r4, r5, r6, lr}
 800dc26:	4606      	mov	r6, r0
 800dc28:	460c      	mov	r4, r1
 800dc2a:	b911      	cbnz	r1, 800dc32 <_fclose_r+0xe>
 800dc2c:	2500      	movs	r5, #0
 800dc2e:	4628      	mov	r0, r5
 800dc30:	bd70      	pop	{r4, r5, r6, pc}
 800dc32:	b118      	cbz	r0, 800dc3c <_fclose_r+0x18>
 800dc34:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800dc36:	b90b      	cbnz	r3, 800dc3c <_fclose_r+0x18>
 800dc38:	f7fc fa34 	bl	800a0a4 <__sinit>
 800dc3c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800dc3e:	07d8      	lsls	r0, r3, #31
 800dc40:	d405      	bmi.n	800dc4e <_fclose_r+0x2a>
 800dc42:	89a3      	ldrh	r3, [r4, #12]
 800dc44:	0599      	lsls	r1, r3, #22
 800dc46:	d402      	bmi.n	800dc4e <_fclose_r+0x2a>
 800dc48:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800dc4a:	f7fc fbad 	bl	800a3a8 <__retarget_lock_acquire_recursive>
 800dc4e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800dc52:	b93b      	cbnz	r3, 800dc64 <_fclose_r+0x40>
 800dc54:	6e65      	ldr	r5, [r4, #100]	; 0x64
 800dc56:	f015 0501 	ands.w	r5, r5, #1
 800dc5a:	d1e7      	bne.n	800dc2c <_fclose_r+0x8>
 800dc5c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800dc5e:	f7fc fba4 	bl	800a3aa <__retarget_lock_release_recursive>
 800dc62:	e7e4      	b.n	800dc2e <_fclose_r+0xa>
 800dc64:	4621      	mov	r1, r4
 800dc66:	4630      	mov	r0, r6
 800dc68:	f7fc f910 	bl	8009e8c <__sflush_r>
 800dc6c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800dc6e:	4605      	mov	r5, r0
 800dc70:	b133      	cbz	r3, 800dc80 <_fclose_r+0x5c>
 800dc72:	69e1      	ldr	r1, [r4, #28]
 800dc74:	4630      	mov	r0, r6
 800dc76:	4798      	blx	r3
 800dc78:	2800      	cmp	r0, #0
 800dc7a:	bfb8      	it	lt
 800dc7c:	f04f 35ff 	movlt.w	r5, #4294967295
 800dc80:	89a3      	ldrh	r3, [r4, #12]
 800dc82:	061a      	lsls	r2, r3, #24
 800dc84:	d503      	bpl.n	800dc8e <_fclose_r+0x6a>
 800dc86:	6921      	ldr	r1, [r4, #16]
 800dc88:	4630      	mov	r0, r6
 800dc8a:	f7fc fa87 	bl	800a19c <_free_r>
 800dc8e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800dc90:	b141      	cbz	r1, 800dca4 <_fclose_r+0x80>
 800dc92:	f104 0340 	add.w	r3, r4, #64	; 0x40
 800dc96:	4299      	cmp	r1, r3
 800dc98:	d002      	beq.n	800dca0 <_fclose_r+0x7c>
 800dc9a:	4630      	mov	r0, r6
 800dc9c:	f7fc fa7e 	bl	800a19c <_free_r>
 800dca0:	2300      	movs	r3, #0
 800dca2:	6323      	str	r3, [r4, #48]	; 0x30
 800dca4:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800dca6:	b121      	cbz	r1, 800dcb2 <_fclose_r+0x8e>
 800dca8:	4630      	mov	r0, r6
 800dcaa:	f7fc fa77 	bl	800a19c <_free_r>
 800dcae:	2300      	movs	r3, #0
 800dcb0:	6463      	str	r3, [r4, #68]	; 0x44
 800dcb2:	f7fc f9df 	bl	800a074 <__sfp_lock_acquire>
 800dcb6:	2300      	movs	r3, #0
 800dcb8:	81a3      	strh	r3, [r4, #12]
 800dcba:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800dcbc:	07db      	lsls	r3, r3, #31
 800dcbe:	d402      	bmi.n	800dcc6 <_fclose_r+0xa2>
 800dcc0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800dcc2:	f7fc fb72 	bl	800a3aa <__retarget_lock_release_recursive>
 800dcc6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800dcc8:	f7fc fb6d 	bl	800a3a6 <__retarget_lock_close_recursive>
 800dccc:	f7fc f9d8 	bl	800a080 <__sfp_lock_release>
 800dcd0:	e7ad      	b.n	800dc2e <_fclose_r+0xa>
	...

0800dcd4 <__libc_fini_array>:
 800dcd4:	b538      	push	{r3, r4, r5, lr}
 800dcd6:	4d07      	ldr	r5, [pc, #28]	; (800dcf4 <__libc_fini_array+0x20>)
 800dcd8:	4c07      	ldr	r4, [pc, #28]	; (800dcf8 <__libc_fini_array+0x24>)
 800dcda:	1b64      	subs	r4, r4, r5
 800dcdc:	10a4      	asrs	r4, r4, #2
 800dcde:	b91c      	cbnz	r4, 800dce8 <__libc_fini_array+0x14>
 800dce0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800dce4:	f002 bc50 	b.w	8010588 <_fini>
 800dce8:	3c01      	subs	r4, #1
 800dcea:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 800dcee:	4798      	blx	r3
 800dcf0:	e7f5      	b.n	800dcde <__libc_fini_array+0xa>
 800dcf2:	bf00      	nop
 800dcf4:	08010fd8 	.word	0x08010fd8
 800dcf8:	08010fdc 	.word	0x08010fdc

0800dcfc <__sfvwrite_r>:
 800dcfc:	6893      	ldr	r3, [r2, #8]
 800dcfe:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd02:	4606      	mov	r6, r0
 800dd04:	460c      	mov	r4, r1
 800dd06:	4690      	mov	r8, r2
 800dd08:	b91b      	cbnz	r3, 800dd12 <__sfvwrite_r+0x16>
 800dd0a:	2000      	movs	r0, #0
 800dd0c:	b003      	add	sp, #12
 800dd0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd12:	898b      	ldrh	r3, [r1, #12]
 800dd14:	0718      	lsls	r0, r3, #28
 800dd16:	d550      	bpl.n	800ddba <__sfvwrite_r+0xbe>
 800dd18:	690b      	ldr	r3, [r1, #16]
 800dd1a:	2b00      	cmp	r3, #0
 800dd1c:	d04d      	beq.n	800ddba <__sfvwrite_r+0xbe>
 800dd1e:	89a3      	ldrh	r3, [r4, #12]
 800dd20:	f8d8 7000 	ldr.w	r7, [r8]
 800dd24:	f013 0902 	ands.w	r9, r3, #2
 800dd28:	d16c      	bne.n	800de04 <__sfvwrite_r+0x108>
 800dd2a:	f013 0301 	ands.w	r3, r3, #1
 800dd2e:	f000 809c 	beq.w	800de6a <__sfvwrite_r+0x16e>
 800dd32:	4648      	mov	r0, r9
 800dd34:	46ca      	mov	sl, r9
 800dd36:	46cb      	mov	fp, r9
 800dd38:	f1bb 0f00 	cmp.w	fp, #0
 800dd3c:	f000 8103 	beq.w	800df46 <__sfvwrite_r+0x24a>
 800dd40:	b950      	cbnz	r0, 800dd58 <__sfvwrite_r+0x5c>
 800dd42:	465a      	mov	r2, fp
 800dd44:	210a      	movs	r1, #10
 800dd46:	4650      	mov	r0, sl
 800dd48:	f7f2 fa52 	bl	80001f0 <memchr>
 800dd4c:	2800      	cmp	r0, #0
 800dd4e:	f000 80ff 	beq.w	800df50 <__sfvwrite_r+0x254>
 800dd52:	3001      	adds	r0, #1
 800dd54:	eba0 090a 	sub.w	r9, r0, sl
 800dd58:	6820      	ldr	r0, [r4, #0]
 800dd5a:	6921      	ldr	r1, [r4, #16]
 800dd5c:	6963      	ldr	r3, [r4, #20]
 800dd5e:	45d9      	cmp	r9, fp
 800dd60:	464a      	mov	r2, r9
 800dd62:	bf28      	it	cs
 800dd64:	465a      	movcs	r2, fp
 800dd66:	4288      	cmp	r0, r1
 800dd68:	f240 80f5 	bls.w	800df56 <__sfvwrite_r+0x25a>
 800dd6c:	68a5      	ldr	r5, [r4, #8]
 800dd6e:	441d      	add	r5, r3
 800dd70:	42aa      	cmp	r2, r5
 800dd72:	f340 80f0 	ble.w	800df56 <__sfvwrite_r+0x25a>
 800dd76:	4651      	mov	r1, sl
 800dd78:	462a      	mov	r2, r5
 800dd7a:	f000 fca7 	bl	800e6cc <memmove>
 800dd7e:	6823      	ldr	r3, [r4, #0]
 800dd80:	442b      	add	r3, r5
 800dd82:	6023      	str	r3, [r4, #0]
 800dd84:	4621      	mov	r1, r4
 800dd86:	4630      	mov	r0, r6
 800dd88:	f7fc f90e 	bl	8009fa8 <_fflush_r>
 800dd8c:	2800      	cmp	r0, #0
 800dd8e:	d167      	bne.n	800de60 <__sfvwrite_r+0x164>
 800dd90:	ebb9 0905 	subs.w	r9, r9, r5
 800dd94:	f040 80f7 	bne.w	800df86 <__sfvwrite_r+0x28a>
 800dd98:	4621      	mov	r1, r4
 800dd9a:	4630      	mov	r0, r6
 800dd9c:	f7fc f904 	bl	8009fa8 <_fflush_r>
 800dda0:	2800      	cmp	r0, #0
 800dda2:	d15d      	bne.n	800de60 <__sfvwrite_r+0x164>
 800dda4:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800dda8:	44aa      	add	sl, r5
 800ddaa:	ebab 0b05 	sub.w	fp, fp, r5
 800ddae:	1b55      	subs	r5, r2, r5
 800ddb0:	f8c8 5008 	str.w	r5, [r8, #8]
 800ddb4:	2d00      	cmp	r5, #0
 800ddb6:	d1bf      	bne.n	800dd38 <__sfvwrite_r+0x3c>
 800ddb8:	e7a7      	b.n	800dd0a <__sfvwrite_r+0xe>
 800ddba:	4621      	mov	r1, r4
 800ddbc:	4630      	mov	r0, r6
 800ddbe:	f001 fa03 	bl	800f1c8 <__swsetup_r>
 800ddc2:	2800      	cmp	r0, #0
 800ddc4:	d0ab      	beq.n	800dd1e <__sfvwrite_r+0x22>
 800ddc6:	f04f 30ff 	mov.w	r0, #4294967295
 800ddca:	e79f      	b.n	800dd0c <__sfvwrite_r+0x10>
 800ddcc:	e9d7 b900 	ldrd	fp, r9, [r7]
 800ddd0:	3708      	adds	r7, #8
 800ddd2:	f1b9 0f00 	cmp.w	r9, #0
 800ddd6:	d0f9      	beq.n	800ddcc <__sfvwrite_r+0xd0>
 800ddd8:	45d1      	cmp	r9, sl
 800ddda:	464b      	mov	r3, r9
 800dddc:	69e1      	ldr	r1, [r4, #28]
 800ddde:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800dde0:	bf28      	it	cs
 800dde2:	4653      	movcs	r3, sl
 800dde4:	465a      	mov	r2, fp
 800dde6:	4630      	mov	r0, r6
 800dde8:	47a8      	blx	r5
 800ddea:	2800      	cmp	r0, #0
 800ddec:	dd38      	ble.n	800de60 <__sfvwrite_r+0x164>
 800ddee:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800ddf2:	4483      	add	fp, r0
 800ddf4:	eba9 0900 	sub.w	r9, r9, r0
 800ddf8:	1a18      	subs	r0, r3, r0
 800ddfa:	f8c8 0008 	str.w	r0, [r8, #8]
 800ddfe:	2800      	cmp	r0, #0
 800de00:	d1e7      	bne.n	800ddd2 <__sfvwrite_r+0xd6>
 800de02:	e782      	b.n	800dd0a <__sfvwrite_r+0xe>
 800de04:	f04f 0b00 	mov.w	fp, #0
 800de08:	f8df a180 	ldr.w	sl, [pc, #384]	; 800df8c <__sfvwrite_r+0x290>
 800de0c:	46d9      	mov	r9, fp
 800de0e:	e7e0      	b.n	800ddd2 <__sfvwrite_r+0xd6>
 800de10:	e9d7 9a00 	ldrd	r9, sl, [r7]
 800de14:	3708      	adds	r7, #8
 800de16:	f1ba 0f00 	cmp.w	sl, #0
 800de1a:	d0f9      	beq.n	800de10 <__sfvwrite_r+0x114>
 800de1c:	89a3      	ldrh	r3, [r4, #12]
 800de1e:	6820      	ldr	r0, [r4, #0]
 800de20:	68a2      	ldr	r2, [r4, #8]
 800de22:	0599      	lsls	r1, r3, #22
 800de24:	d563      	bpl.n	800deee <__sfvwrite_r+0x1f2>
 800de26:	4552      	cmp	r2, sl
 800de28:	d836      	bhi.n	800de98 <__sfvwrite_r+0x19c>
 800de2a:	f413 6f90 	tst.w	r3, #1152	; 0x480
 800de2e:	d033      	beq.n	800de98 <__sfvwrite_r+0x19c>
 800de30:	6921      	ldr	r1, [r4, #16]
 800de32:	6965      	ldr	r5, [r4, #20]
 800de34:	eba0 0b01 	sub.w	fp, r0, r1
 800de38:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800de3c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800de40:	f10b 0201 	add.w	r2, fp, #1
 800de44:	106d      	asrs	r5, r5, #1
 800de46:	4452      	add	r2, sl
 800de48:	4295      	cmp	r5, r2
 800de4a:	bf38      	it	cc
 800de4c:	4615      	movcc	r5, r2
 800de4e:	055b      	lsls	r3, r3, #21
 800de50:	d53d      	bpl.n	800dece <__sfvwrite_r+0x1d2>
 800de52:	4629      	mov	r1, r5
 800de54:	4630      	mov	r0, r6
 800de56:	f7fc fab9 	bl	800a3cc <_malloc_r>
 800de5a:	b948      	cbnz	r0, 800de70 <__sfvwrite_r+0x174>
 800de5c:	230c      	movs	r3, #12
 800de5e:	6033      	str	r3, [r6, #0]
 800de60:	89a3      	ldrh	r3, [r4, #12]
 800de62:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800de66:	81a3      	strh	r3, [r4, #12]
 800de68:	e7ad      	b.n	800ddc6 <__sfvwrite_r+0xca>
 800de6a:	4699      	mov	r9, r3
 800de6c:	469a      	mov	sl, r3
 800de6e:	e7d2      	b.n	800de16 <__sfvwrite_r+0x11a>
 800de70:	465a      	mov	r2, fp
 800de72:	6921      	ldr	r1, [r4, #16]
 800de74:	9001      	str	r0, [sp, #4]
 800de76:	f7fc fce5 	bl	800a844 <memcpy>
 800de7a:	89a2      	ldrh	r2, [r4, #12]
 800de7c:	9b01      	ldr	r3, [sp, #4]
 800de7e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 800de82:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800de86:	81a2      	strh	r2, [r4, #12]
 800de88:	6123      	str	r3, [r4, #16]
 800de8a:	6165      	str	r5, [r4, #20]
 800de8c:	445b      	add	r3, fp
 800de8e:	eba5 050b 	sub.w	r5, r5, fp
 800de92:	6023      	str	r3, [r4, #0]
 800de94:	4652      	mov	r2, sl
 800de96:	60a5      	str	r5, [r4, #8]
 800de98:	4552      	cmp	r2, sl
 800de9a:	bf28      	it	cs
 800de9c:	4652      	movcs	r2, sl
 800de9e:	6820      	ldr	r0, [r4, #0]
 800dea0:	9201      	str	r2, [sp, #4]
 800dea2:	4649      	mov	r1, r9
 800dea4:	f000 fc12 	bl	800e6cc <memmove>
 800dea8:	68a3      	ldr	r3, [r4, #8]
 800deaa:	9a01      	ldr	r2, [sp, #4]
 800deac:	1a9b      	subs	r3, r3, r2
 800deae:	60a3      	str	r3, [r4, #8]
 800deb0:	6823      	ldr	r3, [r4, #0]
 800deb2:	441a      	add	r2, r3
 800deb4:	4655      	mov	r5, sl
 800deb6:	6022      	str	r2, [r4, #0]
 800deb8:	f8d8 0008 	ldr.w	r0, [r8, #8]
 800debc:	44a9      	add	r9, r5
 800debe:	ebaa 0a05 	sub.w	sl, sl, r5
 800dec2:	1b45      	subs	r5, r0, r5
 800dec4:	f8c8 5008 	str.w	r5, [r8, #8]
 800dec8:	2d00      	cmp	r5, #0
 800deca:	d1a4      	bne.n	800de16 <__sfvwrite_r+0x11a>
 800decc:	e71d      	b.n	800dd0a <__sfvwrite_r+0xe>
 800dece:	462a      	mov	r2, r5
 800ded0:	4630      	mov	r0, r6
 800ded2:	f7fc fd2f 	bl	800a934 <_realloc_r>
 800ded6:	4603      	mov	r3, r0
 800ded8:	2800      	cmp	r0, #0
 800deda:	d1d5      	bne.n	800de88 <__sfvwrite_r+0x18c>
 800dedc:	6921      	ldr	r1, [r4, #16]
 800dede:	4630      	mov	r0, r6
 800dee0:	f7fc f95c 	bl	800a19c <_free_r>
 800dee4:	89a3      	ldrh	r3, [r4, #12]
 800dee6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800deea:	81a3      	strh	r3, [r4, #12]
 800deec:	e7b6      	b.n	800de5c <__sfvwrite_r+0x160>
 800deee:	6923      	ldr	r3, [r4, #16]
 800def0:	4283      	cmp	r3, r0
 800def2:	d302      	bcc.n	800defa <__sfvwrite_r+0x1fe>
 800def4:	6961      	ldr	r1, [r4, #20]
 800def6:	4551      	cmp	r1, sl
 800def8:	d915      	bls.n	800df26 <__sfvwrite_r+0x22a>
 800defa:	4552      	cmp	r2, sl
 800defc:	bf28      	it	cs
 800defe:	4652      	movcs	r2, sl
 800df00:	4649      	mov	r1, r9
 800df02:	4615      	mov	r5, r2
 800df04:	f000 fbe2 	bl	800e6cc <memmove>
 800df08:	68a3      	ldr	r3, [r4, #8]
 800df0a:	6822      	ldr	r2, [r4, #0]
 800df0c:	1b5b      	subs	r3, r3, r5
 800df0e:	442a      	add	r2, r5
 800df10:	60a3      	str	r3, [r4, #8]
 800df12:	6022      	str	r2, [r4, #0]
 800df14:	2b00      	cmp	r3, #0
 800df16:	d1cf      	bne.n	800deb8 <__sfvwrite_r+0x1bc>
 800df18:	4621      	mov	r1, r4
 800df1a:	4630      	mov	r0, r6
 800df1c:	f7fc f844 	bl	8009fa8 <_fflush_r>
 800df20:	2800      	cmp	r0, #0
 800df22:	d0c9      	beq.n	800deb8 <__sfvwrite_r+0x1bc>
 800df24:	e79c      	b.n	800de60 <__sfvwrite_r+0x164>
 800df26:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800df2a:	459a      	cmp	sl, r3
 800df2c:	bf38      	it	cc
 800df2e:	4653      	movcc	r3, sl
 800df30:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800df32:	fb93 f3f1 	sdiv	r3, r3, r1
 800df36:	464a      	mov	r2, r9
 800df38:	434b      	muls	r3, r1
 800df3a:	4630      	mov	r0, r6
 800df3c:	69e1      	ldr	r1, [r4, #28]
 800df3e:	47a8      	blx	r5
 800df40:	1e05      	subs	r5, r0, #0
 800df42:	dcb9      	bgt.n	800deb8 <__sfvwrite_r+0x1bc>
 800df44:	e78c      	b.n	800de60 <__sfvwrite_r+0x164>
 800df46:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800df4a:	2000      	movs	r0, #0
 800df4c:	3708      	adds	r7, #8
 800df4e:	e6f3      	b.n	800dd38 <__sfvwrite_r+0x3c>
 800df50:	f10b 0901 	add.w	r9, fp, #1
 800df54:	e700      	b.n	800dd58 <__sfvwrite_r+0x5c>
 800df56:	4293      	cmp	r3, r2
 800df58:	dc08      	bgt.n	800df6c <__sfvwrite_r+0x270>
 800df5a:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800df5c:	69e1      	ldr	r1, [r4, #28]
 800df5e:	4652      	mov	r2, sl
 800df60:	4630      	mov	r0, r6
 800df62:	47a8      	blx	r5
 800df64:	1e05      	subs	r5, r0, #0
 800df66:	f73f af13 	bgt.w	800dd90 <__sfvwrite_r+0x94>
 800df6a:	e779      	b.n	800de60 <__sfvwrite_r+0x164>
 800df6c:	4651      	mov	r1, sl
 800df6e:	9201      	str	r2, [sp, #4]
 800df70:	f000 fbac 	bl	800e6cc <memmove>
 800df74:	9a01      	ldr	r2, [sp, #4]
 800df76:	68a3      	ldr	r3, [r4, #8]
 800df78:	1a9b      	subs	r3, r3, r2
 800df7a:	60a3      	str	r3, [r4, #8]
 800df7c:	6823      	ldr	r3, [r4, #0]
 800df7e:	4413      	add	r3, r2
 800df80:	6023      	str	r3, [r4, #0]
 800df82:	4615      	mov	r5, r2
 800df84:	e704      	b.n	800dd90 <__sfvwrite_r+0x94>
 800df86:	2001      	movs	r0, #1
 800df88:	e70c      	b.n	800dda4 <__sfvwrite_r+0xa8>
 800df8a:	bf00      	nop
 800df8c:	7ffffc00 	.word	0x7ffffc00

0800df90 <rshift>:
 800df90:	6903      	ldr	r3, [r0, #16]
 800df92:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800df96:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800df9a:	ea4f 1261 	mov.w	r2, r1, asr #5
 800df9e:	f100 0414 	add.w	r4, r0, #20
 800dfa2:	dd45      	ble.n	800e030 <rshift+0xa0>
 800dfa4:	f011 011f 	ands.w	r1, r1, #31
 800dfa8:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800dfac:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800dfb0:	d10c      	bne.n	800dfcc <rshift+0x3c>
 800dfb2:	f100 0710 	add.w	r7, r0, #16
 800dfb6:	4629      	mov	r1, r5
 800dfb8:	42b1      	cmp	r1, r6
 800dfba:	d334      	bcc.n	800e026 <rshift+0x96>
 800dfbc:	1a9b      	subs	r3, r3, r2
 800dfbe:	009b      	lsls	r3, r3, #2
 800dfc0:	1eea      	subs	r2, r5, #3
 800dfc2:	4296      	cmp	r6, r2
 800dfc4:	bf38      	it	cc
 800dfc6:	2300      	movcc	r3, #0
 800dfc8:	4423      	add	r3, r4
 800dfca:	e015      	b.n	800dff8 <rshift+0x68>
 800dfcc:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800dfd0:	f1c1 0820 	rsb	r8, r1, #32
 800dfd4:	40cf      	lsrs	r7, r1
 800dfd6:	f105 0e04 	add.w	lr, r5, #4
 800dfda:	46a1      	mov	r9, r4
 800dfdc:	4576      	cmp	r6, lr
 800dfde:	46f4      	mov	ip, lr
 800dfe0:	d815      	bhi.n	800e00e <rshift+0x7e>
 800dfe2:	1a9a      	subs	r2, r3, r2
 800dfe4:	0092      	lsls	r2, r2, #2
 800dfe6:	3a04      	subs	r2, #4
 800dfe8:	3501      	adds	r5, #1
 800dfea:	42ae      	cmp	r6, r5
 800dfec:	bf38      	it	cc
 800dfee:	2200      	movcc	r2, #0
 800dff0:	18a3      	adds	r3, r4, r2
 800dff2:	50a7      	str	r7, [r4, r2]
 800dff4:	b107      	cbz	r7, 800dff8 <rshift+0x68>
 800dff6:	3304      	adds	r3, #4
 800dff8:	1b1a      	subs	r2, r3, r4
 800dffa:	42a3      	cmp	r3, r4
 800dffc:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800e000:	bf08      	it	eq
 800e002:	2300      	moveq	r3, #0
 800e004:	6102      	str	r2, [r0, #16]
 800e006:	bf08      	it	eq
 800e008:	6143      	streq	r3, [r0, #20]
 800e00a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e00e:	f8dc c000 	ldr.w	ip, [ip]
 800e012:	fa0c fc08 	lsl.w	ip, ip, r8
 800e016:	ea4c 0707 	orr.w	r7, ip, r7
 800e01a:	f849 7b04 	str.w	r7, [r9], #4
 800e01e:	f85e 7b04 	ldr.w	r7, [lr], #4
 800e022:	40cf      	lsrs	r7, r1
 800e024:	e7da      	b.n	800dfdc <rshift+0x4c>
 800e026:	f851 cb04 	ldr.w	ip, [r1], #4
 800e02a:	f847 cf04 	str.w	ip, [r7, #4]!
 800e02e:	e7c3      	b.n	800dfb8 <rshift+0x28>
 800e030:	4623      	mov	r3, r4
 800e032:	e7e1      	b.n	800dff8 <rshift+0x68>

0800e034 <__hexdig_fun>:
 800e034:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800e038:	2b09      	cmp	r3, #9
 800e03a:	d802      	bhi.n	800e042 <__hexdig_fun+0xe>
 800e03c:	3820      	subs	r0, #32
 800e03e:	b2c0      	uxtb	r0, r0
 800e040:	4770      	bx	lr
 800e042:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800e046:	2b05      	cmp	r3, #5
 800e048:	d801      	bhi.n	800e04e <__hexdig_fun+0x1a>
 800e04a:	3847      	subs	r0, #71	; 0x47
 800e04c:	e7f7      	b.n	800e03e <__hexdig_fun+0xa>
 800e04e:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800e052:	2b05      	cmp	r3, #5
 800e054:	d801      	bhi.n	800e05a <__hexdig_fun+0x26>
 800e056:	3827      	subs	r0, #39	; 0x27
 800e058:	e7f1      	b.n	800e03e <__hexdig_fun+0xa>
 800e05a:	2000      	movs	r0, #0
 800e05c:	4770      	bx	lr
	...

0800e060 <__gethex>:
 800e060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e064:	ed2d 8b02 	vpush	{d8}
 800e068:	b089      	sub	sp, #36	; 0x24
 800e06a:	ee08 0a10 	vmov	s16, r0
 800e06e:	9304      	str	r3, [sp, #16]
 800e070:	4bb4      	ldr	r3, [pc, #720]	; (800e344 <__gethex+0x2e4>)
 800e072:	681b      	ldr	r3, [r3, #0]
 800e074:	9301      	str	r3, [sp, #4]
 800e076:	4618      	mov	r0, r3
 800e078:	468b      	mov	fp, r1
 800e07a:	4690      	mov	r8, r2
 800e07c:	f7f2 f8b0 	bl	80001e0 <strlen>
 800e080:	9b01      	ldr	r3, [sp, #4]
 800e082:	f8db 2000 	ldr.w	r2, [fp]
 800e086:	4403      	add	r3, r0
 800e088:	4682      	mov	sl, r0
 800e08a:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800e08e:	9305      	str	r3, [sp, #20]
 800e090:	1c93      	adds	r3, r2, #2
 800e092:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800e096:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800e09a:	32fe      	adds	r2, #254	; 0xfe
 800e09c:	18d1      	adds	r1, r2, r3
 800e09e:	461f      	mov	r7, r3
 800e0a0:	f813 0b01 	ldrb.w	r0, [r3], #1
 800e0a4:	9100      	str	r1, [sp, #0]
 800e0a6:	2830      	cmp	r0, #48	; 0x30
 800e0a8:	d0f8      	beq.n	800e09c <__gethex+0x3c>
 800e0aa:	f7ff ffc3 	bl	800e034 <__hexdig_fun>
 800e0ae:	4604      	mov	r4, r0
 800e0b0:	2800      	cmp	r0, #0
 800e0b2:	d13a      	bne.n	800e12a <__gethex+0xca>
 800e0b4:	9901      	ldr	r1, [sp, #4]
 800e0b6:	4652      	mov	r2, sl
 800e0b8:	4638      	mov	r0, r7
 800e0ba:	f7fc feb1 	bl	800ae20 <strncmp>
 800e0be:	4605      	mov	r5, r0
 800e0c0:	2800      	cmp	r0, #0
 800e0c2:	d168      	bne.n	800e196 <__gethex+0x136>
 800e0c4:	f817 000a 	ldrb.w	r0, [r7, sl]
 800e0c8:	eb07 060a 	add.w	r6, r7, sl
 800e0cc:	f7ff ffb2 	bl	800e034 <__hexdig_fun>
 800e0d0:	2800      	cmp	r0, #0
 800e0d2:	d062      	beq.n	800e19a <__gethex+0x13a>
 800e0d4:	4633      	mov	r3, r6
 800e0d6:	7818      	ldrb	r0, [r3, #0]
 800e0d8:	2830      	cmp	r0, #48	; 0x30
 800e0da:	461f      	mov	r7, r3
 800e0dc:	f103 0301 	add.w	r3, r3, #1
 800e0e0:	d0f9      	beq.n	800e0d6 <__gethex+0x76>
 800e0e2:	f7ff ffa7 	bl	800e034 <__hexdig_fun>
 800e0e6:	2301      	movs	r3, #1
 800e0e8:	fab0 f480 	clz	r4, r0
 800e0ec:	0964      	lsrs	r4, r4, #5
 800e0ee:	4635      	mov	r5, r6
 800e0f0:	9300      	str	r3, [sp, #0]
 800e0f2:	463a      	mov	r2, r7
 800e0f4:	4616      	mov	r6, r2
 800e0f6:	3201      	adds	r2, #1
 800e0f8:	7830      	ldrb	r0, [r6, #0]
 800e0fa:	f7ff ff9b 	bl	800e034 <__hexdig_fun>
 800e0fe:	2800      	cmp	r0, #0
 800e100:	d1f8      	bne.n	800e0f4 <__gethex+0x94>
 800e102:	9901      	ldr	r1, [sp, #4]
 800e104:	4652      	mov	r2, sl
 800e106:	4630      	mov	r0, r6
 800e108:	f7fc fe8a 	bl	800ae20 <strncmp>
 800e10c:	b980      	cbnz	r0, 800e130 <__gethex+0xd0>
 800e10e:	b94d      	cbnz	r5, 800e124 <__gethex+0xc4>
 800e110:	eb06 050a 	add.w	r5, r6, sl
 800e114:	462a      	mov	r2, r5
 800e116:	4616      	mov	r6, r2
 800e118:	3201      	adds	r2, #1
 800e11a:	7830      	ldrb	r0, [r6, #0]
 800e11c:	f7ff ff8a 	bl	800e034 <__hexdig_fun>
 800e120:	2800      	cmp	r0, #0
 800e122:	d1f8      	bne.n	800e116 <__gethex+0xb6>
 800e124:	1bad      	subs	r5, r5, r6
 800e126:	00ad      	lsls	r5, r5, #2
 800e128:	e004      	b.n	800e134 <__gethex+0xd4>
 800e12a:	2400      	movs	r4, #0
 800e12c:	4625      	mov	r5, r4
 800e12e:	e7e0      	b.n	800e0f2 <__gethex+0x92>
 800e130:	2d00      	cmp	r5, #0
 800e132:	d1f7      	bne.n	800e124 <__gethex+0xc4>
 800e134:	7833      	ldrb	r3, [r6, #0]
 800e136:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800e13a:	2b50      	cmp	r3, #80	; 0x50
 800e13c:	d13b      	bne.n	800e1b6 <__gethex+0x156>
 800e13e:	7873      	ldrb	r3, [r6, #1]
 800e140:	2b2b      	cmp	r3, #43	; 0x2b
 800e142:	d02c      	beq.n	800e19e <__gethex+0x13e>
 800e144:	2b2d      	cmp	r3, #45	; 0x2d
 800e146:	d02e      	beq.n	800e1a6 <__gethex+0x146>
 800e148:	1c71      	adds	r1, r6, #1
 800e14a:	f04f 0900 	mov.w	r9, #0
 800e14e:	7808      	ldrb	r0, [r1, #0]
 800e150:	f7ff ff70 	bl	800e034 <__hexdig_fun>
 800e154:	1e43      	subs	r3, r0, #1
 800e156:	b2db      	uxtb	r3, r3
 800e158:	2b18      	cmp	r3, #24
 800e15a:	d82c      	bhi.n	800e1b6 <__gethex+0x156>
 800e15c:	f1a0 0210 	sub.w	r2, r0, #16
 800e160:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800e164:	f7ff ff66 	bl	800e034 <__hexdig_fun>
 800e168:	1e43      	subs	r3, r0, #1
 800e16a:	b2db      	uxtb	r3, r3
 800e16c:	2b18      	cmp	r3, #24
 800e16e:	d91d      	bls.n	800e1ac <__gethex+0x14c>
 800e170:	f1b9 0f00 	cmp.w	r9, #0
 800e174:	d000      	beq.n	800e178 <__gethex+0x118>
 800e176:	4252      	negs	r2, r2
 800e178:	4415      	add	r5, r2
 800e17a:	f8cb 1000 	str.w	r1, [fp]
 800e17e:	b1e4      	cbz	r4, 800e1ba <__gethex+0x15a>
 800e180:	9b00      	ldr	r3, [sp, #0]
 800e182:	2b00      	cmp	r3, #0
 800e184:	bf14      	ite	ne
 800e186:	2700      	movne	r7, #0
 800e188:	2706      	moveq	r7, #6
 800e18a:	4638      	mov	r0, r7
 800e18c:	b009      	add	sp, #36	; 0x24
 800e18e:	ecbd 8b02 	vpop	{d8}
 800e192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e196:	463e      	mov	r6, r7
 800e198:	4625      	mov	r5, r4
 800e19a:	2401      	movs	r4, #1
 800e19c:	e7ca      	b.n	800e134 <__gethex+0xd4>
 800e19e:	f04f 0900 	mov.w	r9, #0
 800e1a2:	1cb1      	adds	r1, r6, #2
 800e1a4:	e7d3      	b.n	800e14e <__gethex+0xee>
 800e1a6:	f04f 0901 	mov.w	r9, #1
 800e1aa:	e7fa      	b.n	800e1a2 <__gethex+0x142>
 800e1ac:	230a      	movs	r3, #10
 800e1ae:	fb03 0202 	mla	r2, r3, r2, r0
 800e1b2:	3a10      	subs	r2, #16
 800e1b4:	e7d4      	b.n	800e160 <__gethex+0x100>
 800e1b6:	4631      	mov	r1, r6
 800e1b8:	e7df      	b.n	800e17a <__gethex+0x11a>
 800e1ba:	1bf3      	subs	r3, r6, r7
 800e1bc:	3b01      	subs	r3, #1
 800e1be:	4621      	mov	r1, r4
 800e1c0:	2b07      	cmp	r3, #7
 800e1c2:	dc0b      	bgt.n	800e1dc <__gethex+0x17c>
 800e1c4:	ee18 0a10 	vmov	r0, s16
 800e1c8:	f000 fa9a 	bl	800e700 <_Balloc>
 800e1cc:	4604      	mov	r4, r0
 800e1ce:	b940      	cbnz	r0, 800e1e2 <__gethex+0x182>
 800e1d0:	4b5d      	ldr	r3, [pc, #372]	; (800e348 <__gethex+0x2e8>)
 800e1d2:	4602      	mov	r2, r0
 800e1d4:	21de      	movs	r1, #222	; 0xde
 800e1d6:	485d      	ldr	r0, [pc, #372]	; (800e34c <__gethex+0x2ec>)
 800e1d8:	f001 f890 	bl	800f2fc <__assert_func>
 800e1dc:	3101      	adds	r1, #1
 800e1de:	105b      	asrs	r3, r3, #1
 800e1e0:	e7ee      	b.n	800e1c0 <__gethex+0x160>
 800e1e2:	f100 0914 	add.w	r9, r0, #20
 800e1e6:	f04f 0b00 	mov.w	fp, #0
 800e1ea:	f1ca 0301 	rsb	r3, sl, #1
 800e1ee:	f8cd 9008 	str.w	r9, [sp, #8]
 800e1f2:	f8cd b000 	str.w	fp, [sp]
 800e1f6:	9306      	str	r3, [sp, #24]
 800e1f8:	42b7      	cmp	r7, r6
 800e1fa:	d340      	bcc.n	800e27e <__gethex+0x21e>
 800e1fc:	9802      	ldr	r0, [sp, #8]
 800e1fe:	9b00      	ldr	r3, [sp, #0]
 800e200:	f840 3b04 	str.w	r3, [r0], #4
 800e204:	eba0 0009 	sub.w	r0, r0, r9
 800e208:	1080      	asrs	r0, r0, #2
 800e20a:	0146      	lsls	r6, r0, #5
 800e20c:	6120      	str	r0, [r4, #16]
 800e20e:	4618      	mov	r0, r3
 800e210:	f000 fb34 	bl	800e87c <__hi0bits>
 800e214:	1a30      	subs	r0, r6, r0
 800e216:	f8d8 6000 	ldr.w	r6, [r8]
 800e21a:	42b0      	cmp	r0, r6
 800e21c:	dd63      	ble.n	800e2e6 <__gethex+0x286>
 800e21e:	1b87      	subs	r7, r0, r6
 800e220:	4639      	mov	r1, r7
 800e222:	4620      	mov	r0, r4
 800e224:	f000 febe 	bl	800efa4 <__any_on>
 800e228:	4682      	mov	sl, r0
 800e22a:	b1a8      	cbz	r0, 800e258 <__gethex+0x1f8>
 800e22c:	1e7b      	subs	r3, r7, #1
 800e22e:	1159      	asrs	r1, r3, #5
 800e230:	f003 021f 	and.w	r2, r3, #31
 800e234:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 800e238:	f04f 0a01 	mov.w	sl, #1
 800e23c:	fa0a f202 	lsl.w	r2, sl, r2
 800e240:	420a      	tst	r2, r1
 800e242:	d009      	beq.n	800e258 <__gethex+0x1f8>
 800e244:	4553      	cmp	r3, sl
 800e246:	dd05      	ble.n	800e254 <__gethex+0x1f4>
 800e248:	1eb9      	subs	r1, r7, #2
 800e24a:	4620      	mov	r0, r4
 800e24c:	f000 feaa 	bl	800efa4 <__any_on>
 800e250:	2800      	cmp	r0, #0
 800e252:	d145      	bne.n	800e2e0 <__gethex+0x280>
 800e254:	f04f 0a02 	mov.w	sl, #2
 800e258:	4639      	mov	r1, r7
 800e25a:	4620      	mov	r0, r4
 800e25c:	f7ff fe98 	bl	800df90 <rshift>
 800e260:	443d      	add	r5, r7
 800e262:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800e266:	42ab      	cmp	r3, r5
 800e268:	da4c      	bge.n	800e304 <__gethex+0x2a4>
 800e26a:	ee18 0a10 	vmov	r0, s16
 800e26e:	4621      	mov	r1, r4
 800e270:	f000 fa6b 	bl	800e74a <_Bfree>
 800e274:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e276:	2300      	movs	r3, #0
 800e278:	6013      	str	r3, [r2, #0]
 800e27a:	27a3      	movs	r7, #163	; 0xa3
 800e27c:	e785      	b.n	800e18a <__gethex+0x12a>
 800e27e:	1e73      	subs	r3, r6, #1
 800e280:	9a05      	ldr	r2, [sp, #20]
 800e282:	9303      	str	r3, [sp, #12]
 800e284:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800e288:	4293      	cmp	r3, r2
 800e28a:	d019      	beq.n	800e2c0 <__gethex+0x260>
 800e28c:	f1bb 0f20 	cmp.w	fp, #32
 800e290:	d107      	bne.n	800e2a2 <__gethex+0x242>
 800e292:	9b02      	ldr	r3, [sp, #8]
 800e294:	9a00      	ldr	r2, [sp, #0]
 800e296:	f843 2b04 	str.w	r2, [r3], #4
 800e29a:	9302      	str	r3, [sp, #8]
 800e29c:	2300      	movs	r3, #0
 800e29e:	9300      	str	r3, [sp, #0]
 800e2a0:	469b      	mov	fp, r3
 800e2a2:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800e2a6:	f7ff fec5 	bl	800e034 <__hexdig_fun>
 800e2aa:	9b00      	ldr	r3, [sp, #0]
 800e2ac:	f000 000f 	and.w	r0, r0, #15
 800e2b0:	fa00 f00b 	lsl.w	r0, r0, fp
 800e2b4:	4303      	orrs	r3, r0
 800e2b6:	9300      	str	r3, [sp, #0]
 800e2b8:	f10b 0b04 	add.w	fp, fp, #4
 800e2bc:	9b03      	ldr	r3, [sp, #12]
 800e2be:	e00d      	b.n	800e2dc <__gethex+0x27c>
 800e2c0:	9b03      	ldr	r3, [sp, #12]
 800e2c2:	9a06      	ldr	r2, [sp, #24]
 800e2c4:	4413      	add	r3, r2
 800e2c6:	42bb      	cmp	r3, r7
 800e2c8:	d3e0      	bcc.n	800e28c <__gethex+0x22c>
 800e2ca:	4618      	mov	r0, r3
 800e2cc:	9901      	ldr	r1, [sp, #4]
 800e2ce:	9307      	str	r3, [sp, #28]
 800e2d0:	4652      	mov	r2, sl
 800e2d2:	f7fc fda5 	bl	800ae20 <strncmp>
 800e2d6:	9b07      	ldr	r3, [sp, #28]
 800e2d8:	2800      	cmp	r0, #0
 800e2da:	d1d7      	bne.n	800e28c <__gethex+0x22c>
 800e2dc:	461e      	mov	r6, r3
 800e2de:	e78b      	b.n	800e1f8 <__gethex+0x198>
 800e2e0:	f04f 0a03 	mov.w	sl, #3
 800e2e4:	e7b8      	b.n	800e258 <__gethex+0x1f8>
 800e2e6:	da0a      	bge.n	800e2fe <__gethex+0x29e>
 800e2e8:	1a37      	subs	r7, r6, r0
 800e2ea:	4621      	mov	r1, r4
 800e2ec:	ee18 0a10 	vmov	r0, s16
 800e2f0:	463a      	mov	r2, r7
 800e2f2:	f000 fc13 	bl	800eb1c <__lshift>
 800e2f6:	1bed      	subs	r5, r5, r7
 800e2f8:	4604      	mov	r4, r0
 800e2fa:	f100 0914 	add.w	r9, r0, #20
 800e2fe:	f04f 0a00 	mov.w	sl, #0
 800e302:	e7ae      	b.n	800e262 <__gethex+0x202>
 800e304:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800e308:	42a8      	cmp	r0, r5
 800e30a:	dd72      	ble.n	800e3f2 <__gethex+0x392>
 800e30c:	1b45      	subs	r5, r0, r5
 800e30e:	42ae      	cmp	r6, r5
 800e310:	dc36      	bgt.n	800e380 <__gethex+0x320>
 800e312:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800e316:	2b02      	cmp	r3, #2
 800e318:	d02a      	beq.n	800e370 <__gethex+0x310>
 800e31a:	2b03      	cmp	r3, #3
 800e31c:	d02c      	beq.n	800e378 <__gethex+0x318>
 800e31e:	2b01      	cmp	r3, #1
 800e320:	d11c      	bne.n	800e35c <__gethex+0x2fc>
 800e322:	42ae      	cmp	r6, r5
 800e324:	d11a      	bne.n	800e35c <__gethex+0x2fc>
 800e326:	2e01      	cmp	r6, #1
 800e328:	d112      	bne.n	800e350 <__gethex+0x2f0>
 800e32a:	9a04      	ldr	r2, [sp, #16]
 800e32c:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800e330:	6013      	str	r3, [r2, #0]
 800e332:	2301      	movs	r3, #1
 800e334:	6123      	str	r3, [r4, #16]
 800e336:	f8c9 3000 	str.w	r3, [r9]
 800e33a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800e33c:	2762      	movs	r7, #98	; 0x62
 800e33e:	601c      	str	r4, [r3, #0]
 800e340:	e723      	b.n	800e18a <__gethex+0x12a>
 800e342:	bf00      	nop
 800e344:	08010dfc 	.word	0x08010dfc
 800e348:	08010d29 	.word	0x08010d29
 800e34c:	08010d95 	.word	0x08010d95
 800e350:	1e71      	subs	r1, r6, #1
 800e352:	4620      	mov	r0, r4
 800e354:	f000 fe26 	bl	800efa4 <__any_on>
 800e358:	2800      	cmp	r0, #0
 800e35a:	d1e6      	bne.n	800e32a <__gethex+0x2ca>
 800e35c:	ee18 0a10 	vmov	r0, s16
 800e360:	4621      	mov	r1, r4
 800e362:	f000 f9f2 	bl	800e74a <_Bfree>
 800e366:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e368:	2300      	movs	r3, #0
 800e36a:	6013      	str	r3, [r2, #0]
 800e36c:	2750      	movs	r7, #80	; 0x50
 800e36e:	e70c      	b.n	800e18a <__gethex+0x12a>
 800e370:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800e372:	2b00      	cmp	r3, #0
 800e374:	d1f2      	bne.n	800e35c <__gethex+0x2fc>
 800e376:	e7d8      	b.n	800e32a <__gethex+0x2ca>
 800e378:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800e37a:	2b00      	cmp	r3, #0
 800e37c:	d1d5      	bne.n	800e32a <__gethex+0x2ca>
 800e37e:	e7ed      	b.n	800e35c <__gethex+0x2fc>
 800e380:	1e6f      	subs	r7, r5, #1
 800e382:	f1ba 0f00 	cmp.w	sl, #0
 800e386:	d131      	bne.n	800e3ec <__gethex+0x38c>
 800e388:	b127      	cbz	r7, 800e394 <__gethex+0x334>
 800e38a:	4639      	mov	r1, r7
 800e38c:	4620      	mov	r0, r4
 800e38e:	f000 fe09 	bl	800efa4 <__any_on>
 800e392:	4682      	mov	sl, r0
 800e394:	117b      	asrs	r3, r7, #5
 800e396:	2101      	movs	r1, #1
 800e398:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 800e39c:	f007 071f 	and.w	r7, r7, #31
 800e3a0:	fa01 f707 	lsl.w	r7, r1, r7
 800e3a4:	421f      	tst	r7, r3
 800e3a6:	4629      	mov	r1, r5
 800e3a8:	4620      	mov	r0, r4
 800e3aa:	bf18      	it	ne
 800e3ac:	f04a 0a02 	orrne.w	sl, sl, #2
 800e3b0:	1b76      	subs	r6, r6, r5
 800e3b2:	f7ff fded 	bl	800df90 <rshift>
 800e3b6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800e3ba:	2702      	movs	r7, #2
 800e3bc:	f1ba 0f00 	cmp.w	sl, #0
 800e3c0:	d048      	beq.n	800e454 <__gethex+0x3f4>
 800e3c2:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800e3c6:	2b02      	cmp	r3, #2
 800e3c8:	d015      	beq.n	800e3f6 <__gethex+0x396>
 800e3ca:	2b03      	cmp	r3, #3
 800e3cc:	d017      	beq.n	800e3fe <__gethex+0x39e>
 800e3ce:	2b01      	cmp	r3, #1
 800e3d0:	d109      	bne.n	800e3e6 <__gethex+0x386>
 800e3d2:	f01a 0f02 	tst.w	sl, #2
 800e3d6:	d006      	beq.n	800e3e6 <__gethex+0x386>
 800e3d8:	f8d9 0000 	ldr.w	r0, [r9]
 800e3dc:	ea4a 0a00 	orr.w	sl, sl, r0
 800e3e0:	f01a 0f01 	tst.w	sl, #1
 800e3e4:	d10e      	bne.n	800e404 <__gethex+0x3a4>
 800e3e6:	f047 0710 	orr.w	r7, r7, #16
 800e3ea:	e033      	b.n	800e454 <__gethex+0x3f4>
 800e3ec:	f04f 0a01 	mov.w	sl, #1
 800e3f0:	e7d0      	b.n	800e394 <__gethex+0x334>
 800e3f2:	2701      	movs	r7, #1
 800e3f4:	e7e2      	b.n	800e3bc <__gethex+0x35c>
 800e3f6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800e3f8:	f1c3 0301 	rsb	r3, r3, #1
 800e3fc:	9315      	str	r3, [sp, #84]	; 0x54
 800e3fe:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800e400:	2b00      	cmp	r3, #0
 800e402:	d0f0      	beq.n	800e3e6 <__gethex+0x386>
 800e404:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800e408:	f104 0314 	add.w	r3, r4, #20
 800e40c:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800e410:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800e414:	f04f 0c00 	mov.w	ip, #0
 800e418:	4618      	mov	r0, r3
 800e41a:	f853 2b04 	ldr.w	r2, [r3], #4
 800e41e:	f1b2 3fff 	cmp.w	r2, #4294967295
 800e422:	d01c      	beq.n	800e45e <__gethex+0x3fe>
 800e424:	3201      	adds	r2, #1
 800e426:	6002      	str	r2, [r0, #0]
 800e428:	2f02      	cmp	r7, #2
 800e42a:	f104 0314 	add.w	r3, r4, #20
 800e42e:	d13f      	bne.n	800e4b0 <__gethex+0x450>
 800e430:	f8d8 2000 	ldr.w	r2, [r8]
 800e434:	3a01      	subs	r2, #1
 800e436:	42b2      	cmp	r2, r6
 800e438:	d10a      	bne.n	800e450 <__gethex+0x3f0>
 800e43a:	1171      	asrs	r1, r6, #5
 800e43c:	2201      	movs	r2, #1
 800e43e:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800e442:	f006 061f 	and.w	r6, r6, #31
 800e446:	fa02 f606 	lsl.w	r6, r2, r6
 800e44a:	421e      	tst	r6, r3
 800e44c:	bf18      	it	ne
 800e44e:	4617      	movne	r7, r2
 800e450:	f047 0720 	orr.w	r7, r7, #32
 800e454:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800e456:	601c      	str	r4, [r3, #0]
 800e458:	9b04      	ldr	r3, [sp, #16]
 800e45a:	601d      	str	r5, [r3, #0]
 800e45c:	e695      	b.n	800e18a <__gethex+0x12a>
 800e45e:	4299      	cmp	r1, r3
 800e460:	f843 cc04 	str.w	ip, [r3, #-4]
 800e464:	d8d8      	bhi.n	800e418 <__gethex+0x3b8>
 800e466:	68a3      	ldr	r3, [r4, #8]
 800e468:	459b      	cmp	fp, r3
 800e46a:	db19      	blt.n	800e4a0 <__gethex+0x440>
 800e46c:	6861      	ldr	r1, [r4, #4]
 800e46e:	ee18 0a10 	vmov	r0, s16
 800e472:	3101      	adds	r1, #1
 800e474:	f000 f944 	bl	800e700 <_Balloc>
 800e478:	4681      	mov	r9, r0
 800e47a:	b918      	cbnz	r0, 800e484 <__gethex+0x424>
 800e47c:	4b1a      	ldr	r3, [pc, #104]	; (800e4e8 <__gethex+0x488>)
 800e47e:	4602      	mov	r2, r0
 800e480:	2184      	movs	r1, #132	; 0x84
 800e482:	e6a8      	b.n	800e1d6 <__gethex+0x176>
 800e484:	6922      	ldr	r2, [r4, #16]
 800e486:	3202      	adds	r2, #2
 800e488:	f104 010c 	add.w	r1, r4, #12
 800e48c:	0092      	lsls	r2, r2, #2
 800e48e:	300c      	adds	r0, #12
 800e490:	f7fc f9d8 	bl	800a844 <memcpy>
 800e494:	4621      	mov	r1, r4
 800e496:	ee18 0a10 	vmov	r0, s16
 800e49a:	f000 f956 	bl	800e74a <_Bfree>
 800e49e:	464c      	mov	r4, r9
 800e4a0:	6923      	ldr	r3, [r4, #16]
 800e4a2:	1c5a      	adds	r2, r3, #1
 800e4a4:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800e4a8:	6122      	str	r2, [r4, #16]
 800e4aa:	2201      	movs	r2, #1
 800e4ac:	615a      	str	r2, [r3, #20]
 800e4ae:	e7bb      	b.n	800e428 <__gethex+0x3c8>
 800e4b0:	6922      	ldr	r2, [r4, #16]
 800e4b2:	455a      	cmp	r2, fp
 800e4b4:	dd0b      	ble.n	800e4ce <__gethex+0x46e>
 800e4b6:	2101      	movs	r1, #1
 800e4b8:	4620      	mov	r0, r4
 800e4ba:	f7ff fd69 	bl	800df90 <rshift>
 800e4be:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800e4c2:	3501      	adds	r5, #1
 800e4c4:	42ab      	cmp	r3, r5
 800e4c6:	f6ff aed0 	blt.w	800e26a <__gethex+0x20a>
 800e4ca:	2701      	movs	r7, #1
 800e4cc:	e7c0      	b.n	800e450 <__gethex+0x3f0>
 800e4ce:	f016 061f 	ands.w	r6, r6, #31
 800e4d2:	d0fa      	beq.n	800e4ca <__gethex+0x46a>
 800e4d4:	4453      	add	r3, sl
 800e4d6:	f1c6 0620 	rsb	r6, r6, #32
 800e4da:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800e4de:	f000 f9cd 	bl	800e87c <__hi0bits>
 800e4e2:	42b0      	cmp	r0, r6
 800e4e4:	dbe7      	blt.n	800e4b6 <__gethex+0x456>
 800e4e6:	e7f0      	b.n	800e4ca <__gethex+0x46a>
 800e4e8:	08010d29 	.word	0x08010d29

0800e4ec <L_shift>:
 800e4ec:	f1c2 0208 	rsb	r2, r2, #8
 800e4f0:	0092      	lsls	r2, r2, #2
 800e4f2:	b570      	push	{r4, r5, r6, lr}
 800e4f4:	f1c2 0620 	rsb	r6, r2, #32
 800e4f8:	6843      	ldr	r3, [r0, #4]
 800e4fa:	6804      	ldr	r4, [r0, #0]
 800e4fc:	fa03 f506 	lsl.w	r5, r3, r6
 800e500:	432c      	orrs	r4, r5
 800e502:	40d3      	lsrs	r3, r2
 800e504:	6004      	str	r4, [r0, #0]
 800e506:	f840 3f04 	str.w	r3, [r0, #4]!
 800e50a:	4288      	cmp	r0, r1
 800e50c:	d3f4      	bcc.n	800e4f8 <L_shift+0xc>
 800e50e:	bd70      	pop	{r4, r5, r6, pc}

0800e510 <__match>:
 800e510:	b530      	push	{r4, r5, lr}
 800e512:	6803      	ldr	r3, [r0, #0]
 800e514:	3301      	adds	r3, #1
 800e516:	f811 4b01 	ldrb.w	r4, [r1], #1
 800e51a:	b914      	cbnz	r4, 800e522 <__match+0x12>
 800e51c:	6003      	str	r3, [r0, #0]
 800e51e:	2001      	movs	r0, #1
 800e520:	bd30      	pop	{r4, r5, pc}
 800e522:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e526:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800e52a:	2d19      	cmp	r5, #25
 800e52c:	bf98      	it	ls
 800e52e:	3220      	addls	r2, #32
 800e530:	42a2      	cmp	r2, r4
 800e532:	d0f0      	beq.n	800e516 <__match+0x6>
 800e534:	2000      	movs	r0, #0
 800e536:	e7f3      	b.n	800e520 <__match+0x10>

0800e538 <__hexnan>:
 800e538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e53c:	680b      	ldr	r3, [r1, #0]
 800e53e:	115e      	asrs	r6, r3, #5
 800e540:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800e544:	f013 031f 	ands.w	r3, r3, #31
 800e548:	b087      	sub	sp, #28
 800e54a:	bf18      	it	ne
 800e54c:	3604      	addne	r6, #4
 800e54e:	2500      	movs	r5, #0
 800e550:	1f37      	subs	r7, r6, #4
 800e552:	4690      	mov	r8, r2
 800e554:	6802      	ldr	r2, [r0, #0]
 800e556:	9301      	str	r3, [sp, #4]
 800e558:	4682      	mov	sl, r0
 800e55a:	f846 5c04 	str.w	r5, [r6, #-4]
 800e55e:	46b9      	mov	r9, r7
 800e560:	463c      	mov	r4, r7
 800e562:	9502      	str	r5, [sp, #8]
 800e564:	46ab      	mov	fp, r5
 800e566:	7851      	ldrb	r1, [r2, #1]
 800e568:	1c53      	adds	r3, r2, #1
 800e56a:	9303      	str	r3, [sp, #12]
 800e56c:	b341      	cbz	r1, 800e5c0 <__hexnan+0x88>
 800e56e:	4608      	mov	r0, r1
 800e570:	9205      	str	r2, [sp, #20]
 800e572:	9104      	str	r1, [sp, #16]
 800e574:	f7ff fd5e 	bl	800e034 <__hexdig_fun>
 800e578:	2800      	cmp	r0, #0
 800e57a:	d14f      	bne.n	800e61c <__hexnan+0xe4>
 800e57c:	9904      	ldr	r1, [sp, #16]
 800e57e:	9a05      	ldr	r2, [sp, #20]
 800e580:	2920      	cmp	r1, #32
 800e582:	d818      	bhi.n	800e5b6 <__hexnan+0x7e>
 800e584:	9b02      	ldr	r3, [sp, #8]
 800e586:	459b      	cmp	fp, r3
 800e588:	dd13      	ble.n	800e5b2 <__hexnan+0x7a>
 800e58a:	454c      	cmp	r4, r9
 800e58c:	d206      	bcs.n	800e59c <__hexnan+0x64>
 800e58e:	2d07      	cmp	r5, #7
 800e590:	dc04      	bgt.n	800e59c <__hexnan+0x64>
 800e592:	462a      	mov	r2, r5
 800e594:	4649      	mov	r1, r9
 800e596:	4620      	mov	r0, r4
 800e598:	f7ff ffa8 	bl	800e4ec <L_shift>
 800e59c:	4544      	cmp	r4, r8
 800e59e:	d950      	bls.n	800e642 <__hexnan+0x10a>
 800e5a0:	2300      	movs	r3, #0
 800e5a2:	f1a4 0904 	sub.w	r9, r4, #4
 800e5a6:	f844 3c04 	str.w	r3, [r4, #-4]
 800e5aa:	f8cd b008 	str.w	fp, [sp, #8]
 800e5ae:	464c      	mov	r4, r9
 800e5b0:	461d      	mov	r5, r3
 800e5b2:	9a03      	ldr	r2, [sp, #12]
 800e5b4:	e7d7      	b.n	800e566 <__hexnan+0x2e>
 800e5b6:	2929      	cmp	r1, #41	; 0x29
 800e5b8:	d156      	bne.n	800e668 <__hexnan+0x130>
 800e5ba:	3202      	adds	r2, #2
 800e5bc:	f8ca 2000 	str.w	r2, [sl]
 800e5c0:	f1bb 0f00 	cmp.w	fp, #0
 800e5c4:	d050      	beq.n	800e668 <__hexnan+0x130>
 800e5c6:	454c      	cmp	r4, r9
 800e5c8:	d206      	bcs.n	800e5d8 <__hexnan+0xa0>
 800e5ca:	2d07      	cmp	r5, #7
 800e5cc:	dc04      	bgt.n	800e5d8 <__hexnan+0xa0>
 800e5ce:	462a      	mov	r2, r5
 800e5d0:	4649      	mov	r1, r9
 800e5d2:	4620      	mov	r0, r4
 800e5d4:	f7ff ff8a 	bl	800e4ec <L_shift>
 800e5d8:	4544      	cmp	r4, r8
 800e5da:	d934      	bls.n	800e646 <__hexnan+0x10e>
 800e5dc:	f1a8 0204 	sub.w	r2, r8, #4
 800e5e0:	4623      	mov	r3, r4
 800e5e2:	f853 1b04 	ldr.w	r1, [r3], #4
 800e5e6:	f842 1f04 	str.w	r1, [r2, #4]!
 800e5ea:	429f      	cmp	r7, r3
 800e5ec:	d2f9      	bcs.n	800e5e2 <__hexnan+0xaa>
 800e5ee:	1b3b      	subs	r3, r7, r4
 800e5f0:	f023 0303 	bic.w	r3, r3, #3
 800e5f4:	3304      	adds	r3, #4
 800e5f6:	3401      	adds	r4, #1
 800e5f8:	3e03      	subs	r6, #3
 800e5fa:	42b4      	cmp	r4, r6
 800e5fc:	bf88      	it	hi
 800e5fe:	2304      	movhi	r3, #4
 800e600:	4443      	add	r3, r8
 800e602:	2200      	movs	r2, #0
 800e604:	f843 2b04 	str.w	r2, [r3], #4
 800e608:	429f      	cmp	r7, r3
 800e60a:	d2fb      	bcs.n	800e604 <__hexnan+0xcc>
 800e60c:	683b      	ldr	r3, [r7, #0]
 800e60e:	b91b      	cbnz	r3, 800e618 <__hexnan+0xe0>
 800e610:	4547      	cmp	r7, r8
 800e612:	d127      	bne.n	800e664 <__hexnan+0x12c>
 800e614:	2301      	movs	r3, #1
 800e616:	603b      	str	r3, [r7, #0]
 800e618:	2005      	movs	r0, #5
 800e61a:	e026      	b.n	800e66a <__hexnan+0x132>
 800e61c:	3501      	adds	r5, #1
 800e61e:	2d08      	cmp	r5, #8
 800e620:	f10b 0b01 	add.w	fp, fp, #1
 800e624:	dd06      	ble.n	800e634 <__hexnan+0xfc>
 800e626:	4544      	cmp	r4, r8
 800e628:	d9c3      	bls.n	800e5b2 <__hexnan+0x7a>
 800e62a:	2300      	movs	r3, #0
 800e62c:	f844 3c04 	str.w	r3, [r4, #-4]
 800e630:	2501      	movs	r5, #1
 800e632:	3c04      	subs	r4, #4
 800e634:	6822      	ldr	r2, [r4, #0]
 800e636:	f000 000f 	and.w	r0, r0, #15
 800e63a:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 800e63e:	6022      	str	r2, [r4, #0]
 800e640:	e7b7      	b.n	800e5b2 <__hexnan+0x7a>
 800e642:	2508      	movs	r5, #8
 800e644:	e7b5      	b.n	800e5b2 <__hexnan+0x7a>
 800e646:	9b01      	ldr	r3, [sp, #4]
 800e648:	2b00      	cmp	r3, #0
 800e64a:	d0df      	beq.n	800e60c <__hexnan+0xd4>
 800e64c:	f04f 32ff 	mov.w	r2, #4294967295
 800e650:	f1c3 0320 	rsb	r3, r3, #32
 800e654:	fa22 f303 	lsr.w	r3, r2, r3
 800e658:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800e65c:	401a      	ands	r2, r3
 800e65e:	f846 2c04 	str.w	r2, [r6, #-4]
 800e662:	e7d3      	b.n	800e60c <__hexnan+0xd4>
 800e664:	3f04      	subs	r7, #4
 800e666:	e7d1      	b.n	800e60c <__hexnan+0xd4>
 800e668:	2004      	movs	r0, #4
 800e66a:	b007      	add	sp, #28
 800e66c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e670 <__locale_mb_cur_max>:
 800e670:	4b01      	ldr	r3, [pc, #4]	; (800e678 <__locale_mb_cur_max+0x8>)
 800e672:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
 800e676:	4770      	bx	lr
 800e678:	20000868 	.word	0x20000868

0800e67c <_localeconv_r>:
 800e67c:	4800      	ldr	r0, [pc, #0]	; (800e680 <_localeconv_r+0x4>)
 800e67e:	4770      	bx	lr
 800e680:	20000958 	.word	0x20000958

0800e684 <_lseek_r>:
 800e684:	b538      	push	{r3, r4, r5, lr}
 800e686:	4d07      	ldr	r5, [pc, #28]	; (800e6a4 <_lseek_r+0x20>)
 800e688:	4604      	mov	r4, r0
 800e68a:	4608      	mov	r0, r1
 800e68c:	4611      	mov	r1, r2
 800e68e:	2200      	movs	r2, #0
 800e690:	602a      	str	r2, [r5, #0]
 800e692:	461a      	mov	r2, r3
 800e694:	f7f4 f916 	bl	80028c4 <_lseek>
 800e698:	1c43      	adds	r3, r0, #1
 800e69a:	d102      	bne.n	800e6a2 <_lseek_r+0x1e>
 800e69c:	682b      	ldr	r3, [r5, #0]
 800e69e:	b103      	cbz	r3, 800e6a2 <_lseek_r+0x1e>
 800e6a0:	6023      	str	r3, [r4, #0]
 800e6a2:	bd38      	pop	{r3, r4, r5, pc}
 800e6a4:	20017ad4 	.word	0x20017ad4

0800e6a8 <__ascii_mbtowc>:
 800e6a8:	b082      	sub	sp, #8
 800e6aa:	b901      	cbnz	r1, 800e6ae <__ascii_mbtowc+0x6>
 800e6ac:	a901      	add	r1, sp, #4
 800e6ae:	b142      	cbz	r2, 800e6c2 <__ascii_mbtowc+0x1a>
 800e6b0:	b14b      	cbz	r3, 800e6c6 <__ascii_mbtowc+0x1e>
 800e6b2:	7813      	ldrb	r3, [r2, #0]
 800e6b4:	600b      	str	r3, [r1, #0]
 800e6b6:	7812      	ldrb	r2, [r2, #0]
 800e6b8:	1e10      	subs	r0, r2, #0
 800e6ba:	bf18      	it	ne
 800e6bc:	2001      	movne	r0, #1
 800e6be:	b002      	add	sp, #8
 800e6c0:	4770      	bx	lr
 800e6c2:	4610      	mov	r0, r2
 800e6c4:	e7fb      	b.n	800e6be <__ascii_mbtowc+0x16>
 800e6c6:	f06f 0001 	mvn.w	r0, #1
 800e6ca:	e7f8      	b.n	800e6be <__ascii_mbtowc+0x16>

0800e6cc <memmove>:
 800e6cc:	4288      	cmp	r0, r1
 800e6ce:	b510      	push	{r4, lr}
 800e6d0:	eb01 0402 	add.w	r4, r1, r2
 800e6d4:	d902      	bls.n	800e6dc <memmove+0x10>
 800e6d6:	4284      	cmp	r4, r0
 800e6d8:	4623      	mov	r3, r4
 800e6da:	d807      	bhi.n	800e6ec <memmove+0x20>
 800e6dc:	1e43      	subs	r3, r0, #1
 800e6de:	42a1      	cmp	r1, r4
 800e6e0:	d008      	beq.n	800e6f4 <memmove+0x28>
 800e6e2:	f811 2b01 	ldrb.w	r2, [r1], #1
 800e6e6:	f803 2f01 	strb.w	r2, [r3, #1]!
 800e6ea:	e7f8      	b.n	800e6de <memmove+0x12>
 800e6ec:	4402      	add	r2, r0
 800e6ee:	4601      	mov	r1, r0
 800e6f0:	428a      	cmp	r2, r1
 800e6f2:	d100      	bne.n	800e6f6 <memmove+0x2a>
 800e6f4:	bd10      	pop	{r4, pc}
 800e6f6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800e6fa:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800e6fe:	e7f7      	b.n	800e6f0 <memmove+0x24>

0800e700 <_Balloc>:
 800e700:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800e702:	b570      	push	{r4, r5, r6, lr}
 800e704:	4605      	mov	r5, r0
 800e706:	460c      	mov	r4, r1
 800e708:	b17b      	cbz	r3, 800e72a <_Balloc+0x2a>
 800e70a:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 800e70c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800e710:	b9a0      	cbnz	r0, 800e73c <_Balloc+0x3c>
 800e712:	2101      	movs	r1, #1
 800e714:	fa01 f604 	lsl.w	r6, r1, r4
 800e718:	1d72      	adds	r2, r6, #5
 800e71a:	0092      	lsls	r2, r2, #2
 800e71c:	4628      	mov	r0, r5
 800e71e:	f000 fe0b 	bl	800f338 <_calloc_r>
 800e722:	b148      	cbz	r0, 800e738 <_Balloc+0x38>
 800e724:	e9c0 4601 	strd	r4, r6, [r0, #4]
 800e728:	e00b      	b.n	800e742 <_Balloc+0x42>
 800e72a:	2221      	movs	r2, #33	; 0x21
 800e72c:	2104      	movs	r1, #4
 800e72e:	f000 fe03 	bl	800f338 <_calloc_r>
 800e732:	64e8      	str	r0, [r5, #76]	; 0x4c
 800e734:	2800      	cmp	r0, #0
 800e736:	d1e8      	bne.n	800e70a <_Balloc+0xa>
 800e738:	2000      	movs	r0, #0
 800e73a:	bd70      	pop	{r4, r5, r6, pc}
 800e73c:	6802      	ldr	r2, [r0, #0]
 800e73e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800e742:	2300      	movs	r3, #0
 800e744:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800e748:	e7f7      	b.n	800e73a <_Balloc+0x3a>

0800e74a <_Bfree>:
 800e74a:	b131      	cbz	r1, 800e75a <_Bfree+0x10>
 800e74c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800e74e:	684a      	ldr	r2, [r1, #4]
 800e750:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800e754:	6008      	str	r0, [r1, #0]
 800e756:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800e75a:	4770      	bx	lr

0800e75c <__multadd>:
 800e75c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e760:	690d      	ldr	r5, [r1, #16]
 800e762:	4607      	mov	r7, r0
 800e764:	460c      	mov	r4, r1
 800e766:	461e      	mov	r6, r3
 800e768:	f101 0c14 	add.w	ip, r1, #20
 800e76c:	2000      	movs	r0, #0
 800e76e:	f8dc 3000 	ldr.w	r3, [ip]
 800e772:	b299      	uxth	r1, r3
 800e774:	fb02 6101 	mla	r1, r2, r1, r6
 800e778:	0c1e      	lsrs	r6, r3, #16
 800e77a:	0c0b      	lsrs	r3, r1, #16
 800e77c:	fb02 3306 	mla	r3, r2, r6, r3
 800e780:	b289      	uxth	r1, r1
 800e782:	3001      	adds	r0, #1
 800e784:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800e788:	4285      	cmp	r5, r0
 800e78a:	f84c 1b04 	str.w	r1, [ip], #4
 800e78e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800e792:	dcec      	bgt.n	800e76e <__multadd+0x12>
 800e794:	b30e      	cbz	r6, 800e7da <__multadd+0x7e>
 800e796:	68a3      	ldr	r3, [r4, #8]
 800e798:	42ab      	cmp	r3, r5
 800e79a:	dc19      	bgt.n	800e7d0 <__multadd+0x74>
 800e79c:	6861      	ldr	r1, [r4, #4]
 800e79e:	4638      	mov	r0, r7
 800e7a0:	3101      	adds	r1, #1
 800e7a2:	f7ff ffad 	bl	800e700 <_Balloc>
 800e7a6:	4680      	mov	r8, r0
 800e7a8:	b928      	cbnz	r0, 800e7b6 <__multadd+0x5a>
 800e7aa:	4602      	mov	r2, r0
 800e7ac:	4b0c      	ldr	r3, [pc, #48]	; (800e7e0 <__multadd+0x84>)
 800e7ae:	480d      	ldr	r0, [pc, #52]	; (800e7e4 <__multadd+0x88>)
 800e7b0:	21b5      	movs	r1, #181	; 0xb5
 800e7b2:	f000 fda3 	bl	800f2fc <__assert_func>
 800e7b6:	6922      	ldr	r2, [r4, #16]
 800e7b8:	3202      	adds	r2, #2
 800e7ba:	f104 010c 	add.w	r1, r4, #12
 800e7be:	0092      	lsls	r2, r2, #2
 800e7c0:	300c      	adds	r0, #12
 800e7c2:	f7fc f83f 	bl	800a844 <memcpy>
 800e7c6:	4621      	mov	r1, r4
 800e7c8:	4638      	mov	r0, r7
 800e7ca:	f7ff ffbe 	bl	800e74a <_Bfree>
 800e7ce:	4644      	mov	r4, r8
 800e7d0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800e7d4:	3501      	adds	r5, #1
 800e7d6:	615e      	str	r6, [r3, #20]
 800e7d8:	6125      	str	r5, [r4, #16]
 800e7da:	4620      	mov	r0, r4
 800e7dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e7e0:	08010d29 	.word	0x08010d29
 800e7e4:	08010e10 	.word	0x08010e10

0800e7e8 <__s2b>:
 800e7e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e7ec:	460c      	mov	r4, r1
 800e7ee:	4615      	mov	r5, r2
 800e7f0:	461f      	mov	r7, r3
 800e7f2:	2209      	movs	r2, #9
 800e7f4:	3308      	adds	r3, #8
 800e7f6:	4606      	mov	r6, r0
 800e7f8:	fb93 f3f2 	sdiv	r3, r3, r2
 800e7fc:	2100      	movs	r1, #0
 800e7fe:	2201      	movs	r2, #1
 800e800:	429a      	cmp	r2, r3
 800e802:	db09      	blt.n	800e818 <__s2b+0x30>
 800e804:	4630      	mov	r0, r6
 800e806:	f7ff ff7b 	bl	800e700 <_Balloc>
 800e80a:	b940      	cbnz	r0, 800e81e <__s2b+0x36>
 800e80c:	4602      	mov	r2, r0
 800e80e:	4b19      	ldr	r3, [pc, #100]	; (800e874 <__s2b+0x8c>)
 800e810:	4819      	ldr	r0, [pc, #100]	; (800e878 <__s2b+0x90>)
 800e812:	21ce      	movs	r1, #206	; 0xce
 800e814:	f000 fd72 	bl	800f2fc <__assert_func>
 800e818:	0052      	lsls	r2, r2, #1
 800e81a:	3101      	adds	r1, #1
 800e81c:	e7f0      	b.n	800e800 <__s2b+0x18>
 800e81e:	9b08      	ldr	r3, [sp, #32]
 800e820:	6143      	str	r3, [r0, #20]
 800e822:	2d09      	cmp	r5, #9
 800e824:	f04f 0301 	mov.w	r3, #1
 800e828:	6103      	str	r3, [r0, #16]
 800e82a:	dd16      	ble.n	800e85a <__s2b+0x72>
 800e82c:	f104 0909 	add.w	r9, r4, #9
 800e830:	46c8      	mov	r8, r9
 800e832:	442c      	add	r4, r5
 800e834:	f818 3b01 	ldrb.w	r3, [r8], #1
 800e838:	4601      	mov	r1, r0
 800e83a:	3b30      	subs	r3, #48	; 0x30
 800e83c:	220a      	movs	r2, #10
 800e83e:	4630      	mov	r0, r6
 800e840:	f7ff ff8c 	bl	800e75c <__multadd>
 800e844:	45a0      	cmp	r8, r4
 800e846:	d1f5      	bne.n	800e834 <__s2b+0x4c>
 800e848:	f1a5 0408 	sub.w	r4, r5, #8
 800e84c:	444c      	add	r4, r9
 800e84e:	1b2d      	subs	r5, r5, r4
 800e850:	1963      	adds	r3, r4, r5
 800e852:	42bb      	cmp	r3, r7
 800e854:	db04      	blt.n	800e860 <__s2b+0x78>
 800e856:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e85a:	340a      	adds	r4, #10
 800e85c:	2509      	movs	r5, #9
 800e85e:	e7f6      	b.n	800e84e <__s2b+0x66>
 800e860:	f814 3b01 	ldrb.w	r3, [r4], #1
 800e864:	4601      	mov	r1, r0
 800e866:	3b30      	subs	r3, #48	; 0x30
 800e868:	220a      	movs	r2, #10
 800e86a:	4630      	mov	r0, r6
 800e86c:	f7ff ff76 	bl	800e75c <__multadd>
 800e870:	e7ee      	b.n	800e850 <__s2b+0x68>
 800e872:	bf00      	nop
 800e874:	08010d29 	.word	0x08010d29
 800e878:	08010e10 	.word	0x08010e10

0800e87c <__hi0bits>:
 800e87c:	0c03      	lsrs	r3, r0, #16
 800e87e:	041b      	lsls	r3, r3, #16
 800e880:	b9d3      	cbnz	r3, 800e8b8 <__hi0bits+0x3c>
 800e882:	0400      	lsls	r0, r0, #16
 800e884:	2310      	movs	r3, #16
 800e886:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800e88a:	bf04      	itt	eq
 800e88c:	0200      	lsleq	r0, r0, #8
 800e88e:	3308      	addeq	r3, #8
 800e890:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800e894:	bf04      	itt	eq
 800e896:	0100      	lsleq	r0, r0, #4
 800e898:	3304      	addeq	r3, #4
 800e89a:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800e89e:	bf04      	itt	eq
 800e8a0:	0080      	lsleq	r0, r0, #2
 800e8a2:	3302      	addeq	r3, #2
 800e8a4:	2800      	cmp	r0, #0
 800e8a6:	db05      	blt.n	800e8b4 <__hi0bits+0x38>
 800e8a8:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800e8ac:	f103 0301 	add.w	r3, r3, #1
 800e8b0:	bf08      	it	eq
 800e8b2:	2320      	moveq	r3, #32
 800e8b4:	4618      	mov	r0, r3
 800e8b6:	4770      	bx	lr
 800e8b8:	2300      	movs	r3, #0
 800e8ba:	e7e4      	b.n	800e886 <__hi0bits+0xa>

0800e8bc <__lo0bits>:
 800e8bc:	6803      	ldr	r3, [r0, #0]
 800e8be:	f013 0207 	ands.w	r2, r3, #7
 800e8c2:	4601      	mov	r1, r0
 800e8c4:	d00b      	beq.n	800e8de <__lo0bits+0x22>
 800e8c6:	07da      	lsls	r2, r3, #31
 800e8c8:	d423      	bmi.n	800e912 <__lo0bits+0x56>
 800e8ca:	0798      	lsls	r0, r3, #30
 800e8cc:	bf49      	itett	mi
 800e8ce:	085b      	lsrmi	r3, r3, #1
 800e8d0:	089b      	lsrpl	r3, r3, #2
 800e8d2:	2001      	movmi	r0, #1
 800e8d4:	600b      	strmi	r3, [r1, #0]
 800e8d6:	bf5c      	itt	pl
 800e8d8:	600b      	strpl	r3, [r1, #0]
 800e8da:	2002      	movpl	r0, #2
 800e8dc:	4770      	bx	lr
 800e8de:	b298      	uxth	r0, r3
 800e8e0:	b9a8      	cbnz	r0, 800e90e <__lo0bits+0x52>
 800e8e2:	0c1b      	lsrs	r3, r3, #16
 800e8e4:	2010      	movs	r0, #16
 800e8e6:	b2da      	uxtb	r2, r3
 800e8e8:	b90a      	cbnz	r2, 800e8ee <__lo0bits+0x32>
 800e8ea:	3008      	adds	r0, #8
 800e8ec:	0a1b      	lsrs	r3, r3, #8
 800e8ee:	071a      	lsls	r2, r3, #28
 800e8f0:	bf04      	itt	eq
 800e8f2:	091b      	lsreq	r3, r3, #4
 800e8f4:	3004      	addeq	r0, #4
 800e8f6:	079a      	lsls	r2, r3, #30
 800e8f8:	bf04      	itt	eq
 800e8fa:	089b      	lsreq	r3, r3, #2
 800e8fc:	3002      	addeq	r0, #2
 800e8fe:	07da      	lsls	r2, r3, #31
 800e900:	d403      	bmi.n	800e90a <__lo0bits+0x4e>
 800e902:	085b      	lsrs	r3, r3, #1
 800e904:	f100 0001 	add.w	r0, r0, #1
 800e908:	d005      	beq.n	800e916 <__lo0bits+0x5a>
 800e90a:	600b      	str	r3, [r1, #0]
 800e90c:	4770      	bx	lr
 800e90e:	4610      	mov	r0, r2
 800e910:	e7e9      	b.n	800e8e6 <__lo0bits+0x2a>
 800e912:	2000      	movs	r0, #0
 800e914:	4770      	bx	lr
 800e916:	2020      	movs	r0, #32
 800e918:	4770      	bx	lr
	...

0800e91c <__i2b>:
 800e91c:	b510      	push	{r4, lr}
 800e91e:	460c      	mov	r4, r1
 800e920:	2101      	movs	r1, #1
 800e922:	f7ff feed 	bl	800e700 <_Balloc>
 800e926:	4602      	mov	r2, r0
 800e928:	b928      	cbnz	r0, 800e936 <__i2b+0x1a>
 800e92a:	4b05      	ldr	r3, [pc, #20]	; (800e940 <__i2b+0x24>)
 800e92c:	4805      	ldr	r0, [pc, #20]	; (800e944 <__i2b+0x28>)
 800e92e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800e932:	f000 fce3 	bl	800f2fc <__assert_func>
 800e936:	2301      	movs	r3, #1
 800e938:	6144      	str	r4, [r0, #20]
 800e93a:	6103      	str	r3, [r0, #16]
 800e93c:	bd10      	pop	{r4, pc}
 800e93e:	bf00      	nop
 800e940:	08010d29 	.word	0x08010d29
 800e944:	08010e10 	.word	0x08010e10

0800e948 <__multiply>:
 800e948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e94c:	4691      	mov	r9, r2
 800e94e:	690a      	ldr	r2, [r1, #16]
 800e950:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800e954:	429a      	cmp	r2, r3
 800e956:	bfb8      	it	lt
 800e958:	460b      	movlt	r3, r1
 800e95a:	460c      	mov	r4, r1
 800e95c:	bfbc      	itt	lt
 800e95e:	464c      	movlt	r4, r9
 800e960:	4699      	movlt	r9, r3
 800e962:	6927      	ldr	r7, [r4, #16]
 800e964:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800e968:	68a3      	ldr	r3, [r4, #8]
 800e96a:	6861      	ldr	r1, [r4, #4]
 800e96c:	eb07 060a 	add.w	r6, r7, sl
 800e970:	42b3      	cmp	r3, r6
 800e972:	b085      	sub	sp, #20
 800e974:	bfb8      	it	lt
 800e976:	3101      	addlt	r1, #1
 800e978:	f7ff fec2 	bl	800e700 <_Balloc>
 800e97c:	b930      	cbnz	r0, 800e98c <__multiply+0x44>
 800e97e:	4602      	mov	r2, r0
 800e980:	4b44      	ldr	r3, [pc, #272]	; (800ea94 <__multiply+0x14c>)
 800e982:	4845      	ldr	r0, [pc, #276]	; (800ea98 <__multiply+0x150>)
 800e984:	f240 115d 	movw	r1, #349	; 0x15d
 800e988:	f000 fcb8 	bl	800f2fc <__assert_func>
 800e98c:	f100 0514 	add.w	r5, r0, #20
 800e990:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800e994:	462b      	mov	r3, r5
 800e996:	2200      	movs	r2, #0
 800e998:	4543      	cmp	r3, r8
 800e99a:	d321      	bcc.n	800e9e0 <__multiply+0x98>
 800e99c:	f104 0314 	add.w	r3, r4, #20
 800e9a0:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800e9a4:	f109 0314 	add.w	r3, r9, #20
 800e9a8:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800e9ac:	9202      	str	r2, [sp, #8]
 800e9ae:	1b3a      	subs	r2, r7, r4
 800e9b0:	3a15      	subs	r2, #21
 800e9b2:	f022 0203 	bic.w	r2, r2, #3
 800e9b6:	3204      	adds	r2, #4
 800e9b8:	f104 0115 	add.w	r1, r4, #21
 800e9bc:	428f      	cmp	r7, r1
 800e9be:	bf38      	it	cc
 800e9c0:	2204      	movcc	r2, #4
 800e9c2:	9201      	str	r2, [sp, #4]
 800e9c4:	9a02      	ldr	r2, [sp, #8]
 800e9c6:	9303      	str	r3, [sp, #12]
 800e9c8:	429a      	cmp	r2, r3
 800e9ca:	d80c      	bhi.n	800e9e6 <__multiply+0x9e>
 800e9cc:	2e00      	cmp	r6, #0
 800e9ce:	dd03      	ble.n	800e9d8 <__multiply+0x90>
 800e9d0:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800e9d4:	2b00      	cmp	r3, #0
 800e9d6:	d05a      	beq.n	800ea8e <__multiply+0x146>
 800e9d8:	6106      	str	r6, [r0, #16]
 800e9da:	b005      	add	sp, #20
 800e9dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e9e0:	f843 2b04 	str.w	r2, [r3], #4
 800e9e4:	e7d8      	b.n	800e998 <__multiply+0x50>
 800e9e6:	f8b3 a000 	ldrh.w	sl, [r3]
 800e9ea:	f1ba 0f00 	cmp.w	sl, #0
 800e9ee:	d024      	beq.n	800ea3a <__multiply+0xf2>
 800e9f0:	f104 0e14 	add.w	lr, r4, #20
 800e9f4:	46a9      	mov	r9, r5
 800e9f6:	f04f 0c00 	mov.w	ip, #0
 800e9fa:	f85e 2b04 	ldr.w	r2, [lr], #4
 800e9fe:	f8d9 1000 	ldr.w	r1, [r9]
 800ea02:	fa1f fb82 	uxth.w	fp, r2
 800ea06:	b289      	uxth	r1, r1
 800ea08:	fb0a 110b 	mla	r1, sl, fp, r1
 800ea0c:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800ea10:	f8d9 2000 	ldr.w	r2, [r9]
 800ea14:	4461      	add	r1, ip
 800ea16:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800ea1a:	fb0a c20b 	mla	r2, sl, fp, ip
 800ea1e:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800ea22:	b289      	uxth	r1, r1
 800ea24:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800ea28:	4577      	cmp	r7, lr
 800ea2a:	f849 1b04 	str.w	r1, [r9], #4
 800ea2e:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800ea32:	d8e2      	bhi.n	800e9fa <__multiply+0xb2>
 800ea34:	9a01      	ldr	r2, [sp, #4]
 800ea36:	f845 c002 	str.w	ip, [r5, r2]
 800ea3a:	9a03      	ldr	r2, [sp, #12]
 800ea3c:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800ea40:	3304      	adds	r3, #4
 800ea42:	f1b9 0f00 	cmp.w	r9, #0
 800ea46:	d020      	beq.n	800ea8a <__multiply+0x142>
 800ea48:	6829      	ldr	r1, [r5, #0]
 800ea4a:	f104 0c14 	add.w	ip, r4, #20
 800ea4e:	46ae      	mov	lr, r5
 800ea50:	f04f 0a00 	mov.w	sl, #0
 800ea54:	f8bc b000 	ldrh.w	fp, [ip]
 800ea58:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800ea5c:	fb09 220b 	mla	r2, r9, fp, r2
 800ea60:	4492      	add	sl, r2
 800ea62:	b289      	uxth	r1, r1
 800ea64:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800ea68:	f84e 1b04 	str.w	r1, [lr], #4
 800ea6c:	f85c 2b04 	ldr.w	r2, [ip], #4
 800ea70:	f8be 1000 	ldrh.w	r1, [lr]
 800ea74:	0c12      	lsrs	r2, r2, #16
 800ea76:	fb09 1102 	mla	r1, r9, r2, r1
 800ea7a:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800ea7e:	4567      	cmp	r7, ip
 800ea80:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800ea84:	d8e6      	bhi.n	800ea54 <__multiply+0x10c>
 800ea86:	9a01      	ldr	r2, [sp, #4]
 800ea88:	50a9      	str	r1, [r5, r2]
 800ea8a:	3504      	adds	r5, #4
 800ea8c:	e79a      	b.n	800e9c4 <__multiply+0x7c>
 800ea8e:	3e01      	subs	r6, #1
 800ea90:	e79c      	b.n	800e9cc <__multiply+0x84>
 800ea92:	bf00      	nop
 800ea94:	08010d29 	.word	0x08010d29
 800ea98:	08010e10 	.word	0x08010e10

0800ea9c <__pow5mult>:
 800ea9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800eaa0:	4615      	mov	r5, r2
 800eaa2:	f012 0203 	ands.w	r2, r2, #3
 800eaa6:	4606      	mov	r6, r0
 800eaa8:	460f      	mov	r7, r1
 800eaaa:	d007      	beq.n	800eabc <__pow5mult+0x20>
 800eaac:	4c1a      	ldr	r4, [pc, #104]	; (800eb18 <__pow5mult+0x7c>)
 800eaae:	3a01      	subs	r2, #1
 800eab0:	2300      	movs	r3, #0
 800eab2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800eab6:	f7ff fe51 	bl	800e75c <__multadd>
 800eaba:	4607      	mov	r7, r0
 800eabc:	10ad      	asrs	r5, r5, #2
 800eabe:	d027      	beq.n	800eb10 <__pow5mult+0x74>
 800eac0:	6cb4      	ldr	r4, [r6, #72]	; 0x48
 800eac2:	b944      	cbnz	r4, 800ead6 <__pow5mult+0x3a>
 800eac4:	f240 2171 	movw	r1, #625	; 0x271
 800eac8:	4630      	mov	r0, r6
 800eaca:	f7ff ff27 	bl	800e91c <__i2b>
 800eace:	2300      	movs	r3, #0
 800ead0:	64b0      	str	r0, [r6, #72]	; 0x48
 800ead2:	4604      	mov	r4, r0
 800ead4:	6003      	str	r3, [r0, #0]
 800ead6:	f04f 0900 	mov.w	r9, #0
 800eada:	07eb      	lsls	r3, r5, #31
 800eadc:	d50a      	bpl.n	800eaf4 <__pow5mult+0x58>
 800eade:	4639      	mov	r1, r7
 800eae0:	4622      	mov	r2, r4
 800eae2:	4630      	mov	r0, r6
 800eae4:	f7ff ff30 	bl	800e948 <__multiply>
 800eae8:	4639      	mov	r1, r7
 800eaea:	4680      	mov	r8, r0
 800eaec:	4630      	mov	r0, r6
 800eaee:	f7ff fe2c 	bl	800e74a <_Bfree>
 800eaf2:	4647      	mov	r7, r8
 800eaf4:	106d      	asrs	r5, r5, #1
 800eaf6:	d00b      	beq.n	800eb10 <__pow5mult+0x74>
 800eaf8:	6820      	ldr	r0, [r4, #0]
 800eafa:	b938      	cbnz	r0, 800eb0c <__pow5mult+0x70>
 800eafc:	4622      	mov	r2, r4
 800eafe:	4621      	mov	r1, r4
 800eb00:	4630      	mov	r0, r6
 800eb02:	f7ff ff21 	bl	800e948 <__multiply>
 800eb06:	6020      	str	r0, [r4, #0]
 800eb08:	f8c0 9000 	str.w	r9, [r0]
 800eb0c:	4604      	mov	r4, r0
 800eb0e:	e7e4      	b.n	800eada <__pow5mult+0x3e>
 800eb10:	4638      	mov	r0, r7
 800eb12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800eb16:	bf00      	nop
 800eb18:	08010f60 	.word	0x08010f60

0800eb1c <__lshift>:
 800eb1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800eb20:	460c      	mov	r4, r1
 800eb22:	6849      	ldr	r1, [r1, #4]
 800eb24:	6923      	ldr	r3, [r4, #16]
 800eb26:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800eb2a:	68a3      	ldr	r3, [r4, #8]
 800eb2c:	4607      	mov	r7, r0
 800eb2e:	4691      	mov	r9, r2
 800eb30:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800eb34:	f108 0601 	add.w	r6, r8, #1
 800eb38:	42b3      	cmp	r3, r6
 800eb3a:	db0b      	blt.n	800eb54 <__lshift+0x38>
 800eb3c:	4638      	mov	r0, r7
 800eb3e:	f7ff fddf 	bl	800e700 <_Balloc>
 800eb42:	4605      	mov	r5, r0
 800eb44:	b948      	cbnz	r0, 800eb5a <__lshift+0x3e>
 800eb46:	4602      	mov	r2, r0
 800eb48:	4b2a      	ldr	r3, [pc, #168]	; (800ebf4 <__lshift+0xd8>)
 800eb4a:	482b      	ldr	r0, [pc, #172]	; (800ebf8 <__lshift+0xdc>)
 800eb4c:	f240 11d9 	movw	r1, #473	; 0x1d9
 800eb50:	f000 fbd4 	bl	800f2fc <__assert_func>
 800eb54:	3101      	adds	r1, #1
 800eb56:	005b      	lsls	r3, r3, #1
 800eb58:	e7ee      	b.n	800eb38 <__lshift+0x1c>
 800eb5a:	2300      	movs	r3, #0
 800eb5c:	f100 0114 	add.w	r1, r0, #20
 800eb60:	f100 0210 	add.w	r2, r0, #16
 800eb64:	4618      	mov	r0, r3
 800eb66:	4553      	cmp	r3, sl
 800eb68:	db37      	blt.n	800ebda <__lshift+0xbe>
 800eb6a:	6920      	ldr	r0, [r4, #16]
 800eb6c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800eb70:	f104 0314 	add.w	r3, r4, #20
 800eb74:	f019 091f 	ands.w	r9, r9, #31
 800eb78:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800eb7c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800eb80:	d02f      	beq.n	800ebe2 <__lshift+0xc6>
 800eb82:	f1c9 0e20 	rsb	lr, r9, #32
 800eb86:	468a      	mov	sl, r1
 800eb88:	f04f 0c00 	mov.w	ip, #0
 800eb8c:	681a      	ldr	r2, [r3, #0]
 800eb8e:	fa02 f209 	lsl.w	r2, r2, r9
 800eb92:	ea42 020c 	orr.w	r2, r2, ip
 800eb96:	f84a 2b04 	str.w	r2, [sl], #4
 800eb9a:	f853 2b04 	ldr.w	r2, [r3], #4
 800eb9e:	4298      	cmp	r0, r3
 800eba0:	fa22 fc0e 	lsr.w	ip, r2, lr
 800eba4:	d8f2      	bhi.n	800eb8c <__lshift+0x70>
 800eba6:	1b03      	subs	r3, r0, r4
 800eba8:	3b15      	subs	r3, #21
 800ebaa:	f023 0303 	bic.w	r3, r3, #3
 800ebae:	3304      	adds	r3, #4
 800ebb0:	f104 0215 	add.w	r2, r4, #21
 800ebb4:	4290      	cmp	r0, r2
 800ebb6:	bf38      	it	cc
 800ebb8:	2304      	movcc	r3, #4
 800ebba:	f841 c003 	str.w	ip, [r1, r3]
 800ebbe:	f1bc 0f00 	cmp.w	ip, #0
 800ebc2:	d001      	beq.n	800ebc8 <__lshift+0xac>
 800ebc4:	f108 0602 	add.w	r6, r8, #2
 800ebc8:	3e01      	subs	r6, #1
 800ebca:	4638      	mov	r0, r7
 800ebcc:	612e      	str	r6, [r5, #16]
 800ebce:	4621      	mov	r1, r4
 800ebd0:	f7ff fdbb 	bl	800e74a <_Bfree>
 800ebd4:	4628      	mov	r0, r5
 800ebd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ebda:	f842 0f04 	str.w	r0, [r2, #4]!
 800ebde:	3301      	adds	r3, #1
 800ebe0:	e7c1      	b.n	800eb66 <__lshift+0x4a>
 800ebe2:	3904      	subs	r1, #4
 800ebe4:	f853 2b04 	ldr.w	r2, [r3], #4
 800ebe8:	f841 2f04 	str.w	r2, [r1, #4]!
 800ebec:	4298      	cmp	r0, r3
 800ebee:	d8f9      	bhi.n	800ebe4 <__lshift+0xc8>
 800ebf0:	e7ea      	b.n	800ebc8 <__lshift+0xac>
 800ebf2:	bf00      	nop
 800ebf4:	08010d29 	.word	0x08010d29
 800ebf8:	08010e10 	.word	0x08010e10

0800ebfc <__mcmp>:
 800ebfc:	b530      	push	{r4, r5, lr}
 800ebfe:	6902      	ldr	r2, [r0, #16]
 800ec00:	690c      	ldr	r4, [r1, #16]
 800ec02:	1b12      	subs	r2, r2, r4
 800ec04:	d10e      	bne.n	800ec24 <__mcmp+0x28>
 800ec06:	f100 0314 	add.w	r3, r0, #20
 800ec0a:	3114      	adds	r1, #20
 800ec0c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800ec10:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800ec14:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800ec18:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800ec1c:	42a5      	cmp	r5, r4
 800ec1e:	d003      	beq.n	800ec28 <__mcmp+0x2c>
 800ec20:	d305      	bcc.n	800ec2e <__mcmp+0x32>
 800ec22:	2201      	movs	r2, #1
 800ec24:	4610      	mov	r0, r2
 800ec26:	bd30      	pop	{r4, r5, pc}
 800ec28:	4283      	cmp	r3, r0
 800ec2a:	d3f3      	bcc.n	800ec14 <__mcmp+0x18>
 800ec2c:	e7fa      	b.n	800ec24 <__mcmp+0x28>
 800ec2e:	f04f 32ff 	mov.w	r2, #4294967295
 800ec32:	e7f7      	b.n	800ec24 <__mcmp+0x28>

0800ec34 <__mdiff>:
 800ec34:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec38:	460c      	mov	r4, r1
 800ec3a:	4606      	mov	r6, r0
 800ec3c:	4611      	mov	r1, r2
 800ec3e:	4620      	mov	r0, r4
 800ec40:	4690      	mov	r8, r2
 800ec42:	f7ff ffdb 	bl	800ebfc <__mcmp>
 800ec46:	1e05      	subs	r5, r0, #0
 800ec48:	d110      	bne.n	800ec6c <__mdiff+0x38>
 800ec4a:	4629      	mov	r1, r5
 800ec4c:	4630      	mov	r0, r6
 800ec4e:	f7ff fd57 	bl	800e700 <_Balloc>
 800ec52:	b930      	cbnz	r0, 800ec62 <__mdiff+0x2e>
 800ec54:	4b3a      	ldr	r3, [pc, #232]	; (800ed40 <__mdiff+0x10c>)
 800ec56:	4602      	mov	r2, r0
 800ec58:	f240 2132 	movw	r1, #562	; 0x232
 800ec5c:	4839      	ldr	r0, [pc, #228]	; (800ed44 <__mdiff+0x110>)
 800ec5e:	f000 fb4d 	bl	800f2fc <__assert_func>
 800ec62:	2301      	movs	r3, #1
 800ec64:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800ec68:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec6c:	bfa4      	itt	ge
 800ec6e:	4643      	movge	r3, r8
 800ec70:	46a0      	movge	r8, r4
 800ec72:	4630      	mov	r0, r6
 800ec74:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800ec78:	bfa6      	itte	ge
 800ec7a:	461c      	movge	r4, r3
 800ec7c:	2500      	movge	r5, #0
 800ec7e:	2501      	movlt	r5, #1
 800ec80:	f7ff fd3e 	bl	800e700 <_Balloc>
 800ec84:	b920      	cbnz	r0, 800ec90 <__mdiff+0x5c>
 800ec86:	4b2e      	ldr	r3, [pc, #184]	; (800ed40 <__mdiff+0x10c>)
 800ec88:	4602      	mov	r2, r0
 800ec8a:	f44f 7110 	mov.w	r1, #576	; 0x240
 800ec8e:	e7e5      	b.n	800ec5c <__mdiff+0x28>
 800ec90:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800ec94:	6926      	ldr	r6, [r4, #16]
 800ec96:	60c5      	str	r5, [r0, #12]
 800ec98:	f104 0914 	add.w	r9, r4, #20
 800ec9c:	f108 0514 	add.w	r5, r8, #20
 800eca0:	f100 0e14 	add.w	lr, r0, #20
 800eca4:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800eca8:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800ecac:	f108 0210 	add.w	r2, r8, #16
 800ecb0:	46f2      	mov	sl, lr
 800ecb2:	2100      	movs	r1, #0
 800ecb4:	f859 3b04 	ldr.w	r3, [r9], #4
 800ecb8:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800ecbc:	fa1f f883 	uxth.w	r8, r3
 800ecc0:	fa11 f18b 	uxtah	r1, r1, fp
 800ecc4:	0c1b      	lsrs	r3, r3, #16
 800ecc6:	eba1 0808 	sub.w	r8, r1, r8
 800ecca:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800ecce:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800ecd2:	fa1f f888 	uxth.w	r8, r8
 800ecd6:	1419      	asrs	r1, r3, #16
 800ecd8:	454e      	cmp	r6, r9
 800ecda:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800ecde:	f84a 3b04 	str.w	r3, [sl], #4
 800ece2:	d8e7      	bhi.n	800ecb4 <__mdiff+0x80>
 800ece4:	1b33      	subs	r3, r6, r4
 800ece6:	3b15      	subs	r3, #21
 800ece8:	f023 0303 	bic.w	r3, r3, #3
 800ecec:	3304      	adds	r3, #4
 800ecee:	3415      	adds	r4, #21
 800ecf0:	42a6      	cmp	r6, r4
 800ecf2:	bf38      	it	cc
 800ecf4:	2304      	movcc	r3, #4
 800ecf6:	441d      	add	r5, r3
 800ecf8:	4473      	add	r3, lr
 800ecfa:	469e      	mov	lr, r3
 800ecfc:	462e      	mov	r6, r5
 800ecfe:	4566      	cmp	r6, ip
 800ed00:	d30e      	bcc.n	800ed20 <__mdiff+0xec>
 800ed02:	f10c 0203 	add.w	r2, ip, #3
 800ed06:	1b52      	subs	r2, r2, r5
 800ed08:	f022 0203 	bic.w	r2, r2, #3
 800ed0c:	3d03      	subs	r5, #3
 800ed0e:	45ac      	cmp	ip, r5
 800ed10:	bf38      	it	cc
 800ed12:	2200      	movcc	r2, #0
 800ed14:	441a      	add	r2, r3
 800ed16:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800ed1a:	b17b      	cbz	r3, 800ed3c <__mdiff+0x108>
 800ed1c:	6107      	str	r7, [r0, #16]
 800ed1e:	e7a3      	b.n	800ec68 <__mdiff+0x34>
 800ed20:	f856 8b04 	ldr.w	r8, [r6], #4
 800ed24:	fa11 f288 	uxtah	r2, r1, r8
 800ed28:	1414      	asrs	r4, r2, #16
 800ed2a:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800ed2e:	b292      	uxth	r2, r2
 800ed30:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800ed34:	f84e 2b04 	str.w	r2, [lr], #4
 800ed38:	1421      	asrs	r1, r4, #16
 800ed3a:	e7e0      	b.n	800ecfe <__mdiff+0xca>
 800ed3c:	3f01      	subs	r7, #1
 800ed3e:	e7ea      	b.n	800ed16 <__mdiff+0xe2>
 800ed40:	08010d29 	.word	0x08010d29
 800ed44:	08010e10 	.word	0x08010e10

0800ed48 <__ulp>:
 800ed48:	b082      	sub	sp, #8
 800ed4a:	ed8d 0b00 	vstr	d0, [sp]
 800ed4e:	9b01      	ldr	r3, [sp, #4]
 800ed50:	4912      	ldr	r1, [pc, #72]	; (800ed9c <__ulp+0x54>)
 800ed52:	4019      	ands	r1, r3
 800ed54:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 800ed58:	2900      	cmp	r1, #0
 800ed5a:	dd05      	ble.n	800ed68 <__ulp+0x20>
 800ed5c:	2200      	movs	r2, #0
 800ed5e:	460b      	mov	r3, r1
 800ed60:	ec43 2b10 	vmov	d0, r2, r3
 800ed64:	b002      	add	sp, #8
 800ed66:	4770      	bx	lr
 800ed68:	4249      	negs	r1, r1
 800ed6a:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 800ed6e:	ea4f 5021 	mov.w	r0, r1, asr #20
 800ed72:	f04f 0200 	mov.w	r2, #0
 800ed76:	f04f 0300 	mov.w	r3, #0
 800ed7a:	da04      	bge.n	800ed86 <__ulp+0x3e>
 800ed7c:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 800ed80:	fa41 f300 	asr.w	r3, r1, r0
 800ed84:	e7ec      	b.n	800ed60 <__ulp+0x18>
 800ed86:	f1a0 0114 	sub.w	r1, r0, #20
 800ed8a:	291e      	cmp	r1, #30
 800ed8c:	bfda      	itte	le
 800ed8e:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 800ed92:	fa20 f101 	lsrle.w	r1, r0, r1
 800ed96:	2101      	movgt	r1, #1
 800ed98:	460a      	mov	r2, r1
 800ed9a:	e7e1      	b.n	800ed60 <__ulp+0x18>
 800ed9c:	7ff00000 	.word	0x7ff00000

0800eda0 <__b2d>:
 800eda0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800eda2:	6905      	ldr	r5, [r0, #16]
 800eda4:	f100 0714 	add.w	r7, r0, #20
 800eda8:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 800edac:	1f2e      	subs	r6, r5, #4
 800edae:	f855 4c04 	ldr.w	r4, [r5, #-4]
 800edb2:	4620      	mov	r0, r4
 800edb4:	f7ff fd62 	bl	800e87c <__hi0bits>
 800edb8:	f1c0 0320 	rsb	r3, r0, #32
 800edbc:	280a      	cmp	r0, #10
 800edbe:	f8df c07c 	ldr.w	ip, [pc, #124]	; 800ee3c <__b2d+0x9c>
 800edc2:	600b      	str	r3, [r1, #0]
 800edc4:	dc14      	bgt.n	800edf0 <__b2d+0x50>
 800edc6:	f1c0 0e0b 	rsb	lr, r0, #11
 800edca:	fa24 f10e 	lsr.w	r1, r4, lr
 800edce:	42b7      	cmp	r7, r6
 800edd0:	ea41 030c 	orr.w	r3, r1, ip
 800edd4:	bf34      	ite	cc
 800edd6:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 800edda:	2100      	movcs	r1, #0
 800eddc:	3015      	adds	r0, #21
 800edde:	fa04 f000 	lsl.w	r0, r4, r0
 800ede2:	fa21 f10e 	lsr.w	r1, r1, lr
 800ede6:	ea40 0201 	orr.w	r2, r0, r1
 800edea:	ec43 2b10 	vmov	d0, r2, r3
 800edee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800edf0:	42b7      	cmp	r7, r6
 800edf2:	bf3a      	itte	cc
 800edf4:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 800edf8:	f1a5 0608 	subcc.w	r6, r5, #8
 800edfc:	2100      	movcs	r1, #0
 800edfe:	380b      	subs	r0, #11
 800ee00:	d017      	beq.n	800ee32 <__b2d+0x92>
 800ee02:	f1c0 0c20 	rsb	ip, r0, #32
 800ee06:	fa04 f500 	lsl.w	r5, r4, r0
 800ee0a:	42be      	cmp	r6, r7
 800ee0c:	fa21 f40c 	lsr.w	r4, r1, ip
 800ee10:	ea45 0504 	orr.w	r5, r5, r4
 800ee14:	bf8c      	ite	hi
 800ee16:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 800ee1a:	2400      	movls	r4, #0
 800ee1c:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 800ee20:	fa01 f000 	lsl.w	r0, r1, r0
 800ee24:	fa24 f40c 	lsr.w	r4, r4, ip
 800ee28:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800ee2c:	ea40 0204 	orr.w	r2, r0, r4
 800ee30:	e7db      	b.n	800edea <__b2d+0x4a>
 800ee32:	ea44 030c 	orr.w	r3, r4, ip
 800ee36:	460a      	mov	r2, r1
 800ee38:	e7d7      	b.n	800edea <__b2d+0x4a>
 800ee3a:	bf00      	nop
 800ee3c:	3ff00000 	.word	0x3ff00000

0800ee40 <__d2b>:
 800ee40:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ee44:	4689      	mov	r9, r1
 800ee46:	2101      	movs	r1, #1
 800ee48:	ec57 6b10 	vmov	r6, r7, d0
 800ee4c:	4690      	mov	r8, r2
 800ee4e:	f7ff fc57 	bl	800e700 <_Balloc>
 800ee52:	4604      	mov	r4, r0
 800ee54:	b930      	cbnz	r0, 800ee64 <__d2b+0x24>
 800ee56:	4602      	mov	r2, r0
 800ee58:	4b25      	ldr	r3, [pc, #148]	; (800eef0 <__d2b+0xb0>)
 800ee5a:	4826      	ldr	r0, [pc, #152]	; (800eef4 <__d2b+0xb4>)
 800ee5c:	f240 310a 	movw	r1, #778	; 0x30a
 800ee60:	f000 fa4c 	bl	800f2fc <__assert_func>
 800ee64:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800ee68:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800ee6c:	bb35      	cbnz	r5, 800eebc <__d2b+0x7c>
 800ee6e:	2e00      	cmp	r6, #0
 800ee70:	9301      	str	r3, [sp, #4]
 800ee72:	d028      	beq.n	800eec6 <__d2b+0x86>
 800ee74:	4668      	mov	r0, sp
 800ee76:	9600      	str	r6, [sp, #0]
 800ee78:	f7ff fd20 	bl	800e8bc <__lo0bits>
 800ee7c:	9900      	ldr	r1, [sp, #0]
 800ee7e:	b300      	cbz	r0, 800eec2 <__d2b+0x82>
 800ee80:	9a01      	ldr	r2, [sp, #4]
 800ee82:	f1c0 0320 	rsb	r3, r0, #32
 800ee86:	fa02 f303 	lsl.w	r3, r2, r3
 800ee8a:	430b      	orrs	r3, r1
 800ee8c:	40c2      	lsrs	r2, r0
 800ee8e:	6163      	str	r3, [r4, #20]
 800ee90:	9201      	str	r2, [sp, #4]
 800ee92:	9b01      	ldr	r3, [sp, #4]
 800ee94:	61a3      	str	r3, [r4, #24]
 800ee96:	2b00      	cmp	r3, #0
 800ee98:	bf14      	ite	ne
 800ee9a:	2202      	movne	r2, #2
 800ee9c:	2201      	moveq	r2, #1
 800ee9e:	6122      	str	r2, [r4, #16]
 800eea0:	b1d5      	cbz	r5, 800eed8 <__d2b+0x98>
 800eea2:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800eea6:	4405      	add	r5, r0
 800eea8:	f8c9 5000 	str.w	r5, [r9]
 800eeac:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800eeb0:	f8c8 0000 	str.w	r0, [r8]
 800eeb4:	4620      	mov	r0, r4
 800eeb6:	b003      	add	sp, #12
 800eeb8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eebc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800eec0:	e7d5      	b.n	800ee6e <__d2b+0x2e>
 800eec2:	6161      	str	r1, [r4, #20]
 800eec4:	e7e5      	b.n	800ee92 <__d2b+0x52>
 800eec6:	a801      	add	r0, sp, #4
 800eec8:	f7ff fcf8 	bl	800e8bc <__lo0bits>
 800eecc:	9b01      	ldr	r3, [sp, #4]
 800eece:	6163      	str	r3, [r4, #20]
 800eed0:	2201      	movs	r2, #1
 800eed2:	6122      	str	r2, [r4, #16]
 800eed4:	3020      	adds	r0, #32
 800eed6:	e7e3      	b.n	800eea0 <__d2b+0x60>
 800eed8:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800eedc:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800eee0:	f8c9 0000 	str.w	r0, [r9]
 800eee4:	6918      	ldr	r0, [r3, #16]
 800eee6:	f7ff fcc9 	bl	800e87c <__hi0bits>
 800eeea:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800eeee:	e7df      	b.n	800eeb0 <__d2b+0x70>
 800eef0:	08010d29 	.word	0x08010d29
 800eef4:	08010e10 	.word	0x08010e10

0800eef8 <__ratio>:
 800eef8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eefc:	4688      	mov	r8, r1
 800eefe:	4669      	mov	r1, sp
 800ef00:	4681      	mov	r9, r0
 800ef02:	f7ff ff4d 	bl	800eda0 <__b2d>
 800ef06:	a901      	add	r1, sp, #4
 800ef08:	4640      	mov	r0, r8
 800ef0a:	ec55 4b10 	vmov	r4, r5, d0
 800ef0e:	f7ff ff47 	bl	800eda0 <__b2d>
 800ef12:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800ef16:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800ef1a:	eba3 0c02 	sub.w	ip, r3, r2
 800ef1e:	e9dd 3200 	ldrd	r3, r2, [sp]
 800ef22:	1a9b      	subs	r3, r3, r2
 800ef24:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800ef28:	ec51 0b10 	vmov	r0, r1, d0
 800ef2c:	2b00      	cmp	r3, #0
 800ef2e:	bfd6      	itet	le
 800ef30:	460a      	movle	r2, r1
 800ef32:	462a      	movgt	r2, r5
 800ef34:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800ef38:	468b      	mov	fp, r1
 800ef3a:	462f      	mov	r7, r5
 800ef3c:	bfd4      	ite	le
 800ef3e:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800ef42:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800ef46:	4620      	mov	r0, r4
 800ef48:	ee10 2a10 	vmov	r2, s0
 800ef4c:	465b      	mov	r3, fp
 800ef4e:	4639      	mov	r1, r7
 800ef50:	f7f1 fc84 	bl	800085c <__aeabi_ddiv>
 800ef54:	ec41 0b10 	vmov	d0, r0, r1
 800ef58:	b003      	add	sp, #12
 800ef5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ef5e <__copybits>:
 800ef5e:	3901      	subs	r1, #1
 800ef60:	b570      	push	{r4, r5, r6, lr}
 800ef62:	1149      	asrs	r1, r1, #5
 800ef64:	6914      	ldr	r4, [r2, #16]
 800ef66:	3101      	adds	r1, #1
 800ef68:	f102 0314 	add.w	r3, r2, #20
 800ef6c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800ef70:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800ef74:	1f05      	subs	r5, r0, #4
 800ef76:	42a3      	cmp	r3, r4
 800ef78:	d30c      	bcc.n	800ef94 <__copybits+0x36>
 800ef7a:	1aa3      	subs	r3, r4, r2
 800ef7c:	3b11      	subs	r3, #17
 800ef7e:	f023 0303 	bic.w	r3, r3, #3
 800ef82:	3211      	adds	r2, #17
 800ef84:	42a2      	cmp	r2, r4
 800ef86:	bf88      	it	hi
 800ef88:	2300      	movhi	r3, #0
 800ef8a:	4418      	add	r0, r3
 800ef8c:	2300      	movs	r3, #0
 800ef8e:	4288      	cmp	r0, r1
 800ef90:	d305      	bcc.n	800ef9e <__copybits+0x40>
 800ef92:	bd70      	pop	{r4, r5, r6, pc}
 800ef94:	f853 6b04 	ldr.w	r6, [r3], #4
 800ef98:	f845 6f04 	str.w	r6, [r5, #4]!
 800ef9c:	e7eb      	b.n	800ef76 <__copybits+0x18>
 800ef9e:	f840 3b04 	str.w	r3, [r0], #4
 800efa2:	e7f4      	b.n	800ef8e <__copybits+0x30>

0800efa4 <__any_on>:
 800efa4:	f100 0214 	add.w	r2, r0, #20
 800efa8:	6900      	ldr	r0, [r0, #16]
 800efaa:	114b      	asrs	r3, r1, #5
 800efac:	4298      	cmp	r0, r3
 800efae:	b510      	push	{r4, lr}
 800efb0:	db11      	blt.n	800efd6 <__any_on+0x32>
 800efb2:	dd0a      	ble.n	800efca <__any_on+0x26>
 800efb4:	f011 011f 	ands.w	r1, r1, #31
 800efb8:	d007      	beq.n	800efca <__any_on+0x26>
 800efba:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800efbe:	fa24 f001 	lsr.w	r0, r4, r1
 800efc2:	fa00 f101 	lsl.w	r1, r0, r1
 800efc6:	428c      	cmp	r4, r1
 800efc8:	d10b      	bne.n	800efe2 <__any_on+0x3e>
 800efca:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800efce:	4293      	cmp	r3, r2
 800efd0:	d803      	bhi.n	800efda <__any_on+0x36>
 800efd2:	2000      	movs	r0, #0
 800efd4:	bd10      	pop	{r4, pc}
 800efd6:	4603      	mov	r3, r0
 800efd8:	e7f7      	b.n	800efca <__any_on+0x26>
 800efda:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800efde:	2900      	cmp	r1, #0
 800efe0:	d0f5      	beq.n	800efce <__any_on+0x2a>
 800efe2:	2001      	movs	r0, #1
 800efe4:	e7f6      	b.n	800efd4 <__any_on+0x30>
	...

0800efe8 <_read_r>:
 800efe8:	b538      	push	{r3, r4, r5, lr}
 800efea:	4d07      	ldr	r5, [pc, #28]	; (800f008 <_read_r+0x20>)
 800efec:	4604      	mov	r4, r0
 800efee:	4608      	mov	r0, r1
 800eff0:	4611      	mov	r1, r2
 800eff2:	2200      	movs	r2, #0
 800eff4:	602a      	str	r2, [r5, #0]
 800eff6:	461a      	mov	r2, r3
 800eff8:	f7f3 fc04 	bl	8002804 <_read>
 800effc:	1c43      	adds	r3, r0, #1
 800effe:	d102      	bne.n	800f006 <_read_r+0x1e>
 800f000:	682b      	ldr	r3, [r5, #0]
 800f002:	b103      	cbz	r3, 800f006 <_read_r+0x1e>
 800f004:	6023      	str	r3, [r4, #0]
 800f006:	bd38      	pop	{r3, r4, r5, pc}
 800f008:	20017ad4 	.word	0x20017ad4

0800f00c <frexp>:
 800f00c:	b570      	push	{r4, r5, r6, lr}
 800f00e:	2100      	movs	r1, #0
 800f010:	ec55 4b10 	vmov	r4, r5, d0
 800f014:	6001      	str	r1, [r0, #0]
 800f016:	4916      	ldr	r1, [pc, #88]	; (800f070 <frexp+0x64>)
 800f018:	f025 4200 	bic.w	r2, r5, #2147483648	; 0x80000000
 800f01c:	428a      	cmp	r2, r1
 800f01e:	4606      	mov	r6, r0
 800f020:	462b      	mov	r3, r5
 800f022:	dc22      	bgt.n	800f06a <frexp+0x5e>
 800f024:	ee10 1a10 	vmov	r1, s0
 800f028:	4311      	orrs	r1, r2
 800f02a:	d01e      	beq.n	800f06a <frexp+0x5e>
 800f02c:	4911      	ldr	r1, [pc, #68]	; (800f074 <frexp+0x68>)
 800f02e:	4029      	ands	r1, r5
 800f030:	b969      	cbnz	r1, 800f04e <frexp+0x42>
 800f032:	4b11      	ldr	r3, [pc, #68]	; (800f078 <frexp+0x6c>)
 800f034:	2200      	movs	r2, #0
 800f036:	ee10 0a10 	vmov	r0, s0
 800f03a:	4629      	mov	r1, r5
 800f03c:	f7f1 fae4 	bl	8000608 <__aeabi_dmul>
 800f040:	460b      	mov	r3, r1
 800f042:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 800f046:	f06f 0135 	mvn.w	r1, #53	; 0x35
 800f04a:	4604      	mov	r4, r0
 800f04c:	6031      	str	r1, [r6, #0]
 800f04e:	6831      	ldr	r1, [r6, #0]
 800f050:	1512      	asrs	r2, r2, #20
 800f052:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800f056:	f2a2 32fe 	subw	r2, r2, #1022	; 0x3fe
 800f05a:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 800f05e:	440a      	add	r2, r1
 800f060:	f043 557f 	orr.w	r5, r3, #1069547520	; 0x3fc00000
 800f064:	6032      	str	r2, [r6, #0]
 800f066:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
 800f06a:	ec45 4b10 	vmov	d0, r4, r5
 800f06e:	bd70      	pop	{r4, r5, r6, pc}
 800f070:	7fefffff 	.word	0x7fefffff
 800f074:	7ff00000 	.word	0x7ff00000
 800f078:	43500000 	.word	0x43500000
 800f07c:	00000000 	.word	0x00000000

0800f080 <nan>:
 800f080:	ed9f 0b01 	vldr	d0, [pc, #4]	; 800f088 <nan+0x8>
 800f084:	4770      	bx	lr
 800f086:	bf00      	nop
 800f088:	00000000 	.word	0x00000000
 800f08c:	7ff80000 	.word	0x7ff80000

0800f090 <strncpy>:
 800f090:	b510      	push	{r4, lr}
 800f092:	3901      	subs	r1, #1
 800f094:	4603      	mov	r3, r0
 800f096:	b132      	cbz	r2, 800f0a6 <strncpy+0x16>
 800f098:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800f09c:	f803 4b01 	strb.w	r4, [r3], #1
 800f0a0:	3a01      	subs	r2, #1
 800f0a2:	2c00      	cmp	r4, #0
 800f0a4:	d1f7      	bne.n	800f096 <strncpy+0x6>
 800f0a6:	441a      	add	r2, r3
 800f0a8:	2100      	movs	r1, #0
 800f0aa:	4293      	cmp	r3, r2
 800f0ac:	d100      	bne.n	800f0b0 <strncpy+0x20>
 800f0ae:	bd10      	pop	{r4, pc}
 800f0b0:	f803 1b01 	strb.w	r1, [r3], #1
 800f0b4:	e7f9      	b.n	800f0aa <strncpy+0x1a>

0800f0b6 <__ssprint_r>:
 800f0b6:	6893      	ldr	r3, [r2, #8]
 800f0b8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f0bc:	4680      	mov	r8, r0
 800f0be:	460c      	mov	r4, r1
 800f0c0:	4617      	mov	r7, r2
 800f0c2:	2b00      	cmp	r3, #0
 800f0c4:	d061      	beq.n	800f18a <__ssprint_r+0xd4>
 800f0c6:	2300      	movs	r3, #0
 800f0c8:	f8d2 a000 	ldr.w	sl, [r2]
 800f0cc:	9301      	str	r3, [sp, #4]
 800f0ce:	469b      	mov	fp, r3
 800f0d0:	f1bb 0f00 	cmp.w	fp, #0
 800f0d4:	d02b      	beq.n	800f12e <__ssprint_r+0x78>
 800f0d6:	68a6      	ldr	r6, [r4, #8]
 800f0d8:	455e      	cmp	r6, fp
 800f0da:	d844      	bhi.n	800f166 <__ssprint_r+0xb0>
 800f0dc:	89a2      	ldrh	r2, [r4, #12]
 800f0de:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800f0e2:	d03e      	beq.n	800f162 <__ssprint_r+0xac>
 800f0e4:	6820      	ldr	r0, [r4, #0]
 800f0e6:	6921      	ldr	r1, [r4, #16]
 800f0e8:	6965      	ldr	r5, [r4, #20]
 800f0ea:	eba0 0901 	sub.w	r9, r0, r1
 800f0ee:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800f0f2:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800f0f6:	f109 0001 	add.w	r0, r9, #1
 800f0fa:	106d      	asrs	r5, r5, #1
 800f0fc:	4458      	add	r0, fp
 800f0fe:	4285      	cmp	r5, r0
 800f100:	bf38      	it	cc
 800f102:	4605      	movcc	r5, r0
 800f104:	0553      	lsls	r3, r2, #21
 800f106:	d545      	bpl.n	800f194 <__ssprint_r+0xde>
 800f108:	4629      	mov	r1, r5
 800f10a:	4640      	mov	r0, r8
 800f10c:	f7fb f95e 	bl	800a3cc <_malloc_r>
 800f110:	4606      	mov	r6, r0
 800f112:	b9a0      	cbnz	r0, 800f13e <__ssprint_r+0x88>
 800f114:	230c      	movs	r3, #12
 800f116:	f8c8 3000 	str.w	r3, [r8]
 800f11a:	89a3      	ldrh	r3, [r4, #12]
 800f11c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f120:	81a3      	strh	r3, [r4, #12]
 800f122:	2300      	movs	r3, #0
 800f124:	e9c7 3301 	strd	r3, r3, [r7, #4]
 800f128:	f04f 30ff 	mov.w	r0, #4294967295
 800f12c:	e02f      	b.n	800f18e <__ssprint_r+0xd8>
 800f12e:	f8da 3000 	ldr.w	r3, [sl]
 800f132:	f8da b004 	ldr.w	fp, [sl, #4]
 800f136:	9301      	str	r3, [sp, #4]
 800f138:	f10a 0a08 	add.w	sl, sl, #8
 800f13c:	e7c8      	b.n	800f0d0 <__ssprint_r+0x1a>
 800f13e:	464a      	mov	r2, r9
 800f140:	6921      	ldr	r1, [r4, #16]
 800f142:	f7fb fb7f 	bl	800a844 <memcpy>
 800f146:	89a2      	ldrh	r2, [r4, #12]
 800f148:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 800f14c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800f150:	81a2      	strh	r2, [r4, #12]
 800f152:	6126      	str	r6, [r4, #16]
 800f154:	6165      	str	r5, [r4, #20]
 800f156:	444e      	add	r6, r9
 800f158:	eba5 0509 	sub.w	r5, r5, r9
 800f15c:	6026      	str	r6, [r4, #0]
 800f15e:	60a5      	str	r5, [r4, #8]
 800f160:	465e      	mov	r6, fp
 800f162:	455e      	cmp	r6, fp
 800f164:	d900      	bls.n	800f168 <__ssprint_r+0xb2>
 800f166:	465e      	mov	r6, fp
 800f168:	4632      	mov	r2, r6
 800f16a:	9901      	ldr	r1, [sp, #4]
 800f16c:	6820      	ldr	r0, [r4, #0]
 800f16e:	f7ff faad 	bl	800e6cc <memmove>
 800f172:	68a2      	ldr	r2, [r4, #8]
 800f174:	1b92      	subs	r2, r2, r6
 800f176:	60a2      	str	r2, [r4, #8]
 800f178:	6822      	ldr	r2, [r4, #0]
 800f17a:	4432      	add	r2, r6
 800f17c:	6022      	str	r2, [r4, #0]
 800f17e:	68ba      	ldr	r2, [r7, #8]
 800f180:	eba2 030b 	sub.w	r3, r2, fp
 800f184:	60bb      	str	r3, [r7, #8]
 800f186:	2b00      	cmp	r3, #0
 800f188:	d1d1      	bne.n	800f12e <__ssprint_r+0x78>
 800f18a:	2000      	movs	r0, #0
 800f18c:	6078      	str	r0, [r7, #4]
 800f18e:	b003      	add	sp, #12
 800f190:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f194:	462a      	mov	r2, r5
 800f196:	4640      	mov	r0, r8
 800f198:	f7fb fbcc 	bl	800a934 <_realloc_r>
 800f19c:	4606      	mov	r6, r0
 800f19e:	2800      	cmp	r0, #0
 800f1a0:	d1d7      	bne.n	800f152 <__ssprint_r+0x9c>
 800f1a2:	6921      	ldr	r1, [r4, #16]
 800f1a4:	4640      	mov	r0, r8
 800f1a6:	f7fa fff9 	bl	800a19c <_free_r>
 800f1aa:	e7b3      	b.n	800f114 <__ssprint_r+0x5e>

0800f1ac <__ascii_wctomb>:
 800f1ac:	b149      	cbz	r1, 800f1c2 <__ascii_wctomb+0x16>
 800f1ae:	2aff      	cmp	r2, #255	; 0xff
 800f1b0:	bf85      	ittet	hi
 800f1b2:	238a      	movhi	r3, #138	; 0x8a
 800f1b4:	6003      	strhi	r3, [r0, #0]
 800f1b6:	700a      	strbls	r2, [r1, #0]
 800f1b8:	f04f 30ff 	movhi.w	r0, #4294967295
 800f1bc:	bf98      	it	ls
 800f1be:	2001      	movls	r0, #1
 800f1c0:	4770      	bx	lr
 800f1c2:	4608      	mov	r0, r1
 800f1c4:	4770      	bx	lr
	...

0800f1c8 <__swsetup_r>:
 800f1c8:	b538      	push	{r3, r4, r5, lr}
 800f1ca:	4b2a      	ldr	r3, [pc, #168]	; (800f274 <__swsetup_r+0xac>)
 800f1cc:	4605      	mov	r5, r0
 800f1ce:	6818      	ldr	r0, [r3, #0]
 800f1d0:	460c      	mov	r4, r1
 800f1d2:	b118      	cbz	r0, 800f1dc <__swsetup_r+0x14>
 800f1d4:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800f1d6:	b90b      	cbnz	r3, 800f1dc <__swsetup_r+0x14>
 800f1d8:	f7fa ff64 	bl	800a0a4 <__sinit>
 800f1dc:	89a3      	ldrh	r3, [r4, #12]
 800f1de:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800f1e2:	0718      	lsls	r0, r3, #28
 800f1e4:	d422      	bmi.n	800f22c <__swsetup_r+0x64>
 800f1e6:	06d9      	lsls	r1, r3, #27
 800f1e8:	d407      	bmi.n	800f1fa <__swsetup_r+0x32>
 800f1ea:	2309      	movs	r3, #9
 800f1ec:	602b      	str	r3, [r5, #0]
 800f1ee:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800f1f2:	81a3      	strh	r3, [r4, #12]
 800f1f4:	f04f 30ff 	mov.w	r0, #4294967295
 800f1f8:	e034      	b.n	800f264 <__swsetup_r+0x9c>
 800f1fa:	0758      	lsls	r0, r3, #29
 800f1fc:	d512      	bpl.n	800f224 <__swsetup_r+0x5c>
 800f1fe:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f200:	b141      	cbz	r1, 800f214 <__swsetup_r+0x4c>
 800f202:	f104 0340 	add.w	r3, r4, #64	; 0x40
 800f206:	4299      	cmp	r1, r3
 800f208:	d002      	beq.n	800f210 <__swsetup_r+0x48>
 800f20a:	4628      	mov	r0, r5
 800f20c:	f7fa ffc6 	bl	800a19c <_free_r>
 800f210:	2300      	movs	r3, #0
 800f212:	6323      	str	r3, [r4, #48]	; 0x30
 800f214:	89a3      	ldrh	r3, [r4, #12]
 800f216:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800f21a:	81a3      	strh	r3, [r4, #12]
 800f21c:	2300      	movs	r3, #0
 800f21e:	6063      	str	r3, [r4, #4]
 800f220:	6923      	ldr	r3, [r4, #16]
 800f222:	6023      	str	r3, [r4, #0]
 800f224:	89a3      	ldrh	r3, [r4, #12]
 800f226:	f043 0308 	orr.w	r3, r3, #8
 800f22a:	81a3      	strh	r3, [r4, #12]
 800f22c:	6923      	ldr	r3, [r4, #16]
 800f22e:	b94b      	cbnz	r3, 800f244 <__swsetup_r+0x7c>
 800f230:	89a3      	ldrh	r3, [r4, #12]
 800f232:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800f236:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800f23a:	d003      	beq.n	800f244 <__swsetup_r+0x7c>
 800f23c:	4621      	mov	r1, r4
 800f23e:	4628      	mov	r0, r5
 800f240:	f000 f8ee 	bl	800f420 <__smakebuf_r>
 800f244:	89a0      	ldrh	r0, [r4, #12]
 800f246:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800f24a:	f010 0301 	ands.w	r3, r0, #1
 800f24e:	d00a      	beq.n	800f266 <__swsetup_r+0x9e>
 800f250:	2300      	movs	r3, #0
 800f252:	60a3      	str	r3, [r4, #8]
 800f254:	6963      	ldr	r3, [r4, #20]
 800f256:	425b      	negs	r3, r3
 800f258:	61a3      	str	r3, [r4, #24]
 800f25a:	6923      	ldr	r3, [r4, #16]
 800f25c:	b943      	cbnz	r3, 800f270 <__swsetup_r+0xa8>
 800f25e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800f262:	d1c4      	bne.n	800f1ee <__swsetup_r+0x26>
 800f264:	bd38      	pop	{r3, r4, r5, pc}
 800f266:	0781      	lsls	r1, r0, #30
 800f268:	bf58      	it	pl
 800f26a:	6963      	ldrpl	r3, [r4, #20]
 800f26c:	60a3      	str	r3, [r4, #8]
 800f26e:	e7f4      	b.n	800f25a <__swsetup_r+0x92>
 800f270:	2000      	movs	r0, #0
 800f272:	e7f7      	b.n	800f264 <__swsetup_r+0x9c>
 800f274:	20000020 	.word	0x20000020

0800f278 <__register_exitproc>:
 800f278:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f27c:	f8df a078 	ldr.w	sl, [pc, #120]	; 800f2f8 <__register_exitproc+0x80>
 800f280:	4606      	mov	r6, r0
 800f282:	f8da 0000 	ldr.w	r0, [sl]
 800f286:	4698      	mov	r8, r3
 800f288:	460f      	mov	r7, r1
 800f28a:	4691      	mov	r9, r2
 800f28c:	f7fb f88c 	bl	800a3a8 <__retarget_lock_acquire_recursive>
 800f290:	4b18      	ldr	r3, [pc, #96]	; (800f2f4 <__register_exitproc+0x7c>)
 800f292:	681b      	ldr	r3, [r3, #0]
 800f294:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
 800f298:	b91c      	cbnz	r4, 800f2a2 <__register_exitproc+0x2a>
 800f29a:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
 800f29e:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
 800f2a2:	6865      	ldr	r5, [r4, #4]
 800f2a4:	f8da 0000 	ldr.w	r0, [sl]
 800f2a8:	2d1f      	cmp	r5, #31
 800f2aa:	dd05      	ble.n	800f2b8 <__register_exitproc+0x40>
 800f2ac:	f7fb f87d 	bl	800a3aa <__retarget_lock_release_recursive>
 800f2b0:	f04f 30ff 	mov.w	r0, #4294967295
 800f2b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f2b8:	b19e      	cbz	r6, 800f2e2 <__register_exitproc+0x6a>
 800f2ba:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 800f2be:	2201      	movs	r2, #1
 800f2c0:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
 800f2c4:	f8d4 3188 	ldr.w	r3, [r4, #392]	; 0x188
 800f2c8:	40aa      	lsls	r2, r5
 800f2ca:	4313      	orrs	r3, r2
 800f2cc:	f8c4 3188 	str.w	r3, [r4, #392]	; 0x188
 800f2d0:	2e02      	cmp	r6, #2
 800f2d2:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
 800f2d6:	bf02      	ittt	eq
 800f2d8:	f8d4 318c 	ldreq.w	r3, [r4, #396]	; 0x18c
 800f2dc:	4313      	orreq	r3, r2
 800f2de:	f8c4 318c 	streq.w	r3, [r4, #396]	; 0x18c
 800f2e2:	1c6b      	adds	r3, r5, #1
 800f2e4:	3502      	adds	r5, #2
 800f2e6:	6063      	str	r3, [r4, #4]
 800f2e8:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 800f2ec:	f7fb f85d 	bl	800a3aa <__retarget_lock_release_recursive>
 800f2f0:	2000      	movs	r0, #0
 800f2f2:	e7df      	b.n	800f2b4 <__register_exitproc+0x3c>
 800f2f4:	08010c70 	.word	0x08010c70
 800f2f8:	20000860 	.word	0x20000860

0800f2fc <__assert_func>:
 800f2fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f2fe:	4614      	mov	r4, r2
 800f300:	461a      	mov	r2, r3
 800f302:	4b09      	ldr	r3, [pc, #36]	; (800f328 <__assert_func+0x2c>)
 800f304:	681b      	ldr	r3, [r3, #0]
 800f306:	4605      	mov	r5, r0
 800f308:	68d8      	ldr	r0, [r3, #12]
 800f30a:	b14c      	cbz	r4, 800f320 <__assert_func+0x24>
 800f30c:	4b07      	ldr	r3, [pc, #28]	; (800f32c <__assert_func+0x30>)
 800f30e:	9100      	str	r1, [sp, #0]
 800f310:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f314:	4906      	ldr	r1, [pc, #24]	; (800f330 <__assert_func+0x34>)
 800f316:	462b      	mov	r3, r5
 800f318:	f000 f844 	bl	800f3a4 <fiprintf>
 800f31c:	f000 fdc8 	bl	800feb0 <abort>
 800f320:	4b04      	ldr	r3, [pc, #16]	; (800f334 <__assert_func+0x38>)
 800f322:	461c      	mov	r4, r3
 800f324:	e7f3      	b.n	800f30e <__assert_func+0x12>
 800f326:	bf00      	nop
 800f328:	20000020 	.word	0x20000020
 800f32c:	08010f6c 	.word	0x08010f6c
 800f330:	08010f79 	.word	0x08010f79
 800f334:	08010fa7 	.word	0x08010fa7

0800f338 <_calloc_r>:
 800f338:	b538      	push	{r3, r4, r5, lr}
 800f33a:	fba1 1502 	umull	r1, r5, r1, r2
 800f33e:	b92d      	cbnz	r5, 800f34c <_calloc_r+0x14>
 800f340:	f7fb f844 	bl	800a3cc <_malloc_r>
 800f344:	4604      	mov	r4, r0
 800f346:	b938      	cbnz	r0, 800f358 <_calloc_r+0x20>
 800f348:	4620      	mov	r0, r4
 800f34a:	bd38      	pop	{r3, r4, r5, pc}
 800f34c:	f7fa fd98 	bl	8009e80 <__errno>
 800f350:	230c      	movs	r3, #12
 800f352:	6003      	str	r3, [r0, #0]
 800f354:	2400      	movs	r4, #0
 800f356:	e7f7      	b.n	800f348 <_calloc_r+0x10>
 800f358:	f850 2c04 	ldr.w	r2, [r0, #-4]
 800f35c:	f022 0203 	bic.w	r2, r2, #3
 800f360:	3a04      	subs	r2, #4
 800f362:	2a24      	cmp	r2, #36	; 0x24
 800f364:	d819      	bhi.n	800f39a <_calloc_r+0x62>
 800f366:	2a13      	cmp	r2, #19
 800f368:	d915      	bls.n	800f396 <_calloc_r+0x5e>
 800f36a:	2a1b      	cmp	r2, #27
 800f36c:	e9c0 5500 	strd	r5, r5, [r0]
 800f370:	d806      	bhi.n	800f380 <_calloc_r+0x48>
 800f372:	f100 0308 	add.w	r3, r0, #8
 800f376:	2200      	movs	r2, #0
 800f378:	e9c3 2200 	strd	r2, r2, [r3]
 800f37c:	609a      	str	r2, [r3, #8]
 800f37e:	e7e3      	b.n	800f348 <_calloc_r+0x10>
 800f380:	2a24      	cmp	r2, #36	; 0x24
 800f382:	e9c0 5502 	strd	r5, r5, [r0, #8]
 800f386:	bf11      	iteee	ne
 800f388:	f100 0310 	addne.w	r3, r0, #16
 800f38c:	6105      	streq	r5, [r0, #16]
 800f38e:	f100 0318 	addeq.w	r3, r0, #24
 800f392:	6145      	streq	r5, [r0, #20]
 800f394:	e7ef      	b.n	800f376 <_calloc_r+0x3e>
 800f396:	4603      	mov	r3, r0
 800f398:	e7ed      	b.n	800f376 <_calloc_r+0x3e>
 800f39a:	4629      	mov	r1, r5
 800f39c:	f7fb fa60 	bl	800a860 <memset>
 800f3a0:	e7d2      	b.n	800f348 <_calloc_r+0x10>
	...

0800f3a4 <fiprintf>:
 800f3a4:	b40e      	push	{r1, r2, r3}
 800f3a6:	b503      	push	{r0, r1, lr}
 800f3a8:	4601      	mov	r1, r0
 800f3aa:	ab03      	add	r3, sp, #12
 800f3ac:	4805      	ldr	r0, [pc, #20]	; (800f3c4 <fiprintf+0x20>)
 800f3ae:	f853 2b04 	ldr.w	r2, [r3], #4
 800f3b2:	6800      	ldr	r0, [r0, #0]
 800f3b4:	9301      	str	r3, [sp, #4]
 800f3b6:	f000 f8a5 	bl	800f504 <_vfiprintf_r>
 800f3ba:	b002      	add	sp, #8
 800f3bc:	f85d eb04 	ldr.w	lr, [sp], #4
 800f3c0:	b003      	add	sp, #12
 800f3c2:	4770      	bx	lr
 800f3c4:	20000020 	.word	0x20000020

0800f3c8 <__swhatbuf_r>:
 800f3c8:	b570      	push	{r4, r5, r6, lr}
 800f3ca:	460e      	mov	r6, r1
 800f3cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800f3d0:	2900      	cmp	r1, #0
 800f3d2:	b096      	sub	sp, #88	; 0x58
 800f3d4:	4614      	mov	r4, r2
 800f3d6:	461d      	mov	r5, r3
 800f3d8:	da0a      	bge.n	800f3f0 <__swhatbuf_r+0x28>
 800f3da:	f9b6 100c 	ldrsh.w	r1, [r6, #12]
 800f3de:	2300      	movs	r3, #0
 800f3e0:	f011 0080 	ands.w	r0, r1, #128	; 0x80
 800f3e4:	602b      	str	r3, [r5, #0]
 800f3e6:	d116      	bne.n	800f416 <__swhatbuf_r+0x4e>
 800f3e8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800f3ec:	6023      	str	r3, [r4, #0]
 800f3ee:	e015      	b.n	800f41c <__swhatbuf_r+0x54>
 800f3f0:	466a      	mov	r2, sp
 800f3f2:	f000 fdcf 	bl	800ff94 <_fstat_r>
 800f3f6:	2800      	cmp	r0, #0
 800f3f8:	dbef      	blt.n	800f3da <__swhatbuf_r+0x12>
 800f3fa:	9a01      	ldr	r2, [sp, #4]
 800f3fc:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800f400:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800f404:	425a      	negs	r2, r3
 800f406:	415a      	adcs	r2, r3
 800f408:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800f40c:	602a      	str	r2, [r5, #0]
 800f40e:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800f412:	6023      	str	r3, [r4, #0]
 800f414:	e002      	b.n	800f41c <__swhatbuf_r+0x54>
 800f416:	2240      	movs	r2, #64	; 0x40
 800f418:	6022      	str	r2, [r4, #0]
 800f41a:	4618      	mov	r0, r3
 800f41c:	b016      	add	sp, #88	; 0x58
 800f41e:	bd70      	pop	{r4, r5, r6, pc}

0800f420 <__smakebuf_r>:
 800f420:	898b      	ldrh	r3, [r1, #12]
 800f422:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f424:	079d      	lsls	r5, r3, #30
 800f426:	4606      	mov	r6, r0
 800f428:	460c      	mov	r4, r1
 800f42a:	d507      	bpl.n	800f43c <__smakebuf_r+0x1c>
 800f42c:	f104 0343 	add.w	r3, r4, #67	; 0x43
 800f430:	6023      	str	r3, [r4, #0]
 800f432:	6123      	str	r3, [r4, #16]
 800f434:	2301      	movs	r3, #1
 800f436:	6163      	str	r3, [r4, #20]
 800f438:	b002      	add	sp, #8
 800f43a:	bd70      	pop	{r4, r5, r6, pc}
 800f43c:	ab01      	add	r3, sp, #4
 800f43e:	466a      	mov	r2, sp
 800f440:	f7ff ffc2 	bl	800f3c8 <__swhatbuf_r>
 800f444:	9900      	ldr	r1, [sp, #0]
 800f446:	4605      	mov	r5, r0
 800f448:	4630      	mov	r0, r6
 800f44a:	f7fa ffbf 	bl	800a3cc <_malloc_r>
 800f44e:	b948      	cbnz	r0, 800f464 <__smakebuf_r+0x44>
 800f450:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f454:	059a      	lsls	r2, r3, #22
 800f456:	d4ef      	bmi.n	800f438 <__smakebuf_r+0x18>
 800f458:	f023 0303 	bic.w	r3, r3, #3
 800f45c:	f043 0302 	orr.w	r3, r3, #2
 800f460:	81a3      	strh	r3, [r4, #12]
 800f462:	e7e3      	b.n	800f42c <__smakebuf_r+0xc>
 800f464:	4b0d      	ldr	r3, [pc, #52]	; (800f49c <__smakebuf_r+0x7c>)
 800f466:	63f3      	str	r3, [r6, #60]	; 0x3c
 800f468:	89a3      	ldrh	r3, [r4, #12]
 800f46a:	6020      	str	r0, [r4, #0]
 800f46c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f470:	81a3      	strh	r3, [r4, #12]
 800f472:	9b00      	ldr	r3, [sp, #0]
 800f474:	6163      	str	r3, [r4, #20]
 800f476:	9b01      	ldr	r3, [sp, #4]
 800f478:	6120      	str	r0, [r4, #16]
 800f47a:	b15b      	cbz	r3, 800f494 <__smakebuf_r+0x74>
 800f47c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800f480:	4630      	mov	r0, r6
 800f482:	f000 fd99 	bl	800ffb8 <_isatty_r>
 800f486:	b128      	cbz	r0, 800f494 <__smakebuf_r+0x74>
 800f488:	89a3      	ldrh	r3, [r4, #12]
 800f48a:	f023 0303 	bic.w	r3, r3, #3
 800f48e:	f043 0301 	orr.w	r3, r3, #1
 800f492:	81a3      	strh	r3, [r4, #12]
 800f494:	89a0      	ldrh	r0, [r4, #12]
 800f496:	4305      	orrs	r5, r0
 800f498:	81a5      	strh	r5, [r4, #12]
 800f49a:	e7cd      	b.n	800f438 <__smakebuf_r+0x18>
 800f49c:	0800a069 	.word	0x0800a069

0800f4a0 <__sprint_r>:
 800f4a0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4a4:	6893      	ldr	r3, [r2, #8]
 800f4a6:	4680      	mov	r8, r0
 800f4a8:	460f      	mov	r7, r1
 800f4aa:	4614      	mov	r4, r2
 800f4ac:	b91b      	cbnz	r3, 800f4b6 <__sprint_r+0x16>
 800f4ae:	6053      	str	r3, [r2, #4]
 800f4b0:	4618      	mov	r0, r3
 800f4b2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f4b6:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 800f4b8:	049d      	lsls	r5, r3, #18
 800f4ba:	d520      	bpl.n	800f4fe <__sprint_r+0x5e>
 800f4bc:	6815      	ldr	r5, [r2, #0]
 800f4be:	3508      	adds	r5, #8
 800f4c0:	e955 b602 	ldrd	fp, r6, [r5, #-8]
 800f4c4:	f04f 0900 	mov.w	r9, #0
 800f4c8:	ea4f 0a96 	mov.w	sl, r6, lsr #2
 800f4cc:	45ca      	cmp	sl, r9
 800f4ce:	dc0b      	bgt.n	800f4e8 <__sprint_r+0x48>
 800f4d0:	68a3      	ldr	r3, [r4, #8]
 800f4d2:	f026 0003 	bic.w	r0, r6, #3
 800f4d6:	1a18      	subs	r0, r3, r0
 800f4d8:	60a0      	str	r0, [r4, #8]
 800f4da:	3508      	adds	r5, #8
 800f4dc:	2800      	cmp	r0, #0
 800f4de:	d1ef      	bne.n	800f4c0 <__sprint_r+0x20>
 800f4e0:	2300      	movs	r3, #0
 800f4e2:	e9c4 3301 	strd	r3, r3, [r4, #4]
 800f4e6:	e7e4      	b.n	800f4b2 <__sprint_r+0x12>
 800f4e8:	f85b 1029 	ldr.w	r1, [fp, r9, lsl #2]
 800f4ec:	463a      	mov	r2, r7
 800f4ee:	4640      	mov	r0, r8
 800f4f0:	f000 fd26 	bl	800ff40 <_fputwc_r>
 800f4f4:	1c43      	adds	r3, r0, #1
 800f4f6:	d0f3      	beq.n	800f4e0 <__sprint_r+0x40>
 800f4f8:	f109 0901 	add.w	r9, r9, #1
 800f4fc:	e7e6      	b.n	800f4cc <__sprint_r+0x2c>
 800f4fe:	f7fe fbfd 	bl	800dcfc <__sfvwrite_r>
 800f502:	e7ed      	b.n	800f4e0 <__sprint_r+0x40>

0800f504 <_vfiprintf_r>:
 800f504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f508:	ed2d 8b02 	vpush	{d8}
 800f50c:	b0b9      	sub	sp, #228	; 0xe4
 800f50e:	460f      	mov	r7, r1
 800f510:	9201      	str	r2, [sp, #4]
 800f512:	461d      	mov	r5, r3
 800f514:	461c      	mov	r4, r3
 800f516:	4681      	mov	r9, r0
 800f518:	b118      	cbz	r0, 800f522 <_vfiprintf_r+0x1e>
 800f51a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800f51c:	b90b      	cbnz	r3, 800f522 <_vfiprintf_r+0x1e>
 800f51e:	f7fa fdc1 	bl	800a0a4 <__sinit>
 800f522:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800f524:	07d8      	lsls	r0, r3, #31
 800f526:	d405      	bmi.n	800f534 <_vfiprintf_r+0x30>
 800f528:	89bb      	ldrh	r3, [r7, #12]
 800f52a:	0599      	lsls	r1, r3, #22
 800f52c:	d402      	bmi.n	800f534 <_vfiprintf_r+0x30>
 800f52e:	6db8      	ldr	r0, [r7, #88]	; 0x58
 800f530:	f7fa ff3a 	bl	800a3a8 <__retarget_lock_acquire_recursive>
 800f534:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800f538:	049a      	lsls	r2, r3, #18
 800f53a:	d406      	bmi.n	800f54a <_vfiprintf_r+0x46>
 800f53c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800f540:	81bb      	strh	r3, [r7, #12]
 800f542:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800f544:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800f548:	667b      	str	r3, [r7, #100]	; 0x64
 800f54a:	89bb      	ldrh	r3, [r7, #12]
 800f54c:	071e      	lsls	r6, r3, #28
 800f54e:	d501      	bpl.n	800f554 <_vfiprintf_r+0x50>
 800f550:	693b      	ldr	r3, [r7, #16]
 800f552:	b9bb      	cbnz	r3, 800f584 <_vfiprintf_r+0x80>
 800f554:	4639      	mov	r1, r7
 800f556:	4648      	mov	r0, r9
 800f558:	f7ff fe36 	bl	800f1c8 <__swsetup_r>
 800f55c:	b190      	cbz	r0, 800f584 <_vfiprintf_r+0x80>
 800f55e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800f560:	07d8      	lsls	r0, r3, #31
 800f562:	d508      	bpl.n	800f576 <_vfiprintf_r+0x72>
 800f564:	f04f 33ff 	mov.w	r3, #4294967295
 800f568:	9302      	str	r3, [sp, #8]
 800f56a:	9802      	ldr	r0, [sp, #8]
 800f56c:	b039      	add	sp, #228	; 0xe4
 800f56e:	ecbd 8b02 	vpop	{d8}
 800f572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f576:	89bb      	ldrh	r3, [r7, #12]
 800f578:	0599      	lsls	r1, r3, #22
 800f57a:	d4f3      	bmi.n	800f564 <_vfiprintf_r+0x60>
 800f57c:	6db8      	ldr	r0, [r7, #88]	; 0x58
 800f57e:	f7fa ff14 	bl	800a3aa <__retarget_lock_release_recursive>
 800f582:	e7ef      	b.n	800f564 <_vfiprintf_r+0x60>
 800f584:	89bb      	ldrh	r3, [r7, #12]
 800f586:	f003 021a 	and.w	r2, r3, #26
 800f58a:	2a0a      	cmp	r2, #10
 800f58c:	d116      	bne.n	800f5bc <_vfiprintf_r+0xb8>
 800f58e:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 800f592:	2a00      	cmp	r2, #0
 800f594:	db12      	blt.n	800f5bc <_vfiprintf_r+0xb8>
 800f596:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800f598:	07d2      	lsls	r2, r2, #31
 800f59a:	d404      	bmi.n	800f5a6 <_vfiprintf_r+0xa2>
 800f59c:	059e      	lsls	r6, r3, #22
 800f59e:	d402      	bmi.n	800f5a6 <_vfiprintf_r+0xa2>
 800f5a0:	6db8      	ldr	r0, [r7, #88]	; 0x58
 800f5a2:	f7fa ff02 	bl	800a3aa <__retarget_lock_release_recursive>
 800f5a6:	9a01      	ldr	r2, [sp, #4]
 800f5a8:	462b      	mov	r3, r5
 800f5aa:	4639      	mov	r1, r7
 800f5ac:	4648      	mov	r0, r9
 800f5ae:	b039      	add	sp, #228	; 0xe4
 800f5b0:	ecbd 8b02 	vpop	{d8}
 800f5b4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5b8:	f000 bc3a 	b.w	800fe30 <__sbprintf>
 800f5bc:	2300      	movs	r3, #0
 800f5be:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
 800f5c2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800f5c6:	ae0f      	add	r6, sp, #60	; 0x3c
 800f5c8:	ee08 3a10 	vmov	s16, r3
 800f5cc:	960c      	str	r6, [sp, #48]	; 0x30
 800f5ce:	9307      	str	r3, [sp, #28]
 800f5d0:	9302      	str	r3, [sp, #8]
 800f5d2:	9b01      	ldr	r3, [sp, #4]
 800f5d4:	461d      	mov	r5, r3
 800f5d6:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f5da:	b10a      	cbz	r2, 800f5e0 <_vfiprintf_r+0xdc>
 800f5dc:	2a25      	cmp	r2, #37	; 0x25
 800f5de:	d1f9      	bne.n	800f5d4 <_vfiprintf_r+0xd0>
 800f5e0:	9b01      	ldr	r3, [sp, #4]
 800f5e2:	ebb5 0803 	subs.w	r8, r5, r3
 800f5e6:	d00d      	beq.n	800f604 <_vfiprintf_r+0x100>
 800f5e8:	e9c6 3800 	strd	r3, r8, [r6]
 800f5ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f5ee:	4443      	add	r3, r8
 800f5f0:	930e      	str	r3, [sp, #56]	; 0x38
 800f5f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f5f4:	3301      	adds	r3, #1
 800f5f6:	2b07      	cmp	r3, #7
 800f5f8:	930d      	str	r3, [sp, #52]	; 0x34
 800f5fa:	dc75      	bgt.n	800f6e8 <_vfiprintf_r+0x1e4>
 800f5fc:	3608      	adds	r6, #8
 800f5fe:	9b02      	ldr	r3, [sp, #8]
 800f600:	4443      	add	r3, r8
 800f602:	9302      	str	r3, [sp, #8]
 800f604:	782b      	ldrb	r3, [r5, #0]
 800f606:	2b00      	cmp	r3, #0
 800f608:	f000 83d6 	beq.w	800fdb8 <_vfiprintf_r+0x8b4>
 800f60c:	2300      	movs	r3, #0
 800f60e:	f04f 31ff 	mov.w	r1, #4294967295
 800f612:	1c6a      	adds	r2, r5, #1
 800f614:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800f618:	9100      	str	r1, [sp, #0]
 800f61a:	9303      	str	r3, [sp, #12]
 800f61c:	469a      	mov	sl, r3
 800f61e:	f812 3b01 	ldrb.w	r3, [r2], #1
 800f622:	9201      	str	r2, [sp, #4]
 800f624:	f1a3 0220 	sub.w	r2, r3, #32
 800f628:	2a5a      	cmp	r2, #90	; 0x5a
 800f62a:	f200 831f 	bhi.w	800fc6c <_vfiprintf_r+0x768>
 800f62e:	e8df f012 	tbh	[pc, r2, lsl #1]
 800f632:	009b      	.short	0x009b
 800f634:	031d031d 	.word	0x031d031d
 800f638:	031d00a3 	.word	0x031d00a3
 800f63c:	031d031d 	.word	0x031d031d
 800f640:	031d0082 	.word	0x031d0082
 800f644:	00a6031d 	.word	0x00a6031d
 800f648:	031d00b0 	.word	0x031d00b0
 800f64c:	00b200ad 	.word	0x00b200ad
 800f650:	00cd031d 	.word	0x00cd031d
 800f654:	00d000d0 	.word	0x00d000d0
 800f658:	00d000d0 	.word	0x00d000d0
 800f65c:	00d000d0 	.word	0x00d000d0
 800f660:	00d000d0 	.word	0x00d000d0
 800f664:	031d00d0 	.word	0x031d00d0
 800f668:	031d031d 	.word	0x031d031d
 800f66c:	031d031d 	.word	0x031d031d
 800f670:	031d031d 	.word	0x031d031d
 800f674:	031d031d 	.word	0x031d031d
 800f678:	010800fa 	.word	0x010800fa
 800f67c:	031d031d 	.word	0x031d031d
 800f680:	031d031d 	.word	0x031d031d
 800f684:	031d031d 	.word	0x031d031d
 800f688:	031d031d 	.word	0x031d031d
 800f68c:	031d031d 	.word	0x031d031d
 800f690:	031d0158 	.word	0x031d0158
 800f694:	031d031d 	.word	0x031d031d
 800f698:	031d01a1 	.word	0x031d01a1
 800f69c:	031d027e 	.word	0x031d027e
 800f6a0:	029e031d 	.word	0x029e031d
 800f6a4:	031d031d 	.word	0x031d031d
 800f6a8:	031d031d 	.word	0x031d031d
 800f6ac:	031d031d 	.word	0x031d031d
 800f6b0:	031d031d 	.word	0x031d031d
 800f6b4:	031d031d 	.word	0x031d031d
 800f6b8:	010a00fa 	.word	0x010a00fa
 800f6bc:	031d031d 	.word	0x031d031d
 800f6c0:	00e0031d 	.word	0x00e0031d
 800f6c4:	00f4010a 	.word	0x00f4010a
 800f6c8:	00ed031d 	.word	0x00ed031d
 800f6cc:	0136031d 	.word	0x0136031d
 800f6d0:	018f015a 	.word	0x018f015a
 800f6d4:	031d00f4 	.word	0x031d00f4
 800f6d8:	009901a1 	.word	0x009901a1
 800f6dc:	031d0280 	.word	0x031d0280
 800f6e0:	0065031d 	.word	0x0065031d
 800f6e4:	0099031d 	.word	0x0099031d
 800f6e8:	aa0c      	add	r2, sp, #48	; 0x30
 800f6ea:	4639      	mov	r1, r7
 800f6ec:	4648      	mov	r0, r9
 800f6ee:	f7ff fed7 	bl	800f4a0 <__sprint_r>
 800f6f2:	2800      	cmp	r0, #0
 800f6f4:	f040 833f 	bne.w	800fd76 <_vfiprintf_r+0x872>
 800f6f8:	ae0f      	add	r6, sp, #60	; 0x3c
 800f6fa:	e780      	b.n	800f5fe <_vfiprintf_r+0xfa>
 800f6fc:	4a9c      	ldr	r2, [pc, #624]	; (800f970 <_vfiprintf_r+0x46c>)
 800f6fe:	9205      	str	r2, [sp, #20]
 800f700:	f01a 0220 	ands.w	r2, sl, #32
 800f704:	f000 8235 	beq.w	800fb72 <_vfiprintf_r+0x66e>
 800f708:	3407      	adds	r4, #7
 800f70a:	f024 0207 	bic.w	r2, r4, #7
 800f70e:	4693      	mov	fp, r2
 800f710:	6855      	ldr	r5, [r2, #4]
 800f712:	f85b 4b08 	ldr.w	r4, [fp], #8
 800f716:	f01a 0f01 	tst.w	sl, #1
 800f71a:	d009      	beq.n	800f730 <_vfiprintf_r+0x22c>
 800f71c:	ea54 0205 	orrs.w	r2, r4, r5
 800f720:	bf1f      	itttt	ne
 800f722:	2230      	movne	r2, #48	; 0x30
 800f724:	f88d 202c 	strbne.w	r2, [sp, #44]	; 0x2c
 800f728:	f88d 302d 	strbne.w	r3, [sp, #45]	; 0x2d
 800f72c:	f04a 0a02 	orrne.w	sl, sl, #2
 800f730:	f42a 6a80 	bic.w	sl, sl, #1024	; 0x400
 800f734:	e11a      	b.n	800f96c <_vfiprintf_r+0x468>
 800f736:	4648      	mov	r0, r9
 800f738:	f7fe ffa0 	bl	800e67c <_localeconv_r>
 800f73c:	6843      	ldr	r3, [r0, #4]
 800f73e:	4618      	mov	r0, r3
 800f740:	ee08 3a10 	vmov	s16, r3
 800f744:	f7f0 fd4c 	bl	80001e0 <strlen>
 800f748:	9007      	str	r0, [sp, #28]
 800f74a:	4648      	mov	r0, r9
 800f74c:	f7fe ff96 	bl	800e67c <_localeconv_r>
 800f750:	6883      	ldr	r3, [r0, #8]
 800f752:	9306      	str	r3, [sp, #24]
 800f754:	9b07      	ldr	r3, [sp, #28]
 800f756:	b12b      	cbz	r3, 800f764 <_vfiprintf_r+0x260>
 800f758:	9b06      	ldr	r3, [sp, #24]
 800f75a:	b11b      	cbz	r3, 800f764 <_vfiprintf_r+0x260>
 800f75c:	781b      	ldrb	r3, [r3, #0]
 800f75e:	b10b      	cbz	r3, 800f764 <_vfiprintf_r+0x260>
 800f760:	f44a 6a80 	orr.w	sl, sl, #1024	; 0x400
 800f764:	9a01      	ldr	r2, [sp, #4]
 800f766:	e75a      	b.n	800f61e <_vfiprintf_r+0x11a>
 800f768:	f89d 302b 	ldrb.w	r3, [sp, #43]	; 0x2b
 800f76c:	2b00      	cmp	r3, #0
 800f76e:	d1f9      	bne.n	800f764 <_vfiprintf_r+0x260>
 800f770:	2320      	movs	r3, #32
 800f772:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800f776:	e7f5      	b.n	800f764 <_vfiprintf_r+0x260>
 800f778:	f04a 0a01 	orr.w	sl, sl, #1
 800f77c:	e7f2      	b.n	800f764 <_vfiprintf_r+0x260>
 800f77e:	f854 3b04 	ldr.w	r3, [r4], #4
 800f782:	9303      	str	r3, [sp, #12]
 800f784:	2b00      	cmp	r3, #0
 800f786:	daed      	bge.n	800f764 <_vfiprintf_r+0x260>
 800f788:	425b      	negs	r3, r3
 800f78a:	9303      	str	r3, [sp, #12]
 800f78c:	f04a 0a04 	orr.w	sl, sl, #4
 800f790:	e7e8      	b.n	800f764 <_vfiprintf_r+0x260>
 800f792:	232b      	movs	r3, #43	; 0x2b
 800f794:	e7ed      	b.n	800f772 <_vfiprintf_r+0x26e>
 800f796:	9a01      	ldr	r2, [sp, #4]
 800f798:	f812 3b01 	ldrb.w	r3, [r2], #1
 800f79c:	2b2a      	cmp	r3, #42	; 0x2a
 800f79e:	d112      	bne.n	800f7c6 <_vfiprintf_r+0x2c2>
 800f7a0:	f854 0b04 	ldr.w	r0, [r4], #4
 800f7a4:	ea40 73e0 	orr.w	r3, r0, r0, asr #31
 800f7a8:	e9cd 3200 	strd	r3, r2, [sp]
 800f7ac:	e7da      	b.n	800f764 <_vfiprintf_r+0x260>
 800f7ae:	9b00      	ldr	r3, [sp, #0]
 800f7b0:	200a      	movs	r0, #10
 800f7b2:	fb00 1303 	mla	r3, r0, r3, r1
 800f7b6:	9300      	str	r3, [sp, #0]
 800f7b8:	f812 3b01 	ldrb.w	r3, [r2], #1
 800f7bc:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 800f7c0:	2909      	cmp	r1, #9
 800f7c2:	d9f4      	bls.n	800f7ae <_vfiprintf_r+0x2aa>
 800f7c4:	e72d      	b.n	800f622 <_vfiprintf_r+0x11e>
 800f7c6:	2100      	movs	r1, #0
 800f7c8:	9100      	str	r1, [sp, #0]
 800f7ca:	e7f7      	b.n	800f7bc <_vfiprintf_r+0x2b8>
 800f7cc:	f04a 0a80 	orr.w	sl, sl, #128	; 0x80
 800f7d0:	e7c8      	b.n	800f764 <_vfiprintf_r+0x260>
 800f7d2:	2100      	movs	r1, #0
 800f7d4:	9a01      	ldr	r2, [sp, #4]
 800f7d6:	9103      	str	r1, [sp, #12]
 800f7d8:	9903      	ldr	r1, [sp, #12]
 800f7da:	3b30      	subs	r3, #48	; 0x30
 800f7dc:	200a      	movs	r0, #10
 800f7de:	fb00 3301 	mla	r3, r0, r1, r3
 800f7e2:	9303      	str	r3, [sp, #12]
 800f7e4:	f812 3b01 	ldrb.w	r3, [r2], #1
 800f7e8:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 800f7ec:	2909      	cmp	r1, #9
 800f7ee:	d9f3      	bls.n	800f7d8 <_vfiprintf_r+0x2d4>
 800f7f0:	e717      	b.n	800f622 <_vfiprintf_r+0x11e>
 800f7f2:	9b01      	ldr	r3, [sp, #4]
 800f7f4:	781b      	ldrb	r3, [r3, #0]
 800f7f6:	2b68      	cmp	r3, #104	; 0x68
 800f7f8:	bf01      	itttt	eq
 800f7fa:	9b01      	ldreq	r3, [sp, #4]
 800f7fc:	3301      	addeq	r3, #1
 800f7fe:	9301      	streq	r3, [sp, #4]
 800f800:	f44a 7a00 	orreq.w	sl, sl, #512	; 0x200
 800f804:	bf18      	it	ne
 800f806:	f04a 0a40 	orrne.w	sl, sl, #64	; 0x40
 800f80a:	e7ab      	b.n	800f764 <_vfiprintf_r+0x260>
 800f80c:	9b01      	ldr	r3, [sp, #4]
 800f80e:	781b      	ldrb	r3, [r3, #0]
 800f810:	2b6c      	cmp	r3, #108	; 0x6c
 800f812:	d105      	bne.n	800f820 <_vfiprintf_r+0x31c>
 800f814:	9b01      	ldr	r3, [sp, #4]
 800f816:	3301      	adds	r3, #1
 800f818:	9301      	str	r3, [sp, #4]
 800f81a:	f04a 0a20 	orr.w	sl, sl, #32
 800f81e:	e7a1      	b.n	800f764 <_vfiprintf_r+0x260>
 800f820:	f04a 0a10 	orr.w	sl, sl, #16
 800f824:	e79e      	b.n	800f764 <_vfiprintf_r+0x260>
 800f826:	46a3      	mov	fp, r4
 800f828:	2100      	movs	r1, #0
 800f82a:	f85b 3b04 	ldr.w	r3, [fp], #4
 800f82e:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 800f832:	f88d 102b 	strb.w	r1, [sp, #43]	; 0x2b
 800f836:	2301      	movs	r3, #1
 800f838:	9300      	str	r3, [sp, #0]
 800f83a:	460d      	mov	r5, r1
 800f83c:	f10d 087c 	add.w	r8, sp, #124	; 0x7c
 800f840:	e0ad      	b.n	800f99e <_vfiprintf_r+0x49a>
 800f842:	f04a 0a10 	orr.w	sl, sl, #16
 800f846:	f01a 0f20 	tst.w	sl, #32
 800f84a:	d011      	beq.n	800f870 <_vfiprintf_r+0x36c>
 800f84c:	3407      	adds	r4, #7
 800f84e:	f024 0307 	bic.w	r3, r4, #7
 800f852:	469b      	mov	fp, r3
 800f854:	685d      	ldr	r5, [r3, #4]
 800f856:	f85b 4b08 	ldr.w	r4, [fp], #8
 800f85a:	2d00      	cmp	r5, #0
 800f85c:	da06      	bge.n	800f86c <_vfiprintf_r+0x368>
 800f85e:	4264      	negs	r4, r4
 800f860:	f04f 032d 	mov.w	r3, #45	; 0x2d
 800f864:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 800f868:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800f86c:	2301      	movs	r3, #1
 800f86e:	e04a      	b.n	800f906 <_vfiprintf_r+0x402>
 800f870:	46a3      	mov	fp, r4
 800f872:	f01a 0f10 	tst.w	sl, #16
 800f876:	f85b 5b04 	ldr.w	r5, [fp], #4
 800f87a:	d002      	beq.n	800f882 <_vfiprintf_r+0x37e>
 800f87c:	462c      	mov	r4, r5
 800f87e:	17ed      	asrs	r5, r5, #31
 800f880:	e7eb      	b.n	800f85a <_vfiprintf_r+0x356>
 800f882:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800f886:	d003      	beq.n	800f890 <_vfiprintf_r+0x38c>
 800f888:	b22c      	sxth	r4, r5
 800f88a:	f345 35c0 	sbfx	r5, r5, #15, #1
 800f88e:	e7e4      	b.n	800f85a <_vfiprintf_r+0x356>
 800f890:	f41a 7f00 	tst.w	sl, #512	; 0x200
 800f894:	d0f2      	beq.n	800f87c <_vfiprintf_r+0x378>
 800f896:	b26c      	sxtb	r4, r5
 800f898:	f345 15c0 	sbfx	r5, r5, #7, #1
 800f89c:	e7dd      	b.n	800f85a <_vfiprintf_r+0x356>
 800f89e:	f01a 0f20 	tst.w	sl, #32
 800f8a2:	f104 0b04 	add.w	fp, r4, #4
 800f8a6:	d007      	beq.n	800f8b8 <_vfiprintf_r+0x3b4>
 800f8a8:	9a02      	ldr	r2, [sp, #8]
 800f8aa:	6823      	ldr	r3, [r4, #0]
 800f8ac:	9902      	ldr	r1, [sp, #8]
 800f8ae:	17d2      	asrs	r2, r2, #31
 800f8b0:	e9c3 1200 	strd	r1, r2, [r3]
 800f8b4:	465c      	mov	r4, fp
 800f8b6:	e68c      	b.n	800f5d2 <_vfiprintf_r+0xce>
 800f8b8:	f01a 0f10 	tst.w	sl, #16
 800f8bc:	d003      	beq.n	800f8c6 <_vfiprintf_r+0x3c2>
 800f8be:	6823      	ldr	r3, [r4, #0]
 800f8c0:	9a02      	ldr	r2, [sp, #8]
 800f8c2:	601a      	str	r2, [r3, #0]
 800f8c4:	e7f6      	b.n	800f8b4 <_vfiprintf_r+0x3b0>
 800f8c6:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800f8ca:	d003      	beq.n	800f8d4 <_vfiprintf_r+0x3d0>
 800f8cc:	6823      	ldr	r3, [r4, #0]
 800f8ce:	9a02      	ldr	r2, [sp, #8]
 800f8d0:	801a      	strh	r2, [r3, #0]
 800f8d2:	e7ef      	b.n	800f8b4 <_vfiprintf_r+0x3b0>
 800f8d4:	f41a 7f00 	tst.w	sl, #512	; 0x200
 800f8d8:	d0f1      	beq.n	800f8be <_vfiprintf_r+0x3ba>
 800f8da:	6823      	ldr	r3, [r4, #0]
 800f8dc:	9a02      	ldr	r2, [sp, #8]
 800f8de:	701a      	strb	r2, [r3, #0]
 800f8e0:	e7e8      	b.n	800f8b4 <_vfiprintf_r+0x3b0>
 800f8e2:	f04a 0a10 	orr.w	sl, sl, #16
 800f8e6:	f01a 0320 	ands.w	r3, sl, #32
 800f8ea:	d01f      	beq.n	800f92c <_vfiprintf_r+0x428>
 800f8ec:	3407      	adds	r4, #7
 800f8ee:	f024 0307 	bic.w	r3, r4, #7
 800f8f2:	469b      	mov	fp, r3
 800f8f4:	685d      	ldr	r5, [r3, #4]
 800f8f6:	f85b 4b08 	ldr.w	r4, [fp], #8
 800f8fa:	f42a 6a80 	bic.w	sl, sl, #1024	; 0x400
 800f8fe:	2300      	movs	r3, #0
 800f900:	2200      	movs	r2, #0
 800f902:	f88d 202b 	strb.w	r2, [sp, #43]	; 0x2b
 800f906:	9a00      	ldr	r2, [sp, #0]
 800f908:	3201      	adds	r2, #1
 800f90a:	f000 8262 	beq.w	800fdd2 <_vfiprintf_r+0x8ce>
 800f90e:	f02a 0280 	bic.w	r2, sl, #128	; 0x80
 800f912:	9204      	str	r2, [sp, #16]
 800f914:	ea54 0205 	orrs.w	r2, r4, r5
 800f918:	f040 8261 	bne.w	800fdde <_vfiprintf_r+0x8da>
 800f91c:	9a00      	ldr	r2, [sp, #0]
 800f91e:	2a00      	cmp	r2, #0
 800f920:	f000 8199 	beq.w	800fc56 <_vfiprintf_r+0x752>
 800f924:	2b01      	cmp	r3, #1
 800f926:	f040 825d 	bne.w	800fde4 <_vfiprintf_r+0x8e0>
 800f92a:	e139      	b.n	800fba0 <_vfiprintf_r+0x69c>
 800f92c:	46a3      	mov	fp, r4
 800f92e:	f01a 0510 	ands.w	r5, sl, #16
 800f932:	f85b 4b04 	ldr.w	r4, [fp], #4
 800f936:	d001      	beq.n	800f93c <_vfiprintf_r+0x438>
 800f938:	461d      	mov	r5, r3
 800f93a:	e7de      	b.n	800f8fa <_vfiprintf_r+0x3f6>
 800f93c:	f01a 0340 	ands.w	r3, sl, #64	; 0x40
 800f940:	d001      	beq.n	800f946 <_vfiprintf_r+0x442>
 800f942:	b2a4      	uxth	r4, r4
 800f944:	e7d9      	b.n	800f8fa <_vfiprintf_r+0x3f6>
 800f946:	f41a 7500 	ands.w	r5, sl, #512	; 0x200
 800f94a:	d0d6      	beq.n	800f8fa <_vfiprintf_r+0x3f6>
 800f94c:	b2e4      	uxtb	r4, r4
 800f94e:	e7f3      	b.n	800f938 <_vfiprintf_r+0x434>
 800f950:	2330      	movs	r3, #48	; 0x30
 800f952:	46a3      	mov	fp, r4
 800f954:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800f958:	2378      	movs	r3, #120	; 0x78
 800f95a:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 800f95e:	f85b 4b04 	ldr.w	r4, [fp], #4
 800f962:	4b03      	ldr	r3, [pc, #12]	; (800f970 <_vfiprintf_r+0x46c>)
 800f964:	9305      	str	r3, [sp, #20]
 800f966:	2500      	movs	r5, #0
 800f968:	f04a 0a02 	orr.w	sl, sl, #2
 800f96c:	2302      	movs	r3, #2
 800f96e:	e7c7      	b.n	800f900 <_vfiprintf_r+0x3fc>
 800f970:	08010cd8 	.word	0x08010cd8
 800f974:	9b00      	ldr	r3, [sp, #0]
 800f976:	46a3      	mov	fp, r4
 800f978:	2500      	movs	r5, #0
 800f97a:	1c5c      	adds	r4, r3, #1
 800f97c:	f85b 8b04 	ldr.w	r8, [fp], #4
 800f980:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800f984:	f000 80ce 	beq.w	800fb24 <_vfiprintf_r+0x620>
 800f988:	461a      	mov	r2, r3
 800f98a:	4629      	mov	r1, r5
 800f98c:	4640      	mov	r0, r8
 800f98e:	f7f0 fc2f 	bl	80001f0 <memchr>
 800f992:	2800      	cmp	r0, #0
 800f994:	f000 8174 	beq.w	800fc80 <_vfiprintf_r+0x77c>
 800f998:	eba0 0308 	sub.w	r3, r0, r8
 800f99c:	9300      	str	r3, [sp, #0]
 800f99e:	9b00      	ldr	r3, [sp, #0]
 800f9a0:	42ab      	cmp	r3, r5
 800f9a2:	bfb8      	it	lt
 800f9a4:	462b      	movlt	r3, r5
 800f9a6:	9304      	str	r3, [sp, #16]
 800f9a8:	f89d 302b 	ldrb.w	r3, [sp, #43]	; 0x2b
 800f9ac:	b113      	cbz	r3, 800f9b4 <_vfiprintf_r+0x4b0>
 800f9ae:	9b04      	ldr	r3, [sp, #16]
 800f9b0:	3301      	adds	r3, #1
 800f9b2:	9304      	str	r3, [sp, #16]
 800f9b4:	f01a 0302 	ands.w	r3, sl, #2
 800f9b8:	9308      	str	r3, [sp, #32]
 800f9ba:	bf1e      	ittt	ne
 800f9bc:	9b04      	ldrne	r3, [sp, #16]
 800f9be:	3302      	addne	r3, #2
 800f9c0:	9304      	strne	r3, [sp, #16]
 800f9c2:	f01a 0384 	ands.w	r3, sl, #132	; 0x84
 800f9c6:	9309      	str	r3, [sp, #36]	; 0x24
 800f9c8:	d11f      	bne.n	800fa0a <_vfiprintf_r+0x506>
 800f9ca:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
 800f9ce:	1a9c      	subs	r4, r3, r2
 800f9d0:	2c00      	cmp	r4, #0
 800f9d2:	dd1a      	ble.n	800fa0a <_vfiprintf_r+0x506>
 800f9d4:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 800f9d8:	48aa      	ldr	r0, [pc, #680]	; (800fc84 <_vfiprintf_r+0x780>)
 800f9da:	6030      	str	r0, [r6, #0]
 800f9dc:	2c10      	cmp	r4, #16
 800f9de:	f103 0301 	add.w	r3, r3, #1
 800f9e2:	f106 0108 	add.w	r1, r6, #8
 800f9e6:	f300 8153 	bgt.w	800fc90 <_vfiprintf_r+0x78c>
 800f9ea:	6074      	str	r4, [r6, #4]
 800f9ec:	2b07      	cmp	r3, #7
 800f9ee:	4414      	add	r4, r2
 800f9f0:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
 800f9f4:	f340 815e 	ble.w	800fcb4 <_vfiprintf_r+0x7b0>
 800f9f8:	aa0c      	add	r2, sp, #48	; 0x30
 800f9fa:	4639      	mov	r1, r7
 800f9fc:	4648      	mov	r0, r9
 800f9fe:	f7ff fd4f 	bl	800f4a0 <__sprint_r>
 800fa02:	2800      	cmp	r0, #0
 800fa04:	f040 81b7 	bne.w	800fd76 <_vfiprintf_r+0x872>
 800fa08:	ae0f      	add	r6, sp, #60	; 0x3c
 800fa0a:	f89d 302b 	ldrb.w	r3, [sp, #43]	; 0x2b
 800fa0e:	b173      	cbz	r3, 800fa2e <_vfiprintf_r+0x52a>
 800fa10:	f10d 022b 	add.w	r2, sp, #43	; 0x2b
 800fa14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fa16:	6032      	str	r2, [r6, #0]
 800fa18:	2201      	movs	r2, #1
 800fa1a:	6072      	str	r2, [r6, #4]
 800fa1c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800fa1e:	3301      	adds	r3, #1
 800fa20:	3201      	adds	r2, #1
 800fa22:	2b07      	cmp	r3, #7
 800fa24:	e9cd 320d 	strd	r3, r2, [sp, #52]	; 0x34
 800fa28:	f300 8146 	bgt.w	800fcb8 <_vfiprintf_r+0x7b4>
 800fa2c:	3608      	adds	r6, #8
 800fa2e:	9b08      	ldr	r3, [sp, #32]
 800fa30:	b16b      	cbz	r3, 800fa4e <_vfiprintf_r+0x54a>
 800fa32:	aa0b      	add	r2, sp, #44	; 0x2c
 800fa34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fa36:	6032      	str	r2, [r6, #0]
 800fa38:	2202      	movs	r2, #2
 800fa3a:	6072      	str	r2, [r6, #4]
 800fa3c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800fa3e:	3301      	adds	r3, #1
 800fa40:	3202      	adds	r2, #2
 800fa42:	2b07      	cmp	r3, #7
 800fa44:	e9cd 320d 	strd	r3, r2, [sp, #52]	; 0x34
 800fa48:	f300 813f 	bgt.w	800fcca <_vfiprintf_r+0x7c6>
 800fa4c:	3608      	adds	r6, #8
 800fa4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fa50:	2b80      	cmp	r3, #128	; 0x80
 800fa52:	d11f      	bne.n	800fa94 <_vfiprintf_r+0x590>
 800fa54:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
 800fa58:	1a9c      	subs	r4, r3, r2
 800fa5a:	2c00      	cmp	r4, #0
 800fa5c:	dd1a      	ble.n	800fa94 <_vfiprintf_r+0x590>
 800fa5e:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 800fa62:	4889      	ldr	r0, [pc, #548]	; (800fc88 <_vfiprintf_r+0x784>)
 800fa64:	6030      	str	r0, [r6, #0]
 800fa66:	2c10      	cmp	r4, #16
 800fa68:	f103 0301 	add.w	r3, r3, #1
 800fa6c:	f106 0108 	add.w	r1, r6, #8
 800fa70:	f300 8134 	bgt.w	800fcdc <_vfiprintf_r+0x7d8>
 800fa74:	6074      	str	r4, [r6, #4]
 800fa76:	2b07      	cmp	r3, #7
 800fa78:	4414      	add	r4, r2
 800fa7a:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
 800fa7e:	f340 813f 	ble.w	800fd00 <_vfiprintf_r+0x7fc>
 800fa82:	aa0c      	add	r2, sp, #48	; 0x30
 800fa84:	4639      	mov	r1, r7
 800fa86:	4648      	mov	r0, r9
 800fa88:	f7ff fd0a 	bl	800f4a0 <__sprint_r>
 800fa8c:	2800      	cmp	r0, #0
 800fa8e:	f040 8172 	bne.w	800fd76 <_vfiprintf_r+0x872>
 800fa92:	ae0f      	add	r6, sp, #60	; 0x3c
 800fa94:	9b00      	ldr	r3, [sp, #0]
 800fa96:	1aec      	subs	r4, r5, r3
 800fa98:	2c00      	cmp	r4, #0
 800fa9a:	dd1a      	ble.n	800fad2 <_vfiprintf_r+0x5ce>
 800fa9c:	4d7a      	ldr	r5, [pc, #488]	; (800fc88 <_vfiprintf_r+0x784>)
 800fa9e:	6035      	str	r5, [r6, #0]
 800faa0:	e9dd 310d 	ldrd	r3, r1, [sp, #52]	; 0x34
 800faa4:	2c10      	cmp	r4, #16
 800faa6:	f103 0301 	add.w	r3, r3, #1
 800faaa:	f106 0208 	add.w	r2, r6, #8
 800faae:	f300 8129 	bgt.w	800fd04 <_vfiprintf_r+0x800>
 800fab2:	6074      	str	r4, [r6, #4]
 800fab4:	2b07      	cmp	r3, #7
 800fab6:	440c      	add	r4, r1
 800fab8:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
 800fabc:	f340 8133 	ble.w	800fd26 <_vfiprintf_r+0x822>
 800fac0:	aa0c      	add	r2, sp, #48	; 0x30
 800fac2:	4639      	mov	r1, r7
 800fac4:	4648      	mov	r0, r9
 800fac6:	f7ff fceb 	bl	800f4a0 <__sprint_r>
 800faca:	2800      	cmp	r0, #0
 800facc:	f040 8153 	bne.w	800fd76 <_vfiprintf_r+0x872>
 800fad0:	ae0f      	add	r6, sp, #60	; 0x3c
 800fad2:	9b00      	ldr	r3, [sp, #0]
 800fad4:	980e      	ldr	r0, [sp, #56]	; 0x38
 800fad6:	6073      	str	r3, [r6, #4]
 800fad8:	4418      	add	r0, r3
 800fada:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fadc:	f8c6 8000 	str.w	r8, [r6]
 800fae0:	3301      	adds	r3, #1
 800fae2:	2b07      	cmp	r3, #7
 800fae4:	900e      	str	r0, [sp, #56]	; 0x38
 800fae6:	930d      	str	r3, [sp, #52]	; 0x34
 800fae8:	f300 811f 	bgt.w	800fd2a <_vfiprintf_r+0x826>
 800faec:	f106 0308 	add.w	r3, r6, #8
 800faf0:	f01a 0f04 	tst.w	sl, #4
 800faf4:	f040 8121 	bne.w	800fd3a <_vfiprintf_r+0x836>
 800faf8:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 800fafc:	9904      	ldr	r1, [sp, #16]
 800fafe:	428a      	cmp	r2, r1
 800fb00:	bfac      	ite	ge
 800fb02:	189b      	addge	r3, r3, r2
 800fb04:	185b      	addlt	r3, r3, r1
 800fb06:	9302      	str	r3, [sp, #8]
 800fb08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fb0a:	b13b      	cbz	r3, 800fb1c <_vfiprintf_r+0x618>
 800fb0c:	aa0c      	add	r2, sp, #48	; 0x30
 800fb0e:	4639      	mov	r1, r7
 800fb10:	4648      	mov	r0, r9
 800fb12:	f7ff fcc5 	bl	800f4a0 <__sprint_r>
 800fb16:	2800      	cmp	r0, #0
 800fb18:	f040 812d 	bne.w	800fd76 <_vfiprintf_r+0x872>
 800fb1c:	2300      	movs	r3, #0
 800fb1e:	930d      	str	r3, [sp, #52]	; 0x34
 800fb20:	ae0f      	add	r6, sp, #60	; 0x3c
 800fb22:	e6c7      	b.n	800f8b4 <_vfiprintf_r+0x3b0>
 800fb24:	4640      	mov	r0, r8
 800fb26:	f7f0 fb5b 	bl	80001e0 <strlen>
 800fb2a:	9000      	str	r0, [sp, #0]
 800fb2c:	e737      	b.n	800f99e <_vfiprintf_r+0x49a>
 800fb2e:	f04a 0a10 	orr.w	sl, sl, #16
 800fb32:	f01a 0320 	ands.w	r3, sl, #32
 800fb36:	d008      	beq.n	800fb4a <_vfiprintf_r+0x646>
 800fb38:	3407      	adds	r4, #7
 800fb3a:	f024 0307 	bic.w	r3, r4, #7
 800fb3e:	469b      	mov	fp, r3
 800fb40:	685d      	ldr	r5, [r3, #4]
 800fb42:	f85b 4b08 	ldr.w	r4, [fp], #8
 800fb46:	2301      	movs	r3, #1
 800fb48:	e6da      	b.n	800f900 <_vfiprintf_r+0x3fc>
 800fb4a:	46a3      	mov	fp, r4
 800fb4c:	f01a 0510 	ands.w	r5, sl, #16
 800fb50:	f85b 4b04 	ldr.w	r4, [fp], #4
 800fb54:	d001      	beq.n	800fb5a <_vfiprintf_r+0x656>
 800fb56:	461d      	mov	r5, r3
 800fb58:	e7f5      	b.n	800fb46 <_vfiprintf_r+0x642>
 800fb5a:	f01a 0340 	ands.w	r3, sl, #64	; 0x40
 800fb5e:	d001      	beq.n	800fb64 <_vfiprintf_r+0x660>
 800fb60:	b2a4      	uxth	r4, r4
 800fb62:	e7f0      	b.n	800fb46 <_vfiprintf_r+0x642>
 800fb64:	f41a 7500 	ands.w	r5, sl, #512	; 0x200
 800fb68:	d0ed      	beq.n	800fb46 <_vfiprintf_r+0x642>
 800fb6a:	b2e4      	uxtb	r4, r4
 800fb6c:	e7f3      	b.n	800fb56 <_vfiprintf_r+0x652>
 800fb6e:	4a47      	ldr	r2, [pc, #284]	; (800fc8c <_vfiprintf_r+0x788>)
 800fb70:	e5c5      	b.n	800f6fe <_vfiprintf_r+0x1fa>
 800fb72:	46a3      	mov	fp, r4
 800fb74:	f01a 0510 	ands.w	r5, sl, #16
 800fb78:	f85b 4b04 	ldr.w	r4, [fp], #4
 800fb7c:	d001      	beq.n	800fb82 <_vfiprintf_r+0x67e>
 800fb7e:	4615      	mov	r5, r2
 800fb80:	e5c9      	b.n	800f716 <_vfiprintf_r+0x212>
 800fb82:	f01a 0240 	ands.w	r2, sl, #64	; 0x40
 800fb86:	d001      	beq.n	800fb8c <_vfiprintf_r+0x688>
 800fb88:	b2a4      	uxth	r4, r4
 800fb8a:	e5c4      	b.n	800f716 <_vfiprintf_r+0x212>
 800fb8c:	f41a 7500 	ands.w	r5, sl, #512	; 0x200
 800fb90:	f43f adc1 	beq.w	800f716 <_vfiprintf_r+0x212>
 800fb94:	b2e4      	uxtb	r4, r4
 800fb96:	e7f2      	b.n	800fb7e <_vfiprintf_r+0x67a>
 800fb98:	2c0a      	cmp	r4, #10
 800fb9a:	f175 0300 	sbcs.w	r3, r5, #0
 800fb9e:	d205      	bcs.n	800fbac <_vfiprintf_r+0x6a8>
 800fba0:	3430      	adds	r4, #48	; 0x30
 800fba2:	f88d 40df 	strb.w	r4, [sp, #223]	; 0xdf
 800fba6:	f10d 08df 	add.w	r8, sp, #223	; 0xdf
 800fbaa:	e137      	b.n	800fe1c <_vfiprintf_r+0x918>
 800fbac:	ab38      	add	r3, sp, #224	; 0xe0
 800fbae:	9308      	str	r3, [sp, #32]
 800fbb0:	9b04      	ldr	r3, [sp, #16]
 800fbb2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800fbb6:	f04f 0a00 	mov.w	sl, #0
 800fbba:	9309      	str	r3, [sp, #36]	; 0x24
 800fbbc:	9b08      	ldr	r3, [sp, #32]
 800fbbe:	220a      	movs	r2, #10
 800fbc0:	f103 38ff 	add.w	r8, r3, #4294967295
 800fbc4:	4620      	mov	r0, r4
 800fbc6:	2300      	movs	r3, #0
 800fbc8:	4629      	mov	r1, r5
 800fbca:	f7f1 f865 	bl	8000c98 <__aeabi_uldivmod>
 800fbce:	9b08      	ldr	r3, [sp, #32]
 800fbd0:	3230      	adds	r2, #48	; 0x30
 800fbd2:	f803 2c01 	strb.w	r2, [r3, #-1]
 800fbd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fbd8:	f10a 0a01 	add.w	sl, sl, #1
 800fbdc:	b1db      	cbz	r3, 800fc16 <_vfiprintf_r+0x712>
 800fbde:	9b06      	ldr	r3, [sp, #24]
 800fbe0:	781b      	ldrb	r3, [r3, #0]
 800fbe2:	4553      	cmp	r3, sl
 800fbe4:	d117      	bne.n	800fc16 <_vfiprintf_r+0x712>
 800fbe6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 800fbea:	d014      	beq.n	800fc16 <_vfiprintf_r+0x712>
 800fbec:	2c0a      	cmp	r4, #10
 800fbee:	f175 0300 	sbcs.w	r3, r5, #0
 800fbf2:	d310      	bcc.n	800fc16 <_vfiprintf_r+0x712>
 800fbf4:	9b07      	ldr	r3, [sp, #28]
 800fbf6:	eba8 0803 	sub.w	r8, r8, r3
 800fbfa:	461a      	mov	r2, r3
 800fbfc:	ee18 1a10 	vmov	r1, s16
 800fc00:	4640      	mov	r0, r8
 800fc02:	f7ff fa45 	bl	800f090 <strncpy>
 800fc06:	9b06      	ldr	r3, [sp, #24]
 800fc08:	785b      	ldrb	r3, [r3, #1]
 800fc0a:	b1a3      	cbz	r3, 800fc36 <_vfiprintf_r+0x732>
 800fc0c:	9b06      	ldr	r3, [sp, #24]
 800fc0e:	3301      	adds	r3, #1
 800fc10:	9306      	str	r3, [sp, #24]
 800fc12:	f04f 0a00 	mov.w	sl, #0
 800fc16:	2300      	movs	r3, #0
 800fc18:	220a      	movs	r2, #10
 800fc1a:	4620      	mov	r0, r4
 800fc1c:	4629      	mov	r1, r5
 800fc1e:	f7f1 f83b 	bl	8000c98 <__aeabi_uldivmod>
 800fc22:	2c0a      	cmp	r4, #10
 800fc24:	f175 0300 	sbcs.w	r3, r5, #0
 800fc28:	f0c0 80f8 	bcc.w	800fe1c <_vfiprintf_r+0x918>
 800fc2c:	4604      	mov	r4, r0
 800fc2e:	460d      	mov	r5, r1
 800fc30:	f8cd 8020 	str.w	r8, [sp, #32]
 800fc34:	e7c2      	b.n	800fbbc <_vfiprintf_r+0x6b8>
 800fc36:	469a      	mov	sl, r3
 800fc38:	e7ed      	b.n	800fc16 <_vfiprintf_r+0x712>
 800fc3a:	f004 030f 	and.w	r3, r4, #15
 800fc3e:	9a05      	ldr	r2, [sp, #20]
 800fc40:	0924      	lsrs	r4, r4, #4
 800fc42:	5cd3      	ldrb	r3, [r2, r3]
 800fc44:	f808 3d01 	strb.w	r3, [r8, #-1]!
 800fc48:	ea44 7405 	orr.w	r4, r4, r5, lsl #28
 800fc4c:	092d      	lsrs	r5, r5, #4
 800fc4e:	ea54 0305 	orrs.w	r3, r4, r5
 800fc52:	d1f2      	bne.n	800fc3a <_vfiprintf_r+0x736>
 800fc54:	e0e2      	b.n	800fe1c <_vfiprintf_r+0x918>
 800fc56:	b933      	cbnz	r3, 800fc66 <_vfiprintf_r+0x762>
 800fc58:	f01a 0f01 	tst.w	sl, #1
 800fc5c:	d003      	beq.n	800fc66 <_vfiprintf_r+0x762>
 800fc5e:	2330      	movs	r3, #48	; 0x30
 800fc60:	f88d 30df 	strb.w	r3, [sp, #223]	; 0xdf
 800fc64:	e79f      	b.n	800fba6 <_vfiprintf_r+0x6a2>
 800fc66:	f10d 08e0 	add.w	r8, sp, #224	; 0xe0
 800fc6a:	e0d7      	b.n	800fe1c <_vfiprintf_r+0x918>
 800fc6c:	2b00      	cmp	r3, #0
 800fc6e:	f000 80a3 	beq.w	800fdb8 <_vfiprintf_r+0x8b4>
 800fc72:	2100      	movs	r1, #0
 800fc74:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 800fc78:	f88d 102b 	strb.w	r1, [sp, #43]	; 0x2b
 800fc7c:	46a3      	mov	fp, r4
 800fc7e:	e5da      	b.n	800f836 <_vfiprintf_r+0x332>
 800fc80:	4605      	mov	r5, r0
 800fc82:	e68c      	b.n	800f99e <_vfiprintf_r+0x49a>
 800fc84:	08010fa8 	.word	0x08010fa8
 800fc88:	08010fb8 	.word	0x08010fb8
 800fc8c:	08010ce9 	.word	0x08010ce9
 800fc90:	2010      	movs	r0, #16
 800fc92:	4402      	add	r2, r0
 800fc94:	2b07      	cmp	r3, #7
 800fc96:	e9cd 320d 	strd	r3, r2, [sp, #52]	; 0x34
 800fc9a:	6070      	str	r0, [r6, #4]
 800fc9c:	dd07      	ble.n	800fcae <_vfiprintf_r+0x7aa>
 800fc9e:	aa0c      	add	r2, sp, #48	; 0x30
 800fca0:	4639      	mov	r1, r7
 800fca2:	4648      	mov	r0, r9
 800fca4:	f7ff fbfc 	bl	800f4a0 <__sprint_r>
 800fca8:	2800      	cmp	r0, #0
 800fcaa:	d164      	bne.n	800fd76 <_vfiprintf_r+0x872>
 800fcac:	a90f      	add	r1, sp, #60	; 0x3c
 800fcae:	3c10      	subs	r4, #16
 800fcb0:	460e      	mov	r6, r1
 800fcb2:	e68f      	b.n	800f9d4 <_vfiprintf_r+0x4d0>
 800fcb4:	460e      	mov	r6, r1
 800fcb6:	e6a8      	b.n	800fa0a <_vfiprintf_r+0x506>
 800fcb8:	aa0c      	add	r2, sp, #48	; 0x30
 800fcba:	4639      	mov	r1, r7
 800fcbc:	4648      	mov	r0, r9
 800fcbe:	f7ff fbef 	bl	800f4a0 <__sprint_r>
 800fcc2:	2800      	cmp	r0, #0
 800fcc4:	d157      	bne.n	800fd76 <_vfiprintf_r+0x872>
 800fcc6:	ae0f      	add	r6, sp, #60	; 0x3c
 800fcc8:	e6b1      	b.n	800fa2e <_vfiprintf_r+0x52a>
 800fcca:	aa0c      	add	r2, sp, #48	; 0x30
 800fccc:	4639      	mov	r1, r7
 800fcce:	4648      	mov	r0, r9
 800fcd0:	f7ff fbe6 	bl	800f4a0 <__sprint_r>
 800fcd4:	2800      	cmp	r0, #0
 800fcd6:	d14e      	bne.n	800fd76 <_vfiprintf_r+0x872>
 800fcd8:	ae0f      	add	r6, sp, #60	; 0x3c
 800fcda:	e6b8      	b.n	800fa4e <_vfiprintf_r+0x54a>
 800fcdc:	2010      	movs	r0, #16
 800fcde:	4402      	add	r2, r0
 800fce0:	2b07      	cmp	r3, #7
 800fce2:	e9cd 320d 	strd	r3, r2, [sp, #52]	; 0x34
 800fce6:	6070      	str	r0, [r6, #4]
 800fce8:	dd07      	ble.n	800fcfa <_vfiprintf_r+0x7f6>
 800fcea:	aa0c      	add	r2, sp, #48	; 0x30
 800fcec:	4639      	mov	r1, r7
 800fcee:	4648      	mov	r0, r9
 800fcf0:	f7ff fbd6 	bl	800f4a0 <__sprint_r>
 800fcf4:	2800      	cmp	r0, #0
 800fcf6:	d13e      	bne.n	800fd76 <_vfiprintf_r+0x872>
 800fcf8:	a90f      	add	r1, sp, #60	; 0x3c
 800fcfa:	3c10      	subs	r4, #16
 800fcfc:	460e      	mov	r6, r1
 800fcfe:	e6ae      	b.n	800fa5e <_vfiprintf_r+0x55a>
 800fd00:	460e      	mov	r6, r1
 800fd02:	e6c7      	b.n	800fa94 <_vfiprintf_r+0x590>
 800fd04:	2010      	movs	r0, #16
 800fd06:	4401      	add	r1, r0
 800fd08:	2b07      	cmp	r3, #7
 800fd0a:	e9cd 310d 	strd	r3, r1, [sp, #52]	; 0x34
 800fd0e:	6070      	str	r0, [r6, #4]
 800fd10:	dd06      	ble.n	800fd20 <_vfiprintf_r+0x81c>
 800fd12:	aa0c      	add	r2, sp, #48	; 0x30
 800fd14:	4639      	mov	r1, r7
 800fd16:	4648      	mov	r0, r9
 800fd18:	f7ff fbc2 	bl	800f4a0 <__sprint_r>
 800fd1c:	bb58      	cbnz	r0, 800fd76 <_vfiprintf_r+0x872>
 800fd1e:	aa0f      	add	r2, sp, #60	; 0x3c
 800fd20:	3c10      	subs	r4, #16
 800fd22:	4616      	mov	r6, r2
 800fd24:	e6bb      	b.n	800fa9e <_vfiprintf_r+0x59a>
 800fd26:	4616      	mov	r6, r2
 800fd28:	e6d3      	b.n	800fad2 <_vfiprintf_r+0x5ce>
 800fd2a:	aa0c      	add	r2, sp, #48	; 0x30
 800fd2c:	4639      	mov	r1, r7
 800fd2e:	4648      	mov	r0, r9
 800fd30:	f7ff fbb6 	bl	800f4a0 <__sprint_r>
 800fd34:	b9f8      	cbnz	r0, 800fd76 <_vfiprintf_r+0x872>
 800fd36:	ab0f      	add	r3, sp, #60	; 0x3c
 800fd38:	e6da      	b.n	800faf0 <_vfiprintf_r+0x5ec>
 800fd3a:	e9dd 2103 	ldrd	r2, r1, [sp, #12]
 800fd3e:	1a54      	subs	r4, r2, r1
 800fd40:	2c00      	cmp	r4, #0
 800fd42:	f77f aed9 	ble.w	800faf8 <_vfiprintf_r+0x5f4>
 800fd46:	4d39      	ldr	r5, [pc, #228]	; (800fe2c <_vfiprintf_r+0x928>)
 800fd48:	2610      	movs	r6, #16
 800fd4a:	e9dd 210d 	ldrd	r2, r1, [sp, #52]	; 0x34
 800fd4e:	2c10      	cmp	r4, #16
 800fd50:	f102 0201 	add.w	r2, r2, #1
 800fd54:	601d      	str	r5, [r3, #0]
 800fd56:	dc1d      	bgt.n	800fd94 <_vfiprintf_r+0x890>
 800fd58:	605c      	str	r4, [r3, #4]
 800fd5a:	2a07      	cmp	r2, #7
 800fd5c:	440c      	add	r4, r1
 800fd5e:	e9cd 240d 	strd	r2, r4, [sp, #52]	; 0x34
 800fd62:	f77f aec9 	ble.w	800faf8 <_vfiprintf_r+0x5f4>
 800fd66:	aa0c      	add	r2, sp, #48	; 0x30
 800fd68:	4639      	mov	r1, r7
 800fd6a:	4648      	mov	r0, r9
 800fd6c:	f7ff fb98 	bl	800f4a0 <__sprint_r>
 800fd70:	2800      	cmp	r0, #0
 800fd72:	f43f aec1 	beq.w	800faf8 <_vfiprintf_r+0x5f4>
 800fd76:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800fd78:	07d9      	lsls	r1, r3, #31
 800fd7a:	d405      	bmi.n	800fd88 <_vfiprintf_r+0x884>
 800fd7c:	89bb      	ldrh	r3, [r7, #12]
 800fd7e:	059a      	lsls	r2, r3, #22
 800fd80:	d402      	bmi.n	800fd88 <_vfiprintf_r+0x884>
 800fd82:	6db8      	ldr	r0, [r7, #88]	; 0x58
 800fd84:	f7fa fb11 	bl	800a3aa <__retarget_lock_release_recursive>
 800fd88:	89bb      	ldrh	r3, [r7, #12]
 800fd8a:	065b      	lsls	r3, r3, #25
 800fd8c:	f57f abed 	bpl.w	800f56a <_vfiprintf_r+0x66>
 800fd90:	f7ff bbe8 	b.w	800f564 <_vfiprintf_r+0x60>
 800fd94:	3110      	adds	r1, #16
 800fd96:	2a07      	cmp	r2, #7
 800fd98:	e9cd 210d 	strd	r2, r1, [sp, #52]	; 0x34
 800fd9c:	605e      	str	r6, [r3, #4]
 800fd9e:	dc02      	bgt.n	800fda6 <_vfiprintf_r+0x8a2>
 800fda0:	3308      	adds	r3, #8
 800fda2:	3c10      	subs	r4, #16
 800fda4:	e7d1      	b.n	800fd4a <_vfiprintf_r+0x846>
 800fda6:	aa0c      	add	r2, sp, #48	; 0x30
 800fda8:	4639      	mov	r1, r7
 800fdaa:	4648      	mov	r0, r9
 800fdac:	f7ff fb78 	bl	800f4a0 <__sprint_r>
 800fdb0:	2800      	cmp	r0, #0
 800fdb2:	d1e0      	bne.n	800fd76 <_vfiprintf_r+0x872>
 800fdb4:	ab0f      	add	r3, sp, #60	; 0x3c
 800fdb6:	e7f4      	b.n	800fda2 <_vfiprintf_r+0x89e>
 800fdb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fdba:	b913      	cbnz	r3, 800fdc2 <_vfiprintf_r+0x8be>
 800fdbc:	2300      	movs	r3, #0
 800fdbe:	930d      	str	r3, [sp, #52]	; 0x34
 800fdc0:	e7d9      	b.n	800fd76 <_vfiprintf_r+0x872>
 800fdc2:	aa0c      	add	r2, sp, #48	; 0x30
 800fdc4:	4639      	mov	r1, r7
 800fdc6:	4648      	mov	r0, r9
 800fdc8:	f7ff fb6a 	bl	800f4a0 <__sprint_r>
 800fdcc:	2800      	cmp	r0, #0
 800fdce:	d0f5      	beq.n	800fdbc <_vfiprintf_r+0x8b8>
 800fdd0:	e7d1      	b.n	800fd76 <_vfiprintf_r+0x872>
 800fdd2:	ea54 0205 	orrs.w	r2, r4, r5
 800fdd6:	f8cd a010 	str.w	sl, [sp, #16]
 800fdda:	f43f ada3 	beq.w	800f924 <_vfiprintf_r+0x420>
 800fdde:	2b01      	cmp	r3, #1
 800fde0:	f43f aeda 	beq.w	800fb98 <_vfiprintf_r+0x694>
 800fde4:	2b02      	cmp	r3, #2
 800fde6:	f10d 08e0 	add.w	r8, sp, #224	; 0xe0
 800fdea:	f43f af26 	beq.w	800fc3a <_vfiprintf_r+0x736>
 800fdee:	f004 0307 	and.w	r3, r4, #7
 800fdf2:	08e4      	lsrs	r4, r4, #3
 800fdf4:	ea44 7445 	orr.w	r4, r4, r5, lsl #29
 800fdf8:	08ed      	lsrs	r5, r5, #3
 800fdfa:	3330      	adds	r3, #48	; 0x30
 800fdfc:	ea54 0105 	orrs.w	r1, r4, r5
 800fe00:	4642      	mov	r2, r8
 800fe02:	f808 3d01 	strb.w	r3, [r8, #-1]!
 800fe06:	d1f2      	bne.n	800fdee <_vfiprintf_r+0x8ea>
 800fe08:	9904      	ldr	r1, [sp, #16]
 800fe0a:	07c8      	lsls	r0, r1, #31
 800fe0c:	d506      	bpl.n	800fe1c <_vfiprintf_r+0x918>
 800fe0e:	2b30      	cmp	r3, #48	; 0x30
 800fe10:	d004      	beq.n	800fe1c <_vfiprintf_r+0x918>
 800fe12:	2330      	movs	r3, #48	; 0x30
 800fe14:	f808 3c01 	strb.w	r3, [r8, #-1]
 800fe18:	f1a2 0802 	sub.w	r8, r2, #2
 800fe1c:	ab38      	add	r3, sp, #224	; 0xe0
 800fe1e:	eba3 0308 	sub.w	r3, r3, r8
 800fe22:	9d00      	ldr	r5, [sp, #0]
 800fe24:	f8dd a010 	ldr.w	sl, [sp, #16]
 800fe28:	9300      	str	r3, [sp, #0]
 800fe2a:	e5b8      	b.n	800f99e <_vfiprintf_r+0x49a>
 800fe2c:	08010fa8 	.word	0x08010fa8

0800fe30 <__sbprintf>:
 800fe30:	b570      	push	{r4, r5, r6, lr}
 800fe32:	460c      	mov	r4, r1
 800fe34:	8989      	ldrh	r1, [r1, #12]
 800fe36:	f5ad 6d8e 	sub.w	sp, sp, #1136	; 0x470
 800fe3a:	f021 0102 	bic.w	r1, r1, #2
 800fe3e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800fe42:	6e61      	ldr	r1, [r4, #100]	; 0x64
 800fe44:	911b      	str	r1, [sp, #108]	; 0x6c
 800fe46:	89e1      	ldrh	r1, [r4, #14]
 800fe48:	f8ad 1016 	strh.w	r1, [sp, #22]
 800fe4c:	69e1      	ldr	r1, [r4, #28]
 800fe4e:	9109      	str	r1, [sp, #36]	; 0x24
 800fe50:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800fe52:	910b      	str	r1, [sp, #44]	; 0x2c
 800fe54:	a91c      	add	r1, sp, #112	; 0x70
 800fe56:	9102      	str	r1, [sp, #8]
 800fe58:	9106      	str	r1, [sp, #24]
 800fe5a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800fe5e:	4606      	mov	r6, r0
 800fe60:	9104      	str	r1, [sp, #16]
 800fe62:	9107      	str	r1, [sp, #28]
 800fe64:	a818      	add	r0, sp, #96	; 0x60
 800fe66:	2100      	movs	r1, #0
 800fe68:	e9cd 3200 	strd	r3, r2, [sp]
 800fe6c:	9108      	str	r1, [sp, #32]
 800fe6e:	f7fa fa99 	bl	800a3a4 <__retarget_lock_init_recursive>
 800fe72:	e9dd 3200 	ldrd	r3, r2, [sp]
 800fe76:	a902      	add	r1, sp, #8
 800fe78:	4630      	mov	r0, r6
 800fe7a:	f7ff fb43 	bl	800f504 <_vfiprintf_r>
 800fe7e:	1e05      	subs	r5, r0, #0
 800fe80:	db07      	blt.n	800fe92 <__sbprintf+0x62>
 800fe82:	a902      	add	r1, sp, #8
 800fe84:	4630      	mov	r0, r6
 800fe86:	f7fa f88f 	bl	8009fa8 <_fflush_r>
 800fe8a:	2800      	cmp	r0, #0
 800fe8c:	bf18      	it	ne
 800fe8e:	f04f 35ff 	movne.w	r5, #4294967295
 800fe92:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800fe96:	9818      	ldr	r0, [sp, #96]	; 0x60
 800fe98:	065b      	lsls	r3, r3, #25
 800fe9a:	bf42      	ittt	mi
 800fe9c:	89a3      	ldrhmi	r3, [r4, #12]
 800fe9e:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 800fea2:	81a3      	strhmi	r3, [r4, #12]
 800fea4:	f7fa fa7f 	bl	800a3a6 <__retarget_lock_close_recursive>
 800fea8:	4628      	mov	r0, r5
 800feaa:	f50d 6d8e 	add.w	sp, sp, #1136	; 0x470
 800feae:	bd70      	pop	{r4, r5, r6, pc}

0800feb0 <abort>:
 800feb0:	b508      	push	{r3, lr}
 800feb2:	2006      	movs	r0, #6
 800feb4:	f000 f8ba 	bl	801002c <raise>
 800feb8:	2001      	movs	r0, #1
 800feba:	f7f2 fc99 	bl	80027f0 <_exit>

0800febe <__fputwc>:
 800febe:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800fec2:	4680      	mov	r8, r0
 800fec4:	460e      	mov	r6, r1
 800fec6:	4615      	mov	r5, r2
 800fec8:	f7fe fbd2 	bl	800e670 <__locale_mb_cur_max>
 800fecc:	2801      	cmp	r0, #1
 800fece:	d11c      	bne.n	800ff0a <__fputwc+0x4c>
 800fed0:	1e73      	subs	r3, r6, #1
 800fed2:	2bfe      	cmp	r3, #254	; 0xfe
 800fed4:	d819      	bhi.n	800ff0a <__fputwc+0x4c>
 800fed6:	f88d 6004 	strb.w	r6, [sp, #4]
 800feda:	4604      	mov	r4, r0
 800fedc:	2700      	movs	r7, #0
 800fede:	f10d 0904 	add.w	r9, sp, #4
 800fee2:	42a7      	cmp	r7, r4
 800fee4:	d020      	beq.n	800ff28 <__fputwc+0x6a>
 800fee6:	68ab      	ldr	r3, [r5, #8]
 800fee8:	f817 1009 	ldrb.w	r1, [r7, r9]
 800feec:	3b01      	subs	r3, #1
 800feee:	2b00      	cmp	r3, #0
 800fef0:	60ab      	str	r3, [r5, #8]
 800fef2:	da04      	bge.n	800fefe <__fputwc+0x40>
 800fef4:	69aa      	ldr	r2, [r5, #24]
 800fef6:	4293      	cmp	r3, r2
 800fef8:	db1a      	blt.n	800ff30 <__fputwc+0x72>
 800fefa:	290a      	cmp	r1, #10
 800fefc:	d018      	beq.n	800ff30 <__fputwc+0x72>
 800fefe:	682b      	ldr	r3, [r5, #0]
 800ff00:	1c5a      	adds	r2, r3, #1
 800ff02:	602a      	str	r2, [r5, #0]
 800ff04:	7019      	strb	r1, [r3, #0]
 800ff06:	3701      	adds	r7, #1
 800ff08:	e7eb      	b.n	800fee2 <__fputwc+0x24>
 800ff0a:	a901      	add	r1, sp, #4
 800ff0c:	f105 035c 	add.w	r3, r5, #92	; 0x5c
 800ff10:	4632      	mov	r2, r6
 800ff12:	4640      	mov	r0, r8
 800ff14:	f000 f8f0 	bl	80100f8 <_wcrtomb_r>
 800ff18:	1c41      	adds	r1, r0, #1
 800ff1a:	4604      	mov	r4, r0
 800ff1c:	d1de      	bne.n	800fedc <__fputwc+0x1e>
 800ff1e:	89ab      	ldrh	r3, [r5, #12]
 800ff20:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ff24:	81ab      	strh	r3, [r5, #12]
 800ff26:	4606      	mov	r6, r0
 800ff28:	4630      	mov	r0, r6
 800ff2a:	b003      	add	sp, #12
 800ff2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ff30:	462a      	mov	r2, r5
 800ff32:	4640      	mov	r0, r8
 800ff34:	f000 f896 	bl	8010064 <__swbuf_r>
 800ff38:	1c42      	adds	r2, r0, #1
 800ff3a:	d1e4      	bne.n	800ff06 <__fputwc+0x48>
 800ff3c:	4606      	mov	r6, r0
 800ff3e:	e7f3      	b.n	800ff28 <__fputwc+0x6a>

0800ff40 <_fputwc_r>:
 800ff40:	6e53      	ldr	r3, [r2, #100]	; 0x64
 800ff42:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ff44:	4614      	mov	r4, r2
 800ff46:	07da      	lsls	r2, r3, #31
 800ff48:	4605      	mov	r5, r0
 800ff4a:	d407      	bmi.n	800ff5c <_fputwc_r+0x1c>
 800ff4c:	89a3      	ldrh	r3, [r4, #12]
 800ff4e:	059b      	lsls	r3, r3, #22
 800ff50:	d404      	bmi.n	800ff5c <_fputwc_r+0x1c>
 800ff52:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ff54:	9101      	str	r1, [sp, #4]
 800ff56:	f7fa fa27 	bl	800a3a8 <__retarget_lock_acquire_recursive>
 800ff5a:	9901      	ldr	r1, [sp, #4]
 800ff5c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ff60:	0498      	lsls	r0, r3, #18
 800ff62:	d406      	bmi.n	800ff72 <_fputwc_r+0x32>
 800ff64:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800ff68:	81a3      	strh	r3, [r4, #12]
 800ff6a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800ff6c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800ff70:	6663      	str	r3, [r4, #100]	; 0x64
 800ff72:	4622      	mov	r2, r4
 800ff74:	4628      	mov	r0, r5
 800ff76:	f7ff ffa2 	bl	800febe <__fputwc>
 800ff7a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800ff7c:	07da      	lsls	r2, r3, #31
 800ff7e:	4605      	mov	r5, r0
 800ff80:	d405      	bmi.n	800ff8e <_fputwc_r+0x4e>
 800ff82:	89a3      	ldrh	r3, [r4, #12]
 800ff84:	059b      	lsls	r3, r3, #22
 800ff86:	d402      	bmi.n	800ff8e <_fputwc_r+0x4e>
 800ff88:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ff8a:	f7fa fa0e 	bl	800a3aa <__retarget_lock_release_recursive>
 800ff8e:	4628      	mov	r0, r5
 800ff90:	b003      	add	sp, #12
 800ff92:	bd30      	pop	{r4, r5, pc}

0800ff94 <_fstat_r>:
 800ff94:	b538      	push	{r3, r4, r5, lr}
 800ff96:	4d07      	ldr	r5, [pc, #28]	; (800ffb4 <_fstat_r+0x20>)
 800ff98:	2300      	movs	r3, #0
 800ff9a:	4604      	mov	r4, r0
 800ff9c:	4608      	mov	r0, r1
 800ff9e:	4611      	mov	r1, r2
 800ffa0:	602b      	str	r3, [r5, #0]
 800ffa2:	f7f2 fc74 	bl	800288e <_fstat>
 800ffa6:	1c43      	adds	r3, r0, #1
 800ffa8:	d102      	bne.n	800ffb0 <_fstat_r+0x1c>
 800ffaa:	682b      	ldr	r3, [r5, #0]
 800ffac:	b103      	cbz	r3, 800ffb0 <_fstat_r+0x1c>
 800ffae:	6023      	str	r3, [r4, #0]
 800ffb0:	bd38      	pop	{r3, r4, r5, pc}
 800ffb2:	bf00      	nop
 800ffb4:	20017ad4 	.word	0x20017ad4

0800ffb8 <_isatty_r>:
 800ffb8:	b538      	push	{r3, r4, r5, lr}
 800ffba:	4d06      	ldr	r5, [pc, #24]	; (800ffd4 <_isatty_r+0x1c>)
 800ffbc:	2300      	movs	r3, #0
 800ffbe:	4604      	mov	r4, r0
 800ffc0:	4608      	mov	r0, r1
 800ffc2:	602b      	str	r3, [r5, #0]
 800ffc4:	f7f2 fc73 	bl	80028ae <_isatty>
 800ffc8:	1c43      	adds	r3, r0, #1
 800ffca:	d102      	bne.n	800ffd2 <_isatty_r+0x1a>
 800ffcc:	682b      	ldr	r3, [r5, #0]
 800ffce:	b103      	cbz	r3, 800ffd2 <_isatty_r+0x1a>
 800ffd0:	6023      	str	r3, [r4, #0]
 800ffd2:	bd38      	pop	{r3, r4, r5, pc}
 800ffd4:	20017ad4 	.word	0x20017ad4

0800ffd8 <_raise_r>:
 800ffd8:	291f      	cmp	r1, #31
 800ffda:	b538      	push	{r3, r4, r5, lr}
 800ffdc:	4604      	mov	r4, r0
 800ffde:	460d      	mov	r5, r1
 800ffe0:	d904      	bls.n	800ffec <_raise_r+0x14>
 800ffe2:	2316      	movs	r3, #22
 800ffe4:	6003      	str	r3, [r0, #0]
 800ffe6:	f04f 30ff 	mov.w	r0, #4294967295
 800ffea:	bd38      	pop	{r3, r4, r5, pc}
 800ffec:	f8d0 22dc 	ldr.w	r2, [r0, #732]	; 0x2dc
 800fff0:	b112      	cbz	r2, 800fff8 <_raise_r+0x20>
 800fff2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800fff6:	b94b      	cbnz	r3, 801000c <_raise_r+0x34>
 800fff8:	4620      	mov	r0, r4
 800fffa:	f000 f831 	bl	8010060 <_getpid_r>
 800fffe:	462a      	mov	r2, r5
 8010000:	4601      	mov	r1, r0
 8010002:	4620      	mov	r0, r4
 8010004:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010008:	f000 b818 	b.w	801003c <_kill_r>
 801000c:	2b01      	cmp	r3, #1
 801000e:	d00a      	beq.n	8010026 <_raise_r+0x4e>
 8010010:	1c59      	adds	r1, r3, #1
 8010012:	d103      	bne.n	801001c <_raise_r+0x44>
 8010014:	2316      	movs	r3, #22
 8010016:	6003      	str	r3, [r0, #0]
 8010018:	2001      	movs	r0, #1
 801001a:	e7e6      	b.n	800ffea <_raise_r+0x12>
 801001c:	2400      	movs	r4, #0
 801001e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8010022:	4628      	mov	r0, r5
 8010024:	4798      	blx	r3
 8010026:	2000      	movs	r0, #0
 8010028:	e7df      	b.n	800ffea <_raise_r+0x12>
	...

0801002c <raise>:
 801002c:	4b02      	ldr	r3, [pc, #8]	; (8010038 <raise+0xc>)
 801002e:	4601      	mov	r1, r0
 8010030:	6818      	ldr	r0, [r3, #0]
 8010032:	f7ff bfd1 	b.w	800ffd8 <_raise_r>
 8010036:	bf00      	nop
 8010038:	20000020 	.word	0x20000020

0801003c <_kill_r>:
 801003c:	b538      	push	{r3, r4, r5, lr}
 801003e:	4d07      	ldr	r5, [pc, #28]	; (801005c <_kill_r+0x20>)
 8010040:	2300      	movs	r3, #0
 8010042:	4604      	mov	r4, r0
 8010044:	4608      	mov	r0, r1
 8010046:	4611      	mov	r1, r2
 8010048:	602b      	str	r3, [r5, #0]
 801004a:	f7f2 fbc1 	bl	80027d0 <_kill>
 801004e:	1c43      	adds	r3, r0, #1
 8010050:	d102      	bne.n	8010058 <_kill_r+0x1c>
 8010052:	682b      	ldr	r3, [r5, #0]
 8010054:	b103      	cbz	r3, 8010058 <_kill_r+0x1c>
 8010056:	6023      	str	r3, [r4, #0]
 8010058:	bd38      	pop	{r3, r4, r5, pc}
 801005a:	bf00      	nop
 801005c:	20017ad4 	.word	0x20017ad4

08010060 <_getpid_r>:
 8010060:	f7f2 bbae 	b.w	80027c0 <_getpid>

08010064 <__swbuf_r>:
 8010064:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010066:	460e      	mov	r6, r1
 8010068:	4614      	mov	r4, r2
 801006a:	4605      	mov	r5, r0
 801006c:	b118      	cbz	r0, 8010076 <__swbuf_r+0x12>
 801006e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8010070:	b90b      	cbnz	r3, 8010076 <__swbuf_r+0x12>
 8010072:	f7fa f817 	bl	800a0a4 <__sinit>
 8010076:	69a3      	ldr	r3, [r4, #24]
 8010078:	60a3      	str	r3, [r4, #8]
 801007a:	89a3      	ldrh	r3, [r4, #12]
 801007c:	0719      	lsls	r1, r3, #28
 801007e:	d529      	bpl.n	80100d4 <__swbuf_r+0x70>
 8010080:	6923      	ldr	r3, [r4, #16]
 8010082:	b33b      	cbz	r3, 80100d4 <__swbuf_r+0x70>
 8010084:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8010088:	b2f6      	uxtb	r6, r6
 801008a:	049a      	lsls	r2, r3, #18
 801008c:	4637      	mov	r7, r6
 801008e:	d52a      	bpl.n	80100e6 <__swbuf_r+0x82>
 8010090:	6823      	ldr	r3, [r4, #0]
 8010092:	6920      	ldr	r0, [r4, #16]
 8010094:	1a18      	subs	r0, r3, r0
 8010096:	6963      	ldr	r3, [r4, #20]
 8010098:	4283      	cmp	r3, r0
 801009a:	dc04      	bgt.n	80100a6 <__swbuf_r+0x42>
 801009c:	4621      	mov	r1, r4
 801009e:	4628      	mov	r0, r5
 80100a0:	f7f9 ff82 	bl	8009fa8 <_fflush_r>
 80100a4:	b9e0      	cbnz	r0, 80100e0 <__swbuf_r+0x7c>
 80100a6:	68a3      	ldr	r3, [r4, #8]
 80100a8:	3b01      	subs	r3, #1
 80100aa:	60a3      	str	r3, [r4, #8]
 80100ac:	6823      	ldr	r3, [r4, #0]
 80100ae:	1c5a      	adds	r2, r3, #1
 80100b0:	6022      	str	r2, [r4, #0]
 80100b2:	701e      	strb	r6, [r3, #0]
 80100b4:	6962      	ldr	r2, [r4, #20]
 80100b6:	1c43      	adds	r3, r0, #1
 80100b8:	429a      	cmp	r2, r3
 80100ba:	d004      	beq.n	80100c6 <__swbuf_r+0x62>
 80100bc:	89a3      	ldrh	r3, [r4, #12]
 80100be:	07db      	lsls	r3, r3, #31
 80100c0:	d506      	bpl.n	80100d0 <__swbuf_r+0x6c>
 80100c2:	2e0a      	cmp	r6, #10
 80100c4:	d104      	bne.n	80100d0 <__swbuf_r+0x6c>
 80100c6:	4621      	mov	r1, r4
 80100c8:	4628      	mov	r0, r5
 80100ca:	f7f9 ff6d 	bl	8009fa8 <_fflush_r>
 80100ce:	b938      	cbnz	r0, 80100e0 <__swbuf_r+0x7c>
 80100d0:	4638      	mov	r0, r7
 80100d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80100d4:	4621      	mov	r1, r4
 80100d6:	4628      	mov	r0, r5
 80100d8:	f7ff f876 	bl	800f1c8 <__swsetup_r>
 80100dc:	2800      	cmp	r0, #0
 80100de:	d0d1      	beq.n	8010084 <__swbuf_r+0x20>
 80100e0:	f04f 37ff 	mov.w	r7, #4294967295
 80100e4:	e7f4      	b.n	80100d0 <__swbuf_r+0x6c>
 80100e6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80100ea:	81a3      	strh	r3, [r4, #12]
 80100ec:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80100ee:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80100f2:	6663      	str	r3, [r4, #100]	; 0x64
 80100f4:	e7cc      	b.n	8010090 <__swbuf_r+0x2c>
	...

080100f8 <_wcrtomb_r>:
 80100f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80100fa:	4c09      	ldr	r4, [pc, #36]	; (8010120 <_wcrtomb_r+0x28>)
 80100fc:	b085      	sub	sp, #20
 80100fe:	f8d4 70e0 	ldr.w	r7, [r4, #224]	; 0xe0
 8010102:	4605      	mov	r5, r0
 8010104:	461e      	mov	r6, r3
 8010106:	b909      	cbnz	r1, 801010c <_wcrtomb_r+0x14>
 8010108:	460a      	mov	r2, r1
 801010a:	a901      	add	r1, sp, #4
 801010c:	47b8      	blx	r7
 801010e:	1c43      	adds	r3, r0, #1
 8010110:	bf01      	itttt	eq
 8010112:	2300      	moveq	r3, #0
 8010114:	6033      	streq	r3, [r6, #0]
 8010116:	238a      	moveq	r3, #138	; 0x8a
 8010118:	602b      	streq	r3, [r5, #0]
 801011a:	b005      	add	sp, #20
 801011c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801011e:	bf00      	nop
 8010120:	20000868 	.word	0x20000868

08010124 <trunc>:
 8010124:	ec51 0b10 	vmov	r0, r1, d0
 8010128:	f3c1 520a 	ubfx	r2, r1, #20, #11
 801012c:	f2a2 33ff 	subw	r3, r2, #1023	; 0x3ff
 8010130:	2b13      	cmp	r3, #19
 8010132:	b5d0      	push	{r4, r6, r7, lr}
 8010134:	460c      	mov	r4, r1
 8010136:	dc10      	bgt.n	801015a <trunc+0x36>
 8010138:	2b00      	cmp	r3, #0
 801013a:	bfa5      	ittet	ge
 801013c:	4a11      	ldrge	r2, [pc, #68]	; (8010184 <trunc+0x60>)
 801013e:	fa42 f303 	asrge.w	r3, r2, r3
 8010142:	2100      	movlt	r1, #0
 8010144:	2100      	movge	r1, #0
 8010146:	bfb9      	ittee	lt
 8010148:	2000      	movlt	r0, #0
 801014a:	f004 4100 	andlt.w	r1, r4, #2147483648	; 0x80000000
 801014e:	2000      	movge	r0, #0
 8010150:	ea24 0103 	bicge.w	r1, r4, r3
 8010154:	ec41 0b10 	vmov	d0, r0, r1
 8010158:	bdd0      	pop	{r4, r6, r7, pc}
 801015a:	2b33      	cmp	r3, #51	; 0x33
 801015c:	dd08      	ble.n	8010170 <trunc+0x4c>
 801015e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8010162:	d1f7      	bne.n	8010154 <trunc+0x30>
 8010164:	ee10 2a10 	vmov	r2, s0
 8010168:	460b      	mov	r3, r1
 801016a:	f7f0 f897 	bl	800029c <__adddf3>
 801016e:	e7f1      	b.n	8010154 <trunc+0x30>
 8010170:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
 8010174:	f04f 33ff 	mov.w	r3, #4294967295
 8010178:	fa23 f202 	lsr.w	r2, r3, r2
 801017c:	ea20 0602 	bic.w	r6, r0, r2
 8010180:	4630      	mov	r0, r6
 8010182:	e7e7      	b.n	8010154 <trunc+0x30>
 8010184:	000fffff 	.word	0x000fffff

08010188 <log>:
 8010188:	b538      	push	{r3, r4, r5, lr}
 801018a:	ed2d 8b02 	vpush	{d8}
 801018e:	ec55 4b10 	vmov	r4, r5, d0
 8010192:	f000 f839 	bl	8010208 <__ieee754_log>
 8010196:	4622      	mov	r2, r4
 8010198:	462b      	mov	r3, r5
 801019a:	4620      	mov	r0, r4
 801019c:	4629      	mov	r1, r5
 801019e:	eeb0 8a40 	vmov.f32	s16, s0
 80101a2:	eef0 8a60 	vmov.f32	s17, s1
 80101a6:	f7f0 fcc9 	bl	8000b3c <__aeabi_dcmpun>
 80101aa:	b998      	cbnz	r0, 80101d4 <log+0x4c>
 80101ac:	2200      	movs	r2, #0
 80101ae:	2300      	movs	r3, #0
 80101b0:	4620      	mov	r0, r4
 80101b2:	4629      	mov	r1, r5
 80101b4:	f7f0 fcb8 	bl	8000b28 <__aeabi_dcmpgt>
 80101b8:	b960      	cbnz	r0, 80101d4 <log+0x4c>
 80101ba:	2200      	movs	r2, #0
 80101bc:	2300      	movs	r3, #0
 80101be:	4620      	mov	r0, r4
 80101c0:	4629      	mov	r1, r5
 80101c2:	f7f0 fc89 	bl	8000ad8 <__aeabi_dcmpeq>
 80101c6:	b160      	cbz	r0, 80101e2 <log+0x5a>
 80101c8:	f7f9 fe5a 	bl	8009e80 <__errno>
 80101cc:	ed9f 8b0a 	vldr	d8, [pc, #40]	; 80101f8 <log+0x70>
 80101d0:	2322      	movs	r3, #34	; 0x22
 80101d2:	6003      	str	r3, [r0, #0]
 80101d4:	eeb0 0a48 	vmov.f32	s0, s16
 80101d8:	eef0 0a68 	vmov.f32	s1, s17
 80101dc:	ecbd 8b02 	vpop	{d8}
 80101e0:	bd38      	pop	{r3, r4, r5, pc}
 80101e2:	f7f9 fe4d 	bl	8009e80 <__errno>
 80101e6:	ecbd 8b02 	vpop	{d8}
 80101ea:	2321      	movs	r3, #33	; 0x21
 80101ec:	6003      	str	r3, [r0, #0]
 80101ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80101f2:	4803      	ldr	r0, [pc, #12]	; (8010200 <log+0x78>)
 80101f4:	f7fe bf44 	b.w	800f080 <nan>
 80101f8:	00000000 	.word	0x00000000
 80101fc:	fff00000 	.word	0xfff00000
 8010200:	08010fa7 	.word	0x08010fa7
 8010204:	00000000 	.word	0x00000000

08010208 <__ieee754_log>:
 8010208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801020c:	ec51 0b10 	vmov	r0, r1, d0
 8010210:	ed2d 8b04 	vpush	{d8-d9}
 8010214:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8010218:	b083      	sub	sp, #12
 801021a:	460d      	mov	r5, r1
 801021c:	da29      	bge.n	8010272 <__ieee754_log+0x6a>
 801021e:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8010222:	4303      	orrs	r3, r0
 8010224:	ee10 2a10 	vmov	r2, s0
 8010228:	d10c      	bne.n	8010244 <__ieee754_log+0x3c>
 801022a:	49cf      	ldr	r1, [pc, #828]	; (8010568 <__ieee754_log+0x360>)
 801022c:	2200      	movs	r2, #0
 801022e:	2300      	movs	r3, #0
 8010230:	2000      	movs	r0, #0
 8010232:	f7f0 fb13 	bl	800085c <__aeabi_ddiv>
 8010236:	ec41 0b10 	vmov	d0, r0, r1
 801023a:	b003      	add	sp, #12
 801023c:	ecbd 8b04 	vpop	{d8-d9}
 8010240:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010244:	2900      	cmp	r1, #0
 8010246:	da05      	bge.n	8010254 <__ieee754_log+0x4c>
 8010248:	460b      	mov	r3, r1
 801024a:	f7f0 f825 	bl	8000298 <__aeabi_dsub>
 801024e:	2200      	movs	r2, #0
 8010250:	2300      	movs	r3, #0
 8010252:	e7ee      	b.n	8010232 <__ieee754_log+0x2a>
 8010254:	4bc5      	ldr	r3, [pc, #788]	; (801056c <__ieee754_log+0x364>)
 8010256:	2200      	movs	r2, #0
 8010258:	f7f0 f9d6 	bl	8000608 <__aeabi_dmul>
 801025c:	f06f 0335 	mvn.w	r3, #53	; 0x35
 8010260:	460d      	mov	r5, r1
 8010262:	4ac3      	ldr	r2, [pc, #780]	; (8010570 <__ieee754_log+0x368>)
 8010264:	4295      	cmp	r5, r2
 8010266:	dd06      	ble.n	8010276 <__ieee754_log+0x6e>
 8010268:	4602      	mov	r2, r0
 801026a:	460b      	mov	r3, r1
 801026c:	f7f0 f816 	bl	800029c <__adddf3>
 8010270:	e7e1      	b.n	8010236 <__ieee754_log+0x2e>
 8010272:	2300      	movs	r3, #0
 8010274:	e7f5      	b.n	8010262 <__ieee754_log+0x5a>
 8010276:	152c      	asrs	r4, r5, #20
 8010278:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 801027c:	f3c5 0513 	ubfx	r5, r5, #0, #20
 8010280:	441c      	add	r4, r3
 8010282:	f505 2315 	add.w	r3, r5, #610304	; 0x95000
 8010286:	f603 7364 	addw	r3, r3, #3940	; 0xf64
 801028a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 801028e:	f083 527f 	eor.w	r2, r3, #1069547520	; 0x3fc00000
 8010292:	f482 1240 	eor.w	r2, r2, #3145728	; 0x300000
 8010296:	ea42 0105 	orr.w	r1, r2, r5
 801029a:	eb04 5413 	add.w	r4, r4, r3, lsr #20
 801029e:	2200      	movs	r2, #0
 80102a0:	4bb4      	ldr	r3, [pc, #720]	; (8010574 <__ieee754_log+0x36c>)
 80102a2:	f7ef fff9 	bl	8000298 <__aeabi_dsub>
 80102a6:	1cab      	adds	r3, r5, #2
 80102a8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80102ac:	2b02      	cmp	r3, #2
 80102ae:	4682      	mov	sl, r0
 80102b0:	468b      	mov	fp, r1
 80102b2:	f04f 0200 	mov.w	r2, #0
 80102b6:	dc53      	bgt.n	8010360 <__ieee754_log+0x158>
 80102b8:	2300      	movs	r3, #0
 80102ba:	f7f0 fc0d 	bl	8000ad8 <__aeabi_dcmpeq>
 80102be:	b1d0      	cbz	r0, 80102f6 <__ieee754_log+0xee>
 80102c0:	2c00      	cmp	r4, #0
 80102c2:	f000 8122 	beq.w	801050a <__ieee754_log+0x302>
 80102c6:	4620      	mov	r0, r4
 80102c8:	f7f0 f934 	bl	8000534 <__aeabi_i2d>
 80102cc:	a390      	add	r3, pc, #576	; (adr r3, 8010510 <__ieee754_log+0x308>)
 80102ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80102d2:	4606      	mov	r6, r0
 80102d4:	460f      	mov	r7, r1
 80102d6:	f7f0 f997 	bl	8000608 <__aeabi_dmul>
 80102da:	a38f      	add	r3, pc, #572	; (adr r3, 8010518 <__ieee754_log+0x310>)
 80102dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80102e0:	4604      	mov	r4, r0
 80102e2:	460d      	mov	r5, r1
 80102e4:	4630      	mov	r0, r6
 80102e6:	4639      	mov	r1, r7
 80102e8:	f7f0 f98e 	bl	8000608 <__aeabi_dmul>
 80102ec:	4602      	mov	r2, r0
 80102ee:	460b      	mov	r3, r1
 80102f0:	4620      	mov	r0, r4
 80102f2:	4629      	mov	r1, r5
 80102f4:	e7ba      	b.n	801026c <__ieee754_log+0x64>
 80102f6:	a38a      	add	r3, pc, #552	; (adr r3, 8010520 <__ieee754_log+0x318>)
 80102f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80102fc:	4650      	mov	r0, sl
 80102fe:	4659      	mov	r1, fp
 8010300:	f7f0 f982 	bl	8000608 <__aeabi_dmul>
 8010304:	4602      	mov	r2, r0
 8010306:	460b      	mov	r3, r1
 8010308:	2000      	movs	r0, #0
 801030a:	499b      	ldr	r1, [pc, #620]	; (8010578 <__ieee754_log+0x370>)
 801030c:	f7ef ffc4 	bl	8000298 <__aeabi_dsub>
 8010310:	4652      	mov	r2, sl
 8010312:	4606      	mov	r6, r0
 8010314:	460f      	mov	r7, r1
 8010316:	465b      	mov	r3, fp
 8010318:	4650      	mov	r0, sl
 801031a:	4659      	mov	r1, fp
 801031c:	f7f0 f974 	bl	8000608 <__aeabi_dmul>
 8010320:	4602      	mov	r2, r0
 8010322:	460b      	mov	r3, r1
 8010324:	4630      	mov	r0, r6
 8010326:	4639      	mov	r1, r7
 8010328:	f7f0 f96e 	bl	8000608 <__aeabi_dmul>
 801032c:	4606      	mov	r6, r0
 801032e:	460f      	mov	r7, r1
 8010330:	b914      	cbnz	r4, 8010338 <__ieee754_log+0x130>
 8010332:	4632      	mov	r2, r6
 8010334:	463b      	mov	r3, r7
 8010336:	e0a2      	b.n	801047e <__ieee754_log+0x276>
 8010338:	4620      	mov	r0, r4
 801033a:	f7f0 f8fb 	bl	8000534 <__aeabi_i2d>
 801033e:	a374      	add	r3, pc, #464	; (adr r3, 8010510 <__ieee754_log+0x308>)
 8010340:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010344:	4680      	mov	r8, r0
 8010346:	4689      	mov	r9, r1
 8010348:	f7f0 f95e 	bl	8000608 <__aeabi_dmul>
 801034c:	a372      	add	r3, pc, #456	; (adr r3, 8010518 <__ieee754_log+0x310>)
 801034e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010352:	4604      	mov	r4, r0
 8010354:	460d      	mov	r5, r1
 8010356:	4640      	mov	r0, r8
 8010358:	4649      	mov	r1, r9
 801035a:	f7f0 f955 	bl	8000608 <__aeabi_dmul>
 801035e:	e0a7      	b.n	80104b0 <__ieee754_log+0x2a8>
 8010360:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8010364:	f7ef ff9a 	bl	800029c <__adddf3>
 8010368:	4602      	mov	r2, r0
 801036a:	460b      	mov	r3, r1
 801036c:	4650      	mov	r0, sl
 801036e:	4659      	mov	r1, fp
 8010370:	f7f0 fa74 	bl	800085c <__aeabi_ddiv>
 8010374:	ec41 0b18 	vmov	d8, r0, r1
 8010378:	4620      	mov	r0, r4
 801037a:	f7f0 f8db 	bl	8000534 <__aeabi_i2d>
 801037e:	ec53 2b18 	vmov	r2, r3, d8
 8010382:	ec41 0b19 	vmov	d9, r0, r1
 8010386:	ec51 0b18 	vmov	r0, r1, d8
 801038a:	f7f0 f93d 	bl	8000608 <__aeabi_dmul>
 801038e:	f5a5 23c2 	sub.w	r3, r5, #397312	; 0x61000
 8010392:	f2a3 437a 	subw	r3, r3, #1146	; 0x47a
 8010396:	9301      	str	r3, [sp, #4]
 8010398:	4602      	mov	r2, r0
 801039a:	460b      	mov	r3, r1
 801039c:	4680      	mov	r8, r0
 801039e:	4689      	mov	r9, r1
 80103a0:	f7f0 f932 	bl	8000608 <__aeabi_dmul>
 80103a4:	a360      	add	r3, pc, #384	; (adr r3, 8010528 <__ieee754_log+0x320>)
 80103a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103aa:	4606      	mov	r6, r0
 80103ac:	460f      	mov	r7, r1
 80103ae:	f7f0 f92b 	bl	8000608 <__aeabi_dmul>
 80103b2:	a35f      	add	r3, pc, #380	; (adr r3, 8010530 <__ieee754_log+0x328>)
 80103b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103b8:	f7ef ff70 	bl	800029c <__adddf3>
 80103bc:	4632      	mov	r2, r6
 80103be:	463b      	mov	r3, r7
 80103c0:	f7f0 f922 	bl	8000608 <__aeabi_dmul>
 80103c4:	a35c      	add	r3, pc, #368	; (adr r3, 8010538 <__ieee754_log+0x330>)
 80103c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103ca:	f7ef ff67 	bl	800029c <__adddf3>
 80103ce:	4632      	mov	r2, r6
 80103d0:	463b      	mov	r3, r7
 80103d2:	f7f0 f919 	bl	8000608 <__aeabi_dmul>
 80103d6:	a35a      	add	r3, pc, #360	; (adr r3, 8010540 <__ieee754_log+0x338>)
 80103d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103dc:	f7ef ff5e 	bl	800029c <__adddf3>
 80103e0:	4642      	mov	r2, r8
 80103e2:	464b      	mov	r3, r9
 80103e4:	f7f0 f910 	bl	8000608 <__aeabi_dmul>
 80103e8:	a357      	add	r3, pc, #348	; (adr r3, 8010548 <__ieee754_log+0x340>)
 80103ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103ee:	4680      	mov	r8, r0
 80103f0:	4689      	mov	r9, r1
 80103f2:	4630      	mov	r0, r6
 80103f4:	4639      	mov	r1, r7
 80103f6:	f7f0 f907 	bl	8000608 <__aeabi_dmul>
 80103fa:	a355      	add	r3, pc, #340	; (adr r3, 8010550 <__ieee754_log+0x348>)
 80103fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010400:	f7ef ff4c 	bl	800029c <__adddf3>
 8010404:	4632      	mov	r2, r6
 8010406:	463b      	mov	r3, r7
 8010408:	f7f0 f8fe 	bl	8000608 <__aeabi_dmul>
 801040c:	a352      	add	r3, pc, #328	; (adr r3, 8010558 <__ieee754_log+0x350>)
 801040e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010412:	f7ef ff43 	bl	800029c <__adddf3>
 8010416:	4632      	mov	r2, r6
 8010418:	463b      	mov	r3, r7
 801041a:	f7f0 f8f5 	bl	8000608 <__aeabi_dmul>
 801041e:	460b      	mov	r3, r1
 8010420:	4602      	mov	r2, r0
 8010422:	4649      	mov	r1, r9
 8010424:	4640      	mov	r0, r8
 8010426:	f7ef ff39 	bl	800029c <__adddf3>
 801042a:	f5c5 25d7 	rsb	r5, r5, #440320	; 0x6b800
 801042e:	9b01      	ldr	r3, [sp, #4]
 8010430:	3551      	adds	r5, #81	; 0x51
 8010432:	431d      	orrs	r5, r3
 8010434:	2d00      	cmp	r5, #0
 8010436:	4680      	mov	r8, r0
 8010438:	4689      	mov	r9, r1
 801043a:	dd48      	ble.n	80104ce <__ieee754_log+0x2c6>
 801043c:	4b4e      	ldr	r3, [pc, #312]	; (8010578 <__ieee754_log+0x370>)
 801043e:	2200      	movs	r2, #0
 8010440:	4650      	mov	r0, sl
 8010442:	4659      	mov	r1, fp
 8010444:	f7f0 f8e0 	bl	8000608 <__aeabi_dmul>
 8010448:	4652      	mov	r2, sl
 801044a:	465b      	mov	r3, fp
 801044c:	f7f0 f8dc 	bl	8000608 <__aeabi_dmul>
 8010450:	4602      	mov	r2, r0
 8010452:	460b      	mov	r3, r1
 8010454:	4606      	mov	r6, r0
 8010456:	460f      	mov	r7, r1
 8010458:	4640      	mov	r0, r8
 801045a:	4649      	mov	r1, r9
 801045c:	f7ef ff1e 	bl	800029c <__adddf3>
 8010460:	ec53 2b18 	vmov	r2, r3, d8
 8010464:	f7f0 f8d0 	bl	8000608 <__aeabi_dmul>
 8010468:	4680      	mov	r8, r0
 801046a:	4689      	mov	r9, r1
 801046c:	b964      	cbnz	r4, 8010488 <__ieee754_log+0x280>
 801046e:	4602      	mov	r2, r0
 8010470:	460b      	mov	r3, r1
 8010472:	4630      	mov	r0, r6
 8010474:	4639      	mov	r1, r7
 8010476:	f7ef ff0f 	bl	8000298 <__aeabi_dsub>
 801047a:	4602      	mov	r2, r0
 801047c:	460b      	mov	r3, r1
 801047e:	4650      	mov	r0, sl
 8010480:	4659      	mov	r1, fp
 8010482:	f7ef ff09 	bl	8000298 <__aeabi_dsub>
 8010486:	e6d6      	b.n	8010236 <__ieee754_log+0x2e>
 8010488:	a321      	add	r3, pc, #132	; (adr r3, 8010510 <__ieee754_log+0x308>)
 801048a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801048e:	ec51 0b19 	vmov	r0, r1, d9
 8010492:	f7f0 f8b9 	bl	8000608 <__aeabi_dmul>
 8010496:	a320      	add	r3, pc, #128	; (adr r3, 8010518 <__ieee754_log+0x310>)
 8010498:	e9d3 2300 	ldrd	r2, r3, [r3]
 801049c:	4604      	mov	r4, r0
 801049e:	460d      	mov	r5, r1
 80104a0:	ec51 0b19 	vmov	r0, r1, d9
 80104a4:	f7f0 f8b0 	bl	8000608 <__aeabi_dmul>
 80104a8:	4642      	mov	r2, r8
 80104aa:	464b      	mov	r3, r9
 80104ac:	f7ef fef6 	bl	800029c <__adddf3>
 80104b0:	4602      	mov	r2, r0
 80104b2:	460b      	mov	r3, r1
 80104b4:	4630      	mov	r0, r6
 80104b6:	4639      	mov	r1, r7
 80104b8:	f7ef feee 	bl	8000298 <__aeabi_dsub>
 80104bc:	4652      	mov	r2, sl
 80104be:	465b      	mov	r3, fp
 80104c0:	f7ef feea 	bl	8000298 <__aeabi_dsub>
 80104c4:	4602      	mov	r2, r0
 80104c6:	460b      	mov	r3, r1
 80104c8:	4620      	mov	r0, r4
 80104ca:	4629      	mov	r1, r5
 80104cc:	e7d9      	b.n	8010482 <__ieee754_log+0x27a>
 80104ce:	4602      	mov	r2, r0
 80104d0:	460b      	mov	r3, r1
 80104d2:	4650      	mov	r0, sl
 80104d4:	4659      	mov	r1, fp
 80104d6:	f7ef fedf 	bl	8000298 <__aeabi_dsub>
 80104da:	ec53 2b18 	vmov	r2, r3, d8
 80104de:	f7f0 f893 	bl	8000608 <__aeabi_dmul>
 80104e2:	4606      	mov	r6, r0
 80104e4:	460f      	mov	r7, r1
 80104e6:	2c00      	cmp	r4, #0
 80104e8:	f43f af23 	beq.w	8010332 <__ieee754_log+0x12a>
 80104ec:	a308      	add	r3, pc, #32	; (adr r3, 8010510 <__ieee754_log+0x308>)
 80104ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80104f2:	ec51 0b19 	vmov	r0, r1, d9
 80104f6:	f7f0 f887 	bl	8000608 <__aeabi_dmul>
 80104fa:	a307      	add	r3, pc, #28	; (adr r3, 8010518 <__ieee754_log+0x310>)
 80104fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010500:	4604      	mov	r4, r0
 8010502:	460d      	mov	r5, r1
 8010504:	ec51 0b19 	vmov	r0, r1, d9
 8010508:	e727      	b.n	801035a <__ieee754_log+0x152>
 801050a:	ed9f 0b15 	vldr	d0, [pc, #84]	; 8010560 <__ieee754_log+0x358>
 801050e:	e694      	b.n	801023a <__ieee754_log+0x32>
 8010510:	fee00000 	.word	0xfee00000
 8010514:	3fe62e42 	.word	0x3fe62e42
 8010518:	35793c76 	.word	0x35793c76
 801051c:	3dea39ef 	.word	0x3dea39ef
 8010520:	55555555 	.word	0x55555555
 8010524:	3fd55555 	.word	0x3fd55555
 8010528:	df3e5244 	.word	0xdf3e5244
 801052c:	3fc2f112 	.word	0x3fc2f112
 8010530:	96cb03de 	.word	0x96cb03de
 8010534:	3fc74664 	.word	0x3fc74664
 8010538:	94229359 	.word	0x94229359
 801053c:	3fd24924 	.word	0x3fd24924
 8010540:	55555593 	.word	0x55555593
 8010544:	3fe55555 	.word	0x3fe55555
 8010548:	d078c69f 	.word	0xd078c69f
 801054c:	3fc39a09 	.word	0x3fc39a09
 8010550:	1d8e78af 	.word	0x1d8e78af
 8010554:	3fcc71c5 	.word	0x3fcc71c5
 8010558:	9997fa04 	.word	0x9997fa04
 801055c:	3fd99999 	.word	0x3fd99999
	...
 8010568:	c3500000 	.word	0xc3500000
 801056c:	43500000 	.word	0x43500000
 8010570:	7fefffff 	.word	0x7fefffff
 8010574:	3ff00000 	.word	0x3ff00000
 8010578:	3fe00000 	.word	0x3fe00000

0801057c <_init>:
 801057c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801057e:	bf00      	nop
 8010580:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8010582:	bc08      	pop	{r3}
 8010584:	469e      	mov	lr, r3
 8010586:	4770      	bx	lr

08010588 <_fini>:
 8010588:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801058a:	bf00      	nop
 801058c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801058e:	bc08      	pop	{r3}
 8010590:	469e      	mov	lr, r3
 8010592:	4770      	bx	lr
