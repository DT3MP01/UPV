#include <stdint.h>
#include "task_COMM.h"
#include "FreeRTOS.h"
#include <stdio.h>
#include "cmsis_os.h"
#include <stdlib.h>
#include "semphr.h"
#include "tareas.h"
#include <stdio.h>
#include "cmsis_os.h"
#include <stdlib.h>

#include "semphr.h"
#include <string.h>

#include <task.h>
#include "task_CONSOLE.h"
#include "task_GETREQUEST.h"

#include "cJSON.h"




void Task_GETREQUEST_init(void){

	BaseType_t res_task;

	res_task=xTaskCreate( Task_GETREQUEST,"GETREQUEST",2048,NULL,	NORMAL_PRIORITY,NULL);
	if( res_task != pdPASS ){
		bprintf("PANIC: Error al crear Tarea GETREQUEST\r\n");
		fflush(NULL);
		while(1);
	}

}


void Task_GETREQUEST( void *pvParameters ){

	int signal;
	CJSON_PUBLIC(cJSON *) jsons1;

 	cJSON *name = NULL;


	while (1) {

		signal=1;
		do {
			if (xSemaphoreTake(COMM_xSem, 20000/portTICK_RATE_MS  ) != pdTRUE ){// si en 20 segundos no he continuado entrado en orion mmm mal rollito harakiri
				bprintf("\r\n\n\nHARAKIRI!!\n\n\n");
		   		HAL_NVIC_SystemReset();
			}

			// aquí tengo la exclusión mutua asegurada.
			if (COMM_request.command==0){ //nada quiere nada
				COMM_request.command=1;
				COMM_request.result=0;
				signal=0;
			}
		    xSemaphoreGive(COMM_xSem); // i’m going out critical section
		}while(signal);

		// now structure access is secure, nobody can rewrite it if flag command is 1
		COMM_request.dst_port=1026;
		COMM_request.dst_address=(uint8_t *)"pperez-seu-or.disca.upv.es";
		char buff_sprintf_body[1024]="";
		char buff_sprintf_header[1024]="";
		sprintf(buff_sprintf_body,POST_BODY);
        sprintf(buff_sprintf_header,"%s%d\r\n\r\n%s ",POST_HEADER,strlen(buff_sprintf_body),buff_sprintf_body);
        COMM_request.HTTP_request=(	uint8_t *) buff_sprintf_header;

  		// Here you must parse json response in COMM_request.response item
		do
		{
			if (xSemaphoreTake(COMM_xSem, 20000/portTICK_RATE_MS  ) != pdTRUE ){// si en 20 segundos no he continuado entrado en orion mmm mal rollito harakiri
			bprintf("\r\n\n\nHARAKIRI!!\n\n\n");
			HAL_NVIC_SystemReset();
			}

			while (COMM_request.result==0){
				xSemaphoreGive(COMM_xSem); // i’m going out critical section
				vTaskDelay(100/portTICK_RATE_MS );
				if (xSemaphoreTake(COMM_xSem, 20000/portTICK_RATE_MS  ) != pdTRUE ){// si en 20 segundos no he continuado entrado en orion mmm mal rollito harakiri
					bprintf("\r\n\n\nHARAKIRI!!\n\n\n");
					HAL_NVIC_SystemReset();
				}
			}
		}
		while(COMM_request.result==0);
		xSemaphoreGive(COMM_xSem); // i’m going out critical section

////

	//bprintf("%s\r\n",COMM_request.HTTP_response);

	jsons1 = cJSON_Parse((const char *)COMM_request.HTTP_response);



	if (jsons1) {
				// name = cJSON_GetObjectItem(jsons1, "utc_datetime");
				// bprintf("%s \r\n",name->valuestring);
				// cJSON_Delete(jsons1);
		//bprintf("%s",COMM_request.HTTP_response);

	}
	else
		bprintf("Response error \r\n");

////

		COMM_request.command=0;
		COMM_request.result=0;

		xSemaphoreGive(COMM_xSem); // i’m going out critical section

  		vTaskDelay(10/portTICK_RATE_MS );

	}
}
