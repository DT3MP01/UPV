

Ejecucion de inicio:
  cargando entorno inicial

--> A=[0 -2 3 9;-4 6 0 -4;2 -5 5 17]
 A  = 

   0.  -2.   3.   9. 
  -4.   6.   0.  -4. 
   2.  -5.   5.   17.


--> A ([i , j ],:) = A ([j , i ],:)

Undefined variable: j

--> A ([1 , 2],:) = A ([2 , 1 ],:)
 A  = 

  -4.   6.   0.  -4. 
   0.  -2.   3.   9. 
   2.  -5.   5.   17.


--> A (i ,:) = (1/2) * A (i ,:)

Undefined variable: i

--> A (i ,:) = (1/2) * A (2 ,:)

Undefined variable: i

--> A (2 ,:) = (1/2) * A (2 ,:)
 A  = 

  -4.   6.   0.   -4. 
   0.  -1.   1.5   4.5
   2.  -5.   5.    17.


--> A (2 ,:) = A (2 ,:) + 1 * A (1 ,:)
 A  = 

  -4.   6.   0.   -4. 
  -4.   5.   1.5   0.5
   2.  -5.   5.    17.


--> A = [0 -2 3 9;-4 6 0 -4;2 -5 5 17];

--> rref(A)
 ans  =

   1.   0.   0.   1.
   0.   1.   0.   0.
   0.   0.   1.   3.


--> //Obtener la matriz escalonada reducida: rref(A)

--> A= A(:, 1:3)
 A  = 

   0.  -2.   3.
  -4.   6.   0.
   2.  -5.   5.


--> b = [1; 0; 3]
 b  = 

   1.
   0.
   3.


--> b = [9; -4; 17]
 b  = 

   9.
  -4.
   17.


--> x = A\b
 x  = 

   1.
   0.
   3.


--> //Rango de una matriz

--> rank(A)
 ans  =

   3.


--> //Resolver un sistema

--> x = A\b
 x  = 

   1.
   0.
   3.


--> C= [1 1 1; 1 1 1; 2 2 2]; D = [1; 2; 3];

--> rank([A b])
 ans  =

   3.


--> rank(A)
 ans  =

   3.


--> rank([C D])
 ans  =

   2.


--> rank(C)
 ans  =

   1.


--> C\D
 ans  =

   1.5
   0.
   0.


--> //Es la mejor solución del sistema Incompatible

--> A = [1 1 1; 1 1 1; 2 2 2]; b = [1; 1; 2];

--> rank(A)
 ans  =

   1.


--> rank(B)

Undefined variable: B

--> rank(b)
 ans  =

   1.


--> A\b
 ans  =

   1.
   0.
   0.


--> kernel(A)
 ans  =

  -0.5773503  -0.5773503
  -0.2113249   0.7886751
   0.7886751  -0.2113249


--> // R(A) = R*(A) = nº de incógnitas --> SCD

--> // R(A) = R*(A) < nº de incógnitas --> SCI

--> // R(A) != R*(A) --> SI

--> A=[1 0 2 3; 7 1 1 1 ; 8 1 3 4; 9 1 5 7]; b=[6; 10; 16; 22];

--> x=A\b
 x  = 

   1.2
   0.
   0.
   1.6


--> clean(A*x - b)
 ans  =

   0.
   0.
   0.
   0.


--> kernel(A)
 ans  =

  -0.1490641  -0.0418627
   0.8434185   0.5144634
   0.4510273  -0.7061368
  -0.2509968   0.4847121


--> M=[1 1 0 0 0 20;0 0 1 -1 0 -20;0 1 1 0 0 20;
  > --> 1 0 0 0 -1 -10;0 0 0 -1 1 -10]);
M=[1 1 0 0 0 20;0 0 1 -1 0 -20;0 1 1 0 0 20;
  ^^
Error: syntax error, unexpected >

--> M=[1 1 0 0 0 20;0 0 1 -1 0 -20;0 1 1 0 0 20;
  >   1 0 0 0 -1 -10;0 0 0 -1 1 -10];

--> M=[1 1 0 0 0 20;0 0 1 -1 0 -20;0 1 1 0 0 20;
  >   >   1 0 0 0 -1 -10;0 0 0 -1 1 -10];
  >   1 0 0 0 -1 -10;0 0 0 -1 1 -10];
  ^^
Error: syntax error, unexpected >

--> M=[1 1 0 0 0 20;0 0 1 -1 0 -20;0 1 1 0 0 20;
  >   >   1 0 0 0 -1 -10;0 0 0 -1 1 -10];
  >   1 0 0 0 -1 -10;0 0 0 -1 1 -10];
  ^^
Error: syntax error, unexpected >

--> M = [1 1 0 0 0 20; 0 0 -1 1 0 -20; 0 1 1 0 0 20; 1 0 0 0 -1 - 10; 0 0 0 -1 1 -10]

inconsistent row/column dimensions

--> M = [1 1 0 0 0 20; 0 0 1 -1 0 -20; 0 1 1 0 0 20; 1 0 0 0 -1 - 10; 0 0 0 -1 1 -10; 0 0 0 0 0 0]

inconsistent row/column dimensions

--> M = [1 1 0 0 0 20; 0 0 1 -1 0 -20; 0 1 1 0 0 20; 1 0 0 0 -1 - 10; 0 0 0 -1 1 -10]

inconsistent row/column dimensions

--> M = [1 1 0 0 0 20; 0 0 1 -1 0 -20; 0 1 1 0 0 20; 1 0 0 0 -1 -10; 0 0 0 -1 1 -10]
 M  = 

   1.   1.   0.   0.   0.   20.
   0.   0.   1.  -1.   0.  -20.
   0.   1.   1.   0.   0.   20.
   1.   0.   0.   0.  -1.  -10.
   0.   0.   0.  -1.   1.  -10.


--> rref(M)
 ans  =

   1.   0.   0.   0.  -1.  -10.
   0.   1.   0.   0.   1.   30.
   0.   0.   1.   0.  -1.  -10.
   0.   0.   0.   1.  -1.   10.
   0.   0.   0.   0.   0.   0. 


--> //Para el resultado directo --> (kernel, sol. particular) = linsolve(A, -b)

--> Z = [3 4 0 -7 5 3; 1 -3 -7 8 9 -12; 2 -4 7 -11 0 -1; 1 -1 2 -3 5 -3; 2 2 -4 2 1 1; 1 2 1 -4 -7 3]
 Z  = 

   3.   4.   0.  -7.    5.   3. 
   1.  -3.  -7.   8.    9.  -12.
   2.  -4.   7.  -11.   0.  -1. 
   1.  -1.   2.  -3.    5.  -3. 
   2.   2.  -4.   2.    1.   1. 
   1.   2.   1.  -4.   -7.   3. 


--> b = [-9; 1; 2; -2; -5: 2]

inconsistent row/column dimensions

--> b = [-9; 1; 2; -2; -5; 2]
 b  = 

  -9.
   1.
   2.
  -2.
  -5.
   2.


--> x = A\b

Undefined operation for the given operands.
check or define function %s_l_s for overloading.

--> x = Z\b
 x  = 

  -1.7325784
  -0.5007919
  -0.5246278
  -0.5818023
  -0.7336079
  -0.7345581


--> Z = [3 4 0 -7 5 3 -9; 1 -3 -7 8 9 -12 1; 2 -4 7 -11 0 -1 2; 1 -1 2 -3 5 -3 -2; 2 2 -4 2 1 1 -5; 1 2 1 -4 -7 3 2]
 Z  = 

   3.   4.   0.  -7.    5.   3.   -9.
   1.  -3.  -7.   8.    9.  -12.   1.
   2.  -4.   7.  -11.   0.  -1.    2.
   1.  -1.   2.  -3.    5.  -3.   -2.
   2.   2.  -4.   2.    1.   1.   -5.
   1.   2.   1.  -4.   -7.   3.    2.


--> rref(A)
 ans  =

   1.   0.   2.    3. 
   0.   1.  -13.  -20.
   0.   0.   0.    0. 
   0.   0.   0.    0. 


--> rank(Z)
 ans  =

   6.


--> rank(A)
 ans  =

   2.


--> Rank(1:3, A)

Undefined variable: Rank

--> rank(1:3, A)
 ans  =

   10.


--> rref(Z)
 ans  =

   1.   0.   0.   0.   0.   0.  -1.7325784
   0.   1.   0.   0.   0.   0.  -0.5007919
   0.   0.   1.   0.   0.   0.  -0.5246278
   0.   0.   0.   1.   0.   0.  -0.5818023
   0.   0.   0.   0.   1.   0.  -0.7336079
   0.   0.   0.   0.   0.   1.  -0.7345581


--> F = [1 -1 0; 1 2 0; 1 -1 1]
 F  = 

   1.  -1.   0.
   1.   2.   0.
   1.  -1.   1.


--> f = [2, 8, 3]
 f  = 

   2.   8.   3.


--> x = F\f

Undefined operation for the given operands.
check or define function %s_l_s for overloading.

--> f = [2; 8; 3]
 f  = 

   2.
   8.
   3.


--> x = F\f
 x  = 

   4.
   2.
   1.


--> rank(F)
 ans  =

   3.


--> H = [1 1 -1 2; 2 3 0 4; 0 1 1 3; -1 -2 -1 -2]
 H  = 

   1.   1.  -1.   2.
   2.   3.   0.   4.
   0.   1.   1.   3.
  -1.  -2.  -1.  -2.


--> h = [1; 2; -4; -1]
 h  = 

   1.
   2.
  -4.
  -1.


--> x = H\h
 x  = 

   0.
   3.1428571
  -1.5714286
  -1.8571429


--> H = [1 1 -1 2 1; 2 3 0 4 2; 0 1 1 3 -4; -1 -2 -1 -2 -1]
 H  = 

   1.   1.  -1.   2.   1.
   2.   3.   0.   4.   2.
   0.   1.   1.   3.  -4.
  -1.  -2.  -1.  -2.  -1.


--> rref(H)
 ans  =

   1.   0.   0.  -7.   13.
   0.   1.   0.   6.  -8. 
   0.   0.   1.  -3.   4. 
   0.   0.   0.   0.   0. 


--> rank(H)
 ans  =

   3.


--> h = [1 1 -1 2; 2 3 0 4; 0 1 1 3; -1 -2 -1 -2]
 h  = 

   1.   1.  -1.   2.
   2.   3.   0.   4.
   0.   1.   1.   3.
  -1.  -2.  -1.  -2.


--> rank(h)
 ans  =

   3.


--> Y = [1 0 -2 2; -1 -2 2 -2; 2 2 -4 3]
 Y  = 

   1.   0.  -2.   2.
  -1.  -2.   2.  -2.
   2.   2.  -4.   3.


--> rank(Y)
 ans  =

   3.


--> Y = [1 0 -2; -1 -2 2; 2 2 -4]
 Y  = 

   1.   0.  -2.
  -1.  -2.   2.
   2.   2.  -4.


--> rank(Y)
 ans  =

   2.


--> h = [1 1 -1 2; 2 3 0 4; 0 1 1 3; -1 -2 -1 -2]
 h  = 

   1.   1.  -1.   2.
   2.   3.   0.   4.
   0.   1.   1.   3.
  -1.  -2.  -1.  -2.


--> kernel(h)
 ans  =

  -0.7181848
   0.615587
  -0.3077935
  -0.1025978


--> u = [33/2; -11/5; 5/2; 1/2]
 u  = 

   16.5
  -2.2
   2.5
   0.5


--> h * u
 ans  =

   12.8
   28.4
   1.8
  -15.6


--> x = A\u
 x  = 

  -1.24
   0.
   0.
   2.5466667


--> clean(A * x - u)
 ans  =

  -10.1
  -3.9333333
  -2.2333333
   6.1666667


--> x = H\u
 x  = 

   0.
   0.
  -8.5
   1.7030303
  -1.4727273


--> clean(A * x - u)

Inconsistent row/column dimensions.

--> clean(H * x - u)
 ans  =

  -6.0666667
   6.0666667
   0.
   6.0666667


--> u = [33/2; -11; -11/2; 1/2]
 u  = 

   16.5
  -11.
  -5.5
   0.5


--> x = H\u
 x  = 

   0.
   0.
  -8.5
  -0.0909091
  -0.8181818


--> clean(A * x - u)

Inconsistent row/column dimensions.

--> clean(H * x - u)
 ans  =

  -9.
   9.
   0.
   9.


--> h
 h  = 

   1.   1.  -1.   2.
   2.   3.   0.   4.
   0.   1.   1.   3.
  -1.  -2.  -1.  -2.


--> h
 h  = 

   1.   1.  -1.   2.
   2.   3.   0.   4.
   0.   1.   1.   3.
  -1.  -2.  -1.  -2.


--> H
 H  = 

   1.   1.  -1.   2.   1.
   2.   3.   0.   4.   2.
   0.   1.   1.   3.  -4.
  -1.  -2.  -1.  -2.  -1.


--> u
 u  = 

   16.5
  -11.
  -5.5
   0.5


--> u = [16.5; -11; 5.5; 0.5]
 u  = 

   16.5
  -11.
   5.5
   0.5


--> x = h\u
 x  = 

   0.
  -8.8571429
  -4.0714286
   6.1428571


--> clean(A * x - u)
 ans  =

  -6.2142857
   4.2142857
  -2.
   13.285714


--> clean(h * x - u)
 ans  =

  -9.
   9.
   0.
   9.


--> I = [5 2 4; 3 5 3; 4 5 6]
 I  = 

   5.   2.   4.
   3.   5.   3.
   4.   5.   6.


--> i = [45; 46; 54]
 i  = 

   45.
   46.
   54.


--> x = I\i
 x  = 

   6.6744186
   4.9302326
   0.4418605


--> clean(I * x - i)
 ans  =

   0.
   0.
   0.