#BlueJ class context
comment0.target=ListPIIntLinked
comment0.text=\n\ ListPIIntLinked\:\ Implementaci\u00F3\ enlla\u00E7ada\ de\ l'estructura\ de\ dades\ \n\ lineal\ Llista\ amb\ punt\ d'inter\u00E8s\ d'enters.\n\ \n\ @author\ PRG\n\ @version\ Curs\ 2017/18\n
comment1.params=
comment1.target=ListPIIntLinked()
comment1.text=\n\ Crea\ una\ llista\ buida.\n
comment10.params=o
comment10.target=boolean\ equals(java.lang.Object)
comment10.text=\n\ Dues\ llistes\ son\ iguals\ si\ son\ iguals\ tots\ els\ elements\ \n\ i\ en\ el\ mateix\ ordre\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\n\ Torna\ un\ String\ amb\ els\ elements\ de\ la\ llista\n
comment2.params=
comment2.target=boolean\ empty()
comment2.text=\n\ Comprova\ si\ la\ llista\ actual\ est\u00E0\ o\ no\ buida.\n\ @return\ boolean,\ true\ si\ la\ llista\ est\u00E0\ buida\ i\ false\ en\ cas\ contrari.\n
comment3.params=
comment3.target=boolean\ isEnd()
comment3.text=\n\ Comprova\ si\ el\ punt\ d'inter\u00E8s\ est\u00E0\ al\ final\ de\ la\ llista\ actual.\n\ @return\ boolean,\ true\ si\ el\ PI\ est\u00E0\ al\ final\ de\ la\ llista\ i\ false\ \n\ en\ cas\ contrari.\n
comment4.params=
comment4.target=int\ size()
comment4.text=\n\ Torna\ el\ n\u00FAmero\ d'elements\ de\ la\ llista\ actual.\n\ @return\ int,\ n\u00FAmero\ d'elements\ de\ la\ llista\ actual.\n
comment5.params=
comment5.target=void\ begin()
comment5.text=\n\ Situa\ el\ punt\ d'inter\u00E8s\ en\ la\ firsta\ posici\u00F3\ de\ la\ llista\ actual.\n
comment6.params=
comment6.target=void\ next()
comment6.text=\n\ Despla\u00E7a\ el\ PI\ una\ posici\u00F3\ cap\ a\ la\ dreta.\ \n\ @throws\ NoSuchElementException\ si\ el\ PI\ es\ troba\ al\ final\ de\ la\ llista.\n
comment7.params=
comment7.target=int\ get()
comment7.text=\n\ Torna\ l'element\ en\ el\ PI.\ \n\ @throws\ NoSuchElementException\ si\ el\ PI\ es\ troba\ al\ final\ de\ la\ llista.\n\ @return\ int,\ element\ en\ el\ PI\ de\ la\ llista.\n
comment8.params=x
comment8.target=void\ insert(int)
comment8.text=\n\ Insereix\ un\ nou\ node\ amb\ l'element\ x\ en\ la\ posici\u00F3\ anterior\ al\ PI.\ \n\ Si\ el\ cursor\ est\u00E0\ a\ l\u2019inici,\ el\ nou\ node\ ser\u00E0\ el\ first\ de\ la\ \n\ llista.\ En\ qualsevol\ altre\ cas,\ el\ nou\ node\ s\u2019insereix\ entre\ el\ \n\ node\ cursor\ i\ el\ seu\ node\ predecessor.\n\ @param\ x,\ element\ a\ afegir\ en\ la\ llista.\n
comment9.params=
comment9.target=int\ remove()
comment9.text=\n\ Torna\ i\ elimina\ de\ la\ llista\ l'element\ en\ el\ PI.\ \n\ Si\ el\ cursor\ est\u00E0\ a\ l\u2019inici,\ first\ s\u2019actualitza\ al\ seu\ node\ \n\ seg\u00FCent.\ En\ qualevol\ altre\ cas,\ els\ nodes\ anterior\ i\ posterior\ \n\ al\ node\ cursor\ queden\ enlla\u00E7ats.\n\ @throws\ NoSuchElementException\ si\ el\ PI\ es\ troba\ al\ final\ de\ la\ llista.\n\ @return\ int,\ element\ en\ el\ PI\ de\ la\ llista.\n
numComments=12
