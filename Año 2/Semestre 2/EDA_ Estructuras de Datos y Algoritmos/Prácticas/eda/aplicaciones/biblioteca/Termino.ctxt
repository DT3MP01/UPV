#BlueJ class context
comment0.target=Termino
comment0.text=\r\n\ Termino\:\ clase\ de\ la\ Clave\ del\ Map\ que\ representa\ un\ termino\ del\ Indice\r\n\ Analitico\ de\ una\ Biblioteca\ Digital.\r\n\r\n\ Para\ que\ sobrescriba\ eficientemente\ los\ metodos\ equals\ y\ hashCode\ de\ Object,\r\n\ un\ Termino\ TIENE\ UN\ valorHash\ que\ almacena\ el\ resultado\ de\ la\ PRIMERA\r\n\ invocacion\ al\ metodo\ hashCode\ de\ la\ clase\ sobre\ el.\ De\ esta\ forma,\ el\ valor\r\n\ hash\ asociado\ a\ un\ Termino...\ *\ (a)\ solo\ se\ calcula\ una\ vez,\r\n\ independientemente\ del\ numero\ de\ veces\ *\ que\ el\ metodo\ hashCode\ se\ aplique\r\n\ sobre\ el;\ *\ (b)\ se\ puede\ usar\ en\ el\ metodo\ equals\ de\ la\ clase\ para\ comprobar\r\n\ la\ *\ igualdad\ de\ dos\ terminos\ SOLO\ cuando\ sus\ valores\ Hash\ sean\ iguales.\r\n\r\n\ Ademas,\ para\ poder\ evaluar\ distintos\ metodos\ hashCode,\ un\ Termino\ TIENE\ UNA\r\n\ baseHashCode\ que\ almacena\ la\ base\ en\ la\ que\ se\ calcula\ su\ valorHash\r\n\r\n\ @author\ (EDA)\r\n\ @version\ (Curso\ 2019-2020)\r\n
comment1.params=t\ base
comment1.target=Termino(java.lang.String,\ int)
comment1.text=\r\n\ Crea\ el\ Termino\ asociado\ a\ la\ palabra\ t\ y\ le\ asocia\ la\ base\ a\ emplear\ en\r\n\ el\ metodo\ hashCode\r\n\r\n\ @param\ t\r\n\ @param\ base\r\n
comment2.params=t
comment2.target=Termino(java.lang.String)
comment2.text=\r\n\ Crea\ el\ Termino\ asociado\ a\ la\ palabra\ t\ segun\ el\ estandar\ de\ Java\r\n\r\n\ @param\ t\r\n
comment3.params=
comment3.target=int\ hashCode()
comment3.text=\r\n\ Devuelve\ el\ valor\ Hash\ de\ un\ (this)\ Termino\ de\ forma\ eficiente,\ i.e.\ al\r\n\ aplicar\ este\ metodo\ por\ PRIMERA\ vez\ sobre\ un\ Termino\ de\ longitud\ n\r\n\ (this.termino.length()),\ calcula\ su\ valor\ Hash\ como\ sigue\:\ this.valorHash\r\n\ \=\ this.termino.charAt[0]\ *\ this.baseHashCode^(n-1)\ +\r\n\ this.termino.charAt[1]\ *\ this.baseHashCode^(n-2)\ +\ ...\ +\r\n\ this.termino.charAt[n-1]\ Si\ NO\ es\ la\ primera\ vez\ que\ se\ aplica\ el\ metodo,\r\n\ devuelve\ this.valorHash\r\n\r\n\ @return\r\n
comment4.params=otro
comment4.target=boolean\ equals(java.lang.Object)
comment4.text=\r\n\ Comprueba\ si\ un\ (this)\ Termino\ es\ igual\ a\ otro\ de\ forma\ eficiente,\ i.e.\r\n\ SOLO\ ejecuta\ el\ metodo\ equals\ de\ String\ cuando\ los\ valores\ Hash\ de\ uno\ y\r\n\ otro\ Termino\ son\ iguales\r\n\r\n\ @param\ otro\r\n\ @return\r\n
comment5.params=
comment5.target=java.lang.String\ toString()
comment5.text=\r\n\ Devuelve\ un\ String\ que\ representa\ un\ Termino\ en\ cierto\ formato\ texto\r\n\r\n\ @return\r\n
numComments=6
