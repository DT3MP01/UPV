#BlueJ class context
comment0.target=TestOrdenacion
comment0.text=\ \r\n\ \ La\ clase\ TestOrdenacion\ permite\ probar\ y\ temporizar\ los\ \ \r\n\ \ metodos\ de\ ordenacion\ de\ arrays\ genericos\ definidos\ en\ \ \r\n\ \ la\ clase\ librerias.util.Ordenacion.\r\n\ \ \r\n\ \ @author\ (EDA)\ \r\n\ \ @version\ (Curso\ 2019-2020)\r\n
comment1.params=
comment1.target=boolean\ comprobar()
comment1.text=\r\n\ Comprueba\ la\ correccion\ del\ metodo\ mergeSort2\ de\ \r\n\ la\ clase\ Ordenacion,\ basandose\ en\ la\ correccion\r\n\ del\ metodo\ quickSort.\r\n
comment10.params=a\ k
comment10.target=int\ potenciaV1(int,\ int)
comment11.params=args
comment11.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ temporizar()
comment2.text=\r\n\ Temporizacion\ sobre\ Integer\ de\ los\ metodos\ mergeSort1,\ \ \r\n\ mergeSort2\ y\ quickSort\ de\ la\ clase\ Ordenacion.\r\n
comment3.params=talla
comment3.target=java.lang.Integer[]\ crearAleatorioInteger(int)
comment3.text=\r\n\ Devuelve\ un\ array\ de\ talla\ Integer\ generados\ aleatoriamente.\r\n\ \r\n\ @param\ talla\ \ Talla\ del\ array\ resultado\r\n\ @return\ Integer[]\r\n
comment4.params=
comment4.target=void\ temporizarString()
comment4.text=\r\n\ Temporizacion\ sobre\ String\ de\ los\ metodos\ mergeSort1,\r\n\ mergeSort2\ y\ quickSort\ de\ la\ clase\ Ordenacion.\r\n
comment5.params=talla\ n
comment5.target=java.lang.String[]\ crearAleatorioString(int,\ int)
comment5.text=\r\n\ Devuelve\ un\ array\ de\ talla\ String\ aleatorios\ con\ los\ primeros\ n\ \r\n\ caracteres\ iguales.\r\n\ \r\n\ @param\ talla\ \ Talla\ del\ array\ resultado\r\n\ @param\ n\ \ Numero\ de\ caracteres\ iniciales\ iguales\r\n\ @return\ String[]\r\n
comment6.params=v\ inicio\ fin
comment6.target=int\ sumar(int[],\ int,\ int)
comment7.params=v\ b\ inicio\ fin
comment7.target=int\ buscar(java.lang.Object[],\ java.lang.Object,\ int,\ int)
comment7.text=SII\ 0\ <\=\ inicio\ <\=\ v.length\ AND\ fin\ \=\=\ v.length-1
comment8.params=v\ inicio\ fin
comment8.target=java.lang.Comparable\ maximo(java.lang.Comparable[],\ int,\ int)
comment9.params=a\ k
comment9.target=int\ potencia(int,\ int)
numComments=12
