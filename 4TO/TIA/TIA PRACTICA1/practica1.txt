(defrule fuzzy1
(declare (salience -1))
(edad ?ed)
=>(bind ?e (maximum-defuzzify ?ed ))
(printout t "La edad es " = crlf))


(defrule leerconsola ;lee de consola un valor difuso y lo aserta
(initial-fact)
=>
(printout t "Introduzca la edad: joven, adulta, madura" crlf)
(bind ?Redad (read))
(assert-string (format nil "(edad %s)" ?Redad)) )


(deffunction fuzzify (?fztemplate ?value ?delta)
(bind ?low (get-u-from ?fztemplate))
(bind ?hi (get-u-to ?fztemplate))
(if (<= ?value ?low)
then
(assert-string
(format nil "(%s (%g 1.0) (%g 0.0))" ?fztemplate ?low ?delta))
else
(if (>= ?value ?hi)
then
(assert-string
(format nil "(%s (%g 0.0) (%g 1.0))"
?fztemplate (- ?hi ?delta) ?hi))
else
(assert-string
(format nil "(%s (%g 0.0) (%g 1.0) (%g 0.0))"
?fztemplate (max ?low (- ?value ?delta))
?value (min ?hi (+ ?value ?delta)) ))
)))